using BeardedManStudios.Forge.Networking;
using BeardedManStudios.Forge.Networking.Unity;
using BeardedManStudios.Forge.Networking.StandAlone;

namespace BeardedManStudios.Forge.Networking.Generated
{
	[GeneratedRPC("{\"types\":[>:generatedTypes:<]")]
	[GeneratedRPCVariableNames("{\"types\":[>:generatedHelperTypes:<]")]
	public abstract partial class >:className:< : INetworkBehavior
	{
		>:FOREVERY constRpcs:<
		public const byte RPC_>:[0]:< = >:[idx]:< + 4;
		>:ENDFOREVERY:<
		
		public >:networkObject:< networkObject = null;

		public void Initialize(NetworkObject obj)
		{
			// We have already initialized this object
			if (networkObject != null && networkObject.AttachedBehavior != null)
				return;
			
			networkObject = (>:networkObject:<)obj;
			networkObject.AttachedBehavior = this;

			>:FOREVERY rpcs:<
			networkObject.RegisterRpc(">:[0]:<", >:[0]:<>:[1]:<);
			>:ENDFOREVERY:<
			networkObject.RegistrationComplete();
		}

		public void Initialize(NetWorker networker, byte[] metadata  = null)
		{
			Initialize(new >:networkObject:<(networker, metadata: metadata));
		}

		>:FOREVERY rpcs:<
		/// <summary>
		/// Arguments:
>:[2]:<
		/// </summary>
		public abstract void >:[0]:<(RpcArgs args);
		>:ENDFOREVERY:<

		// DO NOT TOUCH, THIS GETS GENERATED PLEASE EXTEND THIS CLASS IF YOU WISH TO HAVE CUSTOM CODE ADDITIONS
	}
}