<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine</name>
    </assembly>
    <member name="T:UnityEngine.AccelerationEvent">
      <summary>
        <para>Structure describing acceleration status of the device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AccelerationEvent.acceleration">
      <summary>
        <para>Value of acceleration.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AccelerationEvent.deltaTime">
      <summary>
        <para>Amount of time passed since last accelerometer measurement.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AddComponentMenu">
      <summary>
        <para>The AddComponentMenu attribute allows you to place a script anywhere in the "Component" menu, instead of just the "Component-&gt;Scripts" menu.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AddComponentMenu.componentOrder">
      <summary>
        <para>The order of the component in the component menu (lower is higher to the top).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AddComponentMenu.#ctor(System.String)">
      <summary>
        <para>Add an item in the Component menu.</para>
      </summary>
      <param name="menuName">The path to the component.</param>
      <param name="order">Where in the component menu to add the new item.</param>
    </member>
    <member name="M:UnityEngine.AddComponentMenu.#ctor(System.String,System.Int32)">
      <summary>
        <para>Add an item in the Component menu.</para>
      </summary>
      <param name="menuName">The path to the component.</param>
      <param name="order">Where in the component menu to add the new item.</param>
    </member>
    <member name="T:UnityEngine.AdditionalCanvasShaderChannels">
      <summary>
        <para>Enum mask of possible shader channel properties that can also be included when the Canvas mesh is created.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AdditionalCanvasShaderChannels.None">
      <summary>
        <para>No additional shader parameters are needed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AdditionalCanvasShaderChannels.Normal">
      <summary>
        <para>Include the normals on the mesh vertices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AdditionalCanvasShaderChannels.Tangent">
      <summary>
        <para>Include the Tangent on the mesh vertices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AdditionalCanvasShaderChannels.TexCoord1">
      <summary>
        <para>Include UV1 on the mesh vertices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AdditionalCanvasShaderChannels.TexCoord2">
      <summary>
        <para>Include UV2 on the mesh vertices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AdditionalCanvasShaderChannels.TexCoord3">
      <summary>
        <para>Include UV3 on the mesh vertices.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMesh">
      <summary>
        <para>Singleton class to access the baked NavMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMesh.avoidancePredictionTime">
      <summary>
        <para>Describes how far in the future the agents predict collisions for avoidance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMesh.onPreUpdate">
      <summary>
        <para>Set a function to be called before the NavMesh is updated during the frame update execution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMesh.pathfindingIterationsPerFrame">
      <summary>
        <para>The maximum amount of nodes processed each frame in the asynchronous pathfinding process.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddLink(UnityEngine.AI.NavMeshLinkData)">
      <summary>
        <para>Adds a link to the NavMesh. The link is described by the NavMeshLinkData struct.</para>
      </summary>
      <param name="link">Describing the properties of the link.</param>
      <returns>
        <para>Representing the added link.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddLink(UnityEngine.AI.NavMeshLinkData,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Adds a link to the NavMesh. The link is described by the NavMeshLinkData struct.</para>
      </summary>
      <param name="link">Describing the properties of the link.</param>
      <param name="position">Translate the link to this position.</param>
      <param name="rotation">Rotate the link to this orientation.</param>
      <returns>
        <para>Representing the added link.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddNavMeshData(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Adds the specified NavMeshData to the game.</para>
      </summary>
      <param name="navMeshData">Contains the data for the navmesh.</param>
      <returns>
        <para>Representing the added navmesh.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.AddNavMeshData(UnityEngine.AI.NavMeshData,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Adds the specified NavMeshData to the game.</para>
      </summary>
      <param name="navMeshData">Contains the data for the navmesh.</param>
      <param name="position">Translate the navmesh to this position.</param>
      <param name="rotation">Rotate the navmesh to this orientation.</param>
      <returns>
        <para>Representing the added navmesh.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.AI.NavMesh.AllAreas">
      <summary>
        <para>Area mask constant that includes all NavMesh areas.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CalculatePath(UnityEngine.Vector3,UnityEngine.Vector3,System.Int32,UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Calculate a path between two points and store the resulting path.</para>
      </summary>
      <param name="sourcePosition">The initial position of the path requested.</param>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when calculating a path.</param>
      <param name="path">The resulting path.</param>
      <returns>
        <para>True if a either a complete or partial path is found and false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CalculatePath(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.AI.NavMeshQueryFilter,UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Calculates a path between two positions mapped to the NavMesh, subject to the constraints and costs defined by the filter argument.</para>
      </summary>
      <param name="sourcePosition">The initial position of the path requested.</param>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="filter">A filter specifying the cost of NavMesh areas that can be passed when calculating a path.</param>
      <param name="path">The resulting path.</param>
      <returns>
        <para>True if a either a complete or partial path is found and false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CalculateTriangulation">
      <summary>
        <para>Calculates triangulation of the current navmesh.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.CreateSettings">
      <summary>
        <para>Creates and returns a new entry of NavMesh build settings available for runtime NavMesh building.</para>
      </summary>
      <returns>
        <para>The created settings.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.FindClosestEdge(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Int32)">
      <summary>
        <para>Locate the closest NavMesh edge from a point on the NavMesh.</para>
      </summary>
      <param name="sourcePosition">The origin of the distance query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when finding the nearest edge.</param>
      <returns>
        <para>True if a nearest edge is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.FindClosestEdge(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,UnityEngine.AI.NavMeshQueryFilter)">
      <summary>
        <para>Locate the closest NavMesh edge from a point on the NavMesh, subject to the constraints of the filter argument.</para>
      </summary>
      <param name="sourcePosition">The origin of the distance query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="filter">A filter specifying which NavMesh areas can be passed when finding the nearest edge.</param>
      <returns>
        <para>True if a nearest edge is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetAreaCost(System.Int32)">
      <summary>
        <para>Gets the cost for path finding over geometry of the area type.</para>
      </summary>
      <param name="areaIndex">Index of the area to get.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetAreaFromName(System.String)">
      <summary>
        <para>Returns the area index for a named NavMesh area type.</para>
      </summary>
      <param name="areaName">Name of the area to look up.</param>
      <returns>
        <para>Index if the specified are, or -1 if no area found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetLayerCost(System.Int32)">
      <summary>
        <para>Gets the cost for traversing over geometry of the layer type on all agents.</para>
      </summary>
      <param name="layer"></param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetNavMeshLayerFromName(System.String)">
      <summary>
        <para>Returns the layer index for a named layer.</para>
      </summary>
      <param name="layerName"></param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsByID(System.Int32)">
      <summary>
        <para>Returns an existing entry of NavMesh build settings.</para>
      </summary>
      <param name="agentTypeID">The ID to look for.</param>
      <returns>
        <para>The settings found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsByIndex(System.Int32)">
      <summary>
        <para>Returns an existing entry of NavMesh build settings by its ordered index.</para>
      </summary>
      <param name="index">The index to retrieve from.</param>
      <returns>
        <para>The found settings.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsCount">
      <summary>
        <para>Returns the number of registered NavMesh build settings.</para>
      </summary>
      <returns>
        <para>The number of registered entries.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.GetSettingsNameFromID(System.Int32)">
      <summary>
        <para>Returns the name associated with the NavMesh build settings matching the provided agent type ID.</para>
      </summary>
      <param name="agentTypeID">The ID to look for.</param>
      <returns>
        <para>The name associated with the ID found.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMesh.OnNavMeshPreUpdate">
      <summary>
        <para>A delegate which can be used to register callback methods to be invoked before the NavMesh system updates.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.Raycast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Int32)">
      <summary>
        <para>Trace a line between two points on the NavMesh.</para>
      </summary>
      <param name="sourcePosition">The origin of the ray.</param>
      <param name="targetPosition">The end of the ray.</param>
      <param name="hit">Holds the properties of the ray cast resulting location.</param>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when tracing the ray.</param>
      <returns>
        <para>True if the ray is terminated before reaching target position. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.Raycast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,UnityEngine.AI.NavMeshQueryFilter)">
      <summary>
        <para>Traces a line between two positions on the NavMesh, subject to the constraints defined by the filter argument.</para>
      </summary>
      <param name="sourcePosition">The origin of the ray.</param>
      <param name="targetPosition">The end of the ray.</param>
      <param name="hit">Holds the properties of the ray cast resulting location.</param>
      <param name="filter">A filter specifying which NavMesh areas can be passed when tracing the ray.</param>
      <returns>
        <para>True if the ray is terminated before reaching target position. Otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.RemoveLink(UnityEngine.AI.NavMeshLinkInstance)">
      <summary>
        <para>Removes a link from the NavMesh.</para>
      </summary>
      <param name="handle">The instance of a link to remove.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.RemoveNavMeshData(UnityEngine.AI.NavMeshDataInstance)">
      <summary>
        <para>Removes the specified NavMeshDataInstance from the game, making it unavailable for agents and queries.</para>
      </summary>
      <param name="handle">The instance of a NavMesh to remove.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.RemoveSettings(System.Int32)">
      <summary>
        <para>Removes the build settings matching the agent type ID.</para>
      </summary>
      <param name="agentTypeID">The ID of the entry to remove.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SamplePosition(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Single,System.Int32)">
      <summary>
        <para>Finds the closest point on NavMesh within specified range.</para>
      </summary>
      <param name="sourcePosition">The origin of the sample query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="maxDistance">Sample within this distance from sourcePosition.</param>
      <param name="areaMask">A mask specifying which NavMesh areas are allowed when finding the nearest point.</param>
      <returns>
        <para>True if a nearest point is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SamplePosition(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;,System.Single,UnityEngine.AI.NavMeshQueryFilter)">
      <summary>
        <para>Samples the position closest to sourcePosition - on any NavMesh built for the agent type specified by the filter.</para>
      </summary>
      <param name="sourcePosition">The origin of the sample query.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <param name="maxDistance">Sample within this distance from sourcePosition.</param>
      <param name="filter">A filter specifying which NavMesh areas are allowed when finding the nearest point.</param>
      <returns>
        <para>True if a nearest point is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SetAreaCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for finding path over geometry of the area type on all agents.</para>
      </summary>
      <param name="areaIndex">Index of the area to set.</param>
      <param name="cost">New cost.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMesh.SetLayerCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for traversing over geometry of the layer type on all agents.</para>
      </summary>
      <param name="layer"></param>
      <param name="cost"></param>
    </member>
    <member name="T:UnityEngine.AI.NavMeshAgent">
      <summary>
        <para>Navigation mesh agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.acceleration">
      <summary>
        <para>The maximum acceleration of an agent as it follows a path, given in units / sec^2.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.agentTypeID">
      <summary>
        <para>The type ID for the agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.angularSpeed">
      <summary>
        <para>Maximum turning speed in (deg/s) while following a path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.areaMask">
      <summary>
        <para>Specifies which NavMesh areas are passable. Changing areaMask will make the path stale (see isPathStale).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.autoBraking">
      <summary>
        <para>Should the agent brake automatically to avoid overshooting the destination point?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.autoRepath">
      <summary>
        <para>Should the agent attempt to acquire a new path if the existing path becomes invalid?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.autoTraverseOffMeshLink">
      <summary>
        <para>Should the agent move across OffMeshLinks automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.avoidancePriority">
      <summary>
        <para>The avoidance priority level.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.baseOffset">
      <summary>
        <para>The relative vertical displacement of the owning GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.currentOffMeshLinkData">
      <summary>
        <para>The current OffMeshLinkData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.desiredVelocity">
      <summary>
        <para>The desired velocity of the agent including any potential contribution from avoidance. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.destination">
      <summary>
        <para>Gets or attempts to set the destination of the agent in world-space units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.hasPath">
      <summary>
        <para>Does the agent currently have a path? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.height">
      <summary>
        <para>The height of the agent for purposes of passing under obstacles, etc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isOnNavMesh">
      <summary>
        <para>Is the agent currently bound to the navmesh? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isOnOffMeshLink">
      <summary>
        <para>Is the agent currently positioned on an OffMeshLink? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isPathStale">
      <summary>
        <para>Is the current path stale. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.isStopped">
      <summary>
        <para>This property holds the stop or resume condition of the NavMesh agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.navMeshOwner">
      <summary>
        <para>Returns the owning object of the NavMesh the agent is currently placed on (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.nextOffMeshLinkData">
      <summary>
        <para>The next OffMeshLinkData on the current path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.nextPosition">
      <summary>
        <para>Gets or sets the simulation position of the navmesh agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.obstacleAvoidanceType">
      <summary>
        <para>The level of quality of avoidance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.path">
      <summary>
        <para>Property to get and set the current path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.pathPending">
      <summary>
        <para>Is a path in the process of being computed but not yet ready? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.pathStatus">
      <summary>
        <para>The status of the current path (complete, partial or invalid).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.radius">
      <summary>
        <para>The avoidance radius for the agent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.remainingDistance">
      <summary>
        <para>The distance between the agent's position and the destination on the current path. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.speed">
      <summary>
        <para>Maximum movement speed when following a path.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.steeringTarget">
      <summary>
        <para>Get the current steering target along the path. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.stoppingDistance">
      <summary>
        <para>Stop within this distance from the target position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.updatePosition">
      <summary>
        <para>Gets or sets whether the transform position is synchronized with the simulated agent position. The default value is true.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.updateRotation">
      <summary>
        <para>Should the agent update the transform orientation?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.updateUpAxis">
      <summary>
        <para>Allows you to specify whether the agent should be aligned to the up-axis of the NavMesh or link that it is placed on.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.velocity">
      <summary>
        <para>Access the current velocity of the NavMeshAgent component, or set a velocity to control the agent manually.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshAgent.walkableMask">
      <summary>
        <para>Specifies which NavMesh layers are passable (bitfield). Changing walkableMask will make the path stale (see isPathStale).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.ActivateCurrentOffMeshLink(System.Boolean)">
      <summary>
        <para>Enables or disables the current off-mesh link.</para>
      </summary>
      <param name="activated">Is the link activated?</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.CalculatePath(UnityEngine.Vector3,UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Calculate a path to a specified point and store the resulting path.</para>
      </summary>
      <param name="targetPosition">The final position of the path requested.</param>
      <param name="path">The resulting path.</param>
      <returns>
        <para>True if a path is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.CompleteOffMeshLink">
      <summary>
        <para>Completes the movement on the current OffMeshLink.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.FindClosestEdge(UnityEngine.AI.NavMeshHit&amp;)">
      <summary>
        <para>Locate the closest NavMesh edge.</para>
      </summary>
      <param name="hit">Holds the properties of the resulting location.</param>
      <returns>
        <para>True if a nearest edge is found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.GetAreaCost(System.Int32)">
      <summary>
        <para>Gets the cost for path calculation when crossing area of a particular type.</para>
      </summary>
      <param name="areaIndex">Area Index.</param>
      <returns>
        <para>Current cost for specified area index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.GetLayerCost(System.Int32)">
      <summary>
        <para>Gets the cost for crossing ground of a particular type.</para>
      </summary>
      <param name="layer">Layer index.</param>
      <returns>
        <para>Current cost of specified layer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Move(UnityEngine.Vector3)">
      <summary>
        <para>Apply relative movement to current position.</para>
      </summary>
      <param name="offset">The relative movement vector.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Raycast(UnityEngine.Vector3,UnityEngine.AI.NavMeshHit&amp;)">
      <summary>
        <para>Trace a straight path towards a target postion in the NavMesh without moving the agent.</para>
      </summary>
      <param name="targetPosition">The desired end position of movement.</param>
      <param name="hit">Properties of the obstacle detected by the ray (if any).</param>
      <returns>
        <para>True if there is an obstacle between the agent and the target position, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.ResetPath">
      <summary>
        <para>Clears the current path.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Resume">
      <summary>
        <para>Resumes the movement along the current path after a pause.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SamplePathPosition(System.Int32,System.Single,UnityEngine.AI.NavMeshHit&amp;)">
      <summary>
        <para>Sample a position along the current path.</para>
      </summary>
      <param name="areaMask">A bitfield mask specifying which NavMesh areas can be passed when tracing the path.</param>
      <param name="maxDistance">Terminate scanning the path at this distance.</param>
      <param name="hit">Holds the properties of the resulting location.</param>
      <returns>
        <para>True if terminated before reaching the position at maxDistance, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetAreaCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for traversing over areas of the area type.</para>
      </summary>
      <param name="areaIndex">Area cost.</param>
      <param name="areaCost">New cost for the specified area index.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetDestination(UnityEngine.Vector3)">
      <summary>
        <para>Sets or updates the destination thus triggering the calculation for a new path.</para>
      </summary>
      <param name="target">The target point to navigate to.</param>
      <returns>
        <para>True if the destination was requested successfully, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetLayerCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the cost for traversing over geometry of the layer type.</para>
      </summary>
      <param name="layer">Layer index.</param>
      <param name="cost">New cost for the specified layer.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.SetPath(UnityEngine.AI.NavMeshPath)">
      <summary>
        <para>Assign a new path to this agent.</para>
      </summary>
      <param name="path">New path to follow.</param>
      <returns>
        <para>True if the path is succesfully assigned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Stop">
      <summary>
        <para>Stop movement of this agent along its current path.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshAgent.Warp(UnityEngine.Vector3)">
      <summary>
        <para>Warps agent to the provided position.</para>
      </summary>
      <param name="newPosition">New position to warp the agent to.</param>
      <returns>
        <para>True if agent is successfully warped, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuilder">
      <summary>
        <para>Navigation mesh builder interface.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.BuildNavMeshData(UnityEngine.AI.NavMeshBuildSettings,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;,UnityEngine.Bounds,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Builds a NavMesh data object from the provided input sources.</para>
      </summary>
      <param name="buildSettings">Settings for the bake process, see NavMeshBuildSettings.</param>
      <param name="sources">List of input geometry used for baking, they describe the surfaces to walk on or obstacles to avoid.</param>
      <param name="localBounds">Bounding box relative to position and rotation which describes the volume where the NavMesh should be built. Empty bounds is treated as no bounds, i.e. the NavMesh will cover all the inputs.</param>
      <param name="position">Center of the NavMeshData. This specifies the origin for the NavMesh tiles (See Also: NavMeshBuildSettings.tileSize).</param>
      <param name="rotation">Orientation of the NavMeshData, you can use this to generate NavMesh with an arbitrary up-vector – e.g. for walkable vertical surfaces.</param>
      <returns>
        <para>Returns a newly built NavMeshData, or null if the NavMeshData was empty or an error occurred.
The newly built NavMeshData, or null if the NavMeshData was empty or an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.Cancel(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Cancels an asynchronous update of the specified NavMesh data. See Also: UpdateNavMeshDataAsync.</para>
      </summary>
      <param name="data">The data associated with asynchronous updating.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.CollectSources(UnityEngine.Bounds,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Collects renderers or physics colliders, and terrains within a volume.</para>
      </summary>
      <param name="includedWorldBounds">The queried objects must overlap these bounds to be included in the results.</param>
      <param name="includedLayerMask">Specifies which layers are included in the query.</param>
      <param name="geometry">Which type of geometry to collect - e.g. physics colliders.</param>
      <param name="defaultArea">Area type to assign to results, unless modified by NavMeshMarkup.</param>
      <param name="markups">List of markups which allows finer control over how objects are collected.</param>
      <param name="results">List where results are stored, the list is cleared at the beginning of the call.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.CollectSources(UnityEngine.Transform,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Collects renderers or physics colliders, and terrains within a transform hierarchy.</para>
      </summary>
      <param name="root">If not null, consider only root and its children in the query; if null, includes everything loaded.</param>
      <param name="includedLayerMask">Specifies which layers are included in the query.</param>
      <param name="geometry">Which type of geometry to collect - e.g. physics colliders.</param>
      <param name="defaultArea">Area type to assign to results, unless modified by NavMeshMarkup.</param>
      <param name="markups">List of markups which allows finer control over how objects are collected.</param>
      <param name="results">List where results are stored, the list is cleared at the beginning of the call.</param>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.UpdateNavMeshData(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildSettings,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;,UnityEngine.Bounds)">
      <summary>
        <para>Incrementally updates the NavMeshData based on the sources.</para>
      </summary>
      <param name="data">The NavMeshData to update.</param>
      <param name="buildSettings">The build settings which is used to update the NavMeshData. The build settings is also hashed along with the data, so changing settings will cause a full rebuild.</param>
      <param name="sources">List of input geometry used for baking, they describe the surfaces to walk on or obstacles to avoid.</param>
      <param name="localBounds">Bounding box relative to position and rotation which describes the volume where the NavMesh should be built. Empty bounds is treated as no-bounds, that is, the NavMesh will cover all the inputs.</param>
      <returns>
        <para>Returns true if the update was successful.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuilder.UpdateNavMeshDataAsync(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildSettings,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;,UnityEngine.Bounds)">
      <summary>
        <para>Asynchronously and incrementally updates the NavMeshData based on the sources.</para>
      </summary>
      <param name="data">The NavMeshData to update.</param>
      <param name="buildSettings">The build settings which is used to update the NavMeshData. The build settings is also hashed along with the data, so changing settings will likely to cause full rebuild.</param>
      <param name="sources">List of input geometry used for baking, they describe the surfaces to walk on or obstacles to avoid.</param>
      <param name="localBounds">Bounding box relative to position and rotation which describes to volume where the NavMesh should be built. Empty bounds is treated as no-bounds, that is, the NavMesh will cover all the inputs.</param>
      <returns>
        <para>Can be used to check the progress of the update.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildMarkup">
      <summary>
        <para>The NavMesh build markup allows you to control how certain objects are treated during the NavMesh build process, specifically when collecting sources for building.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.area">
      <summary>
        <para>The area type to use when override area is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.ignoreFromBuild">
      <summary>
        <para>Use this to specify whether the GameObject and its children should be ignored.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.overrideArea">
      <summary>
        <para>Use this to specify whether the area type of the GameObject and its children should be overridden by the area type specified in this struct.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildMarkup.root">
      <summary>
        <para>Use this to specify which GameObject (including the GameObject’s children) the markup should be applied to.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildSettings">
      <summary>
        <para>The NavMeshBuildSettings struct allows you to specify a collection of settings which describe the dimensions and limitations of a particular agent type.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentClimb">
      <summary>
        <para>The maximum vertical step size an agent can take.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentHeight">
      <summary>
        <para>The height of the agent for baking in world units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentRadius">
      <summary>
        <para>The radius of the agent for baking in world units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentSlope">
      <summary>
        <para>The maximum slope angle which is walkable (angle in degrees).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.agentTypeID">
      <summary>
        <para>The agent type ID the NavMesh will be baked for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.minRegionArea">
      <summary>
        <para>The approximate minimum area of individual NavMesh regions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.overrideTileSize">
      <summary>
        <para>Enables overriding the default tile size. See Also: tileSize.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.overrideVoxelSize">
      <summary>
        <para>Enables overriding the default voxel size. See Also: voxelSize.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.tileSize">
      <summary>
        <para>Sets the tile size in voxel units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSettings.voxelSize">
      <summary>
        <para>Sets the voxel size in world length units.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshBuildSettings.ValidationReport(UnityEngine.Bounds)">
      <summary>
        <para>Validates the properties of NavMeshBuildSettings.</para>
      </summary>
      <param name="buildBounds">Describes the volume to build NavMesh for.</param>
      <returns>
        <para>The list of violated constraints.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildSource">
      <summary>
        <para>The input to the NavMesh builder is a list of NavMesh build sources.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.area">
      <summary>
        <para>Describes the area type of the NavMesh surface for this object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.component">
      <summary>
        <para>Points to the owning component - if available, otherwise null.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.shape">
      <summary>
        <para>The type of the shape this source describes. See Also: NavMeshBuildSourceShape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.size">
      <summary>
        <para>Describes the dimensions of the shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.sourceObject">
      <summary>
        <para>Describes the object referenced for Mesh and Terrain types of input sources.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshBuildSource.transform">
      <summary>
        <para>Describes the local to world transformation matrix of the build source. That is, position and orientation and scale of the shape.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshBuildSourceShape">
      <summary>
        <para>Used with NavMeshBuildSource to define the shape for building NavMesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Box">
      <summary>
        <para>Describes a box primitive for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Capsule">
      <summary>
        <para>Describes a capsule primitive for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Mesh">
      <summary>
        <para>Describes a Mesh source for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.ModifierBox">
      <summary>
        <para>Describes a ModifierBox source for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Sphere">
      <summary>
        <para>Describes a sphere primitive for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshBuildSourceShape.Terrain">
      <summary>
        <para>Describes a TerrainData source for use with NavMeshBuildSource.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshCollectGeometry">
      <summary>
        <para>Used for specifying the type of geometry to collect. Used with NavMeshBuilder.CollectSources.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshCollectGeometry.PhysicsColliders">
      <summary>
        <para>Collect geometry from the 3D physics collision representation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshCollectGeometry.RenderMeshes">
      <summary>
        <para>Collect meshes form the rendered geometry.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshData">
      <summary>
        <para>Contains and represents NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshData.position">
      <summary>
        <para>Gets or sets the world space position of the NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshData.rotation">
      <summary>
        <para>Gets or sets the orientation of the NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshData.sourceBounds">
      <summary>
        <para>Returns the bounding volume of the input geometry used to build this NavMesh (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshData.#ctor">
      <summary>
        <para>Constructs a new object for representing a NavMesh for the default agent type.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshData.#ctor(System.Int32)">
      <summary>
        <para>Constructs a new object representing a NavMesh for the specified agent type.</para>
      </summary>
      <param name="agentTypeID">The agent type ID to create a NavMesh for.</param>
    </member>
    <member name="T:UnityEngine.AI.NavMeshDataInstance">
      <summary>
        <para>The instance is returned when adding NavMesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshDataInstance.owner">
      <summary>
        <para>Get or set the owning Object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshDataInstance.valid">
      <summary>
        <para>True if the NavMesh data is added to the navigation system - otherwise false (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshDataInstance.Remove">
      <summary>
        <para>Removes this instance from the NavMesh system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshHit">
      <summary>
        <para>Result information for NavMesh queries.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.distance">
      <summary>
        <para>Distance to the point of hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.hit">
      <summary>
        <para>Flag set when hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.mask">
      <summary>
        <para>Mask specifying NavMesh area at point of hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.normal">
      <summary>
        <para>Normal at the point of hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshHit.position">
      <summary>
        <para>Position of hit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshLinkData">
      <summary>
        <para>Used for runtime manipulation of links connecting polygons of the NavMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.agentTypeID">
      <summary>
        <para>Specifies which agent type this link is available for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.area">
      <summary>
        <para>Area type of the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.bidirectional">
      <summary>
        <para>If true, the link can be traversed in both directions, otherwise only from start to end position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.costModifier">
      <summary>
        <para>If positive, overrides the pathfinder cost to traverse the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.endPosition">
      <summary>
        <para>End position of the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.startPosition">
      <summary>
        <para>Start position of the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkData.width">
      <summary>
        <para>If positive, the link will be rectangle aligned along the line from start to end.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshLinkInstance">
      <summary>
        <para>An instance representing a link available for pathfinding.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkInstance.owner">
      <summary>
        <para>Get or set the owning Object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshLinkInstance.valid">
      <summary>
        <para>True if the NavMesh link is added to the navigation system - otherwise false (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshLinkInstance.Remove">
      <summary>
        <para>Removes this instance from the game.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshObstacle">
      <summary>
        <para>An obstacle for NavMeshAgents to avoid.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carveOnlyStationary">
      <summary>
        <para>Should this obstacle be carved when it is constantly moving?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carving">
      <summary>
        <para>Should this obstacle make a cut-out in the navmesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carvingMoveThreshold">
      <summary>
        <para>Threshold distance for updating a moving carved hole (when carving is enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.carvingTimeToStationary">
      <summary>
        <para>Time to wait until obstacle is treated as stationary (when carving and carveOnlyStationary are enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.center">
      <summary>
        <para>The center of the obstacle, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.height">
      <summary>
        <para>Height of the obstacle's cylinder shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.radius">
      <summary>
        <para>Radius of the obstacle's capsule shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.shape">
      <summary>
        <para>The shape of the obstacle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.size">
      <summary>
        <para>The size of the obstacle, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshObstacle.velocity">
      <summary>
        <para>Velocity at which the obstacle moves around the NavMesh.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshObstacleShape">
      <summary>
        <para>Shape of the obstacle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshObstacleShape.Box">
      <summary>
        <para>Box shaped obstacle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshObstacleShape.Capsule">
      <summary>
        <para>Capsule shaped obstacle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshPath">
      <summary>
        <para>A path as calculated by the navigation system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshPath.corners">
      <summary>
        <para>Corner points of the path. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshPath.status">
      <summary>
        <para>Status of the path. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshPath.ClearCorners">
      <summary>
        <para>Erase all corner points from path.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshPath.#ctor">
      <summary>
        <para>NavMeshPath constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshPath.GetCornersNonAlloc(UnityEngine.Vector3[])">
      <summary>
        <para>Calculate the corners for the path.</para>
      </summary>
      <param name="results">Array to store path corners.</param>
      <returns>
        <para>The number of corners along the path - including start and end points.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AI.NavMeshPathStatus">
      <summary>
        <para>Status of path.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshPathStatus.PathComplete">
      <summary>
        <para>The path terminates at the destination.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshPathStatus.PathInvalid">
      <summary>
        <para>The path is invalid.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshPathStatus.PathPartial">
      <summary>
        <para>The path cannot reach the destination.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.NavMeshQueryFilter">
      <summary>
        <para>Specifies which agent type and areas to consider when searching the NavMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshQueryFilter.agentTypeID">
      <summary>
        <para>The agent type ID, specifying which navigation meshes to consider for the query functions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshQueryFilter.areaMask">
      <summary>
        <para>A bitmask representing the traversable area types.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.NavMeshQueryFilter.GetAreaCost(System.Int32)">
      <summary>
        <para>Returns the area cost multiplier for the given area type for this filter.</para>
      </summary>
      <param name="areaIndex">Index to retreive the cost for.</param>
      <returns>
        <para>The cost multiplier for the supplied area index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AI.NavMeshQueryFilter.SetAreaCost(System.Int32,System.Single)">
      <summary>
        <para>Sets the pathfinding cost multiplier for this filter for a given area type.</para>
      </summary>
      <param name="areaIndex">The area index to set the cost for.</param>
      <param name="cost">The cost for the supplied area index.</param>
    </member>
    <member name="T:UnityEngine.AI.NavMeshTriangulation">
      <summary>
        <para>Contains data describing a triangulation of a navmesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshTriangulation.areas">
      <summary>
        <para>NavMesh area indices for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshTriangulation.indices">
      <summary>
        <para>Triangle indices for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.NavMeshTriangulation.layers">
      <summary>
        <para>NavMeshLayer values for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.NavMeshTriangulation.vertices">
      <summary>
        <para>Vertices for the navmesh triangulation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.ObstacleAvoidanceType">
      <summary>
        <para>Level of obstacle avoidance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.GoodQualityObstacleAvoidance">
      <summary>
        <para>Good avoidance. High performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.HighQualityObstacleAvoidance">
      <summary>
        <para>Enable highest precision. Highest performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.LowQualityObstacleAvoidance">
      <summary>
        <para>Enable simple avoidance. Low performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.MedQualityObstacleAvoidance">
      <summary>
        <para>Medium avoidance. Medium performance impact.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.ObstacleAvoidanceType.NoObstacleAvoidance">
      <summary>
        <para>Disable avoidance.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.OffMeshLink">
      <summary>
        <para>Link allowing movement outside the planar navigation mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.activated">
      <summary>
        <para>Is link active.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.area">
      <summary>
        <para>NavMesh area index for this OffMeshLink component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.autoUpdatePositions">
      <summary>
        <para>Automatically update endpoints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.biDirectional">
      <summary>
        <para>Can link be traversed in both directions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.costOverride">
      <summary>
        <para>Modify pathfinding cost for the link.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.endTransform">
      <summary>
        <para>The transform representing link end position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.navMeshLayer">
      <summary>
        <para>NavMeshLayer for this OffMeshLink component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.occupied">
      <summary>
        <para>Is link occupied. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLink.startTransform">
      <summary>
        <para>The transform representing link start position.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AI.OffMeshLink.UpdatePositions">
      <summary>
        <para>Explicitly update the link endpoints.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.OffMeshLinkData">
      <summary>
        <para>State of OffMeshLink.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.activated">
      <summary>
        <para>Is link active (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.endPos">
      <summary>
        <para>Link end world position (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.linkType">
      <summary>
        <para>Link type specifier (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.offMeshLink">
      <summary>
        <para>The OffMeshLink if the link type is a manually placed Offmeshlink (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.startPos">
      <summary>
        <para>Link start world position (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AI.OffMeshLinkData.valid">
      <summary>
        <para>Is link valid (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AI.OffMeshLinkType">
      <summary>
        <para>Link type specifier.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.OffMeshLinkType.LinkTypeDropDown">
      <summary>
        <para>Vertical drop.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.OffMeshLinkType.LinkTypeJumpAcross">
      <summary>
        <para>Horizontal jump.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AI.OffMeshLinkType.LinkTypeManual">
      <summary>
        <para>Manually specified type of link.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Analytics.Analytics">
      <summary>
        <para>Unity Analytics provides insight into your game users e.g. DAU, MAU.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.Analytics.deviceStatsEnabled">
      <summary>
        <para>Controls whether the sending of device stats at runtime is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.Analytics.enabled">
      <summary>
        <para>Controls whether the Analytics service is enabled at runtime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.Analytics.limitUserTracking">
      <summary>
        <para>Controls whether to limit user tracking at runtime.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.CustomEvent(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)">
      <summary>
        <para>Custom Events (optional).</para>
      </summary>
      <param name="customEventName">Name of custom event. Name cannot include the prefix "unity." - This is a reserved keyword.</param>
      <param name="eventData">Additional parameters sent to Unity Analytics at the time the custom event was triggered. Dictionary key cannot include the prefix "unity." - This is a reserved keyword.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.CustomEvent(System.String)">
      <summary>
        <para>Custom Events (optional).</para>
      </summary>
      <param name="customEventName"></param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.CustomEvent(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Custom Events (optional).</para>
      </summary>
      <param name="customEventName"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.FlushEvents">
      <summary>
        <para>Attempts to flush immediately all queued analytics events to the network and filesystem cache if possible (optional).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.SetUserBirthYear(System.Int32)">
      <summary>
        <para>User Demographics (optional).</para>
      </summary>
      <param name="birthYear">Birth year of user. Must be 4-digit year format, only.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.SetUserGender(UnityEngine.Analytics.Gender)">
      <summary>
        <para>User Demographics (optional).</para>
      </summary>
      <param name="gender">Gender of user can be "Female", "Male", or "Unknown".</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.SetUserId(System.String)">
      <summary>
        <para>User Demographics (optional).</para>
      </summary>
      <param name="userId">User id.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.Transaction(System.String,System.Decimal,System.String)">
      <summary>
        <para>Tracking Monetization (optional).</para>
      </summary>
      <param name="productId">The id of the purchased item.</param>
      <param name="amount">The price of the item.</param>
      <param name="currency">Abbreviation of the currency used for the transaction. For example “USD” (United States Dollars). See http:en.wikipedia.orgwikiISO_4217 for a standardized list of currency abbreviations.</param>
      <param name="receiptPurchaseData">Receipt data (iOS)  receipt ID (android)  for in-app purchases to verify purchases with Apple iTunes / Google Play. Use null in the absence of receipts.</param>
      <param name="signature">Android receipt signature. If using native Android use the INAPP_DATA_SIGNATURE string containing the signature of the purchase data that was signed with the private key of the developer. The data signature uses the RSASSA-PKCS1-v1_5 scheme. Pass in null in absence of a signature.</param>
      <param name="usingIAPService">Set to true when using UnityIAP.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.Transaction(System.String,System.Decimal,System.String,System.String,System.String)">
      <summary>
        <para>Tracking Monetization (optional).</para>
      </summary>
      <param name="productId">The id of the purchased item.</param>
      <param name="amount">The price of the item.</param>
      <param name="currency">Abbreviation of the currency used for the transaction. For example “USD” (United States Dollars). See http:en.wikipedia.orgwikiISO_4217 for a standardized list of currency abbreviations.</param>
      <param name="receiptPurchaseData">Receipt data (iOS)  receipt ID (android)  for in-app purchases to verify purchases with Apple iTunes / Google Play. Use null in the absence of receipts.</param>
      <param name="signature">Android receipt signature. If using native Android use the INAPP_DATA_SIGNATURE string containing the signature of the purchase data that was signed with the private key of the developer. The data signature uses the RSASSA-PKCS1-v1_5 scheme. Pass in null in absence of a signature.</param>
      <param name="usingIAPService">Set to true when using UnityIAP.</param>
    </member>
    <member name="M:UnityEngine.Analytics.Analytics.Transaction(System.String,System.Decimal,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Tracking Monetization (optional).</para>
      </summary>
      <param name="productId">The id of the purchased item.</param>
      <param name="amount">The price of the item.</param>
      <param name="currency">Abbreviation of the currency used for the transaction. For example “USD” (United States Dollars). See http:en.wikipedia.orgwikiISO_4217 for a standardized list of currency abbreviations.</param>
      <param name="receiptPurchaseData">Receipt data (iOS)  receipt ID (android)  for in-app purchases to verify purchases with Apple iTunes / Google Play. Use null in the absence of receipts.</param>
      <param name="signature">Android receipt signature. If using native Android use the INAPP_DATA_SIGNATURE string containing the signature of the purchase data that was signed with the private key of the developer. The data signature uses the RSASSA-PKCS1-v1_5 scheme. Pass in null in absence of a signature.</param>
      <param name="usingIAPService">Set to true when using UnityIAP.</param>
    </member>
    <member name="T:UnityEngine.Analytics.AnalyticsResult">
      <summary>
        <para>Analytics API result.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.AnalyticsDisabled">
      <summary>
        <para>Analytics API result: Analytics is disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.InvalidData">
      <summary>
        <para>Analytics API result: Invalid argument value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.NotInitialized">
      <summary>
        <para>Analytics API result: Analytics not initialized.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.Ok">
      <summary>
        <para>Analytics API result: Success.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.SizeLimitReached">
      <summary>
        <para>Analytics API result: Argument size limit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.TooManyItems">
      <summary>
        <para>Analytics API result: Too many parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.TooManyRequests">
      <summary>
        <para>Analytics API result: Too many requests.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.AnalyticsResult.UnsupportedPlatform">
      <summary>
        <para>Analytics API result: This platform doesn't support Analytics.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Analytics.Gender">
      <summary>
        <para>User Demographics: Gender of a user.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.Gender.Female">
      <summary>
        <para>User Demographics: Female Gender of a user.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.Gender.Male">
      <summary>
        <para>User Demographics: Male Gender of a user.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Analytics.Gender.Unknown">
      <summary>
        <para>User Demographics: Unknown Gender of a user.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Analytics.PerformanceReporting">
      <summary>
        <para>Unity Performace provides insight into your game performace.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Analytics.PerformanceReporting.enabled">
      <summary>
        <para>Controls whether the Performance Reporting service is enabled at runtime.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnchoredJoint2D">
      <summary>
        <para>Parent class for all joints that have anchor points.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnchoredJoint2D.anchor">
      <summary>
        <para>The joint's anchor point on the object that has the joint component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnchoredJoint2D.autoConfigureConnectedAnchor">
      <summary>
        <para>Should the connectedAnchor be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnchoredJoint2D.connectedAnchor">
      <summary>
        <para>The joint's anchor point on the second object (ie, the one which doesn't have the joint component).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AndroidActivityIndicatorStyle">
      <summary>
        <para>ActivityIndicator Style (Android Specific).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AndroidActivityIndicatorStyle.DontShow">
      <summary>
        <para>Do not show ActivityIndicator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AndroidActivityIndicatorStyle.InversedLarge">
      <summary>
        <para>Large Inversed (android.R.attr.progressBarStyleLargeInverse).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AndroidActivityIndicatorStyle.InversedSmall">
      <summary>
        <para>Small Inversed (android.R.attr.progressBarStyleSmallInverse).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AndroidActivityIndicatorStyle.Large">
      <summary>
        <para>Large (android.R.attr.progressBarStyleLarge).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AndroidActivityIndicatorStyle.Small">
      <summary>
        <para>Small (android.R.attr.progressBarStyleSmall).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AndroidInput">
      <summary>
        <para>AndroidInput provides support for off-screen touch input, such as a touchpad.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AndroidInput.secondaryTouchEnabled">
      <summary>
        <para>Property indicating whether the system provides secondary touch input.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AndroidInput.secondaryTouchHeight">
      <summary>
        <para>Property indicating the height of the secondary touchpad.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AndroidInput.secondaryTouchWidth">
      <summary>
        <para>Property indicating the width of the secondary touchpad.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AndroidInput.touchCountSecondary">
      <summary>
        <para>Number of secondary touches. Guaranteed not to change throughout the frame. (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidInput.GetSecondaryTouch(System.Int32)">
      <summary>
        <para>Returns object representing status of a specific touch on a secondary touchpad (Does not allocate temporary variables).</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="T:UnityEngine.AndroidJavaClass">
      <summary>
        <para>AndroidJavaClass is the Unity representation of a generic instance of java.lang.Class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJavaClass.#ctor(System.String)">
      <summary>
        <para>Construct an AndroidJavaClass from the class name.</para>
      </summary>
      <param name="className">Specifies the Java class name (e.g. &lt;tt&gt;java.lang.String&lt;/tt&gt;).</param>
    </member>
    <member name="T:UnityEngine.AndroidJavaObject">
      <summary>
        <para>AndroidJavaObject is the Unity representation of a generic instance of java.lang.Object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Call(System.String,System.Object[])">
      <summary>
        <para>Calls a Java method on an object (non-static).</para>
      </summary>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Call(System.String,System.Object[])">
      <summary>
        <para>Call a Java method on an object.</para>
      </summary>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.CallStatic(System.String,System.Object[])">
      <summary>
        <para>Call a static Java method on a class.</para>
      </summary>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.CallStatic(System.String,System.Object[])">
      <summary>
        <para>Call a static Java method on a class.</para>
      </summary>
      <param name="methodName">Specifies which method to call.</param>
      <param name="args">An array of parameters passed to the method.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.#ctor(System.String,System.Object[])">
      <summary>
        <para>Construct an AndroidJavaObject based on the name of the class.</para>
      </summary>
      <param name="className">Specifies the Java class name (e.g. "&lt;tt&gt;java.lang.String&lt;tt&gt;" or "&lt;tt&gt;javalangString&lt;tt&gt;").</param>
      <param name="args">An array of parameters passed to the constructor.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Dispose">
      <summary>
        <para>IDisposable callback.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Get(System.String)">
      <summary>
        <para>Get the value of a field in an object (non-static).</para>
      </summary>
      <param name="fieldName">The name of the field (e.g. int counter; would have fieldName = "counter").</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.GetRawClass">
      <summary>
        <para>Retrieves the raw &lt;tt&gt;jclass&lt;/tt&gt; pointer to the Java class.

Note: Using raw JNI functions requires advanced knowledge of the Android Java Native Interface (JNI). Please take note.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.GetRawObject">
      <summary>
        <para>Retrieves the raw &lt;tt&gt;jobject&lt;/tt&gt; pointer to the Java object.

Note: Using raw JNI functions requires advanced knowledge of the Android Java Native Interface (JNI). Please take note.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.GetStatic(System.String)">
      <summary>
        <para>Get the value of a static field in an object type.</para>
      </summary>
      <param name="fieldName">The name of the field (e.g. &lt;i&gt;int counter;&lt;/i&gt; would have fieldName = "counter").</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.Set(System.String,FieldType)">
      <summary>
        <para>Set the value of a field in an object (non-static).</para>
      </summary>
      <param name="fieldName">The name of the field (e.g. int counter; would have fieldName = "counter").</param>
      <param name="val">The value to assign to the field. It has to match the field type.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaObject.SetStatic(System.String,FieldType)">
      <summary>
        <para>Set the value of a static field in an object type.</para>
      </summary>
      <param name="fieldName">The name of the field (e.g. int counter; would have fieldName = "counter").</param>
      <param name="val">The value to assign to the field. It has to match the field type.</param>
    </member>
    <member name="T:UnityEngine.AndroidJavaProxy">
      <summary>
        <para>This class can be used to implement any java interface. Any java vm method invocation matching the interface on the proxy object will automatically be passed to the c# implementation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AndroidJavaProxy.javaInterface">
      <summary>
        <para>Java interface implemented by the proxy.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJavaProxy.#ctor(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="javaInterface">Java interface to be implemented by the proxy.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaProxy.#ctor(UnityEngine.AndroidJavaClass)">
      <summary>
        <para></para>
      </summary>
      <param name="javaInterface">Java interface to be implemented by the proxy.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaProxy.Invoke(System.String,System.Object[])">
      <summary>
        <para>Called by the java vm whenever a method is invoked on the java proxy interface. You can override this to run special code on method invokation, or you can leave the implementation as is, and leave the default behavior which is to look for c# methods matching the signature of the java method.</para>
      </summary>
      <param name="methodName">Name of the invoked java method.</param>
      <param name="args">Arguments passed from the java vm - converted into AndroidJavaObject, AndroidJavaClass or a primitive.</param>
      <param name="javaArgs">Arguments passed from the java vm - all objects are represented by AndroidJavaObject, int for instance is represented by a java.lang.Integer object.</param>
    </member>
    <member name="M:UnityEngine.AndroidJavaProxy.Invoke(System.String,UnityEngine.AndroidJavaObject[])">
      <summary>
        <para>Called by the java vm whenever a method is invoked on the java proxy interface. You can override this to run special code on method invokation, or you can leave the implementation as is, and leave the default behavior which is to look for c# methods matching the signature of the java method.</para>
      </summary>
      <param name="methodName">Name of the invoked java method.</param>
      <param name="args">Arguments passed from the java vm - converted into AndroidJavaObject, AndroidJavaClass or a primitive.</param>
      <param name="javaArgs">Arguments passed from the java vm - all objects are represented by AndroidJavaObject, int for instance is represented by a java.lang.Integer object.</param>
    </member>
    <member name="T:UnityEngine.AndroidJavaRunnable">
      <summary>
        <para>AndroidJavaRunnable is the Unity representation of a java.lang.Runnable object.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AndroidJNI">
      <summary>
        <para>'Raw' JNI interface to Android Dalvik (Java) VM from Mono (CS/JS).

Note: Using raw JNI functions requires advanced knowledge of the Android Java Native Interface (JNI). Please take note.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.AllocObject(System.IntPtr)">
      <summary>
        <para>Allocates a new Java object without invoking any of the constructors for the object.</para>
      </summary>
      <param name="clazz"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.AttachCurrentThread">
      <summary>
        <para>Attaches the current thread to a Java (Dalvik) VM.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallBooleanMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallByteMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallCharMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallDoubleMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallFloatMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallIntMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallLongMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallObjectMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallShortMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticBooleanMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticByteMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticCharMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticDoubleMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticFloatMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticIntMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticLongMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticObjectMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticShortMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticStringMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStaticVoidMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Invokes a static method on a Java object, according to the specified &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallStringMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.CallVoidMethod(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Calls an instance (nonstatic) Java method defined by &lt;tt&gt;methodID&lt;tt&gt;, optionally passing an array of arguments (&lt;tt&gt;args&lt;tt&gt;) to the method.</para>
      </summary>
      <param name="obj"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.DeleteGlobalRef(System.IntPtr)">
      <summary>
        <para>Deletes the global reference pointed to by &lt;tt&gt;obj&lt;/tt&gt;.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.DeleteLocalRef(System.IntPtr)">
      <summary>
        <para>Deletes the local reference pointed to by &lt;tt&gt;obj&lt;/tt&gt;.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.DetachCurrentThread">
      <summary>
        <para>Detaches the current thread from a Java (Dalvik) VM.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.EnsureLocalCapacity(System.Int32)">
      <summary>
        <para>Ensures that at least a given number of local references can be created in the current thread.</para>
      </summary>
      <param name="capacity"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ExceptionClear">
      <summary>
        <para>Clears any exception that is currently being thrown.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ExceptionDescribe">
      <summary>
        <para>Prints an exception and a backtrace of the stack to the &lt;tt&gt;logcat&lt;/tt&gt;</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ExceptionOccurred">
      <summary>
        <para>Determines if an exception is being thrown.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FatalError(System.String)">
      <summary>
        <para>Raises a fatal error and does not expect the VM to recover. This function does not return.</para>
      </summary>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FindClass(System.String)">
      <summary>
        <para>This function loads a locally-defined class.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromBooleanArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;boolean&lt;/tt&gt; to a managed array of System.Boolean.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromByteArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;byte&lt;/tt&gt; to a managed array of System.Byte.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromCharArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;char&lt;/tt&gt; to a managed array of System.Char.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromDoubleArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;double&lt;/tt&gt; to a managed array of System.Double.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromFloatArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;float&lt;/tt&gt; to a managed array of System.Single.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromIntArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;int&lt;/tt&gt; to a managed array of System.Int32.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromLongArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;long&lt;/tt&gt; to a managed array of System.Int64.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromObjectArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;java.lang.Object&lt;/tt&gt; to a managed array of System.IntPtr, representing Java objects.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromReflectedField(System.IntPtr)">
      <summary>
        <para>Converts a &lt;tt&gt;java.lang.reflect.Field&lt;/tt&gt; to a field ID.</para>
      </summary>
      <param name="refField"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromReflectedMethod(System.IntPtr)">
      <summary>
        <para>Converts a &lt;tt&gt;java.lang.reflect.Method&lt;tt&gt; or &lt;tt&gt;java.lang.reflect.Constructor&lt;tt&gt; object to a method ID.</para>
      </summary>
      <param name="refMethod"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.FromShortArray(System.IntPtr)">
      <summary>
        <para>Convert a Java array of &lt;tt&gt;short&lt;/tt&gt; to a managed array of System.Int16.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetArrayLength(System.IntPtr)">
      <summary>
        <para>Returns the number of elements in the array.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetBooleanArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetBooleanField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetByteArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetByteField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetCharArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetCharField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetDoubleArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetDoubleField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetFieldID(System.IntPtr,System.String,System.String)">
      <summary>
        <para>Returns the field ID for an instance (nonstatic) field of a class.</para>
      </summary>
      <param name="clazz"></param>
      <param name="name"></param>
      <param name="sig"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetFloatArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetFloatField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetIntArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetIntField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetLongArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetLongField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetMethodID(System.IntPtr,System.String,System.String)">
      <summary>
        <para>Returns the method ID for an instance (nonstatic) method of a class or interface.</para>
      </summary>
      <param name="clazz"></param>
      <param name="name"></param>
      <param name="sig"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetObjectArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns an element of an &lt;tt&gt;Object&lt;/tt&gt; array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetObjectClass(System.IntPtr)">
      <summary>
        <para>Returns the class of an object.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetObjectField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetShortArrayElement(System.IntPtr,System.Int32)">
      <summary>
        <para>Returns the value of one element of a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetShortField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticBooleanField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticByteField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticCharField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticDoubleField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticFieldID(System.IntPtr,System.String,System.String)">
      <summary>
        <para>Returns the field ID for a static field of a class.</para>
      </summary>
      <param name="clazz"></param>
      <param name="name"></param>
      <param name="sig"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticFloatField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticIntField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticLongField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticMethodID(System.IntPtr,System.String,System.String)">
      <summary>
        <para>Returns the method ID for a static method of a class.</para>
      </summary>
      <param name="clazz"></param>
      <param name="name"></param>
      <param name="sig"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticObjectField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticShortField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStaticStringField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStringField(System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function returns the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStringUTFChars(System.IntPtr)">
      <summary>
        <para>Returns a managed string object representing the string in modified UTF-8 encoding.</para>
      </summary>
      <param name="str"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetStringUTFLength(System.IntPtr)">
      <summary>
        <para>Returns the length in bytes of the modified UTF-8 representation of a string.</para>
      </summary>
      <param name="str"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetSuperclass(System.IntPtr)">
      <summary>
        <para>If &lt;tt&gt;clazz&lt;tt&gt; represents any class other than the class &lt;tt&gt;Object&lt;tt&gt;, then this function returns the object that represents the superclass of the class specified by &lt;tt&gt;clazz&lt;/tt&gt;.</para>
      </summary>
      <param name="clazz"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.GetVersion">
      <summary>
        <para>Returns the version of the native method interface.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNI.IsAssignableFrom(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Determines whether an object of &lt;tt&gt;clazz1&lt;tt&gt; can be safely cast to &lt;tt&gt;clazz2&lt;tt&gt;.</para>
      </summary>
      <param name="clazz1"></param>
      <param name="clazz2"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.IsInstanceOf(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Tests whether an object is an instance of a class.</para>
      </summary>
      <param name="obj"></param>
      <param name="clazz"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.IsSameObject(System.IntPtr,System.IntPtr)">
      <summary>
        <para>Tests whether two references refer to the same Java object.</para>
      </summary>
      <param name="obj1"></param>
      <param name="obj2"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewBooleanArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewByteArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewCharArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewDoubleArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewFloatArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewGlobalRef(System.IntPtr)">
      <summary>
        <para>Creates a new global reference to the object referred to by the &lt;tt&gt;obj&lt;/tt&gt; argument.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewIntArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewLocalRef(System.IntPtr)">
      <summary>
        <para>Creates a new local reference that refers to the same object as &lt;tt&gt;obj&lt;/tt&gt;.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewLongArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewObject(System.IntPtr,System.IntPtr,UnityEngine.jvalue[])">
      <summary>
        <para>Constructs a new Java object. The method ID indicates which constructor method to invoke. This ID must be obtained by calling GetMethodID() with &lt;init&gt; as the method name and void (V) as the return type.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewObjectArray(System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
        <para>Constructs a new array holding objects in class &lt;tt&gt;clazz&lt;tt&gt;. All elements are initially set to &lt;tt&gt;obj&lt;tt&gt;.</para>
      </summary>
      <param name="size"></param>
      <param name="clazz"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewShortArray(System.Int32)">
      <summary>
        <para>Construct a new primitive array object.</para>
      </summary>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.NewStringUTF(System.String)">
      <summary>
        <para>Constructs a new &lt;tt&gt;java.lang.String&lt;/tt&gt; object from an array of characters in modified UTF-8 encoding.</para>
      </summary>
      <param name="bytes"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.PopLocalFrame(System.IntPtr)">
      <summary>
        <para>Pops off the current local reference frame, frees all the local references, and returns a local reference in the previous local reference frame for the given &lt;tt&gt;result&lt;/tt&gt; object.</para>
      </summary>
      <param name="ptr"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.PushLocalFrame(System.Int32)">
      <summary>
        <para>Creates a new local reference frame, in which at least a given number of local references can be created.</para>
      </summary>
      <param name="capacity"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetBooleanArrayElement(System.IntPtr,System.Int32,System.Byte)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array">The array of native booleans.</param>
      <param name="index">Index of the array element to set.</param>
      <param name="val">The value to set - for 'true' use 1, for 'false' use 0.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetBooleanField(System.IntPtr,System.IntPtr,System.Boolean)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetByteArrayElement(System.IntPtr,System.Int32,System.SByte)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetByteField(System.IntPtr,System.IntPtr,System.Byte)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetCharArrayElement(System.IntPtr,System.Int32,System.Char)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetCharField(System.IntPtr,System.IntPtr,System.Char)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetDoubleArrayElement(System.IntPtr,System.Int32,System.Double)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetDoubleField(System.IntPtr,System.IntPtr,System.Double)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetFloatArrayElement(System.IntPtr,System.Int32,System.Single)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetFloatField(System.IntPtr,System.IntPtr,System.Single)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetIntArrayElement(System.IntPtr,System.Int32,System.Int32)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetIntField(System.IntPtr,System.IntPtr,System.Int32)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetLongArrayElement(System.IntPtr,System.Int32,System.Int64)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetLongField(System.IntPtr,System.IntPtr,System.Int64)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetObjectArrayElement(System.IntPtr,System.Int32,System.IntPtr)">
      <summary>
        <para>Sets an element of an &lt;tt&gt;Object&lt;/tt&gt; array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetObjectField(System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetShortArrayElement(System.IntPtr,System.Int32,System.Int16)">
      <summary>
        <para>Sets the value of one element in a primitive array.</para>
      </summary>
      <param name="array"></param>
      <param name="index"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetShortField(System.IntPtr,System.IntPtr,System.Int16)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticBooleanField(System.IntPtr,System.IntPtr,System.Boolean)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticByteField(System.IntPtr,System.IntPtr,System.Byte)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticCharField(System.IntPtr,System.IntPtr,System.Char)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticDoubleField(System.IntPtr,System.IntPtr,System.Double)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticFloatField(System.IntPtr,System.IntPtr,System.Single)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticIntField(System.IntPtr,System.IntPtr,System.Int32)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticLongField(System.IntPtr,System.IntPtr,System.Int64)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticObjectField(System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticShortField(System.IntPtr,System.IntPtr,System.Int16)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStaticStringField(System.IntPtr,System.IntPtr,System.String)">
      <summary>
        <para>This function ets the value of a static field of an object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.SetStringField(System.IntPtr,System.IntPtr,System.String)">
      <summary>
        <para>This function sets the value of an instance (nonstatic) field of an object.</para>
      </summary>
      <param name="obj"></param>
      <param name="fieldID"></param>
      <param name="val"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.Throw(System.IntPtr)">
      <summary>
        <para>Causes a &lt;tt&gt;java.lang.Throwable&lt;/tt&gt; object to be thrown.</para>
      </summary>
      <param name="obj"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ThrowNew(System.IntPtr,System.String)">
      <summary>
        <para>Constructs an exception object from the specified class with the &lt;tt&gt;message&lt;/tt&gt; specified by message and causes that exception to be thrown.</para>
      </summary>
      <param name="clazz"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToBooleanArray(System.Boolean[])">
      <summary>
        <para>Convert a managed array of System.Boolean to a Java array of &lt;tt&gt;boolean&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToByteArray(System.Byte[])">
      <summary>
        <para>Convert a managed array of System.Byte to a Java array of &lt;tt&gt;byte&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToCharArray(System.Char[])">
      <summary>
        <para>Convert a managed array of System.Char to a Java array of &lt;tt&gt;char&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToDoubleArray(System.Double[])">
      <summary>
        <para>Convert a managed array of System.Double to a Java array of &lt;tt&gt;double&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToFloatArray(System.Single[])">
      <summary>
        <para>Convert a managed array of System.Single to a Java array of &lt;tt&gt;float&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToIntArray(System.Int32[])">
      <summary>
        <para>Convert a managed array of System.Int32 to a Java array of &lt;tt&gt;int&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToLongArray(System.Int64[])">
      <summary>
        <para>Convert a managed array of System.Int64 to a Java array of &lt;tt&gt;long&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToObjectArray(System.IntPtr[])">
      <summary>
        <para>Convert a managed array of System.IntPtr, representing Java objects, to a Java array of &lt;tt&gt;java.lang.Object&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToReflectedField(System.IntPtr,System.IntPtr,System.Boolean)">
      <summary>
        <para>Converts a field ID derived from cls to a &lt;tt&gt;java.lang.reflect.Field&lt;/tt&gt; object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="fieldID"></param>
      <param name="isStatic"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToReflectedMethod(System.IntPtr,System.IntPtr,System.Boolean)">
      <summary>
        <para>Converts a method ID derived from clazz to a &lt;tt&gt;java.lang.reflect.Method&lt;tt&gt; or &lt;tt&gt;java.lang.reflect.Constructor&lt;tt&gt; object.</para>
      </summary>
      <param name="clazz"></param>
      <param name="methodID"></param>
      <param name="isStatic"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNI.ToShortArray(System.Int16[])">
      <summary>
        <para>Convert a managed array of System.Int16 to a Java array of &lt;tt&gt;short&lt;/tt&gt;.</para>
      </summary>
      <param name="array"></param>
    </member>
    <member name="T:UnityEngine.AndroidJNIHelper">
      <summary>
        <para>Helper interface for JNI interaction; signature creation and method lookups.

Note: Using raw JNI functions requires advanced knowledge of the Android Java Native Interface (JNI). Please take note.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AndroidJNIHelper.debug">
      <summary>
        <para>Set debug to true to log calls through the AndroidJNIHelper.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.ConvertFromJNIArray(System.IntPtr)">
      <summary>
        <para>Creates a managed array from a Java array.</para>
      </summary>
      <param name="array">Java array object to be converted into a managed array.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.ConvertToJNIArray(System.Array)">
      <summary>
        <para>Creates a Java array from a managed array.</para>
      </summary>
      <param name="array">Managed array to be converted into a Java array object.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.CreateJavaProxy(UnityEngine.AndroidJavaProxy)">
      <summary>
        <para>Creates a java proxy object which connects to the supplied proxy implementation.</para>
      </summary>
      <param name="proxy">An implementatinon of a java interface in c#.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.CreateJavaRunnable(UnityEngine.AndroidJavaRunnable)">
      <summary>
        <para>Creates a UnityJavaRunnable object (implements java.lang.Runnable).</para>
      </summary>
      <param name="runnable">A delegate representing the java.lang.Runnable.</param>
      <param name="jrunnable"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.CreateJNIArgArray(System.Object[])">
      <summary>
        <para>Creates the parameter array to be used as argument list when invoking Java code through CallMethod() in AndroidJNI.</para>
      </summary>
      <param name="args">An array of objects that should be converted to Call parameters.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.DeleteJNIArgArray(System.Object[],UnityEngine.jvalue[])">
      <summary>
        <para>Deletes any local jni references previously allocated by CreateJNIArgArray().</para>
      </summary>
      <param name="args">The array of arguments used as a parameter to CreateJNIArgArray().</param>
      <param name="jniArgs">The array returned by CreateJNIArgArray().</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetConstructorID(System.IntPtr)">
      <summary>
        <para>Scans a particular Java class for a constructor method matching a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="signature">Constructor method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetConstructorID(System.IntPtr,System.String)">
      <summary>
        <para>Scans a particular Java class for a constructor method matching a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="signature">Constructor method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetConstructorID(System.IntPtr,System.Object[])">
      <summary>
        <para>Get a JNI method ID for a constructor based on calling arguments.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="args">Array with parameters to be passed to the constructor when invoked.</param>
      <param name="jclass"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetFieldID(System.IntPtr,System.String)">
      <summary>
        <para>Scans a particular Java class for a field matching a name and a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="fieldName">Name of the field as declared in Java.</param>
      <param name="signature">Field signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static fields; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) fields.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetFieldID(System.IntPtr,System.String,System.String)">
      <summary>
        <para>Scans a particular Java class for a field matching a name and a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="fieldName">Name of the field as declared in Java.</param>
      <param name="signature">Field signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static fields; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) fields.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetFieldID(System.IntPtr,System.String,System.String,System.Boolean)">
      <summary>
        <para>Scans a particular Java class for a field matching a name and a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="fieldName">Name of the field as declared in Java.</param>
      <param name="signature">Field signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static fields; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) fields.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetFieldID(System.IntPtr,System.String,System.Boolean)">
      <summary>
        <para>Get a JNI field ID based on type detection. Generic parameter represents the field type.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="fieldName">Name of the field as declared in Java.</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static fields; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) fields.</param>
      <param name="jclass"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(System.IntPtr,System.String)">
      <summary>
        <para>Scans a particular Java class for a method matching a name and a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="signature">Method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static methods; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) methods.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(System.IntPtr,System.String,System.String)">
      <summary>
        <para>Scans a particular Java class for a method matching a name and a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="signature">Method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static methods; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) methods.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(System.IntPtr,System.String,System.String,System.Boolean)">
      <summary>
        <para>Scans a particular Java class for a method matching a name and a signature.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="signature">Method signature (e.g. obtained by calling AndroidJNIHelper.GetSignature).</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static methods; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) methods.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(System.IntPtr,System.String,System.Object[],System.Boolean)">
      <summary>
        <para>Get a JNI method ID based on calling arguments.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="args">Array with parameters to be passed to the method when invoked.</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static methods; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) methods.</param>
      <param name="jclass"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetMethodID(System.IntPtr,System.String,System.Object[],System.Boolean)">
      <summary>
        <para>Get a JNI method ID based on calling arguments.</para>
      </summary>
      <param name="javaClass">Raw JNI Java class object (obtained by calling AndroidJNI.FindClass).</param>
      <param name="methodName">Name of the method as declared in Java.</param>
      <param name="args">Array with parameters to be passed to the method when invoked.</param>
      <param name="isStatic">Set to &lt;tt&gt;true&lt;tt&gt; for static methods; &lt;tt&gt;false&lt;tt&gt; for instance (nonstatic) methods.</param>
      <param name="jclass"></param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetSignature(System.Object)">
      <summary>
        <para>Creates the JNI signature string for particular object type.</para>
      </summary>
      <param name="obj">Object for which a signature is to be produced.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetSignature(System.Object[])">
      <summary>
        <para>Creates the JNI signature string for an object parameter list.</para>
      </summary>
      <param name="args">Array of object for which a signature is to be produced.</param>
    </member>
    <member name="M:UnityEngine.AndroidJNIHelper.GetSignature(System.Object[])">
      <summary>
        <para>Creates the JNI signature string for an object parameter list.</para>
      </summary>
      <param name="args">Array of object for which a signature is to be produced.</param>
    </member>
    <member name="T:UnityEngine.Animation">
      <summary>
        <para>The animation component is used to play back animations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.animateOnlyIfVisible">
      <summary>
        <para>When turned on, Unity might stop animating if it thinks that the results of the animation won't be visible to the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.animatePhysics">
      <summary>
        <para>When turned on, animations will be executed in the physics loop. This is only useful in conjunction with kinematic rigidbodies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.clip">
      <summary>
        <para>The default animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.cullingType">
      <summary>
        <para>Controls culling of this Animation component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.isPlaying">
      <summary>
        <para>Are we playing any animations?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.localBounds">
      <summary>
        <para>AABB of this Animation animation component in local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.playAutomatically">
      <summary>
        <para>Should the default animation clip (the Animation.clip property) automatically start playing on startup?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.wrapMode">
      <summary>
        <para>How should time beyond the playback range of the clip be treated?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(UnityEngine.AnimationClip,System.String)">
      <summary>
        <para>Adds a clip to the animation with name newName.</para>
      </summary>
      <param name="clip"></param>
      <param name="newName"></param>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(UnityEngine.AnimationClip,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Adds clip to the only play between firstFrame and lastFrame. The new clip will also be added to the animation with name newName.</para>
      </summary>
      <param name="addLoopFrame">Should an extra frame be inserted at the end that matches the first frame? Turn this on if you are making a looping animation.</param>
      <param name="clip"></param>
      <param name="newName"></param>
      <param name="firstFrame"></param>
      <param name="lastFrame"></param>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(UnityEngine.AnimationClip,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Adds clip to the only play between firstFrame and lastFrame. The new clip will also be added to the animation with name newName.</para>
      </summary>
      <param name="addLoopFrame">Should an extra frame be inserted at the end that matches the first frame? Turn this on if you are making a looping animation.</param>
      <param name="clip"></param>
      <param name="newName"></param>
      <param name="firstFrame"></param>
      <param name="lastFrame"></param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(System.String)">
      <summary>
        <para>Blends the animation named animation towards targetWeight over the next time seconds.</para>
      </summary>
      <param name="animation"></param>
      <param name="targetWeight"></param>
      <param name="fadeLength"></param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(System.String,System.Single)">
      <summary>
        <para>Blends the animation named animation towards targetWeight over the next time seconds.</para>
      </summary>
      <param name="animation"></param>
      <param name="targetWeight"></param>
      <param name="fadeLength"></param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(System.String,System.Single,System.Single)">
      <summary>
        <para>Blends the animation named animation towards targetWeight over the next time seconds.</para>
      </summary>
      <param name="animation"></param>
      <param name="targetWeight"></param>
      <param name="fadeLength"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(System.String)">
      <summary>
        <para>Fades the animation with name animation in over a period of time seconds and fades other animations out.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(System.String,System.Single)">
      <summary>
        <para>Fades the animation with name animation in over a period of time seconds and fades other animations out.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(System.String,System.Single,UnityEngine.PlayMode)">
      <summary>
        <para>Fades the animation with name animation in over a period of time seconds and fades other animations out.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String)">
      <summary>
        <para>Cross fades an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String,System.Single)">
      <summary>
        <para>Cross fades an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String,System.Single,UnityEngine.QueueMode)">
      <summary>
        <para>Cross fades an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String,System.Single,UnityEngine.QueueMode,UnityEngine.PlayMode)">
      <summary>
        <para>Cross fades an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="fadeLength"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.GetClipCount">
      <summary>
        <para>Get the number of clips currently assigned to this animation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.IsPlaying(System.String)">
      <summary>
        <para>Is the animation named name playing?</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Animation.Play()">
      <summary>
        <para>Plays an animation without any blending.</para>
      </summary>
      <param name="mode"></param>
      <param name="animation"></param>
    </member>
    <member name="M:UnityEngine.Animation.Play(System.String)">
      <summary>
        <para>Plays an animation without any blending.</para>
      </summary>
      <param name="mode"></param>
      <param name="animation"></param>
    </member>
    <member name="M:UnityEngine.Animation.Play(UnityEngine.PlayMode)">
      <summary>
        <para>Plays an animation without any blending.</para>
      </summary>
      <param name="mode"></param>
      <param name="animation"></param>
    </member>
    <member name="M:UnityEngine.Animation.Play(System.String,UnityEngine.PlayMode)">
      <summary>
        <para>Plays an animation without any blending.</para>
      </summary>
      <param name="mode"></param>
      <param name="animation"></param>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(System.String)">
      <summary>
        <para>Plays an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(System.String,UnityEngine.QueueMode)">
      <summary>
        <para>Plays an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(System.String,UnityEngine.QueueMode,UnityEngine.PlayMode)">
      <summary>
        <para>Plays an animation after previous animations has finished playing.</para>
      </summary>
      <param name="animation"></param>
      <param name="queue"></param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Animation.RemoveClip(UnityEngine.AnimationClip)">
      <summary>
        <para>Remove clip from the animation list.</para>
      </summary>
      <param name="clip"></param>
    </member>
    <member name="M:UnityEngine.Animation.RemoveClip(System.String)">
      <summary>
        <para>Remove clip from the animation list.</para>
      </summary>
      <param name="clipName"></param>
    </member>
    <member name="M:UnityEngine.Animation.Rewind(System.String)">
      <summary>
        <para>Rewinds the animation named name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Animation.Rewind">
      <summary>
        <para>Rewinds all animations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.Sample">
      <summary>
        <para>Samples animations at the current state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.Stop">
      <summary>
        <para>Stops all playing animations that were started with this Animation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.Stop(System.String)">
      <summary>
        <para>Stops an animation named name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="P:UnityEngine.Animation.this">
      <summary>
        <para>Returns the animation state named name.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationBlendMode">
      <summary>
        <para>Used by Animation.Play function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationBlendMode.Additive">
      <summary>
        <para>Animations will be added.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationBlendMode.Blend">
      <summary>
        <para>Animations will be blended.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationClip">
      <summary>
        <para>Stores keyframe based animations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.events">
      <summary>
        <para>Animation Events for this animation clip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.frameRate">
      <summary>
        <para>Frame rate at which keyframes are sampled. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.humanMotion">
      <summary>
        <para>Returns true if the animation contains curve that drives a humanoid rig.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.legacy">
      <summary>
        <para>Set to true if the AnimationClip will be used with the Legacy Animation component ( instead of the Animator ).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.length">
      <summary>
        <para>Animation length in seconds. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.localBounds">
      <summary>
        <para>AABB of this Animation Clip in local space of Animation component that it is attached too.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.wrapMode">
      <summary>
        <para>Sets the default wrap mode used in the animation state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.AddEvent(UnityEngine.AnimationEvent)">
      <summary>
        <para>Adds an animation event to the clip.</para>
      </summary>
      <param name="evt">AnimationEvent to add.</param>
    </member>
    <member name="M:UnityEngine.AnimationClip.ClearCurves">
      <summary>
        <para>Clears all curves from the clip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.#ctor">
      <summary>
        <para>Creates a new animation clip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.EnsureQuaternionContinuity">
      <summary>
        <para>Realigns quaternion keys to ensure shortest interpolation paths.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.SampleAnimation(UnityEngine.GameObject,System.Single)">
      <summary>
        <para>Samples an animation at a given time for any animated properties.</para>
      </summary>
      <param name="go">The animated game object.</param>
      <param name="time">The time to sample an animation.</param>
    </member>
    <member name="M:UnityEngine.AnimationClip.SetCurve(System.String,System.Type,System.String,UnityEngine.AnimationCurve)">
      <summary>
        <para>Assigns the curve to animate a specific property.</para>
      </summary>
      <param name="relativePath">Path to the game object this curve applies to. The relativePath
        is formatted similar to a pathname, e.g. "rootspineleftArm".  If relativePath
        is empty it refers to the game object the animation clip is attached to.</param>
      <param name="type">The class type of the component that is animated.</param>
      <param name="propertyName">The name or path to the property being animated.</param>
      <param name="curve">The animation curve.</param>
    </member>
    <member name="T:UnityEngine.AnimationClipPair">
      <summary>
        <para>This class defines a pair of clips used by AnimatorOverrideController.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationClipPair.originalClip">
      <summary>
        <para>The original clip from the controller.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationClipPair.overrideClip">
      <summary>
        <para>The override animation clip.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationCullingType">
      <summary>
        <para>This enum controlls culling of Animation component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationCullingType.AlwaysAnimate">
      <summary>
        <para>Animation culling is disabled - object is animated even when offscreen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationCullingType.BasedOnRenderers">
      <summary>
        <para>Animation is disabled when renderers are not visible.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationCurve">
      <summary>
        <para>Store a collection of Keyframes that can be evaluated over time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationCurve.keys">
      <summary>
        <para>All keys defined in the animation curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationCurve.length">
      <summary>
        <para>The number of keys in the curve. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationCurve.postWrapMode">
      <summary>
        <para>The behaviour of the animation after the last keyframe.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationCurve.preWrapMode">
      <summary>
        <para>The behaviour of the animation before the first keyframe.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationCurve.AddKey(System.Single,System.Single)">
      <summary>
        <para>Add a new key to the curve.</para>
      </summary>
      <param name="time">The time at which to add the key (horizontal axis in the curve graph).</param>
      <param name="value">The value for the key (vertical axis in the curve graph).</param>
      <returns>
        <para>The index of the added key, or -1 if the key could not be added.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AnimationCurve.AddKey(UnityEngine.Keyframe)">
      <summary>
        <para>Add a new key to the curve.</para>
      </summary>
      <param name="key">The key to add to the curve.</param>
      <returns>
        <para>The index of the added key, or -1 if the key could not be added.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AnimationCurve.#ctor(UnityEngine.Keyframe[])">
      <summary>
        <para>Creates an animation curve from an arbitrary number of keyframes.</para>
      </summary>
      <param name="keys">An array of Keyframes used to define the curve.</param>
    </member>
    <member name="M:UnityEngine.AnimationCurve.#ctor">
      <summary>
        <para>Creates an empty animation curve.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationCurve.EaseInOut(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates an ease-in and out curve starting at timeStart, valueStart and ending at timeEnd, valueEnd.</para>
      </summary>
      <param name="timeStart">The start time for the ease curve.</param>
      <param name="valueStart">The start value for the ease curve.</param>
      <param name="timeEnd">The end time for the ease curve.</param>
      <param name="valueEnd">The end value for the ease curve.</param>
      <returns>
        <para>The ease-in and out curve generated from the specified values.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AnimationCurve.Evaluate(System.Single)">
      <summary>
        <para>Evaluate the curve at time.</para>
      </summary>
      <param name="time">The time within the curve you want to evaluate (the horizontal axis in the curve graph).</param>
      <returns>
        <para>The value of the curve, at the point in time specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AnimationCurve.Linear(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>A straight Line starting at timeStart, valueStart and ending at timeEnd, valueEnd.</para>
      </summary>
      <param name="timeStart">The start time for the linear curve.</param>
      <param name="valueStart">The start value for the linear curve.</param>
      <param name="timeEnd">The end time for the linear curve.</param>
      <param name="valueEnd">The end value for the linear curve.</param>
      <returns>
        <para>The (straight) curve created from the values specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AnimationCurve.MoveKey(System.Int32,UnityEngine.Keyframe)">
      <summary>
        <para>Removes the keyframe at index and inserts key.</para>
      </summary>
      <param name="index">The index of the key to move.</param>
      <param name="key">The key (with its new time) to insert.</param>
      <returns>
        <para>The index of the keyframe after moving it.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AnimationCurve.RemoveKey(System.Int32)">
      <summary>
        <para>Removes a key.</para>
      </summary>
      <param name="index">The index of the key to remove.</param>
    </member>
    <member name="M:UnityEngine.AnimationCurve.SmoothTangents(System.Int32,System.Single)">
      <summary>
        <para>Smooth the in and out tangents of the keyframe at index.</para>
      </summary>
      <param name="index">The index of the keyframe to be smoothed.</param>
      <param name="weight">The smoothing weight to apply to the keyframe's tangents.</param>
    </member>
    <member name="P:UnityEngine.AnimationCurve.this">
      <summary>
        <para>Retrieves the key at index. (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationEvent">
      <summary>
        <para>AnimationEvent lets you call a script function similar to SendMessage as part of playing back an animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animationState">
      <summary>
        <para>The animation state that fired this event (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animatorClipInfo">
      <summary>
        <para>The animator clip info related to this event (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animatorStateInfo">
      <summary>
        <para>The animator state info related to this event (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.floatParameter">
      <summary>
        <para>Float parameter that is stored in the event and will be sent to the function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.functionName">
      <summary>
        <para>The name of the function that will be called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.intParameter">
      <summary>
        <para>Int parameter that is stored in the event and will be sent to the function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.isFiredByAnimator">
      <summary>
        <para>Returns true if this Animation event has been fired by an Animator component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.isFiredByLegacy">
      <summary>
        <para>Returns true if this Animation event has been fired by an Animation component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.messageOptions">
      <summary>
        <para>Function call options.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.objectReferenceParameter">
      <summary>
        <para>Object reference parameter that is stored in the event and will be sent to the function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.stringParameter">
      <summary>
        <para>String parameter that is stored in the event and will be sent to the function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.time">
      <summary>
        <para>The time at which the event will be fired off.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationEvent.#ctor">
      <summary>
        <para>Creates a new animation event.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationInfo">
      <summary>
        <para>Information about what animation clips is played and its weight.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationInfo.clip">
      <summary>
        <para>Animation clip that is played.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationInfo.weight">
      <summary>
        <para>The weight of the animation clip.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationState">
      <summary>
        <para>The AnimationState gives full control over animation blending.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.blendMode">
      <summary>
        <para>Which blend mode should be used?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.clip">
      <summary>
        <para>The clip that is being played by this animation state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.enabled">
      <summary>
        <para>Enables / disables the animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.length">
      <summary>
        <para>The length of the animation clip in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.name">
      <summary>
        <para>The name of the animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.normalizedSpeed">
      <summary>
        <para>The normalized playback speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.normalizedTime">
      <summary>
        <para>The normalized time of the animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.speed">
      <summary>
        <para>The playback speed of the animation. 1 is normal playback speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.time">
      <summary>
        <para>The current time of the animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.weight">
      <summary>
        <para>The weight of animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.wrapMode">
      <summary>
        <para>Wrapping mode of the animation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationState.AddMixingTransform(UnityEngine.Transform)">
      <summary>
        <para>Adds a transform which should be animated. This allows you to reduce the number of animations you have to create.</para>
      </summary>
      <param name="mix">The transform to animate.</param>
      <param name="recursive">Whether to also animate all children of the specified transform.</param>
    </member>
    <member name="M:UnityEngine.AnimationState.AddMixingTransform(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Adds a transform which should be animated. This allows you to reduce the number of animations you have to create.</para>
      </summary>
      <param name="mix">The transform to animate.</param>
      <param name="recursive">Whether to also animate all children of the specified transform.</param>
    </member>
    <member name="M:UnityEngine.AnimationState.RemoveMixingTransform(UnityEngine.Transform)">
      <summary>
        <para>Removes a transform which should be animated.</para>
      </summary>
      <param name="mix"></param>
    </member>
    <member name="T:UnityEngine.Animator">
      <summary>
        <para>Interface to control the Mecanim animation system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.angularVelocity">
      <summary>
        <para>Gets the avatar angular velocity for the last evaluated frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.animatePhysics">
      <summary>
        <para>When turned on, animations will be executed in the physics loop. This is only useful in conjunction with kinematic rigidbodies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.applyRootMotion">
      <summary>
        <para>Should root motion be applied?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.avatar">
      <summary>
        <para>Gets/Sets the current Avatar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.bodyPosition">
      <summary>
        <para>The position of the body center of mass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.bodyRotation">
      <summary>
        <para>The rotation of the body center of mass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.cullingMode">
      <summary>
        <para>Controls culling of this Animator component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.deltaPosition">
      <summary>
        <para>Gets the avatar delta position for the last evaluated frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.deltaRotation">
      <summary>
        <para>Gets the avatar delta rotation for the last evaluated frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.feetPivotActive">
      <summary>
        <para>Blends pivot point between body center of mass and feet pivot. At 0%, the blending point is body center of mass. At 100%, the blending point is feet pivot.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.gravityWeight">
      <summary>
        <para>The current gravity weight based on current animations that are played.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.hasBoundPlayables">
      <summary>
        <para>Returns true if Animator has any playables assigned to it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.hasRootMotion">
      <summary>
        <para>Returns true if the current rig has root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.hasTransformHierarchy">
      <summary>
        <para>Returns true if the object has a transform hierarchy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.humanScale">
      <summary>
        <para>Returns the scale of the current Avatar for a humanoid rig, (1 by default if the rig is generic).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isHuman">
      <summary>
        <para>Returns true if the current rig is humanoid, false if it is generic.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isInitialized">
      <summary>
        <para>Returns whether the animator is initialized successfully.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isMatchingTarget">
      <summary>
        <para>If automatic matching is active.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isOptimizable">
      <summary>
        <para>Returns true if the current rig is optimizable with AnimatorUtility.OptimizeTransformHierarchy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.layerCount">
      <summary>
        <para>See IAnimatorControllerPlayable.layerCount.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.layersAffectMassCenter">
      <summary>
        <para>Additional layers affects the center of mass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.leftFeetBottomHeight">
      <summary>
        <para>Get left foot bottom height.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.linearVelocityBlending">
      <summary>
        <para>When linearVelocityBlending is set to true, the root motion velocity and angular velocity will be blended linearly.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.parameterCount">
      <summary>
        <para>See IAnimatorControllerPlayable.parameterCount.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.parameters">
      <summary>
        <para>Read only acces to the AnimatorControllerParameters used by the animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.pivotPosition">
      <summary>
        <para>Get the current position of the pivot.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.pivotWeight">
      <summary>
        <para>Gets the pivot weight.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.playableGraph">
      <summary>
        <para>The PlayableGraph created by the Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.playbackTime">
      <summary>
        <para>Sets the playback position in the recording buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.recorderMode">
      <summary>
        <para>Gets the mode of the Animator recorder.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.recorderStartTime">
      <summary>
        <para>Start time of the first frame of the buffer relative to the frame at which StartRecording was called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.recorderStopTime">
      <summary>
        <para>End time of the recorded clip relative to when StartRecording was called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.rightFeetBottomHeight">
      <summary>
        <para>Get right foot bottom height.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.rootPosition">
      <summary>
        <para>The root position, the position of the game object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.rootRotation">
      <summary>
        <para>The root rotation, the rotation of the game object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.runtimeAnimatorController">
      <summary>
        <para>The runtime representation of AnimatorController that controls the Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.speed">
      <summary>
        <para>The playback speed of the Animator. 1 is normal playback speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.stabilizeFeet">
      <summary>
        <para>Automatic stabilization of feet during transition and blending.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.targetPosition">
      <summary>
        <para>Returns the position of the target specified by SetTarget(AvatarTarget targetIndex, float targetNormalizedTime)).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.targetRotation">
      <summary>
        <para>Returns the rotation of the target specified by SetTarget(AvatarTarget targetIndex, float targetNormalizedTime)).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.updateMode">
      <summary>
        <para>Specifies the update mode of the Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.velocity">
      <summary>
        <para>Gets the avatar velocity  for the last evaluated frame.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.ApplyBuiltinRootMotion">
      <summary>
        <para>Apply the default Root Motion.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.CrossFade(System.String,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFade.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.CrossFade(System.Int32,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFade.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.CrossFadeInFixedTime(System.String,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFadeInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.CrossFadeInFixedTime(System.Int32,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFadeInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetAnimatorTransitionInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetAnimatorTransitionInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetBehaviour">
      <summary>
        <para>Return the first StateMachineBehaviour that match type T or derived from T. Return null if none are found.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.GetBehaviours">
      <summary>
        <para>Returns all StateMachineBehaviour that match type T or are derived from T. Returns null if none are found.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.GetBoneTransform(UnityEngine.HumanBodyBones)">
      <summary>
        <para>Returns transform mapped to this human bone id.</para>
      </summary>
      <param name="humanBoneId">The human bone that is queried, see enum HumanBodyBones for a list of possible values.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetBool(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetBool(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimationClipState(System.Int32)">
      <summary>
        <para>Gets the list of AnimatorClipInfo currently played by the current state.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorClipInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="clips"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorClipInfoCount.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorStateInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorStateInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetFloat(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetFloat(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKHintPosition(UnityEngine.AvatarIKHint)">
      <summary>
        <para>Gets the position of an IK hint.</para>
      </summary>
      <param name="hint">The AvatarIKHint that is queried.</param>
      <returns>
        <para>Return the current position of this IK hint in world space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKHintPositionWeight(UnityEngine.AvatarIKHint)">
      <summary>
        <para>Gets the translative weight of an IK Hint (0 = at the original animation before IK, 1 = at the hint).</para>
      </summary>
      <param name="hint">The AvatarIKHint that is queried.</param>
      <returns>
        <para>Return translative weight.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKPosition(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Gets the position of an IK goal.</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is queried.</param>
      <returns>
        <para>Return the current position of this IK goal in world space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKPositionWeight(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Gets the translative weight of an IK goal (0 = at the original animation before IK, 1 = at the goal).</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKRotation(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Gets the rotation of an IK goal.</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKRotationWeight(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Gets the rotational weight of an IK goal (0 = rotation before IK, 1 = rotation at the IK goal).</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetInteger(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetInteger(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerIndex(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetLayerIndex.</para>
      </summary>
      <param name="layerName"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerName(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetLayerName.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerWeight(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetLayerWeight.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimationClipState(System.Int32)">
      <summary>
        <para>Gets the list of AnimatorClipInfo currently played by the next state.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorClipInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="clips"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorClipInfoCount.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorStateInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorStateInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetParameter(System.Int32)">
      <summary>
        <para>See AnimatorController.GetParameter.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.Animator.GetQuaternion(System.String)">
      <summary>
        <para>Gets the value of a quaternion parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetQuaternion(System.Int32)">
      <summary>
        <para>Gets the value of a quaternion parameter.</para>
      </summary>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetVector(System.String)">
      <summary>
        <para>Gets the value of a vector parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetVector(System.Int32)">
      <summary>
        <para>Gets the value of a vector parameter.</para>
      </summary>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.HasState(System.Int32,System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.HasState.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="stateID"></param>
    </member>
    <member name="M:UnityEngine.Animator.InterruptMatchTarget()">
      <summary>
        <para>Interrupts the automatic target matching.</para>
      </summary>
      <param name="completeMatch"></param>
    </member>
    <member name="M:UnityEngine.Animator.InterruptMatchTarget(System.Boolean)">
      <summary>
        <para>Interrupts the automatic target matching.</para>
      </summary>
      <param name="completeMatch"></param>
    </member>
    <member name="M:UnityEngine.Animator.IsControlled(UnityEngine.Transform)">
      <summary>
        <para>Returns true if the transform is controlled by the Animator\.</para>
      </summary>
      <param name="transform">The transform that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.IsInTransition(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.IsInTransition.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Animator.IsParameterControlledByCurve(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.IsParameterControlledByCurve.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.IsParameterControlledByCurve(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.IsParameterControlledByCurve.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.MatchTarget(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.AvatarTarget,UnityEngine.MatchTargetWeightMask,System.Single,System.Single)">
      <summary>
        <para>Automatically adjust the gameobject position and rotation so that the AvatarTarget reaches the matchPosition when the current state is at the specified progress.</para>
      </summary>
      <param name="matchPosition">The position we want the body part to reach.</param>
      <param name="matchRotation">The rotation in which we want the body part to be.</param>
      <param name="targetBodyPart">The body part that is involved in the match.</param>
      <param name="weightMask">Structure that contains weights for matching position and rotation.</param>
      <param name="startNormalizedTime">Start time within the animation clip (0 - beginning of clip, 1 - end of clip).</param>
      <param name="targetNormalizedTime">End time within the animation clip (0 - beginning of clip, 1 - end of clip), values greater than 1 can be set to trigger a match after a certain number of loops. Ex: 2.3 means at 30% of 2nd loop.</param>
    </member>
    <member name="M:UnityEngine.Animator.Play(System.String,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.Play.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.Play(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.Play.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.PlayInFixedTime(System.String,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.PlayInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.PlayInFixedTime(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.PlayInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Animator.Rebind">
      <summary>
        <para>Rebind all the animated properties and mesh data with the Animator.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.ResetTrigger(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.ResetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.ResetTrigger(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.ResetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetBoneLocalRotation(UnityEngine.HumanBodyBones,UnityEngine.Quaternion)">
      <summary>
        <para>Sets local rotation of a human bone during a IK pass.</para>
      </summary>
      <param name="humanBoneId">The human bone Id.</param>
      <param name="rotation">The local rotation.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetBool(System.String,System.Boolean)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetBool(System.Int32,System.Boolean)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.String,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="dampTime"></param>
      <param name="deltaTime"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.String,System.Single,System.Single,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="dampTime"></param>
      <param name="deltaTime"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="dampTime"></param>
      <param name="deltaTime"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.Int32,System.Single,System.Single,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="dampTime"></param>
      <param name="deltaTime"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKHintPosition(UnityEngine.AvatarIKHint,UnityEngine.Vector3)">
      <summary>
        <para>Sets the position of an IK hint.</para>
      </summary>
      <param name="hint">The AvatarIKHint that is set.</param>
      <param name="hintPosition">The position in world space.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKHintPositionWeight(UnityEngine.AvatarIKHint,System.Single)">
      <summary>
        <para>Sets the translative weight of an IK hint (0 = at the original animation before IK, 1 = at the hint).</para>
      </summary>
      <param name="hint">The AvatarIKHint that is set.</param>
      <param name="value">The translative weight.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKPosition(UnityEngine.AvatarIKGoal,UnityEngine.Vector3)">
      <summary>
        <para>Sets the position of an IK goal.</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="goalPosition">The position in world space.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKPositionWeight(UnityEngine.AvatarIKGoal,System.Single)">
      <summary>
        <para>Sets the translative weight of an IK goal (0 = at the original animation before IK, 1 = at the goal).</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="value">The translative weight.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKRotation(UnityEngine.AvatarIKGoal,UnityEngine.Quaternion)">
      <summary>
        <para>Sets the rotation of an IK goal.</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="goalRotation">The rotation in world space.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKRotationWeight(UnityEngine.AvatarIKGoal,System.Single)">
      <summary>
        <para>Sets the rotational weight of an IK goal (0 = rotation before IK, 1 = rotation at the IK goal).</para>
      </summary>
      <param name="goal">The AvatarIKGoal that is set.</param>
      <param name="value">The rotational weight.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetInteger(System.String,System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetInteger(System.Int32,System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetLayerWeight(System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetLayerWeight.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="weight"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtPosition(UnityEngine.Vector3)">
      <summary>
        <para>Sets the look at position.</para>
      </summary>
      <param name="lookAtPosition">The position to lookAt.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single)">
      <summary>
        <para>Set look at weights.</para>
      </summary>
      <param name="weight">(0-1) the global weight of the LookAt, multiplier for other parameters.</param>
      <param name="bodyWeight">(0-1) determines how much the body is involved in the LookAt.</param>
      <param name="headWeight">(0-1) determines how much the head is involved in the LookAt.</param>
      <param name="eyesWeight">(0-1) determines how much the eyes are involved in the LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single)">
      <summary>
        <para>Set look at weights.</para>
      </summary>
      <param name="weight">(0-1) the global weight of the LookAt, multiplier for other parameters.</param>
      <param name="bodyWeight">(0-1) determines how much the body is involved in the LookAt.</param>
      <param name="headWeight">(0-1) determines how much the head is involved in the LookAt.</param>
      <param name="eyesWeight">(0-1) determines how much the eyes are involved in the LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single,System.Single)">
      <summary>
        <para>Set look at weights.</para>
      </summary>
      <param name="weight">(0-1) the global weight of the LookAt, multiplier for other parameters.</param>
      <param name="bodyWeight">(0-1) determines how much the body is involved in the LookAt.</param>
      <param name="headWeight">(0-1) determines how much the head is involved in the LookAt.</param>
      <param name="eyesWeight">(0-1) determines how much the eyes are involved in the LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Set look at weights.</para>
      </summary>
      <param name="weight">(0-1) the global weight of the LookAt, multiplier for other parameters.</param>
      <param name="bodyWeight">(0-1) determines how much the body is involved in the LookAt.</param>
      <param name="headWeight">(0-1) determines how much the head is involved in the LookAt.</param>
      <param name="eyesWeight">(0-1) determines how much the eyes are involved in the LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Set look at weights.</para>
      </summary>
      <param name="weight">(0-1) the global weight of the LookAt, multiplier for other parameters.</param>
      <param name="bodyWeight">(0-1) determines how much the body is involved in the LookAt.</param>
      <param name="headWeight">(0-1) determines how much the head is involved in the LookAt.</param>
      <param name="eyesWeight">(0-1) determines how much the eyes are involved in the LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 means the character is completely unrestrained in motion, 1.0 means he's completely clamped (look at becomes impossible), and 0.5 means he'll be able to move on half of the possible range (180 degrees).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetQuaternion(System.String,UnityEngine.Quaternion)">
      <summary>
        <para>Sets the value of a quaternion parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetQuaternion(System.Int32,UnityEngine.Quaternion)">
      <summary>
        <para>Sets the value of a quaternion parameter.</para>
      </summary>
      <param name="id">Of the parameter. The id is generated using Animator::StringToHash.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTarget(UnityEngine.AvatarTarget,System.Single)">
      <summary>
        <para>Sets an AvatarTarget and a targetNormalizedTime for the current state.</para>
      </summary>
      <param name="targetIndex">The avatar body part that is queried.</param>
      <param name="targetNormalizedTime">The current state Time that is queried.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTrigger(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetTrigger(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Animator.SetVector(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Sets the value of a vector parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetVector(System.Int32,UnityEngine.Vector3)">
      <summary>
        <para>Sets the value of a vector parameter.</para>
      </summary>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
      <param name="value">The new value for the parameter.</param>
    </member>
    <member name="M:UnityEngine.Animator.StartPlayback">
      <summary>
        <para>Sets the animator in playback mode.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.StartRecording(System.Int32)">
      <summary>
        <para>Sets the animator in recording mode, and allocates a circular buffer of size frameCount.</para>
      </summary>
      <param name="frameCount">The number of frames (updates) that will be recorded. If frameCount is 0, the recording will continue until the user calls StopRecording. The maximum value for frameCount is 10000.</param>
    </member>
    <member name="M:UnityEngine.Animator.StopPlayback">
      <summary>
        <para>Stops the animator playback mode. When playback stops, the avatar resumes getting control from game logic.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.StopRecording">
      <summary>
        <para>Stops animator record mode.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.StringToHash(System.String)">
      <summary>
        <para>Generates an parameter id from a string.</para>
      </summary>
      <param name="name">The string to convert to Id.</param>
    </member>
    <member name="M:UnityEngine.Animator.Update(System.Single)">
      <summary>
        <para>Evaluates the animator based on deltaTime.</para>
      </summary>
      <param name="deltaTime">The time delta.</param>
    </member>
    <member name="T:UnityEngine.AnimatorClipInfo">
      <summary>
        <para>Information about clip being played and blended by the Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorClipInfo.clip">
      <summary>
        <para>Returns the animation clip played by the Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorClipInfo.weight">
      <summary>
        <para>Returns the blending weight used by the Animator to blend this clip.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorControllerParameter">
      <summary>
        <para>Used to communicate between scripting and the controller. Some parameters can be set in scripting and used by the controller, while other parameters are based on Custom Curves in Animation Clips and can be sampled using the scripting API.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.defaultBool">
      <summary>
        <para>The default bool value for the parameter.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.defaultFloat">
      <summary>
        <para>The default float value for the parameter.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.defaultInt">
      <summary>
        <para>The default int value for the parameter.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.name">
      <summary>
        <para>The name of the parameter.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.nameHash">
      <summary>
        <para>Returns the hash of the parameter based on its name.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.type">
      <summary>
        <para>The type of the parameter.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorControllerParameterType">
      <summary>
        <para>The type of the parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Bool">
      <summary>
        <para>Boolean type parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Float">
      <summary>
        <para>Float type parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Int">
      <summary>
        <para>Int type parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Trigger">
      <summary>
        <para>Trigger type parameter.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorCullingMode">
      <summary>
        <para>Culling mode for the Animator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorCullingMode.AlwaysAnimate">
      <summary>
        <para>Always animate the entire character. Object is animated even when offscreen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorCullingMode.CullCompletely">
      <summary>
        <para>Animation is completely disabled when renderers are not visible.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorCullingMode.CullUpdateTransforms">
      <summary>
        <para>Retarget, IK and write of Transforms are disabled when renderers are not visible.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorOverrideController">
      <summary>
        <para>Interface to control Animator Override Controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.clips">
      <summary>
        <para>Returns the list of orignal Animation Clip from the controller and their override Animation Clip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.overridesCount">
      <summary>
        <para>Returns the count of overrides.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.runtimeAnimatorController">
      <summary>
        <para>The Runtime Animator Controller that the Animator Override Controller overrides.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.ApplyOverrides(System.Collections.Generic.IList`1&lt;System.Collections.Generic.KeyValuePair`2&lt;UnityEngine.AnimationClip,UnityEngine.AnimationClip&gt;&gt;)">
      <summary>
        <para>Applies the list of overrides on this Animator Override Controller.</para>
      </summary>
      <param name="overrides">Overrides list to apply.</param>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.#ctor">
      <summary>
        <para>Creates an empty Animator Override Controller.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.#ctor(UnityEngine.RuntimeAnimatorController)">
      <summary>
        <para>Creates an Animator Override Controller that overrides controller.</para>
      </summary>
      <param name="controller">Runtime Animator Controller to override.</param>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.GetOverrides(System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;UnityEngine.AnimationClip,UnityEngine.AnimationClip&gt;&gt;)">
      <summary>
        <para>Gets the list of Animation Clip overrides currently defined in this Animator Override Controller.</para>
      </summary>
      <param name="overrides">Array to receive results.</param>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.this">
      <summary>
        <para>Returns either the overriding Animation Clip if set or the original Animation Clip named name.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.this">
      <summary>
        <para>Returns either the overriding Animation Clip if set or the original Animation Clip named name.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorRecorderMode">
      <summary>
        <para>The mode of the Animator's recorder.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorRecorderMode.Offline">
      <summary>
        <para>The Animator recorder is offline.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorRecorderMode.Playback">
      <summary>
        <para>The Animator recorder is in Playback.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorRecorderMode.Record">
      <summary>
        <para>The Animator recorder is in Record.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorStateInfo">
      <summary>
        <para>Information about the current or next state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.fullPathHash">
      <summary>
        <para>The full path hash for this state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.length">
      <summary>
        <para>Current duration of the state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.loop">
      <summary>
        <para>Is the state looping.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.nameHash">
      <summary>
        <para>The hashed name of the State.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.normalizedTime">
      <summary>
        <para>Normalized time of the State.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.shortNameHash">
      <summary>
        <para>The hash is generated using Animator::StringToHash. The string to pass doest not include the parent layer's name.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.speed">
      <summary>
        <para>The playback speed of the animation. 1 is the normal playback speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.speedMultiplier">
      <summary>
        <para>The speed multiplier for this state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.tagHash">
      <summary>
        <para>The Tag of the State.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorStateInfo.IsName(System.String)">
      <summary>
        <para>Does name match the name of the active state in the statemachine?</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AnimatorStateInfo.IsTag(System.String)">
      <summary>
        <para>Does tag match the tag of the active state in the statemachine.</para>
      </summary>
      <param name="tag"></param>
    </member>
    <member name="T:UnityEngine.AnimatorTransitionInfo">
      <summary>
        <para>Information about the current transition.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.anyState">
      <summary>
        <para>Returns true if the transition is from an AnyState node, or from Animator.CrossFade().</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.fullPathHash">
      <summary>
        <para>The unique name of the Transition.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.nameHash">
      <summary>
        <para>The simplified name of the Transition.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.normalizedTime">
      <summary>
        <para>Normalized time of the Transition.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.userNameHash">
      <summary>
        <para>The user-specified name of the Transition.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorTransitionInfo.IsName(System.String)">
      <summary>
        <para>Does name match the name of the active Transition.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AnimatorTransitionInfo.IsUserName(System.String)">
      <summary>
        <para>Does userName match the name of the active Transition.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="T:UnityEngine.AnimatorUpdateMode">
      <summary>
        <para>The update mode of the Animator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorUpdateMode.AnimatePhysics">
      <summary>
        <para>Updates the animator during the physic loop in order to have the animation system synchronized with the physics engine.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorUpdateMode.Normal">
      <summary>
        <para>Normal update of the animator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorUpdateMode.UnscaledTime">
      <summary>
        <para>Animator updates independently of Time.timeScale.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorUtility">
      <summary>
        <para>Various utilities for animator manipulation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorUtility.DeoptimizeTransformHierarchy(UnityEngine.GameObject)">
      <summary>
        <para>This function will recreate all transform hierarchy under GameObject.</para>
      </summary>
      <param name="go">GameObject to Deoptimize.</param>
    </member>
    <member name="M:UnityEngine.AnimatorUtility.OptimizeTransformHierarchy(UnityEngine.GameObject,System.String[])">
      <summary>
        <para>This function will remove all transform hierarchy under GameObject, the animator will write directly transform matrices into the skin mesh matrices saving alot of CPU cycles.</para>
      </summary>
      <param name="go">GameObject to Optimize.</param>
      <param name="exposedTransforms">List of transform name to expose.</param>
    </member>
    <member name="T:UnityEngine.AnisotropicFiltering">
      <summary>
        <para>Anisotropic filtering mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnisotropicFiltering.Disable">
      <summary>
        <para>Disable anisotropic filtering for all textures.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnisotropicFiltering.Enable">
      <summary>
        <para>Enable anisotropic filtering, as set for each texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnisotropicFiltering.ForceEnable">
      <summary>
        <para>Enable anisotropic filtering for all textures.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Apple.ReplayKit.ReplayKit">
      <summary>
        <para>ReplayKit is only available on certain iPhone, iPad and iPod Touch devices running iOS 9.0 or later.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.broadcastingAPIAvailable">
      <summary>
        <para>A Boolean that indicates whether ReplayKit broadcasting API is available (true means available) (Read Only).
Check the value of this property before making ReplayKit broadcasting API calls. On iOS versions prior to iOS 10, this property will have a value of false.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.broadcastURL">
      <summary>
        <para>A string property that contains an URL used to redirect the user to an on-going or completed broadcast (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.cameraEnabled">
      <summary>
        <para>Camera enabled status, true, if camera enabled, false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.isBroadcasting">
      <summary>
        <para>Boolean property that indicates whether a broadcast is currently in progress (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.isRecording">
      <summary>
        <para>A boolean that indicates whether ReplayKit is making a recording (where True means a recording is in progress). (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.lastError">
      <summary>
        <para>A string value of the last error incurred by the ReplayKit: Either 'Failed to get Screen Recorder' or 'No recording available'. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.microphoneEnabled">
      <summary>
        <para>Microphone enabled status, true, if microhone enabled, false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.recordingAvailable">
      <summary>
        <para>A boolean value that indicates that a new recording is available for preview (where True means available). (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.ReplayKit.ReplayKit.APIAvailable">
      <summary>
        <para>A boolean that indicates whether the ReplayKit API is available (where True means available). (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Apple.ReplayKit.ReplayKit.BroadcastStatusCallback">
      <summary>
        <para>Function called at the completion of broadcast startup.</para>
      </summary>
      <param name="hasStarted">This parameter will be true if the broadcast started successfully and false in the event of an error.</param>
      <param name="errorMessage">In the event of failure to start a broadcast, this parameter contains the associated error message.</param>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.Discard">
      <summary>
        <para>Discard the current recording.</para>
      </summary>
      <returns>
        <para>A boolean value of True if the recording was discarded successfully or False if an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.HideCameraPreview">
      <summary>
        <para>Hide the camera preview view.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.Preview">
      <summary>
        <para>Preview the current recording</para>
      </summary>
      <returns>
        <para>A boolean value of True if the video preview window opened successfully or False if an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.ShowCameraPreviewAt(System.Single,System.Single)">
      <summary>
        <para>Shows camera preview at coordinates posX and posY.</para>
      </summary>
      <param name="posX"></param>
      <param name="posY"></param>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.StartBroadcasting">
      <summary>
        <para>Initiates and starts a new broadcast
When StartBroadcast is called, user is presented with a broadcast provider selection screen, and then a broadcast setup screen. Once it is finished, a broadcast will be started, and the callback will be invoked.
It will also be invoked in case of any error.
        </para>
      </summary>
      <param name="callback">A callback for getting the status of broadcast initiation.</param>
      <param name="enableMicrophone">Enable or disable the microphone while broadcasting. Enabling the microphone allows you to include user commentary while broadcasting. The default value is false.</param>
      <param name="enableCamera">Enable or disable the camera while broadcasting. Enabling camera allows you to include user camera footage while broadcasting. The default value is false. To actually include camera footage in your broadcast, you also have to call ShowCameraPreviewAt as well to position the preview view.</param>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.StartRecording(System.Boolean,System.Boolean)">
      <summary>
        <para>Start a new recording.</para>
      </summary>
      <param name="enableMicrophone">Enable or disable the microphone while making a recording. Enabling the microphone allows you to include user commentary while recording. The default value is false.</param>
      <param name="enableCamera">Enable or disable the camera while making a recording. Enabling camera allows you to include user camera footage while recording. The default value is false. To actually include camera footage in your recording, you also have to call ShowCameraPreviewAt as well to position the preview view.</param>
      <returns>
        <para>A boolean value of True if recording started successfully or False if an error occurred.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.StopBroadcasting">
      <summary>
        <para>Stops current broadcast.
Will terminate currently on-going broadcast. If no broadcast is in progress, does nothing.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Apple.ReplayKit.ReplayKit.StopRecording">
      <summary>
        <para>Stop the current recording.</para>
      </summary>
      <returns>
        <para>A boolean value of True if recording stopped successfully or False if an error occurred.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Apple.TV.Remote">
      <summary>
        <para>A class for Apple TV remote input configuration.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.TV.Remote.allowExitToHome">
      <summary>
        <para>Configures how "Menu" button behaves on Apple TV Remote. If this property is set to true hitting "Menu" on Remote will exit to system home screen. When this property is false current application is responsible for handling "Menu" button. It is recommended to set this property to true on top level menus of your application.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.TV.Remote.allowRemoteRotation">
      <summary>
        <para>Configures if Apple TV Remote should autorotate all the inputs when Remote is being held in horizontal orientation. Default is false.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.TV.Remote.reportAbsoluteDpadValues">
      <summary>
        <para>Configures how touches are mapped to analog joystick axes in relative or absolute values. If set to true it will return +1 on Horizontal axis when very far right is being touched on Remote touch aread (and -1 when very left area is touched correspondingly). The same applies for Vertical axis too. When this property is set to false player should swipe instead of touching specific area of remote to generate Horizontal or Vertical input.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Apple.TV.Remote.touchesEnabled">
      <summary>
        <para>Disables Apple TV Remote touch propagation to Unity Input.touches API. Useful for 3rd party frameworks, which do not respect Touch.type == Indirect.
Default is false.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Application">
      <summary>
        <para>Access to application run-time data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.absoluteURL">
      <summary>
        <para>The absolute path to the web player data file (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.backgroundLoadingPriority">
      <summary>
        <para>Priority of background loading thread.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.buildGUID">
      <summary>
        <para>Returns a GUID for this build (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.cloudProjectId">
      <summary>
        <para>A unique cloud project identifier. It is unique for every project (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.companyName">
      <summary>
        <para>Return application company name (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.dataPath">
      <summary>
        <para>Contains the path to the game data folder (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.genuine">
      <summary>
        <para>Returns false if application is altered in any way after it was built.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.genuineCheckAvailable">
      <summary>
        <para>Returns true if application integrity can be confirmed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.identifier">
      <summary>
        <para>Returns application identifier at runtime. On Apple platforms this is the 'bundleIdentifier' saved in the info.plist file, on Android it's the 'package' from the AndroidManifest.xml. </para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.installerName">
      <summary>
        <para>Returns the name of the store or package that installed the application (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.installMode">
      <summary>
        <para>Returns application install mode (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.internetReachability">
      <summary>
        <para>Returns the type of Internet reachability currently possible on the device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isConsolePlatform">
      <summary>
        <para>Is the current Runtime platform a known console platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isEditor">
      <summary>
        <para>Are we running inside the Unity editor? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isFocused">
      <summary>
        <para>Whether the player currently has focus. Read-only.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isLoadingLevel">
      <summary>
        <para>Is some level being loaded? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isMobilePlatform">
      <summary>
        <para>Is the current Runtime platform a known mobile platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isPlaying">
      <summary>
        <para>Returns true when in any kind of player (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isShowingSplashScreen">
      <summary>
        <para>Checks whether splash screen is being shown.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.isWebPlayer">
      <summary>
        <para>Are we running inside a web player? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.levelCount">
      <summary>
        <para>The total number of levels available (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.loadedLevel">
      <summary>
        <para>The level index that was last loaded (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.loadedLevelName">
      <summary>
        <para>The name of the level that was last loaded (Read Only).</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Application.logMessageReceived(UnityEngine.Application/LogCallback)">
      <summary>
        <para>Event that is fired if a log message is received.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.Application.logMessageReceivedThreaded(UnityEngine.Application/LogCallback)">
      <summary>
        <para>Event that is fired if a log message is received.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.Application.lowMemory(UnityEngine.Application/LowMemoryCallback)">
      <summary>
        <para>This event occurs when a mobile device notifies of low memory. You can release other non-critical assets from memory in response to this in order to avoid the app being terminated. For example, textures audio clips or also loading smaller versions of such assets.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Application.persistentDataPath">
      <summary>
        <para>Contains the path to a persistent data directory (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.platform">
      <summary>
        <para>Returns the platform the game is running on (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.productName">
      <summary>
        <para>Returns application product name (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.runInBackground">
      <summary>
        <para>Should the player be running when the application is in the background?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.sandboxType">
      <summary>
        <para>Returns application running in sandbox (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.srcValue">
      <summary>
        <para>The path to the web player data file relative to the html file (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.stackTraceLogType">
      <summary>
        <para>Stack trace logging options. The default value is StackTraceLogType.ScriptOnly.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.streamedBytes">
      <summary>
        <para>How many bytes have we downloaded from the main unity web stream (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.streamingAssetsPath">
      <summary>
        <para>Contains the path to the StreamingAssets folder (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.systemLanguage">
      <summary>
        <para>The language the user's operating system is running in.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.targetFrameRate">
      <summary>
        <para>Instructs game to try to render at a specified frame rate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.temporaryCachePath">
      <summary>
        <para>Contains the path to a temporary data / cache directory (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.unityVersion">
      <summary>
        <para>The version of the Unity runtime used to play the content.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.version">
      <summary>
        <para>Returns application version number  (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Application.webSecurityEnabled">
      <summary>
        <para>Indicates whether Unity's webplayer security model is enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Application.AdvertisingIdentifierCallback">
      <summary>
        <para>Delegate method for fetching advertising ID.</para>
      </summary>
      <param name="advertisingId">Advertising ID.</param>
      <param name="trackingEnabled">Indicates whether user has chosen to limit ad tracking.</param>
      <param name="errorMsg">Error message.</param>
    </member>
    <member name="M:UnityEngine.Application.CancelQuit">
      <summary>
        <para>Cancels quitting the application. This is useful for showing a splash screen at the end of a game.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Application.CanStreamedLevelBeLoaded(System.Int32)">
      <summary>
        <para>Can the streamed level be loaded?</para>
      </summary>
      <param name="levelIndex"></param>
    </member>
    <member name="M:UnityEngine.Application.CanStreamedLevelBeLoaded(System.String)">
      <summary>
        <para>Can the streamed level be loaded?</para>
      </summary>
      <param name="levelName"></param>
    </member>
    <member name="M:UnityEngine.Application.CaptureScreenshot(System.String)">
      <summary>
        <para>Captures a screenshot at path filename as a PNG file.</para>
      </summary>
      <param name="filename">Pathname to save the screenshot file to.</param>
      <param name="superSize">Factor by which to increase resolution.</param>
    </member>
    <member name="M:UnityEngine.Application.CaptureScreenshot(System.String,System.Int32)">
      <summary>
        <para>Captures a screenshot at path filename as a PNG file.</para>
      </summary>
      <param name="filename">Pathname to save the screenshot file to.</param>
      <param name="superSize">Factor by which to increase resolution.</param>
    </member>
    <member name="M:UnityEngine.Application.ExternalCall(System.String,System.Object[])">
      <summary>
        <para>Calls a function in the web page that contains the WebGL Player.</para>
      </summary>
      <param name="functionName">Name of the function to call.</param>
      <param name="args">Array of arguments passed in the call.</param>
    </member>
    <member name="M:UnityEngine.Application.ExternalEval(System.String)">
      <summary>
        <para>Execution of a script function in the contained web page.</para>
      </summary>
      <param name="script">The Javascript function to call.</param>
    </member>
    <member name="M:UnityEngine.Application.GetBuildTags">
      <summary>
        <para>Returns an array of feature tags in use for this build (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Application.GetStackTraceLogType(UnityEngine.LogType)">
      <summary>
        <para>Get stack trace logging options. The default value is StackTraceLogType.ScriptOnly.</para>
      </summary>
      <param name="logType"></param>
    </member>
    <member name="M:UnityEngine.Application.GetStreamProgressForLevel(System.Int32)">
      <summary>
        <para>How far has the download progressed? [0...1].</para>
      </summary>
      <param name="levelIndex"></param>
    </member>
    <member name="M:UnityEngine.Application.GetStreamProgressForLevel(System.String)">
      <summary>
        <para>How far has the download progressed? [0...1].</para>
      </summary>
      <param name="levelName"></param>
    </member>
    <member name="M:UnityEngine.Application.HasProLicense">
      <summary>
        <para>Is Unity activated with the Pro license?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Application.HasUserAuthorization(UnityEngine.UserAuthorization)">
      <summary>
        <para>Check if the user has authorized use of the webcam or microphone in the Web Player.</para>
      </summary>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevel(System.Int32)">
      <summary>
        <para>Loads the level by its name or index.</para>
      </summary>
      <param name="index">The level to load.</param>
      <param name="name">The name of the level to load.</param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevel(System.String)">
      <summary>
        <para>Loads the level by its name or index.</para>
      </summary>
      <param name="index">The level to load.</param>
      <param name="name">The name of the level to load.</param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAdditive(System.Int32)">
      <summary>
        <para>Loads a level additively.</para>
      </summary>
      <param name="index"></param>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAdditive(System.String)">
      <summary>
        <para>Loads a level additively.</para>
      </summary>
      <param name="index"></param>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAdditiveAsync(System.Int32)">
      <summary>
        <para>Loads the level additively and asynchronously in the background.</para>
      </summary>
      <param name="index"></param>
      <param name="levelName"></param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAdditiveAsync(System.String)">
      <summary>
        <para>Loads the level additively and asynchronously in the background.</para>
      </summary>
      <param name="index"></param>
      <param name="levelName"></param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAsync(System.Int32)">
      <summary>
        <para>Loads the level asynchronously in the background.</para>
      </summary>
      <param name="index"></param>
      <param name="levelName"></param>
    </member>
    <member name="M:UnityEngine.Application.LoadLevelAsync(System.String)">
      <summary>
        <para>Loads the level asynchronously in the background.</para>
      </summary>
      <param name="index"></param>
      <param name="levelName"></param>
    </member>
    <member name="T:UnityEngine.Application.LogCallback">
      <summary>
        <para>Use this delegate type with Application.logMessageReceived or Application.logMessageReceivedThreaded to monitor what gets logged.</para>
      </summary>
      <param name="condition"></param>
      <param name="stackTrace"></param>
      <param name="type"></param>
    </member>
    <member name="T:UnityEngine.Application.LowMemoryCallback">
      <summary>
        <para>This is the delegate function when a mobile device notifies of low memory.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Application.OpenURL(System.String)">
      <summary>
        <para>Opens the url in a browser.</para>
      </summary>
      <param name="url"></param>
    </member>
    <member name="M:UnityEngine.Application.Quit">
      <summary>
        <para>Quits the player application.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Application.RequestAdvertisingIdentifierAsync(UnityEngine.Application/AdvertisingIdentifierCallback)">
      <summary>
        <para>Request advertising ID for iOS, Android and Windows Store.</para>
      </summary>
      <param name="delegateMethod">Delegate method.</param>
      <returns>
        <para>Returns true if successful, or false for platforms which do not support Advertising Identifiers. In this case, the delegate method is not invoked.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Application.RequestUserAuthorization(UnityEngine.UserAuthorization)">
      <summary>
        <para>Request authorization to use the webcam or microphone in the Web Player.</para>
      </summary>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Application.SetStackTraceLogType(UnityEngine.LogType,UnityEngine.StackTraceLogType)">
      <summary>
        <para>Set stack trace logging options. The default value is StackTraceLogType.ScriptOnly.</para>
      </summary>
      <param name="logType"></param>
      <param name="stackTraceType"></param>
    </member>
    <member name="M:UnityEngine.Application.Unload">
      <summary>
        <para>Unloads the Unity runtime.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Application.UnloadLevel(System.Int32)">
      <summary>
        <para>Unloads all GameObject associated with the given scene. Note that assets are currently not unloaded, in order to free up asset memory call Resources.UnloadAllUnusedAssets.</para>
      </summary>
      <param name="index">Index of the scene in the PlayerSettings to unload.</param>
      <param name="scenePath">Name of the scene to Unload.</param>
      <returns>
        <para>Return true if the scene is unloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Application.UnloadLevel(System.String)">
      <summary>
        <para>Unloads all GameObject associated with the given scene. Note that assets are currently not unloaded, in order to free up asset memory call Resources.UnloadAllUnusedAssets.</para>
      </summary>
      <param name="index">Index of the scene in the PlayerSettings to unload.</param>
      <param name="scenePath">Name of the scene to Unload.</param>
      <returns>
        <para>Return true if the scene is unloaded.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ApplicationInstallMode">
      <summary>
        <para>Application installation mode (Read Only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationInstallMode.Adhoc">
      <summary>
        <para>Application installed via ad hoc distribution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationInstallMode.DeveloperBuild">
      <summary>
        <para>Application installed via developer build.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationInstallMode.Editor">
      <summary>
        <para>Application running in editor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationInstallMode.Enterprise">
      <summary>
        <para>Application installed via enterprise distribution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationInstallMode.Store">
      <summary>
        <para>Application installed via online store.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationInstallMode.Unknown">
      <summary>
        <para>Application install mode unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ApplicationSandboxType">
      <summary>
        <para>Application sandbox type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationSandboxType.NotSandboxed">
      <summary>
        <para>Application not running in a sandbox.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationSandboxType.SandboxBroken">
      <summary>
        <para>Application is running in broken sandbox.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationSandboxType.Sandboxed">
      <summary>
        <para>Application is running in a sandbox.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ApplicationSandboxType.Unknown">
      <summary>
        <para>Application sandbox type is unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AreaEffector2D">
      <summary>
        <para>Applies forces within an area.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.angularDrag">
      <summary>
        <para>The angular drag to apply to rigid-bodies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.drag">
      <summary>
        <para>The linear drag to apply to rigid-bodies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceAngle">
      <summary>
        <para>The angle of the force to be applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceMagnitude">
      <summary>
        <para>The magnitude of the force to be applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceTarget">
      <summary>
        <para>The target for where the effector applies any force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceVariation">
      <summary>
        <para>The variation of the magnitude of the force to be applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.useGlobalAngle">
      <summary>
        <para>Should the forceAngle use global space?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AssemblyIsEditorAssembly">
      <summary>
        <para>Assembly level attribute. Any classes in an assembly with this attribute will be considered to be Editor Classes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssemblyIsEditorAssembly.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Assertions.Assert">
      <summary>
        <para>The Assert class contains assertion methods for setting invariants in the code.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Assertions.Assert.raiseExceptions">
      <summary>
        <para>Should an exception be thrown on a failure.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreApproximatelyEqual(System.Single,System.Single)">
      <summary>
        <para>Asserts that the values are approximately equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.

Note: Every time you call the method with tolerance specified, a new instance of Assertions.Comparers.FloatComparer is created. For performance reasons you might want to instance your own comparer and pass it to the AreEqual method. If the tolerance is not specifies, a default comparer is used and the issue does not occur.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreApproximatelyEqual(System.Single,System.Single,System.String)">
      <summary>
        <para>Asserts that the values are approximately equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.

Note: Every time you call the method with tolerance specified, a new instance of Assertions.Comparers.FloatComparer is created. For performance reasons you might want to instance your own comparer and pass it to the AreEqual method. If the tolerance is not specifies, a default comparer is used and the issue does not occur.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreApproximatelyEqual(System.Single,System.Single,System.Single)">
      <summary>
        <para>Asserts that the values are approximately equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.

Note: Every time you call the method with tolerance specified, a new instance of Assertions.Comparers.FloatComparer is created. For performance reasons you might want to instance your own comparer and pass it to the AreEqual method. If the tolerance is not specifies, a default comparer is used and the issue does not occur.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreApproximatelyEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>
        <para>Asserts that the values are approximately equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.

Note: Every time you call the method with tolerance specified, a new instance of Assertions.Comparers.FloatComparer is created. For performance reasons you might want to instance your own comparer and pass it to the AreEqual method. If the tolerance is not specifies, a default comparer is used and the issue does not occur.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreEqual(T,T)">
      <summary>
        <para>Asserts that the values are equal. If no comparer is specified, EqualityComparer&lt;T&gt;.Default is used.</para>
      </summary>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
      <param name="comparer"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreEqual(T,T,System.String)">
      <summary>
        <para>Asserts that the values are equal. If no comparer is specified, EqualityComparer&lt;T&gt;.Default is used.</para>
      </summary>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
      <param name="comparer"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreEqual(T,T,System.String,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)">
      <summary>
        <para>Asserts that the values are equal. If no comparer is specified, EqualityComparer&lt;T&gt;.Default is used.</para>
      </summary>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
      <param name="comparer"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotApproximatelyEqual(System.Single,System.Single)">
      <summary>
        <para>Asserts that the values are approximately not equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotApproximatelyEqual(System.Single,System.Single,System.String)">
      <summary>
        <para>Asserts that the values are approximately not equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotApproximatelyEqual(System.Single,System.Single,System.Single)">
      <summary>
        <para>Asserts that the values are approximately not equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotApproximatelyEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>
        <para>Asserts that the values are approximately not equal. An absolute error check is used for approximate equality check (|a-b| &lt; tolerance). Default tolerance is 0.00001f.</para>
      </summary>
      <param name="tolerance">Tolerance of approximation.</param>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotEqual(T,T)">
      <summary>
        <para>Asserts that the values are not equal.</para>
      </summary>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
      <param name="comparer"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotEqual(T,T,System.String)">
      <summary>
        <para>Asserts that the values are not equal.</para>
      </summary>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
      <param name="comparer"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.AreNotEqual(T,T,System.String,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)">
      <summary>
        <para>Asserts that the values are not equal.</para>
      </summary>
      <param name="expected"></param>
      <param name="actual"></param>
      <param name="message"></param>
      <param name="comparer"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsFalse(System.Boolean)">
      <summary>
        <para>Asserts that the condition is false.</para>
      </summary>
      <param name="condition"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsFalse(System.Boolean,System.String)">
      <summary>
        <para>Asserts that the condition is false.</para>
      </summary>
      <param name="condition"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsNotNull(T)">
      <summary>
        <para>Asserts that the value is not null.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsNotNull(T,System.String)">
      <summary>
        <para>Asserts that the value is not null.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsNull(T)">
      <summary>
        <para>Asserts that the value is null.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsNull(T,System.String)">
      <summary>
        <para>Asserts that the value is null.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsTrue(System.Boolean)">
      <summary>
        <para>Asserts that the condition is true.</para>
      </summary>
      <param name="condition"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Assert.IsTrue(System.Boolean,System.String)">
      <summary>
        <para>Asserts that the condition is true.</para>
      </summary>
      <param name="condition"></param>
      <param name="message"></param>
    </member>
    <member name="T:UnityEngine.Assertions.AssertionException">
      <summary>
        <para>An exception that is thrown on a failure. Assertions.Assert._raiseExceptions needs to be set to true.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Assertions.Comparers.FloatComparer">
      <summary>
        <para>A float comparer used by Assertions.Assert performing approximate comparison.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Assertions.Comparers.FloatComparer.kEpsilon">
      <summary>
        <para>Default epsilon used by the comparer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Assertions.Comparers.FloatComparer.s_ComparerWithDefaultTolerance">
      <summary>
        <para>Default instance of a comparer class with deafult error epsilon and absolute error check.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Assertions.Comparers.FloatComparer.AreEqual(System.Single,System.Single,System.Single)">
      <summary>
        <para>Performs equality check with absolute error check.</para>
      </summary>
      <param name="expected">Expected value.</param>
      <param name="actual">Actual value.</param>
      <param name="error">Comparison error.</param>
      <returns>
        <para>Result of the comparison.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Assertions.Comparers.FloatComparer.AreEqualRelative(System.Single,System.Single,System.Single)">
      <summary>
        <para>Performs equality check with relative error check.</para>
      </summary>
      <param name="expected">Expected value.</param>
      <param name="actual">Actual value.</param>
      <param name="error">Comparison error.</param>
      <returns>
        <para>Result of the comparison.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Assertions.Comparers.FloatComparer.#ctor">
      <summary>
        <para>Creates an instance of the comparer.</para>
      </summary>
      <param name="relative">Should a relative check be used when comparing values? By default, an absolute check will be used.</param>
      <param name="error">Allowed comparison error. By default, the FloatComparer.kEpsilon is used.</param>
    </member>
    <member name="M:UnityEngine.Assertions.Comparers.FloatComparer.#ctor(System.Boolean)">
      <summary>
        <para>Creates an instance of the comparer.</para>
      </summary>
      <param name="relative">Should a relative check be used when comparing values? By default, an absolute check will be used.</param>
      <param name="error">Allowed comparison error. By default, the FloatComparer.kEpsilon is used.</param>
    </member>
    <member name="M:UnityEngine.Assertions.Comparers.FloatComparer.#ctor(System.Single)">
      <summary>
        <para>Creates an instance of the comparer.</para>
      </summary>
      <param name="relative">Should a relative check be used when comparing values? By default, an absolute check will be used.</param>
      <param name="error">Allowed comparison error. By default, the FloatComparer.kEpsilon is used.</param>
    </member>
    <member name="M:UnityEngine.Assertions.Comparers.FloatComparer.#ctor(System.Single,System.Boolean)">
      <summary>
        <para>Creates an instance of the comparer.</para>
      </summary>
      <param name="relative">Should a relative check be used when comparing values? By default, an absolute check will be used.</param>
      <param name="error">Allowed comparison error. By default, the FloatComparer.kEpsilon is used.</param>
    </member>
    <member name="T:UnityEngine.Assertions.Must.MustExtensions">
      <summary>
        <para>An extension class that serves as a wrapper for the Assert class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeApproximatelyEqual(System.Single,System.Single)">
      <summary>
        <para>An extension method for Assertions.Assert.AreApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeApproximatelyEqual(System.Single,System.Single,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeApproximatelyEqual(System.Single,System.Single,System.Single)">
      <summary>
        <para>An extension method for Assertions.Assert.AreApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeApproximatelyEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeEqual(T,T)">
      <summary>
        <para>An extension method for Assertions.Assert.AreEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeEqual(T,T,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeFalse(System.Boolean)">
      <summary>
        <para>An extension method for Assertions.Assert.IsFalse.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeFalse(System.Boolean,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.IsFalse.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeNull(T)">
      <summary>
        <para>An extension method for Assertions.Assert.IsNull.</para>
      </summary>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeNull(T,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.IsNull.</para>
      </summary>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeTrue(System.Boolean)">
      <summary>
        <para>An extension method for Assertions.Assert.IsTrue.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustBeTrue(System.Boolean,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.IsTrue.</para>
      </summary>
      <param name="value"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeApproximatelyEqual(System.Single,System.Single)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeApproximatelyEqual(System.Single,System.Single,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeApproximatelyEqual(System.Single,System.Single,System.Single)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeApproximatelyEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotApproximatelyEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
      <param name="tolerance"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeEqual(T,T)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeEqual(T,T,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotEqual.</para>
      </summary>
      <param name="actual"></param>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeNull(T)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotNull.</para>
      </summary>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="M:UnityEngine.Assertions.Must.MustExtensions.MustNotBeNull(T,System.String)">
      <summary>
        <para>An extension method for Assertions.Assert.AreNotNull.</para>
      </summary>
      <param name="expected"></param>
      <param name="message"></param>
    </member>
    <member name="T:UnityEngine.AssetBundle">
      <summary>
        <para>AssetBundles let you stream additional assets via the WWW class and instantiate them at runtime. AssetBundles are created via BuildPipeline.BuildAssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AssetBundle.isStreamedSceneAssetBundle">
      <summary>
        <para>Return true if the AssetBundle is a streamed scene AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AssetBundle.mainAsset">
      <summary>
        <para>Main asset that was supplied when building the asset bundle (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.Contains(System.String)">
      <summary>
        <para>Check if an AssetBundle contains a specific object.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.CreateFromFile(System.String)">
      <summary>
        <para>Loads an asset bundle from a disk.</para>
      </summary>
      <param name="path">Path of the file on disk

See Also: WWW.assetBundle, WWW.LoadFromCacheOrDownload.</param>
    </member>
    <member name="M:UnityEngine.AssetBundle.CreateFromMemory(System.Byte[])">
      <summary>
        <para>Asynchronously create an AssetBundle from a memory region.</para>
      </summary>
      <param name="binary"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.CreateFromMemoryImmediate(System.Byte[])">
      <summary>
        <para>Synchronously create an AssetBundle from a memory region.</para>
      </summary>
      <param name="binary">Array of bytes with the AssetBundle data.</param>
    </member>
    <member name="M:UnityEngine.AssetBundle.GetAllAssetNames">
      <summary>
        <para>Return all asset names in the AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.GetAllScenePaths">
      <summary>
        <para>Return all the scene asset paths (paths to *.unity assets) in the AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAllAssets(System.Type)">
      <summary>
        <para>Loads all assets contained in the asset bundle that inherit from type.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAllAssets">
      <summary>
        <para>Loads all assets contained in the asset bundle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAllAssets">
      <summary>
        <para>Loads all assets contained in the asset bundle that inherit from type T.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAllAssetsAsync">
      <summary>
        <para>Loads all assets contained in the asset bundle asynchronously.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAllAssetsAsync">
      <summary>
        <para>Loads all assets contained in the asset bundle that inherit from T asynchronously.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAllAssetsAsync(System.Type)">
      <summary>
        <para>Loads all assets contained in the asset bundle that inherit from type asynchronously.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAsset(System.String)">
      <summary>
        <para>Loads asset with name from the bundle.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAsset(System.String,System.Type)">
      <summary>
        <para>Loads asset with name of a given type from the bundle.</para>
      </summary>
      <param name="name"></param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAsset(System.String)">
      <summary>
        <para>Loads asset with name of type T from the bundle.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetAsync(System.String)">
      <summary>
        <para>Asynchronously loads asset with name from the bundle.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetAsync(System.String)">
      <summary>
        <para>Asynchronously loads asset with name of a given T from the bundle.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetAsync(System.String,System.Type)">
      <summary>
        <para>Asynchronously loads asset with name of a given type from the bundle.</para>
      </summary>
      <param name="name"></param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetWithSubAssets(System.String)">
      <summary>
        <para>Loads asset and sub assets with name from the bundle.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetWithSubAssets(System.String,System.Type)">
      <summary>
        <para>Loads asset and sub assets with name of a given type from the bundle.</para>
      </summary>
      <param name="name"></param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetWithSubAssets(System.String)">
      <summary>
        <para>Loads asset and sub assets with name of type T from the bundle.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetWithSubAssetsAsync(System.String)">
      <summary>
        <para>Loads asset with sub assets with name from the bundle asynchronously.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetWithSubAssetsAsync(System.String)">
      <summary>
        <para>Loads asset with sub assets with name of type T from the bundle asynchronously.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadAssetWithSubAssetsAsync(System.String,System.Type)">
      <summary>
        <para>Loads asset with sub assets with name of a given type from the bundle asynchronously.</para>
      </summary>
      <param name="name"></param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadFromFile(System.String,System.UInt32,System.UInt64)">
      <summary>
        <para>Synchronously loads an AssetBundle from a file on disk.</para>
      </summary>
      <param name="path">Path of the file on disk.</param>
      <param name="crc">An optional CRC-32 checksum of the uncompressed content. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match.</param>
      <param name="offset">An optional byte offset. This value specifies where to start reading the AssetBundle from.</param>
      <returns>
        <para>Loaded AssetBundle object or null if failed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadFromFile">
      <summary>
        <para>Synchronously loads an AssetBundle from a file on disk.</para>
      </summary>
      <param name="path">Path of the file on disk.</param>
      <param name="crc">An optional CRC-32 checksum of the uncompressed content. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match.</param>
      <param name="offset">An optional byte offset. This value specifies where to start reading the AssetBundle from.</param>
      <returns>
        <para>Loaded AssetBundle object or null if failed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadFromFileAsync(System.String,System.UInt32,System.UInt64)">
      <summary>
        <para>Asynchronously loads an AssetBundle from a file on disk.</para>
      </summary>
      <param name="path">Path of the file on disk.</param>
      <param name="crc">An optional CRC-32 checksum of the uncompressed content. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match.</param>
      <param name="offset">An optional byte offset. This value specifies where to start reading the AssetBundle from.</param>
      <returns>
        <para>Asynchronous create request for an AssetBundle. Use AssetBundleCreateRequest.assetBundle property to get an AssetBundle once it is loaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadFromMemory(System.Byte[],System.UInt32)">
      <summary>
        <para>Synchronously create an AssetBundle from a memory region.</para>
      </summary>
      <param name="binary">Array of bytes with the AssetBundle data.</param>
      <param name="crc">An optional CRC-32 checksum of the uncompressed content. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match.</param>
      <returns>
        <para>Loaded AssetBundle object or null if failed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundle.LoadFromMemoryAsync(System.Byte[],System.UInt32)">
      <summary>
        <para>Asynchronously create an AssetBundle from a memory region.</para>
      </summary>
      <param name="binary">Array of bytes with the AssetBundle data.</param>
      <param name="crc">An optional CRC-32 checksum of the uncompressed content. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match.</param>
      <returns>
        <para>Asynchronous create request for an AssetBundle. Use AssetBundleCreateRequest.assetBundle property to get an AssetBundle once it is loaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundle.Unload(System.Boolean)">
      <summary>
        <para>Unloads all assets in the bundle.</para>
      </summary>
      <param name="unloadAllLoadedObjects"></param>
    </member>
    <member name="T:UnityEngine.AssetBundleCreateRequest">
      <summary>
        <para>Asynchronous create request for an AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AssetBundleCreateRequest.assetBundle">
      <summary>
        <para>Asset object being loaded (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AssetBundleManifest">
      <summary>
        <para>Manifest for all the AssetBundles in the build.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AssetBundleManifest.GetAllAssetBundles">
      <summary>
        <para>Get all the AssetBundles in the manifest.</para>
      </summary>
      <returns>
        <para>An array of asset bundle names.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundleManifest.GetAllAssetBundlesWithVariant">
      <summary>
        <para>Get all the AssetBundles with variant in the manifest.</para>
      </summary>
      <returns>
        <para>An array of asset bundle names.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundleManifest.GetAllDependencies(System.String)">
      <summary>
        <para>Get all the dependent AssetBundles for the given AssetBundle.</para>
      </summary>
      <param name="assetBundleName">Name of the asset bundle.</param>
    </member>
    <member name="M:UnityEngine.AssetBundleManifest.GetAssetBundleHash(System.String)">
      <summary>
        <para>Get the hash for the given AssetBundle.</para>
      </summary>
      <param name="assetBundleName">Name of the asset bundle.</param>
      <returns>
        <para>The 128-bit hash for the asset bundle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AssetBundleManifest.GetDirectDependencies(System.String)">
      <summary>
        <para>Get the direct dependent AssetBundles for the given AssetBundle.</para>
      </summary>
      <param name="assetBundleName">Name of the asset bundle.</param>
      <returns>
        <para>Array of asset bundle names this asset bundle depends on.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AssetBundleRequest">
      <summary>
        <para>Asynchronous load request from an AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AssetBundleRequest.allAssets">
      <summary>
        <para>Asset objects with sub assets being loaded. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AssetBundleRequest.asset">
      <summary>
        <para>Asset object being loaded (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AsyncOperation">
      <summary>
        <para>Asynchronous operation coroutine.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AsyncOperation.allowSceneActivation">
      <summary>
        <para>Allow scenes to be activated as soon as it is ready.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AsyncOperation.isDone">
      <summary>
        <para>Has the operation finished? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AsyncOperation.priority">
      <summary>
        <para>Priority lets you tweak in which order async operation calls will be performed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AsyncOperation.progress">
      <summary>
        <para>What's the operation's progress. (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixer">
      <summary>
        <para>AudioMixer asset.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Audio.AudioMixer.outputAudioMixerGroup">
      <summary>
        <para>Routing target.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Audio.AudioMixer.updateMode">
      <summary>
        <para>How time should progress for this AudioMixer. Used during Snapshot transitions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.ClearFloat(System.String)">
      <summary>
        <para>Resets an exposed parameter to its initial value.</para>
      </summary>
      <param name="name">Exposed parameter.</param>
      <returns>
        <para>Returns false if the parameter was not found or could not be set.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.FindMatchingGroups(System.String)">
      <summary>
        <para>Connected groups in the mixer form a path from the mixer's master group to the leaves. This path has the format "Master GroupChild of Master GroupGrandchild of Master Group", so to find the grandchild group in this example, a valid search string would be for instance "randchi" which would return exactly one group while "hild" or "oup/" would return 2 different groups.</para>
      </summary>
      <param name="subPath">Sub-string of the paths to be matched.</param>
      <returns>
        <para>Groups in the mixer whose paths match the specified search path.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.FindSnapshot(System.String)">
      <summary>
        <para>The name must be an exact match.</para>
      </summary>
      <param name="name">Name of snapshot object to be returned.</param>
      <returns>
        <para>The snapshot identified by the name.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.GetFloat(System.String,System.Single&amp;)">
      <summary>
        <para>Returns the value of the exposed parameter specified. If the parameter doesn't exist the function returns false. Prior to calling SetFloat and after ClearFloat has been called on this parameter the value returned will be that of the current snapshot or snapshot transition.</para>
      </summary>
      <param name="name">Name of exposed parameter.</param>
      <param name="value">Return value of exposed parameter.</param>
      <returns>
        <para>Returns false if the exposed parameter specified doesn't exist.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.SetFloat(System.String,System.Single)">
      <summary>
        <para>Sets the value of the exposed parameter specified. When a parameter is exposed, it is not controlled by mixer snapshots and can therefore only be changed via this function.</para>
      </summary>
      <param name="name">Name of exposed parameter.</param>
      <param name="value">New value of exposed parameter.</param>
      <returns>
        <para>Returns false if the exposed parameter was not found or snapshots are currently being edited.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.TransitionToSnapshots(UnityEngine.Audio.AudioMixerSnapshot[],System.Single[],System.Single)">
      <summary>
        <para>Transitions to a weighted mixture of the snapshots specified. This can be used for games that specify the game state as a continuum between states or for interpolating snapshots from a triangulated map location.</para>
      </summary>
      <param name="snapshots">The set of snapshots to be mixed.</param>
      <param name="weights">The mix weights for the snapshots specified.</param>
      <param name="timeToReach">Relative time after which the mixture should be reached from any current state.</param>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerGroup">
      <summary>
        <para>Object representing a group in the mixer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerSnapshot">
      <summary>
        <para>Object representing a snapshot in the mixer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixerSnapshot.TransitionTo(System.Single)">
      <summary>
        <para>Performs an interpolated transition towards this snapshot over the time interval specified.</para>
      </summary>
      <param name="timeToReach">Relative time after which this snapshot should be reached from any current state.</param>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerUpdateMode">
      <summary>
        <para>The mode in which an AudioMixer should update its time.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Audio.AudioMixerUpdateMode.Normal">
      <summary>
        <para>Update the AudioMixer with scaled game time.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Audio.AudioMixerUpdateMode.UnscaledTime">
      <summary>
        <para>Update the AudioMixer with unscaled realtime.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioChorusFilter">
      <summary>
        <para>The Audio Chorus Filter takes an Audio Clip and processes it creating a chorus effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.delay">
      <summary>
        <para>Chorus delay in ms. 0.1 to 100.0. Default = 40.0 ms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.depth">
      <summary>
        <para>Chorus modulation depth. 0.0 to 1.0. Default = 0.03.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.dryMix">
      <summary>
        <para>Volume of original signal to pass to output. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.feedback">
      <summary>
        <para>Chorus feedback. Controls how much of the wet signal gets fed back into the chorus buffer. 0.0 to 1.0. Default = 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.rate">
      <summary>
        <para>Chorus modulation rate in hz. 0.0 to 20.0. Default = 0.8 hz.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix1">
      <summary>
        <para>Volume of 1st chorus tap. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix2">
      <summary>
        <para>Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix3">
      <summary>
        <para>Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioClip">
      <summary>
        <para>A container for audio data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.channels">
      <summary>
        <para>The number of channels in the audio clip. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.frequency">
      <summary>
        <para>The sample frequency of the clip in Hertz. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.isReadyToPlay">
      <summary>
        <para>Returns true if the AudioClip is ready to play (read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.length">
      <summary>
        <para>The length of the audio clip in seconds. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.loadInBackground">
      <summary>
        <para>Corresponding to the "Load In Background" flag in the inspector, when this flag is set, the loading will happen delayed without blocking the main thread.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.loadState">
      <summary>
        <para>Returns the current load state of the audio data associated with an AudioClip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.loadType">
      <summary>
        <para>The load type of the clip (read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.preloadAudioData">
      <summary>
        <para>Preloads audio data of the clip when the clip asset is loaded. When this flag is off, scripts have to call AudioClip.LoadAudioData() to load the data before the clip can be played. Properties like length, channels and format are available before the audio data has been loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.samples">
      <summary>
        <para>The length of the audio clip in samples. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback,UnityEngine.AudioClip/PCMSetPositionCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback,UnityEngine.AudioClip/PCMSetPositionCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.GetData(System.Single[],System.Int32)">
      <summary>
        <para>Fills an array with sample data from the clip.</para>
      </summary>
      <param name="data"></param>
      <param name="offsetSamples"></param>
    </member>
    <member name="M:UnityEngine.AudioClip.LoadAudioData">
      <summary>
        <para>Loads the audio data of a clip. Clips that have "Preload Audio Data" set will load the audio data automatically.</para>
      </summary>
      <returns>
        <para>Returns true if loading succeeded.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioClip.PCMReaderCallback">
      <summary>
        <para>Delegate called each time AudioClip reads data.</para>
      </summary>
      <param name="data">Array of floats containing data read from the clip.</param>
    </member>
    <member name="T:UnityEngine.AudioClip.PCMSetPositionCallback">
      <summary>
        <para>Delegate called each time AudioClip changes read position.</para>
      </summary>
      <param name="position">New position in the audio clip.</param>
    </member>
    <member name="M:UnityEngine.AudioClip.SetData(System.Single[],System.Int32)">
      <summary>
        <para>Set sample data in a clip.</para>
      </summary>
      <param name="data"></param>
      <param name="offsetSamples"></param>
    </member>
    <member name="M:UnityEngine.AudioClip.UnloadAudioData">
      <summary>
        <para>Unloads the audio data associated with the clip. This works only for AudioClips that are based on actual sound file assets.</para>
      </summary>
      <returns>
        <para>Returns false if unloading failed.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioClipLoadType">
      <summary>
        <para>Determines how the audio clip is loaded in.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioClipLoadType.CompressedInMemory">
      <summary>
        <para>The audio data of the clip will be kept in memory in compressed form.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioClipLoadType.DecompressOnLoad">
      <summary>
        <para>The audio data is decompressed when the audio clip is loaded.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioClipLoadType.Streaming">
      <summary>
        <para>Streams audio data from disk.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioCompressionFormat">
      <summary>
        <para>An enum containing different compression types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.AAC">
      <summary>
        <para>AAC Audio Compression.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.ADPCM">
      <summary>
        <para>Adaptive differential pulse-code modulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.ATRAC9">
      <summary>
        <para>Sony proprietary hardware format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.GCADPCM">
      <summary>
        <para>Nintendo ADPCM audio compression format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.HEVAG">
      <summary>
        <para>Sony proprietory hardware codec.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.MP3">
      <summary>
        <para>MPEG Audio Layer III.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.PCM">
      <summary>
        <para>Uncompressed pulse-code modulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.VAG">
      <summary>
        <para>Sony proprietary hardware format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.Vorbis">
      <summary>
        <para>Vorbis compression format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.XMA">
      <summary>
        <para>Xbox One proprietary hardware format.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioConfiguration">
      <summary>
        <para>Specifies the current properties or desired properties to be set for the audio system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.dspBufferSize">
      <summary>
        <para>The length of the DSP buffer in samples determining the latency of sounds by the audio output device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.numRealVoices">
      <summary>
        <para>The current maximum number of simultaneously audible sounds in the game.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.numVirtualVoices">
      <summary>
        <para>The  maximum number of managed sounds in the game. Beyond this limit sounds will simply stop playing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.sampleRate">
      <summary>
        <para>The current sample rate of the audio output device used.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.speakerMode">
      <summary>
        <para>The current speaker mode used by the audio output device.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioDataLoadState">
      <summary>
        <para>Value describing the current load state of the audio data associated with an AudioClip.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Failed">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that has failed loading its audio data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Loaded">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that has succeeded loading its audio data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Loading">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that is currently loading audio data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Unloaded">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that has no audio data loaded and where loading has not been initiated yet.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioDistortionFilter">
      <summary>
        <para>The Audio Distortion Filter distorts the sound from an AudioSource or sounds reaching the AudioListener.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioDistortionFilter.distortionLevel">
      <summary>
        <para>Distortion value. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioEchoFilter">
      <summary>
        <para>The Audio Echo Filter repeats a sound after a given Delay, attenuating the repetitions based on the Decay Ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.decayRatio">
      <summary>
        <para>Echo decay per delay. 0 to 1. 1.0 = No decay, 0.0 = total decay (i.e. simple 1 line delay). Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.delay">
      <summary>
        <para>Echo delay in ms. 10 to 5000. Default = 500.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.dryMix">
      <summary>
        <para>Volume of original signal to pass to output. 0.0 to 1.0. Default = 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.wetMix">
      <summary>
        <para>Volume of echo signal to pass to output. 0.0 to 1.0. Default = 1.0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioHighPassFilter">
      <summary>
        <para>The Audio High Pass Filter passes high frequencies of an AudioSource, and cuts off signals with frequencies lower than the Cutoff Frequency.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioHighPassFilter.cutoffFrequency">
      <summary>
        <para>Highpass cutoff frequency in hz. 10.0 to 22000.0. Default = 5000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioHighPassFilter.highpassResonanceQ">
      <summary>
        <para>Determines how much the filter's self-resonance isdampened.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioListener">
      <summary>
        <para>Representation of a listener in 3D space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioListener.pause">
      <summary>
        <para>The paused state of the audio system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioListener.velocityUpdateMode">
      <summary>
        <para>This lets you set whether the Audio Listener should be updated in the fixed or dynamic update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioListener.volume">
      <summary>
        <para>Controls the game sound volume (0.0 to 1.0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioListener.GetOutputData(System.Single[],System.Int32)">
      <summary>
        <para>Provides a block of the listener (master)'s output data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
    </member>
    <member name="M:UnityEngine.AudioListener.GetOutputData(System.Int32,System.Int32)">
      <summary>
        <para>Deprecated Version. Returns a block of the listener (master)'s output data.</para>
      </summary>
      <param name="numSamples"></param>
      <param name="channel"></param>
    </member>
    <member name="M:UnityEngine.AudioListener.GetSpectrumData(System.Single[],System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Provides a block of the listener (master)'s spectrum data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="M:UnityEngine.AudioListener.GetSpectrumData(System.Int32,System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Deprecated Version. Returns a block of the listener (master)'s spectrum data.</para>
      </summary>
      <param name="numSamples">Number of values (the length of the samples array). Must be a power of 2. Min = 64. Max = 8192.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="T:UnityEngine.AudioLowPassFilter">
      <summary>
        <para>The Audio Low Pass Filter passes low frequencies of an AudioSource or all sounds reaching an AudioListener, while removing frequencies higher than the Cutoff Frequency.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.customCutoffCurve">
      <summary>
        <para>Returns or sets the current custom frequency cutoff curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.cutoffFrequency">
      <summary>
        <para>Lowpass cutoff frequency in hz. 10.0 to 22000.0. Default = 5000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.lowpassResonanceQ">
      <summary>
        <para>Determines how much the filter's self-resonance is dampened.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioReverbFilter">
      <summary>
        <para>The Audio Reverb Filter takes an Audio Clip and distorts it to create a custom reverb effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.decayHFRatio">
      <summary>
        <para>Decay HF Ratio : High-frequency to low-frequency decay time ratio. Ranges from 0.1 to 2.0. Default is 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.decayTime">
      <summary>
        <para>Reverberation decay time at low-frequencies in seconds. Ranges from 0.1 to 20.0. Default is 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.density">
      <summary>
        <para>Reverberation density (modal density) in percent. Ranges from 0.0 to 100.0. Default is 100.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.diffusion">
      <summary>
        <para>Reverberation diffusion (echo density) in percent. Ranges from 0.0 to 100.0. Default is 100.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.dryLevel">
      <summary>
        <para>Mix level of dry signal in output in mB. Ranges from -10000.0 to 0.0. Default is 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.hfReference">
      <summary>
        <para>Reference high frequency in Hz. Ranges from 20.0 to 20000.0. Default is 5000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.lfReference">
      <summary>
        <para>Reference low-frequency in Hz. Ranges from 20.0 to 1000.0. Default is 250.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reflectionsDelay">
      <summary>
        <para>Late reverberation level relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reflectionsLevel">
      <summary>
        <para>Early reflections level relative to room effect in mB. Ranges from -10000.0 to 1000.0. Default is -10000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbDelay">
      <summary>
        <para>Late reverberation delay time relative to first reflection in seconds. Ranges from 0.0 to 0.1. Default is 0.04.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbLevel">
      <summary>
        <para>Late reverberation level relative to room effect in mB. Ranges from -10000.0 to 2000.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbPreset">
      <summary>
        <para>Set/Get reverb preset properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.room">
      <summary>
        <para>Room effect level at low frequencies in mB. Ranges from -10000.0 to 0.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomHF">
      <summary>
        <para>Room effect high-frequency level re. low frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomLF">
      <summary>
        <para>Room effect low-frequency level in mB. Ranges from -10000.0 to 0.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioReverbPreset">
      <summary>
        <para>Reverb presets used by the Reverb Zone class and the audio reverb filter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Alley">
      <summary>
        <para>Alley preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Arena">
      <summary>
        <para>Arena preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Auditorium">
      <summary>
        <para>Auditorium preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Bathroom">
      <summary>
        <para>Bathroom preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.CarpetedHallway">
      <summary>
        <para>Carpeted hallway preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Cave">
      <summary>
        <para>Cave preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.City">
      <summary>
        <para>City preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Concerthall">
      <summary>
        <para>Concert hall preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Dizzy">
      <summary>
        <para>Dizzy preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Drugged">
      <summary>
        <para>Drugged preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Forest">
      <summary>
        <para>Forest preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Generic">
      <summary>
        <para>Generic preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Hallway">
      <summary>
        <para>Hallway preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Hangar">
      <summary>
        <para>Hangar preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Livingroom">
      <summary>
        <para>Livingroom preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Mountains">
      <summary>
        <para>Mountains preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Off">
      <summary>
        <para>No reverb preset selected.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.PaddedCell">
      <summary>
        <para>Padded cell preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.ParkingLot">
      <summary>
        <para>Parking Lot preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Plain">
      <summary>
        <para>Plain preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Psychotic">
      <summary>
        <para>Psychotic preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Quarry">
      <summary>
        <para>Quarry preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Room">
      <summary>
        <para>Room preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.SewerPipe">
      <summary>
        <para>Sewer pipe preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.StoneCorridor">
      <summary>
        <para>Stone corridor preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Stoneroom">
      <summary>
        <para>Stoneroom preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Underwater">
      <summary>
        <para>Underwater presset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.User">
      <summary>
        <para>User defined preset.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioReverbZone">
      <summary>
        <para>Reverb Zones are used when you want to create location based ambient effects in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.decayHFRatio">
      <summary>
        <para>High-frequency to mid-frequency decay time ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.decayTime">
      <summary>
        <para>Reverberation decay time at mid frequencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.density">
      <summary>
        <para>Value that controls the modal density in the late reverberation decay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.diffusion">
      <summary>
        <para>Value that controls the echo density in the late reverberation decay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.maxDistance">
      <summary>
        <para>The distance from the centerpoint that the reverb will not have any effect. Default = 15.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.minDistance">
      <summary>
        <para>The distance from the centerpoint that the reverb will have full effect at. Default = 10.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reflections">
      <summary>
        <para>Early reflections level relative to room effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reflectionsDelay">
      <summary>
        <para>Initial reflection delay time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverb">
      <summary>
        <para>Late reverberation level relative to room effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverbDelay">
      <summary>
        <para>Late reverberation delay time relative to initial reflection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverbPreset">
      <summary>
        <para>Set/Get reverb preset properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.room">
      <summary>
        <para>Room effect level (at mid frequencies).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomHF">
      <summary>
        <para>Relative room effect level at high frequencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomLF">
      <summary>
        <para>Relative room effect level at low frequencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomRolloffFactor">
      <summary>
        <para>Like rolloffscale in global settings, but for reverb room size effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.HFReference">
      <summary>
        <para>Reference high frequency (hz).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.LFReference">
      <summary>
        <para>Reference low frequency (hz).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioRolloffMode">
      <summary>
        <para>Rolloff modes that a 3D sound can have in an audio source.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioRolloffMode.Custom">
      <summary>
        <para>Use this when you want to use a custom rolloff.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioRolloffMode.Linear">
      <summary>
        <para>Use this mode when you want to lower the volume of your sound over the distance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioRolloffMode.Logarithmic">
      <summary>
        <para>Use this mode when you want a real-world rolloff.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSettings">
      <summary>
        <para>Controls the global audio settings from script.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.driverCapabilities">
      <summary>
        <para>Returns the speaker mode capability of the current audio driver. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.dspTime">
      <summary>
        <para>Returns the current time of the audio system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.outputSampleRate">
      <summary>
        <para>Get the mixer's current output rate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.speakerMode">
      <summary>
        <para>Gets the current speaker mode. Default is 2 channel stereo.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSettings.AudioConfigurationChangeHandler">
      <summary>
        <para>A delegate called whenever the global audio settings are changed, either by AudioSettings.Reset or by an external device change such as the OS control panel changing the sample rate or because the default output device was changed, for example when plugging in an HDMI monitor or a USB headset.</para>
      </summary>
      <param name="deviceWasChanged">True if the change was caused by an device change.</param>
    </member>
    <member name="M:UnityEngine.AudioSettings.GetConfiguration">
      <summary>
        <para>Returns the current configuration of the audio device and system. The values in the struct may then be modified and reapplied via AudioSettings.Reset.</para>
      </summary>
      <returns>
        <para>The new configuration to be applied.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSettings.GetDSPBufferSize(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Get the mixer's buffer size in samples.</para>
      </summary>
      <param name="bufferLength">Is the length of each buffer in the ringbuffer.</param>
      <param name="numBuffers">Is number of buffers.</param>
    </member>
    <member name="?:UnityEngine.AudioSettings.OnAudioConfigurationChanged(UnityEngine.AudioSettings/AudioConfigurationChangeHandler)">
      <summary>
        <para>A delegate called whenever the global audio settings are changed, either by AudioSettings.Reset or by an external factor such as the OS control panel changing the sample rate or because the default output device was changed, for example when plugging in an HDMI monitor or a USB headset.</para>
      </summary>
      <param name="value">True if the change was caused by an device change.</param>
    </member>
    <member name="M:UnityEngine.AudioSettings.Reset(UnityEngine.AudioConfiguration)">
      <summary>
        <para>Performs a change of the device configuration. In response to this the AudioSettings.OnAudioConfigurationChanged delegate is invoked with the argument deviceWasChanged=false. It cannot be guaranteed that the exact settings specified can be used, but the an attempt is made to use the closest match supported by the system.</para>
      </summary>
      <param name="config">The new configuration to be used.</param>
      <returns>
        <para>True if all settings could be successfully applied.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioSource">
      <summary>
        <para>A representation of audio sources in 3D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassEffects">
      <summary>
        <para>Bypass effects (Applied from filter components or global listener filters).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassListenerEffects">
      <summary>
        <para>When set global effects on the AudioListener will not be applied to the audio signal generated by the AudioSource. Does not apply if the AudioSource is playing into a mixer group.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassReverbZones">
      <summary>
        <para>When set doesn't route the signal from an AudioSource into the global reverb associated with reverb zones.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.clip">
      <summary>
        <para>The default AudioClip to play.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.dopplerLevel">
      <summary>
        <para>Sets the Doppler scale for this AudioSource.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.ignoreListenerPause">
      <summary>
        <para>Allows AudioSource to play even though AudioListener.pause is set to true. This is useful for the menu element sounds or background music in pause menus.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.ignoreListenerVolume">
      <summary>
        <para>This makes the audio source not take into account the volume of the audio listener.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.isPlaying">
      <summary>
        <para>Is the clip playing right now (Read Only)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.isVirtual">
      <summary>
        <para>True if all sounds played by the AudioSource (main sound started by Play() or playOnAwake as well as one-shots) are culled by the audio system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.loop">
      <summary>
        <para>Is the audio clip looping?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.maxDistance">
      <summary>
        <para>(Logarithmic rolloff) MaxDistance is the distance a sound stops attenuating at.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.minDistance">
      <summary>
        <para>Within the Min distance the AudioSource will cease to grow louder in volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.mute">
      <summary>
        <para>Un- / Mutes the AudioSource. Mute sets the volume=0, Un-Mute restore the original volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.outputAudioMixerGroup">
      <summary>
        <para>The target group to which the AudioSource should route its signal.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.pan">
      <summary>
        <para>Pan has been deprecated. Use panStereo instead.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.panLevel">
      <summary>
        <para>PanLevel has been deprecated. Use spatialBlend instead.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.panStereo">
      <summary>
        <para>Pans a playing sound in a stereo way (left or right). This only applies to sounds that are Mono or Stereo.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.pitch">
      <summary>
        <para>The pitch of the audio source.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.playOnAwake">
      <summary>
        <para>If set to true, the audio source will automatically start playing on awake.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.priority">
      <summary>
        <para>Sets the priority of the AudioSource.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.reverbZoneMix">
      <summary>
        <para>The amount by which the signal from the AudioSource will be mixed into the global reverb associated with the Reverb Zones.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.rolloffMode">
      <summary>
        <para>Sets/Gets how the AudioSource attenuates over distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spatialBlend">
      <summary>
        <para>Sets how much this AudioSource is affected by 3D spatialisation calculations (attenuation, doppler etc). 0.0 makes the sound full 2D, 1.0 makes it full 3D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spatialize">
      <summary>
        <para>Enables or disables spatialization.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spatializePostEffects">
      <summary>
        <para>Determines if the spatializer effect is inserted before or after the effect filters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spread">
      <summary>
        <para>Sets the spread angle (in degrees) of a 3d stereo or multichannel sound in speaker space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.time">
      <summary>
        <para>Playback position in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.timeSamples">
      <summary>
        <para>Playback position in PCM samples.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.velocityUpdateMode">
      <summary>
        <para>Whether the Audio Source should be updated in the fixed or dynamic update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.volume">
      <summary>
        <para>The volume of the audio source (0.0 to 1.0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioSource.GetCustomCurve(UnityEngine.AudioSourceCurveType)">
      <summary>
        <para>Get the current custom curve for the given AudioSourceCurveType.</para>
      </summary>
      <param name="type">The curve type to get.</param>
      <returns>
        <para>The custom AnimationCurve corresponding to the given curve type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.GetOutputData(System.Single[],System.Int32)">
      <summary>
        <para>Provides a block of the currently playing source's output data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.GetOutputData(System.Int32,System.Int32)">
      <summary>
        <para>Deprecated Version. Returns a block of the currently playing source's output data.</para>
      </summary>
      <param name="numSamples"></param>
      <param name="channel"></param>
    </member>
    <member name="M:UnityEngine.AudioSource.GetSpatializerFloat(System.Int32,System.Single&amp;)">
      <summary>
        <para>Reads a user-defined parameter of a custom spatializer effect that is attached to an AudioSource.</para>
      </summary>
      <param name="index">Zero-based index of user-defined parameter to be read.</param>
      <param name="value">Return value of the user-defined parameter that is read.</param>
      <returns>
        <para>True, if the parameter could be read.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.GetSpectrumData(System.Single[],System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Provides a block of the currently playing audio source's spectrum data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.GetSpectrumData(System.Int32,System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Deprecated Version. Returns a block of the currently playing source's spectrum data.</para>
      </summary>
      <param name="numSamples">The number of samples to retrieve. Must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.Pause">
      <summary>
        <para>Pauses playing the clip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioSource.Play()">
      <summary>
        <para>Plays the clip with an optional certain delay.</para>
      </summary>
      <param name="delay">Delay in number of samples, assuming a 44100Hz sample rate (meaning that Play(44100) will delay the playing by exactly 1 sec).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.Play(System.UInt64)">
      <summary>
        <para>Plays the clip with an optional certain delay.</para>
      </summary>
      <param name="delay">Delay in number of samples, assuming a 44100Hz sample rate (meaning that Play(44100) will delay the playing by exactly 1 sec).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayClipAtPoint(UnityEngine.AudioClip,UnityEngine.Vector3)">
      <summary>
        <para>Plays an AudioClip at a given position in world space.</para>
      </summary>
      <param name="clip">Audio data to play.</param>
      <param name="position">Position in world space from which sound originates.</param>
      <param name="volume">Playback volume.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayClipAtPoint(UnityEngine.AudioClip,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Plays an AudioClip at a given position in world space.</para>
      </summary>
      <param name="clip">Audio data to play.</param>
      <param name="position">Position in world space from which sound originates.</param>
      <param name="volume">Playback volume.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayDelayed(System.Single)">
      <summary>
        <para>Plays the clip with a delay specified in seconds. Users are advised to use this function instead of the old Play(delay) function that took a delay specified in samples relative to a reference rate of 44.1 kHz as an argument.</para>
      </summary>
      <param name="delay">Delay time specified in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayOneShot(UnityEngine.AudioClip)">
      <summary>
        <para>Plays an AudioClip, and scales the AudioSource volume by volumeScale.</para>
      </summary>
      <param name="clip">The clip being played.</param>
      <param name="volumeScale">The scale of the volume (0-1).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayOneShot(UnityEngine.AudioClip,System.Single)">
      <summary>
        <para>Plays an AudioClip, and scales the AudioSource volume by volumeScale.</para>
      </summary>
      <param name="clip">The clip being played.</param>
      <param name="volumeScale">The scale of the volume (0-1).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayScheduled(System.Double)">
      <summary>
        <para>Plays the clip at a specific time on the absolute time-line that AudioSettings.dspTime reads from.</para>
      </summary>
      <param name="time">Time in seconds on the absolute time-line that AudioSettings.dspTime refers to for when the sound should start playing.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetCustomCurve(UnityEngine.AudioSourceCurveType,UnityEngine.AnimationCurve)">
      <summary>
        <para>Set the custom curve for the given AudioSourceCurveType.</para>
      </summary>
      <param name="type">The curve type that should be set.</param>
      <param name="curve">The curve that should be applied to the given curve type.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetScheduledEndTime(System.Double)">
      <summary>
        <para>Changes the time at which a sound that has already been scheduled to play will end. Notice that depending on the timing not all rescheduling requests can be fulfilled.</para>
      </summary>
      <param name="time">Time in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetScheduledStartTime(System.Double)">
      <summary>
        <para>Changes the time at which a sound that has already been scheduled to play will start.</para>
      </summary>
      <param name="time">Time in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetSpatializerFloat(System.Int32,System.Single)">
      <summary>
        <para>Sets a user-defined parameter of a custom spatializer effect that is attached to an AudioSource.</para>
      </summary>
      <param name="index">Zero-based index of user-defined parameter to be set.</param>
      <param name="value">New value of the user-defined parameter.</param>
      <returns>
        <para>True, if the parameter could be set.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.Stop">
      <summary>
        <para>Stops playing the clip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioSource.UnPause">
      <summary>
        <para>Unpause the paused playback of this AudioSource.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSourceCurveType">
      <summary>
        <para>This defines the curve type of the different custom curves that can be queried and set within the AudioSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.CustomRolloff">
      <summary>
        <para>Custom Volume Rolloff.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.ReverbZoneMix">
      <summary>
        <para>Reverb Zone Mix.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.SpatialBlend">
      <summary>
        <para>The Spatial Blend.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.Spread">
      <summary>
        <para>The 3D Spread.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSpeakerMode">
      <summary>
        <para>These are speaker types defined for use with AudioSettings.speakerMode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Mode5point1">
      <summary>
        <para>Channel count is set to 6. 5.1 speaker setup. This includes front left, front right, center, rear left, rear right and a subwoofer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Mode7point1">
      <summary>
        <para>Channel count is set to 8. 7.1 speaker setup. This includes front left, front right, center, rear left, rear right, side left, side right and a subwoofer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Mono">
      <summary>
        <para>Channel count is set to 1. The speakers are monaural.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Prologic">
      <summary>
        <para>Channel count is set to 2. Stereo output, but data is encoded in a way that is picked up by a Prologic/Prologic2 decoder and split into a 5.1 speaker setup.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Quad">
      <summary>
        <para>Channel count is set to 4. 4 speaker setup. This includes front left, front right, rear left, rear right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Raw">
      <summary>
        <para>Channel count is unaffected.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Stereo">
      <summary>
        <para>Channel count is set to 2. The speakers are stereo. This is the editor default.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Surround">
      <summary>
        <para>Channel count is set to 5. 5 speaker setup. This includes front left, front right, center, rear left, rear right.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioType">
      <summary>
        <para>Type of the imported(native) data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.ACC">
      <summary>
        <para>Acc - not supported.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.AIFF">
      <summary>
        <para>Aiff.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.AUDIOQUEUE">
      <summary>
        <para>iPhone hardware decoder, supports AAC, ALAC and MP3. Extracodecdata is a pointer to an FMOD_AUDIOQUEUE_EXTRACODECDATA structure.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.IT">
      <summary>
        <para>Impulse tracker.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.MOD">
      <summary>
        <para>Protracker / Fasttracker MOD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.MPEG">
      <summary>
        <para>MP2/MP3 MPEG.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.OGGVORBIS">
      <summary>
        <para>Ogg vorbis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.S3M">
      <summary>
        <para>ScreamTracker 3.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.UNKNOWN">
      <summary>
        <para>3rd party / unknown plugin format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.VAG">
      <summary>
        <para>VAG.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.WAV">
      <summary>
        <para>Microsoft WAV.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.XM">
      <summary>
        <para>FastTracker 2 XM.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioType.XMA">
      <summary>
        <para>Xbox360 XMA.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioVelocityUpdateMode">
      <summary>
        <para>Describes when an AudioSource or AudioListener is updated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioVelocityUpdateMode.Auto">
      <summary>
        <para>Updates the source or listener in the fixed update loop if it is attached to a Rigidbody, dynamic otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioVelocityUpdateMode.Dynamic">
      <summary>
        <para>Updates the source or listener in the dynamic update loop.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioVelocityUpdateMode.Fixed">
      <summary>
        <para>Updates the source or listener in the fixed update loop.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Avatar">
      <summary>
        <para>Avatar definition.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Avatar.isHuman">
      <summary>
        <para>Return true if this avatar is a valid human avatar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Avatar.isValid">
      <summary>
        <para>Return true if this avatar is a valid mecanim avatar. It can be a generic avatar or a human avatar.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarBuilder">
      <summary>
        <para>Class to build avatars from user scripts.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AvatarBuilder.BuildGenericAvatar(UnityEngine.GameObject,System.String)">
      <summary>
        <para>Create a new generic avatar.</para>
      </summary>
      <param name="go">Root object of your transform hierarchy.</param>
      <param name="rootMotionTransformName">Transform name of the root motion transform. If empty no root motion is defined and you must take care of avatar movement yourself.</param>
    </member>
    <member name="M:UnityEngine.AvatarBuilder.BuildHumanAvatar(UnityEngine.GameObject,UnityEngine.HumanDescription)">
      <summary>
        <para>Create a humanoid avatar.</para>
      </summary>
      <param name="go">Root object of your transform hierachy. It must be the top most gameobject when you create the avatar.</param>
      <param name="humanDescription">Humanoid description of the avatar.</param>
      <returns>
        <para>Returns the Avatar, you must always always check the avatar is valid before using it with Avatar.isValid.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AvatarIKGoal">
      <summary>
        <para>IK Goal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.LeftFoot">
      <summary>
        <para>The left foot.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.LeftHand">
      <summary>
        <para>The left hand.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.RightFoot">
      <summary>
        <para>The right foot.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.RightHand">
      <summary>
        <para>The right hand.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarIKHint">
      <summary>
        <para>IK Hint.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.LeftElbow">
      <summary>
        <para>The left elbow IK hint.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.LeftKnee">
      <summary>
        <para>The left knee IK hint.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.RightElbow">
      <summary>
        <para>The right elbow IK hint.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.RightKnee">
      <summary>
        <para>The right knee IK hint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarMask">
      <summary>
        <para>AvatarMask are used to mask out humanoid body parts and transforms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AvatarMask.transformCount">
      <summary>
        <para>Number of transforms.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AvatarMask.AddTransformPath(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Adds a transform path into the AvatarMask.</para>
      </summary>
      <param name="transform">The transform to add into the AvatarMask.</param>
      <param name="recursive">Whether to also add all children of the specified transform.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.#ctor">
      <summary>
        <para>Creates a new AvatarMask.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AvatarMask.GetHumanoidBodyPartActive(UnityEngine.AvatarMaskBodyPart)">
      <summary>
        <para>Returns true if the humanoid body part at the given index is active.</para>
      </summary>
      <param name="index">The index of the humanoid body part.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.GetTransformActive(System.Int32)">
      <summary>
        <para>Returns true if the transform at the given index is active.</para>
      </summary>
      <param name="index">The index of the transform.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.GetTransformPath(System.Int32)">
      <summary>
        <para>Returns the path of the transform at the given index.</para>
      </summary>
      <param name="index">The index of the transform.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.RemoveTransformPath(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Removes a transform path from the AvatarMask.</para>
      </summary>
      <param name="transform">The Transform that should be removed from the AvatarMask.</param>
      <param name="recursive">Whether to also remove all children of the specified transform.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.SetHumanoidBodyPartActive(UnityEngine.AvatarMaskBodyPart,System.Boolean)">
      <summary>
        <para>Sets the humanoid body part at the given index to active or not.</para>
      </summary>
      <param name="index">The index of the humanoid body part.</param>
      <param name="value">Active or not.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.SetTransformActive(System.Int32,System.Boolean)">
      <summary>
        <para>Sets the tranform at the given index to active or not.</para>
      </summary>
      <param name="index">The index of the transform.</param>
      <param name="value">Active or not.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.SetTransformPath(System.Int32,System.String)">
      <summary>
        <para>Sets the path of the transform at the given index.</para>
      </summary>
      <param name="index">The index of the transform.</param>
      <param name="path">The path of the transform.</param>
    </member>
    <member name="T:UnityEngine.AvatarMaskBodyPart">
      <summary>
        <para>Avatar body part.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.Body">
      <summary>
        <para>The Body.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.Head">
      <summary>
        <para>The Head.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LastBodyPart">
      <summary>
        <para>Total number of body parts.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftArm">
      <summary>
        <para>The Left Arm.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftFingers">
      <summary>
        <para>Left Fingers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftFootIK">
      <summary>
        <para>Left Foot IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftHandIK">
      <summary>
        <para>Left Hand IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftLeg">
      <summary>
        <para>The Left Leg.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightArm">
      <summary>
        <para>The Right Arm.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightFingers">
      <summary>
        <para>Right Fingers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightFootIK">
      <summary>
        <para>Right Foot IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightHandIK">
      <summary>
        <para>Right Hand IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightLeg">
      <summary>
        <para>The Right Leg.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.Root">
      <summary>
        <para>The Root.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarTarget">
      <summary>
        <para>Target.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.Body">
      <summary>
        <para>The body, center of mass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.LeftFoot">
      <summary>
        <para>The left foot.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.LeftHand">
      <summary>
        <para>The left hand.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.RightFoot">
      <summary>
        <para>The right foot.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.RightHand">
      <summary>
        <para>The right hand.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.Root">
      <summary>
        <para>The root, the position of the game object.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BatteryStatus">
      <summary>
        <para>Enumeration for SystemInfo.batteryStatus which represents the current status of the device's battery.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BatteryStatus.Charging">
      <summary>
        <para>Device is plugged in and charging.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BatteryStatus.Discharging">
      <summary>
        <para>Device is unplugged and discharging.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BatteryStatus.Full">
      <summary>
        <para>Device is plugged in and the battery is full.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BatteryStatus.NotCharging">
      <summary>
        <para>Device is plugged in, but is not charging.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BatteryStatus.Unknown">
      <summary>
        <para>The device's battery status cannot be determined. If battery status is not available on your target platform, SystemInfo.batteryStatus will return this value.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Behaviour">
      <summary>
        <para>Behaviours are Components that can be enabled or disabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Behaviour.enabled">
      <summary>
        <para>Enabled Behaviours are Updated, disabled Behaviours are not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Behaviour.isActiveAndEnabled">
      <summary>
        <para>Has the Behaviour had enabled called.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BillboardAsset">
      <summary>
        <para>BillboardAsset describes how a billboard is rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.bottom">
      <summary>
        <para>Height of the billboard that is below ground.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.height">
      <summary>
        <para>Height of the billboard.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.imageCount">
      <summary>
        <para>Number of pre-rendered images that can be switched when the billboard is viewed from different angles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.indexCount">
      <summary>
        <para>Number of indices in the billboard mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.material">
      <summary>
        <para>The material used for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.vertexCount">
      <summary>
        <para>Number of vertices in the billboard mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardAsset.width">
      <summary>
        <para>Width of the billboard.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.BillboardAsset.#ctor">
      <summary>
        <para>Constructs a new BillboardAsset.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.BillboardAsset.GetImageTexCoords">
      <summary>
        <para>Get the array of billboard image texture coordinate data.</para>
      </summary>
      <param name="imageTexCoords">The list that receives the array.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.GetImageTexCoords(System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Get the array of billboard image texture coordinate data.</para>
      </summary>
      <param name="imageTexCoords">The list that receives the array.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.GetIndices">
      <summary>
        <para>Get the indices of the billboard mesh.</para>
      </summary>
      <param name="indices">The list that receives the array.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.GetIndices(System.Collections.Generic.List`1&lt;System.UInt16&gt;)">
      <summary>
        <para>Get the indices of the billboard mesh.</para>
      </summary>
      <param name="indices">The list that receives the array.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.GetVertices">
      <summary>
        <para>Get the vertices of the billboard mesh.</para>
      </summary>
      <param name="vertices">The list that receives the array.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.GetVertices(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Get the vertices of the billboard mesh.</para>
      </summary>
      <param name="vertices">The list that receives the array.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.SetImageTexCoords(UnityEngine.Vector4[])">
      <summary>
        <para>Set the array of billboard image texture coordinate data.</para>
      </summary>
      <param name="imageTexCoords">The array of data to set.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.SetImageTexCoords(System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Set the array of billboard image texture coordinate data.</para>
      </summary>
      <param name="imageTexCoords">The array of data to set.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.SetIndices(System.UInt16[])">
      <summary>
        <para>Set the indices of the billboard mesh.</para>
      </summary>
      <param name="indices">The array of data to set.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.SetIndices(System.Collections.Generic.List`1&lt;System.UInt16&gt;)">
      <summary>
        <para>Set the indices of the billboard mesh.</para>
      </summary>
      <param name="indices">The array of data to set.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.SetVertices(UnityEngine.Vector2[])">
      <summary>
        <para>Set the vertices of the billboard mesh.</para>
      </summary>
      <param name="vertices">The array of data to set.</param>
    </member>
    <member name="M:UnityEngine.BillboardAsset.SetVertices(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Set the vertices of the billboard mesh.</para>
      </summary>
      <param name="vertices">The array of data to set.</param>
    </member>
    <member name="T:UnityEngine.BillboardRenderer">
      <summary>
        <para>Renders a billboard from a BillboardAsset.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BillboardRenderer.billboard">
      <summary>
        <para>The BillboardAsset to render.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.BillboardRenderer.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BitStream">
      <summary>
        <para>The BitStream class represents seralized variables, packed into a stream.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BitStream.isReading">
      <summary>
        <para>Is the BitStream currently being read? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BitStream.isWriting">
      <summary>
        <para>Is the BitStream currently being written? (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(System.Boolean&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(System.Char&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(System.Int16&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(System.Int32&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(System.Single&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(UnityEngine.Vector3&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(System.Single&amp;,System.Single)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(UnityEngine.Quaternion&amp;,System.Single)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(UnityEngine.Vector3&amp;,System.Single)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(UnityEngine.NetworkPlayer&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.BitStream.Serialize(UnityEngine.NetworkViewID&amp;)">
      <summary>
        <para>Serializes different types of variables.</para>
      </summary>
      <param name="value"></param>
      <param name="maxDelta"></param>
      <param name="viewID"></param>
    </member>
    <member name="T:UnityEngine.BlendWeights">
      <summary>
        <para>Blend weights.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BlendWeights.FourBones">
      <summary>
        <para>Four bones affect each vertex.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BlendWeights.OneBone">
      <summary>
        <para>One bone affects each vertex.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BlendWeights.TwoBones">
      <summary>
        <para>Two bones affect each vertex.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BoneWeight">
      <summary>
        <para>Skinning bone weights of a vertex in the mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex0">
      <summary>
        <para>Index of first bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex1">
      <summary>
        <para>Index of second bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex2">
      <summary>
        <para>Index of third bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.boneIndex3">
      <summary>
        <para>Index of fourth bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight0">
      <summary>
        <para>Skinning weight for first bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight1">
      <summary>
        <para>Skinning weight for second bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight2">
      <summary>
        <para>Skinning weight for third bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoneWeight.weight3">
      <summary>
        <para>Skinning weight for fourth bone.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BoundingSphere">
      <summary>
        <para>Describes a single bounding sphere for use by a CullingGroup.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BoundingSphere.position">
      <summary>
        <para>The position of the center of the BoundingSphere.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BoundingSphere.radius">
      <summary>
        <para>The radius of the BoundingSphere.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.BoundingSphere.#ctor(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Initializes a BoundingSphere.</para>
      </summary>
      <param name="pos">The center of the sphere.</param>
      <param name="rad">The radius of the sphere.</param>
      <param name="packedSphere">A four-component vector containing the position (packed into the XYZ components) and radius (packed into the W component).</param>
    </member>
    <member name="M:UnityEngine.BoundingSphere.#ctor(UnityEngine.Vector4)">
      <summary>
        <para>Initializes a BoundingSphere.</para>
      </summary>
      <param name="pos">The center of the sphere.</param>
      <param name="rad">The radius of the sphere.</param>
      <param name="packedSphere">A four-component vector containing the position (packed into the XYZ components) and radius (packed into the W component).</param>
    </member>
    <member name="T:UnityEngine.Bounds">
      <summary>
        <para>Represents an axis aligned bounding box.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Bounds.center">
      <summary>
        <para>The center of the bounding box.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Bounds.extents">
      <summary>
        <para>The extents of the box. This is always half of the size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Bounds.max">
      <summary>
        <para>The maximal point of the box. This is always equal to center+extents.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Bounds.min">
      <summary>
        <para>The minimal point of the box. This is always equal to center-extents.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Bounds.size">
      <summary>
        <para>The total size of the box. This is always twice as large as the extents.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Bounds.ClosestPoint(UnityEngine.Vector3)">
      <summary>
        <para>The closest point on the bounding box.</para>
      </summary>
      <param name="point">Arbitrary point.</param>
      <returns>
        <para>The point on the bounding box or inside the bounding box.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Bounds.Contains(UnityEngine.Vector3)">
      <summary>
        <para>Is point contained in the bounding box?</para>
      </summary>
      <param name="point"></param>
    </member>
    <member name="M:UnityEngine.Bounds.#ctor(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a new Bounds.</para>
      </summary>
      <param name="center">The location of the origin of the Bounds.</param>
      <param name="size">The dimensions of the Bounds.</param>
    </member>
    <member name="M:UnityEngine.Bounds.Encapsulate(UnityEngine.Vector3)">
      <summary>
        <para>Grows the Bounds to include the point.</para>
      </summary>
      <param name="point"></param>
    </member>
    <member name="M:UnityEngine.Bounds.Encapsulate(UnityEngine.Bounds)">
      <summary>
        <para>Grow the bounds to encapsulate the bounds.</para>
      </summary>
      <param name="bounds"></param>
    </member>
    <member name="M:UnityEngine.Bounds.Expand(System.Single)">
      <summary>
        <para>Expand the bounds by increasing its size by amount along each side.</para>
      </summary>
      <param name="amount"></param>
    </member>
    <member name="M:UnityEngine.Bounds.Expand(UnityEngine.Vector3)">
      <summary>
        <para>Expand the bounds by increasing its size by amount along each side.</para>
      </summary>
      <param name="amount"></param>
    </member>
    <member name="M:UnityEngine.Bounds.IntersectRay(UnityEngine.Ray)">
      <summary>
        <para>Does ray intersect this bounding box?</para>
      </summary>
      <param name="ray"></param>
    </member>
    <member name="M:UnityEngine.Bounds.IntersectRay(UnityEngine.Ray,System.Single&amp;)">
      <summary>
        <para>Does ray intersect this bounding box?</para>
      </summary>
      <param name="ray"></param>
      <param name="distance"></param>
    </member>
    <member name="M:UnityEngine.Bounds.Intersects(UnityEngine.Bounds)">
      <summary>
        <para>Does another bounding box intersect with this bounding box?</para>
      </summary>
      <param name="bounds"></param>
    </member>
    <member name="M:UnityEngine.Bounds.SetMinMax(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Sets the bounds to the min and max value of the box.</para>
      </summary>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:UnityEngine.Bounds.SqrDistance(UnityEngine.Vector3)">
      <summary>
        <para>The smallest squared distance between the point and this bounding box.</para>
      </summary>
      <param name="point"></param>
    </member>
    <member name="M:UnityEngine.Bounds.ToString">
      <summary>
        <para>Returns a nicely formatted string for the bounds.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Bounds.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for the bounds.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.BoxCollider">
      <summary>
        <para>A box-shaped primitive collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider.center">
      <summary>
        <para>The center of the box, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider.size">
      <summary>
        <para>The size of the box, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BoxCollider2D">
      <summary>
        <para>Collider for 2D physics representing an axis-aligned rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.autoTiling">
      <summary>
        <para>Determines whether the BoxCollider2D's shape is automatically updated based on a SpriteRenderer's tiling properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.center">
      <summary>
        <para>The center point of the collider in local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.edgeRadius">
      <summary>
        <para>Controls the radius of all edges created by the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.size">
      <summary>
        <para>The width and height of the rectangle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BuoyancyEffector2D">
      <summary>
        <para>Applies forces to simulate buoyancy, fluid-flow and fluid drag.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.angularDrag">
      <summary>
        <para>A force applied to slow angular movement of any Collider2D in contact with the effector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.density">
      <summary>
        <para>The density of the fluid used to calculate the buoyancy forces.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.flowAngle">
      <summary>
        <para>The angle of the force used to similate fluid flow.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.flowMagnitude">
      <summary>
        <para>The magnitude of the force used to similate fluid flow.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.flowVariation">
      <summary>
        <para>The random variation of the force used to similate fluid flow.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.linearDrag">
      <summary>
        <para>A force applied to slow linear movement of any Collider2D in contact with the effector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.surfaceLevel">
      <summary>
        <para>Defines an arbitrary horizontal line that represents the fluid surface level.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Caching">
      <summary>
        <para>The Caching class lets you manage cached AssetBundles, downloaded using WWW.LoadFromCacheOrDownload.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.compressionEnabled">
      <summary>
        <para>Controls compression of cache data. Enabled by default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.enabled">
      <summary>
        <para>Is Caching enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.expirationDelay">
      <summary>
        <para>The number of seconds that an AssetBundle may remain unused in the cache before it is automatically deleted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.maximumAvailableDiskSpace">
      <summary>
        <para>The total number of bytes that can potentially be allocated for caching.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.ready">
      <summary>
        <para>Is caching ready?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.spaceFree">
      <summary>
        <para>The number of currently unused bytes in the cache.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Caching.spaceOccupied">
      <summary>
        <para>Used disk space in bytes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Caching.Authorize(System.String,System.String,System.Int64,System.String)">
      <summary>
        <para>This is a WebPlayer-only function.</para>
      </summary>
      <param name="string">Signature The authentification signature provided by Unity.</param>
      <param name="int">Size The number of bytes allocated to this cache.</param>
      <param name="name"></param>
      <param name="domain"></param>
      <param name="size"></param>
      <param name="signature"></param>
      <param name="expiration"></param>
    </member>
    <member name="M:UnityEngine.Caching.Authorize(System.String,System.String,System.Int64,System.Int32,System.String)">
      <summary>
        <para>This is a WebPlayer-only function.</para>
      </summary>
      <param name="string">Signature The authentification signature provided by Unity.</param>
      <param name="int">Size The number of bytes allocated to this cache.</param>
      <param name="name"></param>
      <param name="domain"></param>
      <param name="size"></param>
      <param name="signature"></param>
      <param name="expiration"></param>
    </member>
    <member name="M:UnityEngine.Caching.Authorize(System.String,System.String,System.Int32,System.String)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="name"></param>
      <param name="domain"></param>
      <param name="size"></param>
      <param name="signature"></param>
      <param name="expiration"></param>
    </member>
    <member name="M:UnityEngine.Caching.Authorize(System.String,System.String,System.Int32,System.Int32,System.String)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="name"></param>
      <param name="domain"></param>
      <param name="size"></param>
      <param name="signature"></param>
      <param name="expiration"></param>
    </member>
    <member name="M:UnityEngine.Caching.CleanCache">
      <summary>
        <para>Delete all AssetBundle and Procedural Material content that has been cached by the current application.</para>
      </summary>
      <returns>
        <para>True when cache cleaning succeeded, false if cache was in use.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Caching.IsVersionCached(System.String,System.Int32)">
      <summary>
        <para>Checks if an AssetBundle is cached.</para>
      </summary>
      <param name="string">Url The filename of the AssetBundle. Domain and path information are stripped from this string automatically.</param>
      <param name="int">Version The version number of the AssetBundle to check for. Negative values are not allowed.</param>
      <param name="url"></param>
      <param name="version"></param>
      <returns>
        <para>True if an AssetBundle matching the url and version parameters has previously been loaded using WWW.LoadFromCacheOrDownload() and is currently stored in the cache. Returns false if the AssetBundle is not in cache, either because it has been flushed from the cache or was never loaded using the Caching API.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Caching.MarkAsUsed(System.String,System.Int32)">
      <summary>
        <para>Bumps the timestamp of a cached file to be the current time.</para>
      </summary>
      <param name="url"></param>
      <param name="version"></param>
    </member>
    <member name="T:UnityEngine.Camera">
      <summary>
        <para>A Camera is a device through which the player views the world.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.activeTexture">
      <summary>
        <para>Gets or sets the temporary RenderTexture target for this Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.actualRenderingPath">
      <summary>
        <para>The rendering path that is currently being used (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.allCameras">
      <summary>
        <para>Returns all enabled cameras in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.allCamerasCount">
      <summary>
        <para>The number of cameras in the current scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.allowHDR">
      <summary>
        <para>High dynamic range rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.allowMSAA">
      <summary>
        <para>MSAA rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.aspect">
      <summary>
        <para>The aspect ratio (width divided by height).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.backgroundColor">
      <summary>
        <para>The color with which the screen will be cleared.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.cameraToWorldMatrix">
      <summary>
        <para>Matrix that transforms from camera space to world space (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.cameraType">
      <summary>
        <para>Identifies what kind of camera this is.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.clearFlags">
      <summary>
        <para>How the camera clears the background.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.clearStencilAfterLightingPass">
      <summary>
        <para>Should the camera clear the stencil buffer after the deferred light pass?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.commandBufferCount">
      <summary>
        <para>Number of command buffers set up on this camera (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.cullingMask">
      <summary>
        <para>This is used to render parts of the scene selectively.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.cullingMatrix">
      <summary>
        <para>Sets a custom matrix for the camera to use for all culling queries.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.current">
      <summary>
        <para>The camera we are currently rendering with, for low-level render control only (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.depth">
      <summary>
        <para>Camera's depth in the camera rendering order.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.depthTextureMode">
      <summary>
        <para>How and if camera generates a depth texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.eventMask">
      <summary>
        <para>Mask to select which layers can trigger events on the camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.farClipPlane">
      <summary>
        <para>The far clipping plane distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.fieldOfView">
      <summary>
        <para>The field of view of the camera in degrees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.forceIntoRenderTexture">
      <summary>
        <para>Should camera rendering be forced into a RenderTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.hdr">
      <summary>
        <para>High dynamic range rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.layerCullDistances">
      <summary>
        <para>Per-layer culling distances.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.layerCullSpherical">
      <summary>
        <para>How to perform per-layer culling for a Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.main">
      <summary>
        <para>The first enabled camera tagged "MainCamera" (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.nearClipPlane">
      <summary>
        <para>The near clipping plane distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.nonJitteredProjectionMatrix">
      <summary>
        <para>Get or set the raw projection matrix with no camera offset (no jittering).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.onPostRender">
      <summary>
        <para>Event that is fired after any camera finishes rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.onPreCull">
      <summary>
        <para>Event that is fired before any camera starts culling.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.onPreRender">
      <summary>
        <para>Event that is fired before any camera starts rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.opaqueSortMode">
      <summary>
        <para>Opaque object sorting mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.orthographic">
      <summary>
        <para>Is the camera orthographic (true) or perspective (false)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.orthographicSize">
      <summary>
        <para>Camera's half-size when in orthographic mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.pixelHeight">
      <summary>
        <para>How tall is the camera in pixels (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.pixelRect">
      <summary>
        <para>Where on the screen is the camera rendered in pixel coordinates.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.pixelWidth">
      <summary>
        <para>How wide is the camera in pixels (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.projectionMatrix">
      <summary>
        <para>Set a custom projection matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.rect">
      <summary>
        <para>Where on the screen is the camera rendered in normalized coordinates.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.renderingPath">
      <summary>
        <para>The rendering path that should be used, if possible.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.stereoActiveEye">
      <summary>
        <para>Returns the eye that is currently rendering.
If called when stereo is not enabled it will return Camera.MonoOrStereoscopicEye.Mono.

If called during a camera rendering callback such as OnRenderImage it will return the currently rendering eye.

If called outside of a rendering callback and stereo is enabled, it will return the default eye which is Camera.MonoOrStereoscopicEye.Left.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.stereoConvergence">
      <summary>
        <para>Distance to a point where virtual eyes converge.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.stereoEnabled">
      <summary>
        <para>Stereoscopic rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.stereoMirrorMode">
      <summary>
        <para>Render only once and use resulting image for both eyes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.stereoSeparation">
      <summary>
        <para>Distance between the virtual eyes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.stereoTargetEye">
      <summary>
        <para>Defines which eye of a VR display the Camera renders into.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.targetDisplay">
      <summary>
        <para>Set the target display for this Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.targetTexture">
      <summary>
        <para>Destination render texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.transparencySortAxis">
      <summary>
        <para>An axis that describes the direction along which the distances of objects are measured for the purpose of sorting.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.transparencySortMode">
      <summary>
        <para>Transparent object sorting mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.useJitteredProjectionMatrixForTransparentRendering">
      <summary>
        <para>Should the jittered matrix be used for transparency rendering?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.useOcclusionCulling">
      <summary>
        <para>Whether or not the Camera will use occlusion culling during rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.velocity">
      <summary>
        <para>Get the world-space speed of the camera (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Camera.worldToCameraMatrix">
      <summary>
        <para>Matrix that transforms from world to camera space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.AddCommandBuffer(UnityEngine.Rendering.CameraEvent,UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Add a command buffer to be executed at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <param name="buffer">The buffer to execute.</param>
    </member>
    <member name="M:UnityEngine.Camera.CalculateFrustumCorners(UnityEngine.Rect,System.Single,UnityEngine.Camera/MonoOrStereoscopicEye,UnityEngine.Vector3[])">
      <summary>
        <para>Given viewport coordinates, calculates the view space vectors pointing to the four frustum corners at the specified camera depth.</para>
      </summary>
      <param name="viewport">Normalized viewport coordinates to use for the frustum calculation.</param>
      <param name="z">Z-depth from the camera origin at which the corners will be calculated.</param>
      <param name="eye">Camera eye projection matrix to use.</param>
      <param name="outCorners">Output array for the frustum corner vectors. Cannot be null and length must be &gt;= 4.</param>
    </member>
    <member name="M:UnityEngine.Camera.CalculateObliqueMatrix(UnityEngine.Vector4)">
      <summary>
        <para>Calculates and returns oblique near-plane projection matrix.</para>
      </summary>
      <param name="clipPlane">Vector4 that describes a clip plane.</param>
      <returns>
        <para>Oblique near-plane projection matrix.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Camera.CameraCallback">
      <summary>
        <para>Delegate type for camera callbacks.</para>
      </summary>
      <param name="cam"></param>
    </member>
    <member name="M:UnityEngine.Camera.CopyFrom(UnityEngine.Camera)">
      <summary>
        <para>Makes this camera's settings match other camera.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="M:UnityEngine.Camera.GetAllCameras(UnityEngine.Camera[])">
      <summary>
        <para>Fills an array of Camera with the current cameras in the scene, without allocating a new array.</para>
      </summary>
      <param name="cameras">An array to be filled up with cameras currently in the scene.</param>
    </member>
    <member name="M:UnityEngine.Camera.GetCommandBuffers(UnityEngine.Rendering.CameraEvent)">
      <summary>
        <para>Get command buffers to be executed at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <returns>
        <para>Array of command buffers.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Camera.GetStereoProjectionMatrix(UnityEngine.Camera/StereoscopicEye)">
      <summary>
        <para>Gets the projection matrix of a specific left or right stereoscopic eye.</para>
      </summary>
      <param name="eye">Specifies the stereoscopic eye whose view matrix needs to be returned.</param>
      <returns>
        <para>The view matrix of the specified stereoscopic eye.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Camera.GetStereoViewMatrix(UnityEngine.Camera/StereoscopicEye)">
      <summary>
        <para>Gets the left or right view matrix of a specific stereoscopic eye.</para>
      </summary>
      <param name="eye">Specifies the stereoscopic eye whose view matrix needs to be returned.</param>
      <returns>
        <para>The view matrix of the specified stereoscopic eye.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Camera.MonoOrStereoscopicEye">
      <summary>
        <para>A Camera eye corresponding to the left or right human eye for stereoscopic rendering, or neither for non-stereoscopic rendering.

A single Camera can render both left and right views in a single frame. Therefore, this enum describes which eye the Camera is currently rendering when returned by Camera.stereoActiveEye during a rendering callback (such as Camera.OnRenderImage), or which eye to act on when passed into a function.

The default value is Camera.MonoOrStereoscopicEye.Left, so Camera.MonoOrStereoscopicEye.Left may be returned by some methods or properties when called outside of rendering if stereoscopic rendering is enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.MonoOrStereoscopicEye.Left">
      <summary>
        <para>Camera eye corresponding to stereoscopic rendering of the left eye.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.MonoOrStereoscopicEye.Mono">
      <summary>
        <para>Camera eye corresponding to non-stereoscopic rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.MonoOrStereoscopicEye.Right">
      <summary>
        <para>Camera eye corresponding to stereoscopic rendering of the right eye.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.RemoveAllCommandBuffers">
      <summary>
        <para>Remove all command buffers set on this camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.RemoveCommandBuffer(UnityEngine.Rendering.CameraEvent,UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Remove command buffer from execution at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <param name="buffer">The buffer to execute.</param>
    </member>
    <member name="M:UnityEngine.Camera.RemoveCommandBuffers(UnityEngine.Rendering.CameraEvent)">
      <summary>
        <para>Remove command buffers from execution at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
    </member>
    <member name="M:UnityEngine.Camera.Render">
      <summary>
        <para>Render the camera manually.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.RenderToCubemap(UnityEngine.Cubemap,System.Int32)">
      <summary>
        <para>Render into a static cubemap from this camera.</para>
      </summary>
      <param name="cubemap">The cube map to render to.</param>
      <param name="faceMask">A bitmask which determines which of the six faces are rendered to.</param>
      <returns>
        <para>False is rendering fails, else true.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Camera.RenderToCubemap(UnityEngine.RenderTexture,System.Int32)">
      <summary>
        <para>Render into a cubemap from this camera.</para>
      </summary>
      <param name="faceMask">A bitfield indicating which cubemap faces should be rendered into.</param>
      <param name="cubemap">The texture to render to.</param>
      <returns>
        <para>False is rendering fails, else true.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Camera.RenderWithShader(UnityEngine.Shader,System.String)">
      <summary>
        <para>Render the camera with shader replacement.</para>
      </summary>
      <param name="shader"></param>
      <param name="replacementTag"></param>
    </member>
    <member name="M:UnityEngine.Camera.ResetAspect">
      <summary>
        <para>Revert the aspect ratio to the screen's aspect ratio.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetCullingMatrix">
      <summary>
        <para>Make culling queries reflect the camera's built in parameters.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetFieldOfView">
      <summary>
        <para>Reset to the default field of view.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetProjectionMatrix">
      <summary>
        <para>Make the projection reflect normal camera's parameters.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetReplacementShader">
      <summary>
        <para>Remove shader replacement from camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetStereoProjectionMatrices">
      <summary>
        <para>Reset the camera to using the Unity computed projection matrices for all stereoscopic eyes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetStereoViewMatrices">
      <summary>
        <para>Reset the camera to using the Unity computed view matrices for all stereoscopic eyes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetTransparencySortSettings">
      <summary>
        <para>Resets this Camera's transparency sort settings to the default. Default transparency settings are taken from GraphicsSettings instead of directly from this Camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ResetWorldToCameraMatrix">
      <summary>
        <para>Make the rendering position reflect the camera's position in the scene.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ScreenPointToRay(UnityEngine.Vector3)">
      <summary>
        <para>Returns a ray going from camera through a screen point.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Camera.ScreenToViewportPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from screen space into viewport space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Camera.ScreenToWorldPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from screen space into world space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Camera.SetReplacementShader(UnityEngine.Shader,System.String)">
      <summary>
        <para>Make the camera render with shader replacement.</para>
      </summary>
      <param name="shader"></param>
      <param name="replacementTag"></param>
    </member>
    <member name="M:UnityEngine.Camera.SetStereoProjectionMatrices(UnityEngine.Matrix4x4,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets custom projection matrices for both the left and right stereoscopic eyes.</para>
      </summary>
      <param name="leftMatrix">Projection matrix for the stereoscopic left eye.</param>
      <param name="rightMatrix">Projection matrix for the stereoscopic right eye.</param>
    </member>
    <member name="M:UnityEngine.Camera.SetStereoProjectionMatrix(UnityEngine.Camera/StereoscopicEye,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets a custom projection matrix for a specific stereoscopic eye.</para>
      </summary>
      <param name="eye">Specifies the stereoscopic eye whose projection matrix needs to be set.</param>
      <param name="matrix">The matrix to be set.</param>
    </member>
    <member name="M:UnityEngine.Camera.SetStereoViewMatrices(UnityEngine.Matrix4x4,UnityEngine.Matrix4x4)">
      <summary>
        <para>Set custom view matrices for both eyes.</para>
      </summary>
      <param name="leftMatrix">View matrix for the stereo left eye.</param>
      <param name="rightMatrix">View matrix for the stereo right eye.</param>
    </member>
    <member name="M:UnityEngine.Camera.SetStereoViewMatrix(UnityEngine.Camera/StereoscopicEye,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets a custom view matrix for a specific stereoscopic eye.</para>
      </summary>
      <param name="eye">Specifies the stereoscopic view matrix to set.</param>
      <param name="matrix">The matrix to be set.</param>
    </member>
    <member name="M:UnityEngine.Camera.SetTargetBuffers(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer)">
      <summary>
        <para>Sets the Camera to render to the chosen buffers of one or more RenderTextures.</para>
      </summary>
      <param name="colorBuffer">The RenderBuffer(s) to which color information will be rendered.</param>
      <param name="depthBuffer">The RenderBuffer to which depth information will be rendered.</param>
    </member>
    <member name="M:UnityEngine.Camera.SetTargetBuffers(UnityEngine.RenderBuffer[],UnityEngine.RenderBuffer)">
      <summary>
        <para>Sets the Camera to render to the chosen buffers of one or more RenderTextures.</para>
      </summary>
      <param name="colorBuffer">The RenderBuffer(s) to which color information will be rendered.</param>
      <param name="depthBuffer">The RenderBuffer to which depth information will be rendered.</param>
    </member>
    <member name="T:UnityEngine.Camera.StereoscopicEye">
      <summary>
        <para>Enum used to specify either the left or the right eye of a stereoscopic camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.StereoscopicEye.Left">
      <summary>
        <para>Specifies the target to be the left eye.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Camera.StereoscopicEye.Right">
      <summary>
        <para>Specifies the target to be the right eye.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Camera.ViewportPointToRay(UnityEngine.Vector3)">
      <summary>
        <para>Returns a ray going from camera through a viewport point.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Camera.ViewportToScreenPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from viewport space into screen space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Camera.ViewportToWorldPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from viewport space into world space.</para>
      </summary>
      <param name="position">The 3d vector in Viewport space.</param>
      <returns>
        <para>The 3d vector in World space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Camera.WorldToScreenPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from world space into screen space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Camera.WorldToViewportPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from world space into viewport space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="T:UnityEngine.CameraClearFlags">
      <summary>
        <para>Values for Camera.clearFlags, determining what to clear when rendering a Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraClearFlags.Depth">
      <summary>
        <para>Clear only the depth buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraClearFlags.Nothing">
      <summary>
        <para>Don't clear anything.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraClearFlags.Skybox">
      <summary>
        <para>Clear with the skybox.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraClearFlags.SolidColor">
      <summary>
        <para>Clear with a background color.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CameraType">
      <summary>
        <para>Describes different types of camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraType.Game">
      <summary>
        <para>Used to indicate a regular in-game camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraType.Preview">
      <summary>
        <para>Used to indicate a camera that is used for rendering previews in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraType.SceneView">
      <summary>
        <para>Used to indicate that a camera is used for rendering the Scene View in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CameraType.VR">
      <summary>
        <para>Used to indicate that a camera is used for rendering VR (in edit mode) in the Editor.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Canvas">
      <summary>
        <para>Element that can be used for screen rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.additionalShaderChannels">
      <summary>
        <para>Get or set the mask of additional shader channels to be used when creating the Canvas mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.cachedSortingLayerValue">
      <summary>
        <para>Cached calculated value based upon SortingLayerID.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.isRootCanvas">
      <summary>
        <para>Is this the root Canvas?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.normalizedSortingGridSize">
      <summary>
        <para>The normalized grid size that the canvas will split the renderable area into.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.overridePixelPerfect">
      <summary>
        <para>Allows for nested canvases to override pixelPerfect settings inherited from parent canvases.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.overrideSorting">
      <summary>
        <para>Override the sorting of canvas.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.pixelPerfect">
      <summary>
        <para>Force elements in the canvas to be aligned with pixels. Only applies with renderMode is Screen Space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.pixelRect">
      <summary>
        <para>Get the render rect for the Canvas.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.planeDistance">
      <summary>
        <para>How far away from the camera is the Canvas generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.referencePixelsPerUnit">
      <summary>
        <para>The number of pixels per unit that is considered the default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.renderMode">
      <summary>
        <para>Is the Canvas in World or Overlay mode?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.renderOrder">
      <summary>
        <para>The render order in which the canvas is being emitted to the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.rootCanvas">
      <summary>
        <para>Returns the Canvas closest to root, by checking through each parent and returning the last canvas found. If no other canvas is found then the canvas will return itself.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.scaleFactor">
      <summary>
        <para>Used to scale the entire canvas, while still making it fit the screen. Only applies with renderMode is Screen Space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.sortingGridNormalizedSize">
      <summary>
        <para>The normalized grid size that the canvas will split the renderable area into.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.sortingLayerID">
      <summary>
        <para>Unique ID of the Canvas' sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.sortingLayerName">
      <summary>
        <para>Name of the Canvas' sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.sortingOrder">
      <summary>
        <para>Canvas' order within a sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Canvas.targetDisplay">
      <summary>
        <para>For Overlay mode, display index on which the UI canvas will appear.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Canvas.willRenderCanvases(UnityEngine.Canvas/WillRenderCanvases)">
      <summary>
        <para>Event that is called just before Canvas rendering happens.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Canvas.worldCamera">
      <summary>
        <para>Camera used for sizing the Canvas when in Screen Space - Camera. Also used as the Camera that events will be sent through for a World Space [[Canvas].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Canvas.ForceUpdateCanvases">
      <summary>
        <para>Force all canvases to update their content.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Canvas.GetDefaultCanvasMaterial">
      <summary>
        <para>Returns the default material that can be used for rendering normal elements on the Canvas.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Canvas.GetDefaultCanvasTextMaterial">
      <summary>
        <para>Returns the default material that can be used for rendering text elements on the Canvas.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Canvas.GetETC1SupportedCanvasMaterial">
      <summary>
        <para>Gets or generates the ETC1 Material.</para>
      </summary>
      <returns>
        <para>The generated ETC1 Material from the Canvas.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.CanvasGroup">
      <summary>
        <para>A Canvas placable element that can be used to modify children Alpha, Raycasting, Enabled state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasGroup.alpha">
      <summary>
        <para>Set the alpha of the group.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasGroup.blocksRaycasts">
      <summary>
        <para>Does this group block raycasting (allow collision).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasGroup.ignoreParentGroups">
      <summary>
        <para>Should the group ignore parent groups?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasGroup.interactable">
      <summary>
        <para>Is the group interactable (are the elements beneath the group enabled).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CanvasGroup.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>Returns true if the Group allows raycasts.</para>
      </summary>
      <param name="sp"></param>
      <param name="eventCamera"></param>
    </member>
    <member name="T:UnityEngine.CanvasRenderer">
      <summary>
        <para>A component that will render to the screen after all normal rendering has completed when attached to a Canvas. Designed for GUI application.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.absoluteDepth">
      <summary>
        <para>Depth of the renderer relative to the root canvas.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.cull">
      <summary>
        <para>Indicates whether geometry emitted by this renderer is ignored.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.hasMoved">
      <summary>
        <para>True if any change has occured that would invalidate the positions of generated geometry.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.hasPopInstruction">
      <summary>
        <para>Enable 'render stack' pop draw call.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.hasRectClipping">
      <summary>
        <para>True if rect clipping has been enabled on this renderer.
See Also: CanvasRenderer.EnableRectClipping, CanvasRenderer.DisableRectClipping.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.isMask">
      <summary>
        <para>Is the UIRenderer a mask component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.materialCount">
      <summary>
        <para>The number of materials usable by this renderer.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.CanvasRenderer.onRequestRebuild(UnityEngine.CanvasRenderer/OnRequestRebuild)">
      <summary>
        <para>(Editor Only) Event that gets fired whenever the data in the CanvasRenderer gets invalidated and needs to be rebuilt.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.popMaterialCount">
      <summary>
        <para>The number of materials usable by this renderer. Used internally for masking.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CanvasRenderer.relativeDepth">
      <summary>
        <para>Depth of the renderer realative to the parent canvas.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.AddUIVertexStream(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Color32&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Take the Vertex steam and split it corrisponding arrays (positions, colors, uv0s, uv1s, normals and tangents).</para>
      </summary>
      <param name="verts">The UIVertex list to split.</param>
      <param name="positions">The destination list for the verts positions.</param>
      <param name="colors">The destination list for the verts colors.</param>
      <param name="uv0S">The destination list for the verts uv0s.</param>
      <param name="uv1S">The destination list for the verts uv1s.</param>
      <param name="normals">The destination list for the verts normals.</param>
      <param name="tangents">The destination list for the verts tangents.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.Clear">
      <summary>
        <para>Remove all cached vertices.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.CreateUIVertexStream(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Color32&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Convert a set of vertex components into a stream of UIVertex.</para>
      </summary>
      <param name="verts"></param>
      <param name="positions"></param>
      <param name="colors"></param>
      <param name="uv0S"></param>
      <param name="uv1S"></param>
      <param name="normals"></param>
      <param name="tangents"></param>
      <param name="indicies"></param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.DisableRectClipping">
      <summary>
        <para>Disables rectangle clipping for this CanvasRenderer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.EnableRectClipping(UnityEngine.Rect)">
      <summary>
        <para>Enables rect clipping on the CanvasRendered. Geometry outside of the specified rect will be clipped (not rendered).</para>
      </summary>
      <param name="rect"></param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.GetAlpha">
      <summary>
        <para>Get the current alpha of the renderer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.GetColor">
      <summary>
        <para>Get the current color of the renderer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.GetMaterial(System.Int32)">
      <summary>
        <para>Gets the current Material assigned to the CanvasRenderer.</para>
      </summary>
      <param name="index">The material index to retrieve (0 if this parameter is omitted).</param>
      <returns>
        <para>Result.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.GetMaterial">
      <summary>
        <para>Gets the current Material assigned to the CanvasRenderer.</para>
      </summary>
      <param name="index">The material index to retrieve (0 if this parameter is omitted).</param>
      <returns>
        <para>Result.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.GetPopMaterial(System.Int32)">
      <summary>
        <para>Gets the current Material assigned to the CanvasRenderer. Used internally for masking.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetAlpha(System.Single)">
      <summary>
        <para>Set the alpha of the renderer. Will be multiplied with the UIVertex alpha and the Canvas alpha.</para>
      </summary>
      <param name="alpha">Alpha.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetAlphaTexture(UnityEngine.Texture)">
      <summary>
        <para>The Alpha Texture that will be passed to the Shader under the _AlphaTex property.</para>
      </summary>
      <param name="texture">The Texture to be passed.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetColor(UnityEngine.Color)">
      <summary>
        <para>Set the color of the renderer. Will be multiplied with the UIVertex color and the Canvas color.</para>
      </summary>
      <param name="color">Renderer multiply color.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetMaterial(UnityEngine.Material,System.Int32)">
      <summary>
        <para>Set the material for the canvas renderer. If a texture is specified then it will be used as the 'MainTex' instead of the material's 'MainTex'.
See Also: CanvasRenderer.SetMaterialCount, CanvasRenderer.SetTexture.</para>
      </summary>
      <param name="material">Material for rendering.</param>
      <param name="texture">Material texture overide.</param>
      <param name="index">Material index.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetMaterial(UnityEngine.Material,UnityEngine.Texture)">
      <summary>
        <para>Set the material for the canvas renderer. If a texture is specified then it will be used as the 'MainTex' instead of the material's 'MainTex'.
See Also: CanvasRenderer.SetMaterialCount, CanvasRenderer.SetTexture.</para>
      </summary>
      <param name="material">Material for rendering.</param>
      <param name="texture">Material texture overide.</param>
      <param name="index">Material index.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetMesh(UnityEngine.Mesh)">
      <summary>
        <para>Sets the Mesh used by this renderer.</para>
      </summary>
      <param name="mesh"></param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetPopMaterial(UnityEngine.Material,System.Int32)">
      <summary>
        <para>Set the material for the canvas renderer. Used internally for masking.</para>
      </summary>
      <param name="material"></param>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetTexture(UnityEngine.Texture)">
      <summary>
        <para>Sets the texture used by this renderer's material.</para>
      </summary>
      <param name="texture"></param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetVertices(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;)">
      <summary>
        <para>Set the vertices for the UIRenderer.</para>
      </summary>
      <param name="vertices">Array of vertices to set.</param>
      <param name="size">Number of vertices to set.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SetVertices(UnityEngine.UIVertex[],System.Int32)">
      <summary>
        <para>Set the vertices for the UIRenderer.</para>
      </summary>
      <param name="vertices">Array of vertices to set.</param>
      <param name="size">Number of vertices to set.</param>
    </member>
    <member name="M:UnityEngine.CanvasRenderer.SplitUIVertexStreams(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Color32&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Given a list of UIVertex, split the stream into it's component types.</para>
      </summary>
      <param name="verts"></param>
      <param name="positions"></param>
      <param name="colors"></param>
      <param name="uv0S"></param>
      <param name="uv1S"></param>
      <param name="normals"></param>
      <param name="tangents"></param>
      <param name="indicies"></param>
    </member>
    <member name="T:UnityEngine.CapsuleCollider">
      <summary>
        <para>A capsule-shaped primitive collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.center">
      <summary>
        <para>The center of the capsule, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.direction">
      <summary>
        <para>The direction of the capsule.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.height">
      <summary>
        <para>The height of the capsule meased in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider.radius">
      <summary>
        <para>The radius of the sphere, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CapsuleCollider2D">
      <summary>
        <para>A capsule-shaped primitive collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider2D.direction">
      <summary>
        <para>The direction that the capsule sides can extend.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider2D.size">
      <summary>
        <para>The width and height of the capsule area.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CapsuleDirection2D">
      <summary>
        <para>The direction that the capsule sides can extend.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CapsuleDirection2D.Horizontal">
      <summary>
        <para>The capsule sides extend horizontally.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CapsuleDirection2D.Vertical">
      <summary>
        <para>The capsule sides extend vertically.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CharacterController">
      <summary>
        <para>A CharacterController allows you to easily do movement constrained by collisions without having to deal with a rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.center">
      <summary>
        <para>The center of the character's capsule relative to the transform's position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.collisionFlags">
      <summary>
        <para>What part of the capsule collided with the environment during the last CharacterController.Move call.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.detectCollisions">
      <summary>
        <para>Determines whether other rigidbodies or character controllers collide with this character controller (by default this is always enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.enableOverlapRecovery">
      <summary>
        <para>Enables or disables overlap recovery.
 Enables or disables overlap recovery. Used to depenetrate character controllers from static objects when an overlap is detected.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.height">
      <summary>
        <para>The height of the character's capsule.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.isGrounded">
      <summary>
        <para>Was the CharacterController touching the ground during the last move?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.minMoveDistance">
      <summary>
        <para>Gets or sets the minimum move distance of the character controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.radius">
      <summary>
        <para>The radius of the character's capsule.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.skinWidth">
      <summary>
        <para>The character's collision skin width.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.slopeLimit">
      <summary>
        <para>The character controllers slope limit in degrees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.stepOffset">
      <summary>
        <para>The character controllers step offset in meters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterController.velocity">
      <summary>
        <para>The current relative velocity of the Character (see notes).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CharacterController.Move(UnityEngine.Vector3)">
      <summary>
        <para>A more complex move function taking absolute movement deltas.</para>
      </summary>
      <param name="motion"></param>
    </member>
    <member name="M:UnityEngine.CharacterController.SimpleMove(UnityEngine.Vector3)">
      <summary>
        <para>Moves the character with speed.</para>
      </summary>
      <param name="speed"></param>
    </member>
    <member name="T:UnityEngine.CharacterInfo">
      <summary>
        <para>Specification for how to render a character from the font texture. See Font.characterInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.advance">
      <summary>
        <para>The horizontal distance from the origin of this character to the origin of the next character.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.bearing">
      <summary>
        <para>The horizontal distance from the origin of this glyph to the begining of the glyph image.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.flipped">
      <summary>
        <para>Is the character flipped?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.glyphHeight">
      <summary>
        <para>The height of the glyph image.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.glyphWidth">
      <summary>
        <para>The width of the glyph image.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.index">
      <summary>
        <para>Unicode value of the character.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.maxX">
      <summary>
        <para>The maximum extend of the glyph image in the x-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.maxY">
      <summary>
        <para>The maximum extend of the glyph image in the y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.minX">
      <summary>
        <para>The minium extend of the glyph image in the x-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.minY">
      <summary>
        <para>The minimum extend of the glyph image in the y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.size">
      <summary>
        <para>The size of the character or 0 if it is the default font size.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.style">
      <summary>
        <para>The style of the character.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.uv">
      <summary>
        <para>UV coordinates for the character in the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.uvBottomLeft">
      <summary>
        <para>The uv coordinate matching the bottom left of the glyph image in the font texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.uvBottomRight">
      <summary>
        <para>The uv coordinate matching the bottom right of the glyph image in the font texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.uvTopLeft">
      <summary>
        <para>The uv coordinate matching the top left of the glyph image in the font texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterInfo.uvTopRight">
      <summary>
        <para>The uv coordinate matching the top right of the glyph image in the font texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.vert">
      <summary>
        <para>Screen coordinates for the character in generated text meshes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CharacterInfo.width">
      <summary>
        <para>How far to advance between the beginning of this charcater and the next.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CharacterJoint">
      <summary>
        <para>Character Joints are mainly used for Ragdoll effects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.enableProjection">
      <summary>
        <para>Brings violated constraints back into alignment even when the solver fails.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.highTwistLimit">
      <summary>
        <para>The upper limit around the primary axis of the character joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.lowTwistLimit">
      <summary>
        <para>The lower limit around the primary axis of the character joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.projectionAngle">
      <summary>
        <para>Set the angular tolerance threshold (in degrees) for projection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.projectionDistance">
      <summary>
        <para>Set the linear tolerance threshold for projection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swing1Limit">
      <summary>
        <para>The angular limit of rotation (in degrees) around the primary axis of the character joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swing2Limit">
      <summary>
        <para>The angular limit of rotation (in degrees) around the primary axis of the character joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swingAxis">
      <summary>
        <para>The secondary axis around which the joint can rotate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.swingLimitSpring">
      <summary>
        <para>The configuration of the spring attached to the swing limits of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CharacterJoint.twistLimitSpring">
      <summary>
        <para>The configuration of the spring attached to the twist limits of the joint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CircleCollider2D">
      <summary>
        <para>Collider for 2D physics representing an circle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CircleCollider2D.center">
      <summary>
        <para>The center point of the collider in local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CircleCollider2D.radius">
      <summary>
        <para>Radius of the circle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Cloth">
      <summary>
        <para>The Cloth class provides an interface to cloth simulation physics.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.bendingStiffness">
      <summary>
        <para>Bending stiffness of the cloth.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.capsuleColliders">
      <summary>
        <para>An array of CapsuleColliders which this Cloth instance should collide with.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.coefficients">
      <summary>
        <para>The cloth skinning coefficients used to set up how the cloth interacts with the skinned mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.collisionMassScale">
      <summary>
        <para>How much to increase mass of colliding particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.damping">
      <summary>
        <para>Damp cloth motion.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.enabled">
      <summary>
        <para>Is this cloth enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.externalAcceleration">
      <summary>
        <para>A constant, external acceleration applied to the cloth.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.friction">
      <summary>
        <para>The friction of the cloth when colliding with the character.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.normals">
      <summary>
        <para>The current normals of the cloth object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.randomAcceleration">
      <summary>
        <para>A random, external acceleration applied to the cloth.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.sleepThreshold">
      <summary>
        <para>Cloth's sleep threshold.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.sphereColliders">
      <summary>
        <para>An array of ClothSphereColliderPairs which this Cloth instance should collide with.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.stretchingStiffness">
      <summary>
        <para>Stretching stiffness of the cloth.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.useGravity">
      <summary>
        <para>Should gravity affect the cloth simulation?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.useVirtualParticles">
      <summary>
        <para>Add one virtual particle per triangle to improve collision stability.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.vertices">
      <summary>
        <para>The current vertex positions of the cloth object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.worldAccelerationScale">
      <summary>
        <para>How much world-space acceleration of the character will affect cloth vertices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cloth.worldVelocityScale">
      <summary>
        <para>How much world-space movement of the character will affect cloth vertices.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Cloth.ClearTransformMotion">
      <summary>
        <para>Clear the pending transform changes from affecting the cloth simulation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Cloth.SetEnabledFading(System.Boolean,System.Single)">
      <summary>
        <para>Fade the cloth simulation in or out.</para>
      </summary>
      <param name="enabled">Fading enabled or not.</param>
      <param name="interpolationTime"></param>
    </member>
    <member name="T:UnityEngine.ClothSkinningCoefficient">
      <summary>
        <para>The ClothSkinningCoefficient struct is used to set up how a Cloth component is allowed to move with respect to the SkinnedMeshRenderer it is attached to.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ClothSkinningCoefficient.collisionSphereDistance">
      <summary>
        <para>Definition of a sphere a vertex is not allowed to enter. This allows collision against the animated cloth.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ClothSkinningCoefficient.maxDistance">
      <summary>
        <para>Distance a vertex is allowed to travel from the skinned mesh vertex position.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ClothSphereColliderPair">
      <summary>
        <para>A pair of SphereColliders used to define shapes for Cloth objects to collide against.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ClothSphereColliderPair.first">
      <summary>
        <para>The first SphereCollider of a ClothSphereColliderPair.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ClothSphereColliderPair.second">
      <summary>
        <para>The second SphereCollider of a ClothSphereColliderPair.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ClothSphereColliderPair.#ctor(UnityEngine.SphereCollider)">
      <summary>
        <para>Creates a ClothSphereColliderPair. If only one SphereCollider is given, the ClothSphereColliderPair will define a simple sphere. If two SphereColliders are given, the ClothSphereColliderPair defines a conic capsule shape, composed of the two spheres and the cone connecting the two.</para>
      </summary>
      <param name="a">The first SphereCollider of a ClothSphereColliderPair.</param>
      <param name="b">The second SphereCollider of a ClothSphereColliderPair.</param>
    </member>
    <member name="M:UnityEngine.ClothSphereColliderPair.#ctor(UnityEngine.SphereCollider,UnityEngine.SphereCollider)">
      <summary>
        <para>Creates a ClothSphereColliderPair. If only one SphereCollider is given, the ClothSphereColliderPair will define a simple sphere. If two SphereColliders are given, the ClothSphereColliderPair defines a conic capsule shape, composed of the two spheres and the cone connecting the two.</para>
      </summary>
      <param name="a">The first SphereCollider of a ClothSphereColliderPair.</param>
      <param name="b">The second SphereCollider of a ClothSphereColliderPair.</param>
    </member>
    <member name="T:UnityEngine.ClusterInput">
      <summary>
        <para>Interface for reading and writing inputs in a Unity Cluster.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ClusterInput.AddInput(System.String,System.String,System.String,System.Int32,UnityEngine.ClusterInputType)">
      <summary>
        <para>Add a new VRPN input entry.</para>
      </summary>
      <param name="name">Name of the input entry. This has to be unique.</param>
      <param name="deviceName">Device name registered to VRPN server.</param>
      <param name="serverUrl">URL to the vrpn server.</param>
      <param name="index">Index of the Input entry, refer to vrpn.cfg if unsure.</param>
      <param name="type">Type of the input.</param>
      <returns>
        <para>True if the operation succeed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ClusterInput.CheckConnectionToServer(System.String)">
      <summary>
        <para>Check the connection status of the device to the VRPN server it connected to.</para>
      </summary>
      <param name="name">Name of the input entry.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.EditInput(System.String,System.String,System.String,System.Int32,UnityEngine.ClusterInputType)">
      <summary>
        <para>Edit an input entry which added via ClusterInput.AddInput.</para>
      </summary>
      <param name="name">Name of the input entry. This has to be unique.</param>
      <param name="deviceName">Device name registered to VRPN server.</param>
      <param name="serverUrl">URL to the vrpn server.</param>
      <param name="index">Index of the Input entry, refer to vrpn.cfg if unsure.</param>
      <param name="type">Type of the ClusterInputType as follow.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.GetAxis(System.String)">
      <summary>
        <para>Returns the axis value as a continous float.</para>
      </summary>
      <param name="name">Name of input to poll.c.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.GetButton(System.String)">
      <summary>
        <para>Returns the binary value of a button.</para>
      </summary>
      <param name="name">Name of input to poll.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.GetTrackerPosition(System.String)">
      <summary>
        <para>Return the position of a tracker as a Vector3.</para>
      </summary>
      <param name="name">Name of input to poll.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.GetTrackerRotation(System.String)">
      <summary>
        <para>Returns the rotation of a tracker as a Quaternion.</para>
      </summary>
      <param name="name">Name of input to poll.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.SetAxis(System.String,System.Single)">
      <summary>
        <para>Sets the axis value for this input. Only works for input typed Custom.</para>
      </summary>
      <param name="name">Name of input to modify.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.SetButton(System.String,System.Boolean)">
      <summary>
        <para>Sets the button value for this input. Only works for input typed Custom.</para>
      </summary>
      <param name="name">Name of input to modify.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.SetTrackerPosition(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Sets the tracker position for this input. Only works for input typed Custom.</para>
      </summary>
      <param name="name">Name of input to modify.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ClusterInput.SetTrackerRotation(System.String,UnityEngine.Quaternion)">
      <summary>
        <para>Sets the tracker rotation for this input. Only works for input typed Custom.</para>
      </summary>
      <param name="name">Name of input to modify.</param>
      <param name="value">Value to set.</param>
    </member>
    <member name="T:UnityEngine.ClusterInputType">
      <summary>
        <para>Values to determine the type of input value to be expect from one entry of ClusterInput.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ClusterInputType.Axis">
      <summary>
        <para>Device is an analog axis that provides continuous value represented by a float.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ClusterInputType.Button">
      <summary>
        <para>Device that return a binary result of pressed or not pressed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ClusterInputType.CustomProvidedInput">
      <summary>
        <para>A user customized input.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ClusterInputType.Tracker">
      <summary>
        <para>Device that provide position and orientation values.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ClusterNetwork">
      <summary>
        <para>A helper class that contains static method to inquire status of Unity Cluster.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ClusterNetwork.isDisconnected">
      <summary>
        <para>Check whether the current instance is disconnected from the cluster network.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ClusterNetwork.isMasterOfCluster">
      <summary>
        <para>Check whether the current instance is a master node in the cluster network.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ClusterNetwork.nodeIndex">
      <summary>
        <para>To acquire or set the node index of the current machine from the cluster network.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Collider">
      <summary>
        <para>A base class of all colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.attachedRigidbody">
      <summary>
        <para>The rigidbody the collider is attached to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.bounds">
      <summary>
        <para>The world space bounding volume of the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.contactOffset">
      <summary>
        <para>Contact offset value of this collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.enabled">
      <summary>
        <para>Enabled Colliders will collide with other colliders, disabled Colliders won't.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.isTrigger">
      <summary>
        <para>Is the collider a trigger?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.material">
      <summary>
        <para>The material used by the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider.sharedMaterial">
      <summary>
        <para>The shared physic material of this collider.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Collider.ClosestPoint(UnityEngine.Vector3)">
      <summary>
        <para>Returns a point on the collider that is closest to a given location.</para>
      </summary>
      <param name="position">Location you want to find the closest point to.</param>
      <returns>
        <para>The point on the collider that is closest to the specified location.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider.ClosestPointOnBounds(UnityEngine.Vector3)">
      <summary>
        <para>The closest point to the bounding box of the attached collider.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Collider.Raycast(UnityEngine.Ray,UnityEngine.RaycastHit&amp;,System.Single)">
      <summary>
        <para>Casts a Ray that ignores all Colliders except this one.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="maxDistance">The max length of the ray.</param>
      <returns>
        <para>True when the ray intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Collider2D">
      <summary>
        <para>Parent class for collider types used with 2D gameplay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.attachedRigidbody">
      <summary>
        <para>The Rigidbody2D attached to the Collider2D's GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.bounciness">
      <summary>
        <para>Get the bounciness used by the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.bounds">
      <summary>
        <para>The world space bounding area of the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.composite">
      <summary>
        <para>Get the CompositeCollider2D that is available to be attached to the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.density">
      <summary>
        <para>The density of the collider used to calculate its mass (when auto mass is enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.friction">
      <summary>
        <para>Get the friction used by the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.isTrigger">
      <summary>
        <para>Is this collider configured as a trigger?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.offset">
      <summary>
        <para>The local offset of the collider geometry.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.shapeCount">
      <summary>
        <para>The number of separate shaped regions in the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.sharedMaterial">
      <summary>
        <para>The PhysicsMaterial2D that is applied to this collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.usedByComposite">
      <summary>
        <para>Sets whether the Collider will be used or not used by a CompositeCollider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.usedByEffector">
      <summary>
        <para>Whether the collider is used by an attached effector or not.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Collider2D.Cast(UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Boolean)">
      <summary>
        <para>Casts the collider shape into the scene starting at the collider position ignoring the collider itself.</para>
      </summary>
      <param name="direction">Vector representing the direction to cast the shape.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the shape.</param>
      <param name="ignoreSiblingColliders">Should colliders attached to the same Rigidbody2D (known as sibling colliders) be ignored?</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Cast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single,System.Boolean)">
      <summary>
        <para>Casts the collider shape into the scene starting at the collider position ignoring the collider itself.</para>
      </summary>
      <param name="direction">Vector representing the direction to cast the shape.</param>
      <param name="contactFilter">Filter results defined by the contact filter.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the shape.</param>
      <param name="ignoreSiblingColliders">Should colliders attached to the same Rigidbody2D (known as sibling colliders) be ignored?</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Distance(UnityEngine.Collider2D)">
      <summary>
        <para>Calculates the minimum separation of this collider against another collider.</para>
      </summary>
      <param name="collider">A collider used to calculate the minimum separation against this collider.</param>
      <returns>
        <para>The minimum separation of collider and this collider.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points for this collider.</para>
      </summary>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with this collider.</para>
      </summary>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points for this collider, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with this collider, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of collidersplaced in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouching(UnityEngine.Collider2D)">
      <summary>
        <para>Check whether this collider is touching the collider or not.</para>
      </summary>
      <param name="collider">The collider to check if it is touching this collider.</param>
      <returns>
        <para>Whether this collider is touching the collider or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouching(UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Check whether this collider is touching the collider or not with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="collider">The collider to check if it is touching this collider.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <returns>
        <para>Whether this collider is touching the collider or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouching(UnityEngine.ContactFilter2D)">
      <summary>
        <para>Check whether this collider is touching other colliders or not with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <returns>
        <para>Whether this collider is touching the collider or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouchingLayers(System.Int32)">
      <summary>
        <para>Checks whether this collider is touching any colliders on the specified layerMask or not.</para>
      </summary>
      <param name="layerMask">Any colliders on any of these layers count as touching.</param>
      <returns>
        <para>Whether this collider is touching any collider on the specified layerMask or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.OverlapCollider(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Get a list of all colliders that overlap this collider.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth.  Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.OverlapPoint(UnityEngine.Vector2)">
      <summary>
        <para>Check if a collider overlaps a point in space.</para>
      </summary>
      <param name="point">A point in world space.</param>
      <returns>
        <para>Does point overlap the collider?</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Raycast(UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a ray into the scene starting at the collider position ignoring the collider itself.</para>
      </summary>
      <param name="direction">Vector representing the direction of the ray.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="contactFilter">Filter results defined by the contact filter.</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Raycast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Casts a ray into the scene starting at the collider position ignoring the collider itself.</para>
      </summary>
      <param name="direction">Vector representing the direction of the ray.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <param name="contactFilter">Filter results defined by the contact filter.</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ColliderDistance2D">
      <summary>
        <para>Represents the separation or overlap of two Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.distance">
      <summary>
        <para>Gets the distance between two colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.isOverlapped">
      <summary>
        <para>Gets whether the distance represents an overlap or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.isValid">
      <summary>
        <para>Gets whether the distance is valid or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.normal">
      <summary>
        <para>A normalized vector that points from pointB to pointA.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.pointA">
      <summary>
        <para>A point on a Collider2D that is a specific distance away from pointB.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.pointB">
      <summary>
        <para>A point on a Collider2D that is a specific distance away from pointA.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Collision">
      <summary>
        <para>Describes a collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.collider">
      <summary>
        <para>The Collider we hit (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.contacts">
      <summary>
        <para>The contact points generated by the physics engine.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.gameObject">
      <summary>
        <para>The GameObject whose collider we are colliding with. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.impulse">
      <summary>
        <para>The total impulse applied to this contact pair to resolve the collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.relativeVelocity">
      <summary>
        <para>The relative linear velocity of the two colliding objects (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.rigidbody">
      <summary>
        <para>The Rigidbody we hit (Read Only). This is null if the object we hit is a collider with no rigidbody attached.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision.transform">
      <summary>
        <para>The Transform of the object we hit (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Collision2D">
      <summary>
        <para>Collision details returned by 2D physics callback functions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.collider">
      <summary>
        <para>The incoming Collider2D involved in the collision with the otherCollider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.contacts">
      <summary>
        <para>The specific points of contact with the incoming Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.enabled">
      <summary>
        <para>Indicates whether the collision response or reaction is enabled or disabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.gameObject">
      <summary>
        <para>The incoming GameObject involved in the collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.otherCollider">
      <summary>
        <para>The other Collider2D involved in the collision with the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.otherRigidbody">
      <summary>
        <para>The other Rigidbody2D involved in the collision with the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.relativeVelocity">
      <summary>
        <para>The relative linear velocity of the two colliding objects (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.rigidbody">
      <summary>
        <para>The incoming Rigidbody2D involved in the collision with the otherRigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.transform">
      <summary>
        <para>The Transform of the incoming object involved in the collision.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CollisionDetectionMode">
      <summary>
        <para>The collision detection mode constants used for Rigidbody.collisionDetectionMode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode.Continuous">
      <summary>
        <para>Continuous collision detection is on for colliding with static mesh geometry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode.ContinuousDynamic">
      <summary>
        <para>Continuous collision detection is on for colliding with static and dynamic geometry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode.Discrete">
      <summary>
        <para>Continuous collision detection is off for this Rigidbody.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CollisionDetectionMode2D">
      <summary>
        <para>Controls how collisions are detected when a Rigidbody2D moves.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode2D.Continuous">
      <summary>
        <para>Ensures that all collisions are detected when a Rigidbody2D moves.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode2D.Discrete">
      <summary>
        <para>When a Rigidbody2D moves, only collisions at the new position are detected.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode2D.None">
      <summary>
        <para>This mode is obsolete.  You should use Discrete mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CollisionFlags">
      <summary>
        <para>CollisionFlags is a bitmask returned by CharacterController.Move.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionFlags.Above">
      <summary>
        <para>CollisionFlags is a bitmask returned by CharacterController.Move.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionFlags.Below">
      <summary>
        <para>CollisionFlags is a bitmask returned by CharacterController.Move.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionFlags.None">
      <summary>
        <para>CollisionFlags is a bitmask returned by CharacterController.Move.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionFlags.Sides">
      <summary>
        <para>CollisionFlags is a bitmask returned by CharacterController.Move.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Color">
      <summary>
        <para>Representation of RGBA colors.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color.a">
      <summary>
        <para>Alpha component of the color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color.b">
      <summary>
        <para>Blue component of the color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.black">
      <summary>
        <para>Solid black. RGBA is (0, 0, 0, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.blue">
      <summary>
        <para>Solid blue. RGBA is (0, 0, 1, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.clear">
      <summary>
        <para>Completely transparent. RGBA is (0, 0, 0, 0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.cyan">
      <summary>
        <para>Cyan. RGBA is (0, 1, 1, 1).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color.g">
      <summary>
        <para>Green component of the color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.gamma">
      <summary>
        <para>A version of the color that has had the gamma curve applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.gray">
      <summary>
        <para>Gray. RGBA is (0.5, 0.5, 0.5, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.grayscale">
      <summary>
        <para>The grayscale value of the color. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.green">
      <summary>
        <para>Solid green. RGBA is (0, 1, 0, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.grey">
      <summary>
        <para>English spelling for gray. RGBA is the same (0.5, 0.5, 0.5, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.linear">
      <summary>
        <para>A linear value of an sRGB color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.magenta">
      <summary>
        <para>Magenta. RGBA is (1, 0, 1, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.maxColorComponent">
      <summary>
        <para>Returns the maximum color component value: Max(r,g,b).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color.r">
      <summary>
        <para>Red component of the color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.red">
      <summary>
        <para>Solid red. RGBA is (1, 0, 0, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.white">
      <summary>
        <para>Solid white. RGBA is (1, 1, 1, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Color.yellow">
      <summary>
        <para>Yellow. RGBA is (1, 0.92, 0.016, 1), but the color is nice to look at!</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Constructs a new Color with given r,g,b,a components.</para>
      </summary>
      <param name="r">Red component.</param>
      <param name="g">Green component.</param>
      <param name="b">Blue component.</param>
      <param name="a">Alpha component.</param>
    </member>
    <member name="M:UnityEngine.Color.#ctor(System.Single,System.Single,System.Single)">
      <summary>
        <para>Constructs a new Color with given r,g,b components and sets a to 1.</para>
      </summary>
      <param name="r">Red component.</param>
      <param name="g">Green component.</param>
      <param name="b">Blue component.</param>
    </member>
    <member name="M:UnityEngine.Color.HSVToRGB(System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates an RGB colour from HSV input.</para>
      </summary>
      <param name="H">Hue [0..1].</param>
      <param name="S">Saturation [0..1].</param>
      <param name="V">Value [0..1].</param>
      <param name="hdr">Output HDR colours. If true, the returned colour will not be clamped to [0..1].</param>
      <returns>
        <para>An opaque colour with HSV matching the input.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Color.HSVToRGB(System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
        <para>Creates an RGB colour from HSV input.</para>
      </summary>
      <param name="H">Hue [0..1].</param>
      <param name="S">Saturation [0..1].</param>
      <param name="V">Value [0..1].</param>
      <param name="hdr">Output HDR colours. If true, the returned colour will not be clamped to [0..1].</param>
      <returns>
        <para>An opaque colour with HSV matching the input.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.Color.implop_Color(Vector4)(UnityEngine.Vector4)">
      <summary>
        <para>Colors can be implicitly converted to and from Vector4.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="?:UnityEngine.Color.implop_Vector4(Color)(UnityEngine.Color)">
      <summary>
        <para>Colors can be implicitly converted to and from Vector4.</para>
      </summary>
      <param name="c"></param>
    </member>
    <member name="M:UnityEngine.Color.Lerp(UnityEngine.Color,UnityEngine.Color,System.Single)">
      <summary>
        <para>Linearly interpolates between colors a and b by t.</para>
      </summary>
      <param name="a">Color a</param>
      <param name="b">Color b</param>
      <param name="t">Float for combining a and b</param>
    </member>
    <member name="M:UnityEngine.Color.LerpUnclamped(UnityEngine.Color,UnityEngine.Color,System.Single)">
      <summary>
        <para>Linearly interpolates between colors a and b by t.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="?:UnityEngine.Color.op_Divide(UnityEngine.Color,System.Single)">
      <summary>
        <para>Divides color a by the float b. Each color component is scaled separately.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Color.op_Minus(UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Subtracts color b from color a. Each component is subtracted separately.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Color.op_Multiply(UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Multiplies two colors together. Each component is multiplied separately.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Color.op_Multiply(UnityEngine.Color,System.Single)">
      <summary>
        <para>Multiplies color a by the float b. Each color component is scaled separately.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Color.op_Multiply(System.Single,UnityEngine.Color)">
      <summary>
        <para>Multiplies color a by the float b. Each color component is scaled separately.</para>
      </summary>
      <param name="b"></param>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Color.op_Plus(UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Adds two colors together. Each component is added separately.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Color.RGBToHSV(UnityEngine.Color,System.Single&amp;,System.Single&amp;,System.Single&amp;)">
      <summary>
        <para>Calculates the hue, saturation and value of an RGB input color.</para>
      </summary>
      <param name="rgbColor">An input color.</param>
      <param name="H">Output variable for hue.</param>
      <param name="S">Output variable for saturation.</param>
      <param name="V">Output variable for value.</param>
    </member>
    <member name="P:UnityEngine.Color.this">
      <summary>
        <para>Access the r, g, b,a components using [0], [1], [2], [3] respectively.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Color.ToString">
      <summary>
        <para>Returns a nicely formatted string of this color.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Color.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string of this color.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.Color32">
      <summary>
        <para>Representation of RGBA colors in 32 bit format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color32.a">
      <summary>
        <para>Alpha component of the color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color32.b">
      <summary>
        <para>Blue component of the color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color32.g">
      <summary>
        <para>Green component of the color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Color32.r">
      <summary>
        <para>Red component of the color.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Color32.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
        <para>Constructs a new Color32 with given r, g, b, a components.</para>
      </summary>
      <param name="r"></param>
      <param name="g"></param>
      <param name="b"></param>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Color32.implop_Color(Color32)(UnityEngine.Color32)">
      <summary>
        <para>Color32 can be implicitly converted to and from Color.</para>
      </summary>
      <param name="c"></param>
    </member>
    <member name="?:UnityEngine.Color32.implop_Color32(Color)(UnityEngine.Color)">
      <summary>
        <para>Color32 can be implicitly converted to and from Color.</para>
      </summary>
      <param name="c"></param>
    </member>
    <member name="M:UnityEngine.Color32.Lerp(UnityEngine.Color32,UnityEngine.Color32,System.Single)">
      <summary>
        <para>Linearly interpolates between colors a and b by t.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Color32.LerpUnclamped(UnityEngine.Color32,UnityEngine.Color32,System.Single)">
      <summary>
        <para>Linearly interpolates between colors a and b by t.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Color32.ToString">
      <summary>
        <para>Returns a nicely formatted string of this color.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Color32.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string of this color.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.ColorSpace">
      <summary>
        <para>Color space for player settings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorSpace.Gamma">
      <summary>
        <para>Gamma color space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorSpace.Linear">
      <summary>
        <para>Linear color space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorSpace.Uninitialized">
      <summary>
        <para>Uninitialized color space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ColorUsageAttribute">
      <summary>
        <para>Attribute used to configure the usage of the ColorField and Color Picker for a color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorUsageAttribute.hdr">
      <summary>
        <para>If set to true the Color is treated as a HDR color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorUsageAttribute.maxBrightness">
      <summary>
        <para>Maximum allowed HDR color component value when using the HDR Color Picker.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorUsageAttribute.maxExposureValue">
      <summary>
        <para>Maximum exposure value allowed in the HDR Color Picker.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorUsageAttribute.minBrightness">
      <summary>
        <para>Minimum allowed HDR color component value when using the Color Picker.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorUsageAttribute.minExposureValue">
      <summary>
        <para>Minimum exposure value allowed in the HDR Color Picker.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColorUsageAttribute.showAlpha">
      <summary>
        <para>If false then the alpha bar is hidden in the ColorField and the alpha value is not shown in the Color Picker.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ColorUsageAttribute.#ctor(System.Boolean)">
      <summary>
        <para>Attribute for Color fields. Used for configuring the GUI for the color.</para>
      </summary>
      <param name="showAlpha">If false then the alpha channel info is hidden both in the ColorField and in the Color Picker.</param>
      <param name="hdr">Set to true if the color should be treated as a HDR color (default value: false).</param>
      <param name="minBrightness">Minimum allowed HDR color component value when using the HDR Color Picker (default value: 0).</param>
      <param name="maxBrightness">Maximum allowed HDR color component value when using the HDR Color Picker (default value: 8).</param>
      <param name="minExposureValue">Minimum exposure value allowed in the HDR Color Picker (default value: 1/8 = 0.125).</param>
      <param name="maxExposureValue">Maximum exposure value allowed in the HDR Color Picker (default value: 3).</param>
    </member>
    <member name="M:UnityEngine.ColorUsageAttribute.#ctor(System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Attribute for Color fields. Used for configuring the GUI for the color.</para>
      </summary>
      <param name="showAlpha">If false then the alpha channel info is hidden both in the ColorField and in the Color Picker.</param>
      <param name="hdr">Set to true if the color should be treated as a HDR color (default value: false).</param>
      <param name="minBrightness">Minimum allowed HDR color component value when using the HDR Color Picker (default value: 0).</param>
      <param name="maxBrightness">Maximum allowed HDR color component value when using the HDR Color Picker (default value: 8).</param>
      <param name="minExposureValue">Minimum exposure value allowed in the HDR Color Picker (default value: 1/8 = 0.125).</param>
      <param name="maxExposureValue">Maximum exposure value allowed in the HDR Color Picker (default value: 3).</param>
    </member>
    <member name="T:UnityEngine.ColorUtility">
      <summary>
        <para>A collection of common color functions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ColorUtility.ToHtmlStringRGB(UnityEngine.Color)">
      <summary>
        <para>Returns the color as a hexadecimal string in the format "RRGGBB".</para>
      </summary>
      <param name="color">The color to be converted.</param>
      <returns>
        <para>Hexadecimal string representing the color.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ColorUtility.ToHtmlStringRGBA(UnityEngine.Color)">
      <summary>
        <para>Returns the color as a hexadecimal string in the format "RRGGBBAA".</para>
      </summary>
      <param name="color">The color to be converted.</param>
      <returns>
        <para>Hexadecimal string representing the color.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ColorUtility.TryParseHtmlString(System.String,UnityEngine.Color&amp;)">
      <summary>
        <para>Attempts to convert a html color string.</para>
      </summary>
      <param name="htmlString">Case insensitive html string to be converted into a color.</param>
      <param name="color">The converted color.</param>
      <returns>
        <para>True if the string was successfully converted else false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.CombineInstance">
      <summary>
        <para>Struct used to describe meshes to be combined using Mesh.CombineMeshes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CombineInstance.lightmapScaleOffset">
      <summary>
        <para>The baked lightmap UV scale and offset applied to the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CombineInstance.mesh">
      <summary>
        <para>Mesh to combine.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CombineInstance.realtimeLightmapScaleOffset">
      <summary>
        <para>The realtime lightmap UV scale and offset applied to the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CombineInstance.subMeshIndex">
      <summary>
        <para>Sub-Mesh index of the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CombineInstance.transform">
      <summary>
        <para>Matrix to transform the Mesh with before combining.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Compass">
      <summary>
        <para>Interface into compass functionality.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Compass.enabled">
      <summary>
        <para>Used to enable or disable compass. Note, that if you want Input.compass.trueHeading property to contain a valid value, you must also enable location updates by calling Input.location.Start().</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Compass.headingAccuracy">
      <summary>
        <para>Accuracy of heading reading in degrees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Compass.magneticHeading">
      <summary>
        <para>The heading in degrees relative to the magnetic North Pole. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Compass.rawVector">
      <summary>
        <para>The raw geomagnetic data measured in microteslas. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Compass.timestamp">
      <summary>
        <para>Timestamp (in seconds since 1970) when the heading was last time updated. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Compass.trueHeading">
      <summary>
        <para>The heading in degrees relative to the geographic North Pole. (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Component">
      <summary>
        <para>Base class for everything attached to GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.animation">
      <summary>
        <para>The Animation attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.audio">
      <summary>
        <para>The AudioSource attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.camera">
      <summary>
        <para>The Camera attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.collider">
      <summary>
        <para>The Collider attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.collider2D">
      <summary>
        <para>The Collider2D component attached to the object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.constantForce">
      <summary>
        <para>The ConstantForce attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.gameObject">
      <summary>
        <para>The game object this component is attached to. A component is always attached to a game object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.guiText">
      <summary>
        <para>The GUIText attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.guiTexture">
      <summary>
        <para>The GUITexture attached to this GameObject (Read Only). (null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.hingeJoint">
      <summary>
        <para>The HingeJoint attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.light">
      <summary>
        <para>The Light attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.networkView">
      <summary>
        <para>The NetworkView attached to this GameObject (Read Only). (null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.particleEmitter">
      <summary>
        <para>The ParticleEmitter attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.particleSystem">
      <summary>
        <para>The ParticleSystem attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.renderer">
      <summary>
        <para>The Renderer attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.rigidbody">
      <summary>
        <para>The Rigidbody attached to this GameObject. (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.rigidbody2D">
      <summary>
        <para>The Rigidbody2D that is attached to the Component's GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.tag">
      <summary>
        <para>The tag of this game object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Component.transform">
      <summary>
        <para>The Transform attached to this GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Component.BroadcastMessage(System.String)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="parameter">Optional parameter to pass to the method (can be any value).</param>
      <param name="options">Should an error be raised if the method does not exist for a given target object?</param>
    </member>
    <member name="M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="parameter">Optional parameter to pass to the method (can be any value).</param>
      <param name="options">Should an error be raised if the method does not exist for a given target object?</param>
    </member>
    <member name="M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="parameter">Optional parameter to pass to the method (can be any value).</param>
      <param name="options">Should an error be raised if the method does not exist for a given target object?</param>
    </member>
    <member name="M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="parameter">Optional parameter to pass to the method (can be any value).</param>
      <param name="options">Should an error be raised if the method does not exist for a given target object?</param>
    </member>
    <member name="M:UnityEngine.Component.CompareTag(System.String)">
      <summary>
        <para>Is this game object tagged with tag ?</para>
      </summary>
      <param name="tag">The tag to compare.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponent(System.Type)">
      <summary>
        <para>Returns the component of Type type if the game object has one attached, null if it doesn't.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponent">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Component.GetComponent(System.String)">
      <summary>
        <para>Returns the component with name type if the game object has one attached, null if it doesn't.</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentInChildren(System.Type)">
      <summary>
        <para>Returns the component of Type type in the GameObject or any of its children using depth first search.</para>
      </summary>
      <param name="t">The type of Component to retrieve.</param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Component.GetComponentInChildren()">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive"></param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Component.GetComponentInParent(System.Type)">
      <summary>
        <para>Returns the component of Type type in the GameObject or any of its parents.</para>
      </summary>
      <param name="t">The type of Component to retrieve.</param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Component.GetComponentInParent">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Component.GetComponents(System.Type)">
      <summary>
        <para>Returns all components of Type type in the GameObject.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponents">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren(System.Type)">
      <summary>
        <para>Returns all components of Type type in the GameObject or any of its children.</para>
      </summary>
      <param name="t">The type of Component to retrieve.</param>
      <param name="includeInactive">Should Components on inactive GameObjects be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)">
      <summary>
        <para>Returns all components of Type type in the GameObject or any of its children.</para>
      </summary>
      <param name="t">The type of Component to retrieve.</param>
      <param name="includeInactive">Should Components on inactive GameObjects be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren(System.Boolean)">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should Components on inactive GameObjects be included in the found set?</param>
      <returns>
        <para>A list of all found components matching the specified type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInChildren">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <returns>
        <para>A list of all found components matching the specified type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)">
      <summary>
        <para>Returns all components of Type type in the GameObject or any of its parents.</para>
      </summary>
      <param name="t">The type of Component to retrieve.</param>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInParent(System.Boolean)">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.GetComponentsInParent">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessage(System.String)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="value">Optional parameter for the method.</param>
      <param name="options">Should an error be raised if the target object doesn't implement the method for the message?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessage(System.String,System.Object)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="value">Optional parameter for the method.</param>
      <param name="options">Should an error be raised if the target object doesn't implement the method for the message?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="value">Optional parameter for the method.</param>
      <param name="options">Should an error be raised if the target object doesn't implement the method for the message?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">Name of the method to call.</param>
      <param name="value">Optional parameter for the method.</param>
      <param name="options">Should an error be raised if the target object doesn't implement the method for the message?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessageUpwards(System.String)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">Name of method to call.</param>
      <param name="value">Optional parameter value for the method.</param>
      <param name="options">Should an error be raised if the method does not exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">Name of method to call.</param>
      <param name="value">Optional parameter value for the method.</param>
      <param name="options">Should an error be raised if the method does not exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">Name of method to call.</param>
      <param name="value">Optional parameter value for the method.</param>
      <param name="options">Should an error be raised if the method does not exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">Name of method to call.</param>
      <param name="value">Optional parameter value for the method.</param>
      <param name="options">Should an error be raised if the method does not exist on the target object?</param>
    </member>
    <member name="T:UnityEngine.CompositeCollider2D">
      <summary>
        <para>A Collider that can merge other Colliders together.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.edgeRadius">
      <summary>
        <para>Controls the radius of all edges created by the Collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.generationType">
      <summary>
        <para>Specifies when to generate the Composite Collider geometry.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.geometryType">
      <summary>
        <para>Specifies the type of geometry the Composite Collider should generate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.pathCount">
      <summary>
        <para>The number of paths in the Collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.pointCount">
      <summary>
        <para>Gets the total number of points in all the paths within the Collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.vertexDistance">
      <summary>
        <para>Controls the minimum distance allowed between generated vertices.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GenerateGeometry">
      <summary>
        <para>Regenerates the Composite Collider geometry.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CompositeCollider2D.GenerationType">
      <summary>
        <para>Specifies when to generate the Composite Collider geometry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GenerationType.Manual">
      <summary>
        <para>Sets the Composite Collider geometry to not automatically update when a Collider used by the Composite Collider changes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GenerationType.Synchronous">
      <summary>
        <para>Sets the Composite Collider geometry to update synchronously immediately when a Collider used by the Composite Collider changes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CompositeCollider2D.GeometryType">
      <summary>
        <para>Specifies the type of geometry the Composite Collider generates.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GeometryType.Outlines">
      <summary>
        <para>Sets the Composite Collider to generate closed outlines for the merged Collider geometry consisting of only edges.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GeometryType.Polygons">
      <summary>
        <para>Sets the Composite Collider to generate closed outlines for the merged Collider geometry consisting of convex polygon shapes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GetPath(System.Int32,UnityEngine.Vector2[])">
      <summary>
        <para>Gets a path from the Collider by its index.</para>
      </summary>
      <param name="index">The index of the path from 0 to pathCount.</param>
      <param name="points">An ordered array of the vertices or points in the selected path.</param>
      <returns>
        <para>Returns the number of points placed in the points array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GetPathPointCount(System.Int32)">
      <summary>
        <para>Gets the number of points in the specified path from the Collider by its index.</para>
      </summary>
      <param name="index">The index of the path from 0 to pathCount.</param>
      <returns>
        <para>Returns the number of points in the path specified by index.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ComputeBuffer">
      <summary>
        <para>GPU data buffer, mostly for use with compute shaders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ComputeBuffer.count">
      <summary>
        <para>Number of elements in the buffer (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ComputeBuffer.stride">
      <summary>
        <para>Size of one element in the buffer (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.CopyCount(UnityEngine.ComputeBuffer,UnityEngine.ComputeBuffer,System.Int32)">
      <summary>
        <para>Copy counter value of append/consume buffer into another buffer.</para>
      </summary>
      <param name="src">Append/consume buffer to copy the counter from.</param>
      <param name="dst">A buffer to copy the counter to.</param>
      <param name="dstOffset">Target byte offset in dst.</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Create a Compute Buffer.</para>
      </summary>
      <param name="count">Number of elements in the buffer.</param>
      <param name="stride">Size of one element in the buffer. Has to match size of buffer type in the shader. See for cross-platform compatibility information.</param>
      <param name="type">Type of the buffer, default is ComputeBufferType.Default (structured buffer).</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.#ctor(System.Int32,System.Int32,UnityEngine.ComputeBufferType)">
      <summary>
        <para>Create a Compute Buffer.</para>
      </summary>
      <param name="count">Number of elements in the buffer.</param>
      <param name="stride">Size of one element in the buffer. Has to match size of buffer type in the shader. See for cross-platform compatibility information.</param>
      <param name="type">Type of the buffer, default is ComputeBufferType.Default (structured buffer).</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.GetData(System.Array)">
      <summary>
        <para>Read data values from the buffer into an array.</para>
      </summary>
      <param name="data">An array to receive the data.</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.GetNativeBufferPtr">
      <summary>
        <para>Retrieve a native (underlying graphics API) pointer to the buffer.</para>
      </summary>
      <returns>
        <para>Pointer to the underlying graphics API buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.Release">
      <summary>
        <para>Release a Compute Buffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.SetCounterValue(System.UInt32)">
      <summary>
        <para>Sets counter value of append/consume buffer.</para>
      </summary>
      <param name="counterValue">Value of the append/consume counter.</param>
    </member>
    <member name="M:UnityEngine.ComputeBuffer.SetData(System.Array)">
      <summary>
        <para>Set the buffer with values from an array.</para>
      </summary>
      <param name="data">Array of values to fill the buffer.</param>
    </member>
    <member name="T:UnityEngine.ComputeBufferType">
      <summary>
        <para>ComputeBuffer type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ComputeBufferType.Append">
      <summary>
        <para>Append-consume ComputeBuffer type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ComputeBufferType.Counter">
      <summary>
        <para>ComputeBuffer with a counter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ComputeBufferType.Default">
      <summary>
        <para>Default ComputeBuffer type (structured buffer).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ComputeBufferType.GPUMemory">
      <summary>
        <para>ComputeBuffer is attempted to be located in GPU memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ComputeBufferType.IndirectArguments">
      <summary>
        <para>ComputeBuffer used for Graphics.DrawProceduralIndirect, ComputeShader.DispatchIndirect or Graphics.DrawMeshInstancedIndirect arguments.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ComputeBufferType.Raw">
      <summary>
        <para>Raw ComputeBuffer type (byte address buffer).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ComputeShader">
      <summary>
        <para>Compute Shader asset.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ComputeShader.Dispatch(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Execute a compute shader.</para>
      </summary>
      <param name="kernelIndex">Which kernel to execute. A single compute shader asset can have multiple kernel entry points.</param>
      <param name="threadGroupsX">Number of work groups in the X dimension.</param>
      <param name="threadGroupsY">Number of work groups in the Y dimension.</param>
      <param name="threadGroupsZ">Number of work groups in the Z dimension.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.DispatchIndirect(System.Int32,UnityEngine.ComputeBuffer,System.UInt32)">
      <summary>
        <para>Execute a compute shader.</para>
      </summary>
      <param name="kernelIndex">Which kernel to execute. A single compute shader asset can have multiple kernel entry points.</param>
      <param name="argsBuffer">Buffer with dispatch arguments.</param>
      <param name="argsOffset">The byte offset into the buffer, where the draw arguments start.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.FindKernel(System.String)">
      <summary>
        <para>Find ComputeShader kernel index.</para>
      </summary>
      <param name="name">Name of kernel function.</param>
      <returns>
        <para>The Kernel index, or logs a "FindKernel failed" error message if the kernel is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ComputeShader.GetKernelThreadGroupSizes(System.Int32,System.UInt32&amp;,System.UInt32&amp;,System.UInt32&amp;)">
      <summary>
        <para>Get kernel thread group sizes.</para>
      </summary>
      <param name="kernelIndex">Which kernel to query. A single compute shader asset can have multiple kernel entry points.</param>
      <param name="x">Thread group size in the X dimension.</param>
      <param name="y">Thread group size in the Y dimension.</param>
      <param name="z">Thread group size in the Z dimension.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.HasKernel(System.String)">
      <summary>
        <para>Checks whether a shader contains a given kernel.</para>
      </summary>
      <param name="name">The name of the kernel to look for.</param>
      <returns>
        <para>True if the kernel is found, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Set a bool parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetBool(System.Int32,System.Boolean)">
      <summary>
        <para>Set a bool parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetBuffer(System.Int32,System.String,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Sets an input or output compute buffer.</para>
      </summary>
      <param name="kernelIndex">For which kernel the buffer is being set. See FindKernel.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="buffer">Buffer to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetBuffer(System.Int32,System.Int32,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Sets an input or output compute buffer.</para>
      </summary>
      <param name="kernelIndex">For which kernel the buffer is being set. See FindKernel.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="buffer">Buffer to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetFloat(System.String,System.Single)">
      <summary>
        <para>Set a float parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>Set a float parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetFloats(System.String,System.Single[])">
      <summary>
        <para>Set multiple consecutive float parameters at once.</para>
      </summary>
      <param name="name">Array variable name in the shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Value array to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetFloats(System.Int32,System.Single[])">
      <summary>
        <para>Set multiple consecutive float parameters at once.</para>
      </summary>
      <param name="name">Array variable name in the shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Value array to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetInt(System.String,System.Int32)">
      <summary>
        <para>Set an integer parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetInt(System.Int32,System.Int32)">
      <summary>
        <para>Set an integer parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetInts(System.String,System.Int32[])">
      <summary>
        <para>Set multiple consecutive integer parameters at once.</para>
      </summary>
      <param name="name">Array variable name in the shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Value array to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetInts(System.Int32,System.Int32[])">
      <summary>
        <para>Set multiple consecutive integer parameters at once.</para>
      </summary>
      <param name="name">Array variable name in the shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Value array to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetTexture(System.Int32,System.String,UnityEngine.Texture)">
      <summary>
        <para>Set a texture parameter.</para>
      </summary>
      <param name="kernelIndex">For which kernel the texture is being set. See FindKernel.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="texture">Texture to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetTexture(System.Int32,System.Int32,UnityEngine.Texture)">
      <summary>
        <para>Set a texture parameter.</para>
      </summary>
      <param name="kernelIndex">For which kernel the texture is being set. See FindKernel.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="texture">Texture to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetTextureFromGlobal(System.Int32,System.String,System.String)">
      <summary>
        <para>Set a texture parameter from a global texture property.</para>
      </summary>
      <param name="kernelIndex">For which kernel the texture is being set. See FindKernel.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="globalTextureName">Global texture property to assign to shader.</param>
      <param name="globalTextureNameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetTextureFromGlobal(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Set a texture parameter from a global texture property.</para>
      </summary>
      <param name="kernelIndex">For which kernel the texture is being set. See FindKernel.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="globalTextureName">Global texture property to assign to shader.</param>
      <param name="globalTextureNameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetVector(System.String,UnityEngine.Vector4)">
      <summary>
        <para>Set a vector parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.ComputeShader.SetVector(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Set a vector parameter.</para>
      </summary>
      <param name="name">Variable name in shader code.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="T:UnityEngine.ConfigurableJoint">
      <summary>
        <para>The configurable joint is an extremely flexible joint giving you complete control over rotation and linear motion.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularXDrive">
      <summary>
        <para>Definition of how the joint's rotation will behave around its local X axis. Only used if Rotation Drive Mode is Swing &amp; Twist.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularXLimitSpring">
      <summary>
        <para>The configuration of the spring attached to the angular X limit of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularXMotion">
      <summary>
        <para>Allow rotation around the X axis to be Free, completely Locked, or Limited according to Low and High Angular XLimit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYLimit">
      <summary>
        <para>Boundary defining rotation restriction, based on delta from original rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYMotion">
      <summary>
        <para>Allow rotation around the Y axis to be Free, completely Locked, or Limited according to Angular YLimit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYZDrive">
      <summary>
        <para>Definition of how the joint's rotation will behave around its local Y and Z axes. Only used if Rotation Drive Mode is Swing &amp; Twist.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularYZLimitSpring">
      <summary>
        <para>The configuration of the spring attached to the angular Y and angular Z limits of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularZLimit">
      <summary>
        <para>Boundary defining rotation restriction, based on delta from original rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.angularZMotion">
      <summary>
        <para>Allow rotation around the Z axis to be Free, completely Locked, or Limited according to Angular ZLimit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.configuredInWorldSpace">
      <summary>
        <para>If enabled, all Target values will be calculated in world space instead of the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.highAngularXLimit">
      <summary>
        <para>Boundary defining upper rotation restriction, based on delta from original rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.linearLimit">
      <summary>
        <para>Boundary defining movement restriction, based on distance from the joint's origin.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.linearLimitSpring">
      <summary>
        <para>The configuration of the spring attached to the linear limit of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.lowAngularXLimit">
      <summary>
        <para>Boundary defining lower rotation restriction, based on delta from original rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.projectionAngle">
      <summary>
        <para>Set the angular tolerance threshold (in degrees) for projection.

If the joint deviates by more than this angle around its locked angular degrees of freedom,
the solver will move the bodies to close the angle.

Setting a very small tolerance may result in simulation jitter or other artifacts.

Sometimes it is not possible to project (for example when the joints form a cycle).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.projectionDistance">
      <summary>
        <para>Set the linear tolerance threshold for projection.

If the joint separates by more than this distance along its locked degrees of freedom, the solver
will move the bodies to close the distance.

Setting a very small tolerance may result in simulation jitter or other artifacts.

Sometimes it is not possible to project (for example when the joints form a cycle).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.projectionMode">
      <summary>
        <para>Brings violated constraints back into alignment even when the solver fails. Projection is not a physical process and does not preserve momentum or respect collision geometry. It is best avoided if practical, but can be useful in improving simulation quality where joint separation results in unacceptable artifacts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.rotationDriveMode">
      <summary>
        <para>Control the object's rotation with either X &amp; YZ or Slerp Drive by itself.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.secondaryAxis">
      <summary>
        <para>The joint's secondary axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.slerpDrive">
      <summary>
        <para>Definition of how the joint's rotation will behave around all local axes. Only used if Rotation Drive Mode is Slerp Only.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.swapBodies">
      <summary>
        <para>If enabled, the two connected rigidbodies will be swapped, as if the joint was attached to the other body.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetAngularVelocity">
      <summary>
        <para>This is a Vector3. It defines the desired angular velocity that the joint should rotate into.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetPosition">
      <summary>
        <para>The desired position that the joint should move into.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetRotation">
      <summary>
        <para>This is a Quaternion. It defines the desired rotation that the joint should rotate into.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.targetVelocity">
      <summary>
        <para>The desired velocity that the joint should move along.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.xDrive">
      <summary>
        <para>Definition of how the joint's movement will behave along its local X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.xMotion">
      <summary>
        <para>Allow movement along the X axis to be Free, completely Locked, or Limited according to Linear Limit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.yDrive">
      <summary>
        <para>Definition of how the joint's movement will behave along its local Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.yMotion">
      <summary>
        <para>Allow movement along the Y axis to be Free, completely Locked, or Limited according to Linear Limit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.zDrive">
      <summary>
        <para>Definition of how the joint's movement will behave along its local Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConfigurableJoint.zMotion">
      <summary>
        <para>Allow movement along the Z axis to be Free, completely Locked, or Limited according to Linear Limit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ConfigurableJointMotion">
      <summary>
        <para>Constrains movement for a ConfigurableJoint along the 6 axes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConfigurableJointMotion.Free">
      <summary>
        <para>Motion along the axis will be completely free and completely unconstrained.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConfigurableJointMotion.Limited">
      <summary>
        <para>Motion along the axis will be limited by the respective limit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConfigurableJointMotion.Locked">
      <summary>
        <para>Motion along the axis will be locked.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ConnectionTesterStatus">
      <summary>
        <para>The various test results the connection tester may return with.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.Error">
      <summary>
        <para>Some unknown error occurred.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted">
      <summary>
        <para>Port-restricted NAT type, can do NAT punchthrough to everyone except symmetric.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">
      <summary>
        <para>Symmetric NAT type, cannot do NAT punchthrough to other symmetric types nor port restricted type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.NATpunchthroughAddressRestrictedCone">
      <summary>
        <para>Address-restricted cone type, NAT punchthrough fully supported.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.NATpunchthroughFullCone">
      <summary>
        <para>Full cone type, NAT punchthrough fully supported.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.PublicIPIsConnectable">
      <summary>
        <para>Public IP address detected and game listen port is accessible to the internet.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.PublicIPNoServerStarted">
      <summary>
        <para>Public IP address detected but server is not initialized and no port is listening.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.PublicIPPortBlocked">
      <summary>
        <para>Public IP address detected but the port is not connectable from the internet.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ConnectionTesterStatus.Undetermined">
      <summary>
        <para>Test result undetermined, still in progress.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ConstantForce">
      <summary>
        <para>A force applied constantly.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce.force">
      <summary>
        <para>The force applied to the rigidbody every frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce.relativeForce">
      <summary>
        <para>The force - relative to the rigid bodies coordinate system - applied every frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce.relativeTorque">
      <summary>
        <para>The torque - relative to the rigid bodies coordinate system - applied every frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce.torque">
      <summary>
        <para>The torque applied to the rigidbody every frame.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ConstantForce2D">
      <summary>
        <para>Applies both linear and angular (torque) forces continuously to the rigidbody each physics update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce2D.force">
      <summary>
        <para>The linear force applied to the rigidbody each physics update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce2D.relativeForce">
      <summary>
        <para>The linear force, relative to the rigid-body coordinate system, applied each physics update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce2D.torque">
      <summary>
        <para>The torque applied to the rigidbody each physics update.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ContactFilter2D">
      <summary>
        <para>A set of parameters for filtering contact results.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactFilter2D.isFiltering">
      <summary>
        <para>Given the current state of the contact filter, determine whether it would filter anything.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.layerMask">
      <summary>
        <para>Sets the contact filter to filter the results that only include Collider2D on the layers defined by the layer mask.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.maxDepth">
      <summary>
        <para>Sets the contact filter to filter the results to only include Collider2D with a Z coordinate (depth) less than this value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.maxNormalAngle">
      <summary>
        <para>Sets the contact filter to filter the results to only include contacts with collision normal angles that are less than this angle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.minDepth">
      <summary>
        <para>Sets the contact filter to filter the results to only include Collider2D with a Z coordinate (depth) greater than this value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.minNormalAngle">
      <summary>
        <para>Sets the contact filter to filter the results to only include contacts with collision normal angles that are greater than this angle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useDepth">
      <summary>
        <para>Sets the contact filter to filter the results by depth using minDepth and maxDepth.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useLayerMask">
      <summary>
        <para>Sets the contact filter to filter results by layer mask.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useNormalAngle">
      <summary>
        <para>Sets the contact filter to filter the results by the collision's normal angle using minNormalAngle and maxNormalAngle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useOutsideDepth">
      <summary>
        <para>Sets the contact filter to filter within the minDepth and maxDepth range, or outside that range.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useOutsideNormalAngle">
      <summary>
        <para>Sets the contact filter to filter within the minNormalAngle and maxNormalAngle range, or outside that range.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useTriggers">
      <summary>
        <para>Sets to filter contact results based on trigger collider involvement.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.ClearDepth">
      <summary>
        <para>Turns off depth filtering by setting useDepth to false.  The associated values of minDepth and maxDepth are not changed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.ClearLayerMask">
      <summary>
        <para>Turns off layer mask filtering by setting useLayerMask to false.  The associated value of layerMask is not changed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.ClearNormalAngle">
      <summary>
        <para>Turns off normal angle filtering by setting useNormalAngle to false. The associated values of minNormalAngle and maxNormalAngle are not changed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringDepth(UnityEngine.GameObject)">
      <summary>
        <para>Checks if the Transform for obj is within the depth range to be filtered.</para>
      </summary>
      <param name="obj">The GameObject used to check the z-position (depth) of Transform.position.</param>
      <returns>
        <para>Returns true when obj is excluded by the filter and false if otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringLayerMask(UnityEngine.GameObject)">
      <summary>
        <para>Checks if the GameObject.layer for obj is included in the layerMask to be filtered.</para>
      </summary>
      <param name="obj">The GameObject used to check the GameObject.layer.</param>
      <returns>
        <para>Returns true when obj is excluded by the filter and false if otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringNormalAngle(UnityEngine.Vector2)">
      <summary>
        <para>Checks if the angle of normal is within the normal angle range to be filtered.</para>
      </summary>
      <param name="normal">The normal used to calculate an angle.</param>
      <returns>
        <para>Returns true when normal is excluded by the filter and false if otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringNormalAngle(System.Single)">
      <summary>
        <para>Checks if the angle is within the normal angle range to be filtered.</para>
      </summary>
      <param name="angle">The angle used for comparison in the filter.</param>
      <returns>
        <para>Returns true when angle is excluded by the filter and false if otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringTrigger(UnityEngine.Collider2D)">
      <summary>
        <para>Checks if the collider is a trigger and should be filtered by the useTriggers to be filtered.</para>
      </summary>
      <param name="collider">The Collider2D used to check for a trigger.</param>
      <returns>
        <para>Returns true when collider is excluded by the filter and false if otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.NoFilter">
      <summary>
        <para>Sets the contact filter to not filter any ContactPoint2D.</para>
      </summary>
      <returns>
        <para>A copy of the contact filter set to not filter any ContactPoint2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.SetDepth(System.Single,System.Single)">
      <summary>
        <para>Sets the minDepth and maxDepth filter properties and turns on depth filtering by setting useDepth to true.</para>
      </summary>
      <param name="minDepth">The value used to set minDepth.</param>
      <param name="maxDepth">The value used to set maxDepth.</param>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.SetLayerMask(UnityEngine.LayerMask)">
      <summary>
        <para>Sets the layerMask filter property using the layerMask parameter provided and also enables layer mask filtering by setting useLayerMask to true.</para>
      </summary>
      <param name="layerMask">The value used to set the layerMask.</param>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.SetNormalAngle(System.Single,System.Single)">
      <summary>
        <para>Sets the minNormalAngle and maxNormalAngle filter properties and turns on normal angle filtering by setting useNormalAngle to true.</para>
      </summary>
      <param name="minNormalAngle">The value used to set the minNormalAngle.</param>
      <param name="maxNormalAngle">The value used to set the maxNormalAngle.</param>
    </member>
    <member name="T:UnityEngine.ContactPoint">
      <summary>
        <para>Describes a contact point where the collision occurs.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint.normal">
      <summary>
        <para>Normal of the contact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint.otherCollider">
      <summary>
        <para>The other collider in contact at the point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint.point">
      <summary>
        <para>The point of contact.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint.separation">
      <summary>
        <para>The distance between the colliders at the contact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint.thisCollider">
      <summary>
        <para>The first collider in contact at the point.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ContactPoint2D">
      <summary>
        <para>Details about a specific point of contact involved in a 2D physics collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.collider">
      <summary>
        <para>The incoming Collider2D involved in the collision with the otherCollider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.enabled">
      <summary>
        <para>Indicates whether the collision response or reaction is enabled or disabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.normal">
      <summary>
        <para>Surface normal at the contact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.normalImpulse">
      <summary>
        <para>Gets the impulse force applied at the contact point along the ContactPoint2D.normal.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.otherCollider">
      <summary>
        <para>The other Collider2D involved in the collision with the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.otherRigidbody">
      <summary>
        <para>The other Rigidbody2D involved in the collision with the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.point">
      <summary>
        <para>The point of contact between the two colliders in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.relativeVelocity">
      <summary>
        <para>Gets the relative velocity of the two colliders at the contact point (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.rigidbody">
      <summary>
        <para>The incoming Rigidbody2D involved in the collision with the otherRigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.separation">
      <summary>
        <para>Gets the distance between the colliders at the contact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.tangentImpulse">
      <summary>
        <para>Gets the impulse force applied at the contact point which is perpendicular to the ContactPoint2D.normal.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ContextMenu">
      <summary>
        <para>The ContextMenu attribute allows you to add commands to the context menu.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContextMenu.#ctor(System.String)">
      <summary>
        <para>Adds the function to the context menu of the component.</para>
      </summary>
      <param name="itemName">The name of the context menu item.</param>
      <param name="isValidateFunction">Whether this is a validate function (defaults to false).</param>
      <param name="priority">Priority used to override the ordering of the menu items (defaults to 1000000). The lower the number the earlier in the menu it will appear.</param>
    </member>
    <member name="M:UnityEngine.ContextMenu.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Adds the function to the context menu of the component.</para>
      </summary>
      <param name="itemName">The name of the context menu item.</param>
      <param name="isValidateFunction">Whether this is a validate function (defaults to false).</param>
      <param name="priority">Priority used to override the ordering of the menu items (defaults to 1000000). The lower the number the earlier in the menu it will appear.</param>
    </member>
    <member name="M:UnityEngine.ContextMenu.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>
        <para>Adds the function to the context menu of the component.</para>
      </summary>
      <param name="itemName">The name of the context menu item.</param>
      <param name="isValidateFunction">Whether this is a validate function (defaults to false).</param>
      <param name="priority">Priority used to override the ordering of the menu items (defaults to 1000000). The lower the number the earlier in the menu it will appear.</param>
    </member>
    <member name="T:UnityEngine.ContextMenuItemAttribute">
      <summary>
        <para>Use this attribute to add a context menu to a field that calls a  named method.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContextMenuItemAttribute.function">
      <summary>
        <para>The name of the function that should be called.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContextMenuItemAttribute.name">
      <summary>
        <para>The name of the context menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContextMenuItemAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Use this attribute to add a context menu to a field that calls a  named method.</para>
      </summary>
      <param name="name">The name of the context menu item.</param>
      <param name="function">The name of the function that should be called.</param>
    </member>
    <member name="T:UnityEngine.ControllerColliderHit">
      <summary>
        <para>ControllerColliderHit is used by CharacterController.OnControllerColliderHit to give detailed information about the collision and how to deal with it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.collider">
      <summary>
        <para>The collider that was hit by the controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.controller">
      <summary>
        <para>The controller that hit the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.gameObject">
      <summary>
        <para>The game object that was hit by the controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.moveDirection">
      <summary>
        <para>The direction the CharacterController was moving in when the collision occured.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.moveLength">
      <summary>
        <para>How far the character has travelled until it hit the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.normal">
      <summary>
        <para>The normal of the surface we collided with in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.point">
      <summary>
        <para>The impact point in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.rigidbody">
      <summary>
        <para>The rigidbody that was hit by the controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ControllerColliderHit.transform">
      <summary>
        <para>The transform that was hit by the controller.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Coroutine">
      <summary>
        <para>MonoBehaviour.StartCoroutine returns a Coroutine. Instances of this class are only used to reference these coroutines and do not hold any exposed properties or functions.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CrashReport">
      <summary>
        <para>Holds data for a single application crash event and provides access to all gathered crash reports.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CrashReport.lastReport">
      <summary>
        <para>Returns last crash report, or null if no reports are available.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CrashReport.reports">
      <summary>
        <para>Returns all currently available reports in a new array.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CrashReport.text">
      <summary>
        <para>Crash report data as formatted text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CrashReport.time">
      <summary>
        <para>Time, when the crash occured.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CrashReport.Remove">
      <summary>
        <para>Remove report from available reports list.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CrashReport.RemoveAll">
      <summary>
        <para>Remove all reports from available reports list.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CrashReportHandler.CrashReportHandler">
      <summary>
        <para>Engine API for CrashReporting Service.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CrashReportHandler.CrashReportHandler.enableCaptureExceptions">
      <summary>
        <para>This Boolean field will cause CrashReportHandler to capture exceptions when set to true. By default enable capture exceptions is true.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CreateAssetMenuAttribute">
      <summary>
        <para>Mark a ScriptableObject-derived type to be automatically listed in the Assets/Create submenu, so that instances of the type can be easily created and stored in the project as ".asset" files.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CreateAssetMenuAttribute.fileName">
      <summary>
        <para>The default file name used by newly created instances of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CreateAssetMenuAttribute.menuName">
      <summary>
        <para>The display name for this type shown in the Assets/Create menu.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CreateAssetMenuAttribute.order">
      <summary>
        <para>The position of the menu item within the Assets/Create menu.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Cubemap">
      <summary>
        <para>Class for handling cube maps, Use this to create or modify existing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cubemap.format">
      <summary>
        <para>The format of the pixel data in the texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cubemap.mipmapCount">
      <summary>
        <para>How many mipmap levels are in this texture (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Cubemap.Apply(System.Boolean,System.Boolean)">
      <summary>
        <para>Actually apply all previous SetPixel and SetPixels changes.</para>
      </summary>
      <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
      <param name="makeNoLongerReadable">When set to true, system memory copy of a texture is released.</param>
    </member>
    <member name="M:UnityEngine.Cubemap.#ctor(System.Int32,UnityEngine.TextureFormat,System.Boolean)">
      <summary>
        <para>Create a new empty cubemap texture.</para>
      </summary>
      <param name="size">Width/height of a cube face in pixels.</param>
      <param name="format">Pixel data format to be used for the Cubemap.</param>
      <param name="mipmap">Should mipmaps be created?</param>
    </member>
    <member name="M:UnityEngine.Cubemap.GetPixel(UnityEngine.CubemapFace,System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel color at coordinates (face, x, y).</para>
      </summary>
      <param name="face"></param>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.Cubemap.GetPixels(UnityEngine.CubemapFace,System.Int32)">
      <summary>
        <para>Returns pixel colors of a cubemap face.</para>
      </summary>
      <param name="face">The face from which pixel data is taken.</param>
      <param name="miplevel">Mipmap level for the chosen face.</param>
    </member>
    <member name="M:UnityEngine.Cubemap.SetPixel(UnityEngine.CubemapFace,System.Int32,System.Int32,UnityEngine.Color)">
      <summary>
        <para>Sets pixel color at coordinates (face, x, y).</para>
      </summary>
      <param name="face"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="color"></param>
    </member>
    <member name="M:UnityEngine.Cubemap.SetPixels(UnityEngine.Color[],UnityEngine.CubemapFace,System.Int32)">
      <summary>
        <para>Sets pixel colors of a cubemap face.</para>
      </summary>
      <param name="colors">Pixel data for the Cubemap face.</param>
      <param name="face">The face to which the new data should be applied.</param>
      <param name="miplevel">The mipmap level for the face.</param>
    </member>
    <member name="M:UnityEngine.Cubemap.SmoothEdges(System.Int32)">
      <summary>
        <para>Performs smoothing of near edge regions.</para>
      </summary>
      <param name="smoothRegionWidthInPixels">Pixel distance at edges over which to apply smoothing.</param>
    </member>
    <member name="T:UnityEngine.CubemapArray">
      <summary>
        <para>Class for handling Cubemap arrays.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CubemapArray.cubemapCount">
      <summary>
        <para>Number of cubemaps in the array (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CubemapArray.format">
      <summary>
        <para>Texture format (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CubemapArray.Apply(System.Boolean,System.Boolean)">
      <summary>
        <para>Actually apply all previous SetPixels changes.</para>
      </summary>
      <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
      <param name="makeNoLongerReadable">When set to true, system memory copy of a texture is released.</param>
    </member>
    <member name="M:UnityEngine.CubemapArray.#ctor(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean)">
      <summary>
        <para>Create a new cubemap array.</para>
      </summary>
      <param name="faceSize">Cubemap face size in pixels.</param>
      <param name="cubemapCount">Number of elements in the cubemap array.</param>
      <param name="format">Format of the pixel data.</param>
      <param name="mipmap">Should mipmaps be created?</param>
      <param name="linear">Does the texture contain non-color data (i.e. don't do any color space conversions when sampling)? Default is false.</param>
    </member>
    <member name="M:UnityEngine.CubemapArray.#ctor(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean,System.Boolean)">
      <summary>
        <para>Create a new cubemap array.</para>
      </summary>
      <param name="faceSize">Cubemap face size in pixels.</param>
      <param name="cubemapCount">Number of elements in the cubemap array.</param>
      <param name="format">Format of the pixel data.</param>
      <param name="mipmap">Should mipmaps be created?</param>
      <param name="linear">Does the texture contain non-color data (i.e. don't do any color space conversions when sampling)? Default is false.</param>
    </member>
    <member name="M:UnityEngine.CubemapArray.GetPixels(UnityEngine.CubemapFace,System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel colors of a single array slice/face.</para>
      </summary>
      <param name="face">Cubemap face to read pixels from.</param>
      <param name="arrayElement">Array slice to read pixels from.</param>
      <param name="miplevel">Mipmap level to read pixels from.</param>
      <returns>
        <para>Array of pixel colors.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CubemapArray.GetPixels32(UnityEngine.CubemapFace,System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel colors of a single array slice/face.</para>
      </summary>
      <param name="face">Cubemap face to read pixels from.</param>
      <param name="arrayElement">Array slice to read pixels from.</param>
      <param name="miplevel">Mipmap level to read pixels from.</param>
      <returns>
        <para>Array of pixel colors in low precision (8 bits/channel) format.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CubemapArray.SetPixels(UnityEngine.Color[],UnityEngine.CubemapFace,System.Int32,System.Int32)">
      <summary>
        <para>Set pixel colors for a single array slice/face.</para>
      </summary>
      <param name="colors">An array of pixel colors.</param>
      <param name="face">Cubemap face to set pixels for.</param>
      <param name="arrayElement">Array element index to set pixels for.</param>
      <param name="miplevel">Mipmap level to set pixels for.</param>
    </member>
    <member name="M:UnityEngine.CubemapArray.SetPixels32(UnityEngine.Color32[],UnityEngine.CubemapFace,System.Int32,System.Int32)">
      <summary>
        <para>Set pixel colors for a single array slice/face.</para>
      </summary>
      <param name="colors">An array of pixel colors in low precision (8 bits/channel) format.</param>
      <param name="face">Cubemap face to set pixels for.</param>
      <param name="arrayElement">Array element index to set pixels for.</param>
      <param name="miplevel">Mipmap level to set pixels for.</param>
    </member>
    <member name="T:UnityEngine.CubemapFace">
      <summary>
        <para>Cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.NegativeX">
      <summary>
        <para>Left facing side (-x).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.NegativeY">
      <summary>
        <para>Downward facing side (-y).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.NegativeZ">
      <summary>
        <para>Backward facing side (-z).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.PositiveX">
      <summary>
        <para>Right facing side (+x).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.PositiveY">
      <summary>
        <para>Upwards facing side (+y).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.PositiveZ">
      <summary>
        <para>Forward facing side (+z).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CubemapFace.Unknown">
      <summary>
        <para>Cubemap face is unknown or unspecified.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CullingGroup">
      <summary>
        <para>Describes a set of bounding spheres that should have their visibility and distances maintained.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroup.enabled">
      <summary>
        <para>Pauses culling group execution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroup.onStateChanged">
      <summary>
        <para>Sets the callback that will be called when a sphere's visibility and/or distance state has changed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroup.targetCamera">
      <summary>
        <para>Locks the CullingGroup to a specific camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CullingGroup.#ctor">
      <summary>
        <para>Create a CullingGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CullingGroup.Dispose">
      <summary>
        <para>Clean up all memory used by the CullingGroup immediately.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CullingGroup.EraseSwapBack(System.Int32)">
      <summary>
        <para>Erase a given bounding sphere by moving the final sphere on top of it.</para>
      </summary>
      <param name="index">The index of the entry to erase.</param>
    </member>
    <member name="M:UnityEngine.CullingGroup.EraseSwapBack(System.Int32,T[],System.Int32&amp;)">
      <summary>
        <para>Erase a given entry in an arbitrary array by copying the final entry on top of it, then decrementing the number of entries used by one.</para>
      </summary>
      <param name="index">The index of the entry to erase.</param>
      <param name="myArray">An array of entries.</param>
      <param name="size">The number of entries in the array that are actually used.</param>
    </member>
    <member name="M:UnityEngine.CullingGroup.GetDistance(System.Int32)">
      <summary>
        <para>Get the current distance band index of a given sphere.</para>
      </summary>
      <param name="index">The index of the sphere.</param>
      <returns>
        <para>The sphere's current distance band index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CullingGroup.IsVisible(System.Int32)">
      <summary>
        <para>Returns true if the bounding sphere at index is currently visible from any of the contributing cameras.</para>
      </summary>
      <param name="index">The index of the bounding sphere.</param>
      <returns>
        <para>True if the sphere is visible; false if it is invisible.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CullingGroup.QueryIndices(System.Boolean,System.Int32[],System.Int32)">
      <summary>
        <para>Retrieve the indices of spheres that have particular visibility and/or distance states.</para>
      </summary>
      <param name="visible">True if only visible spheres should be retrieved; false if only invisible spheres should be retrieved.</param>
      <param name="distanceIndex">The distance band that retrieved spheres must be in.</param>
      <param name="result">An array that will be filled with the retrieved sphere indices.</param>
      <param name="firstIndex">The index of the sphere to begin searching at.</param>
      <returns>
        <para>The number of sphere indices found and written into the result array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CullingGroup.QueryIndices(System.Int32,System.Int32[],System.Int32)">
      <summary>
        <para>Retrieve the indices of spheres that have particular visibility and/or distance states.</para>
      </summary>
      <param name="visible">True if only visible spheres should be retrieved; false if only invisible spheres should be retrieved.</param>
      <param name="distanceIndex">The distance band that retrieved spheres must be in.</param>
      <param name="result">An array that will be filled with the retrieved sphere indices.</param>
      <param name="firstIndex">The index of the sphere to begin searching at.</param>
      <returns>
        <para>The number of sphere indices found and written into the result array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CullingGroup.QueryIndices(System.Boolean,System.Int32,System.Int32[],System.Int32)">
      <summary>
        <para>Retrieve the indices of spheres that have particular visibility and/or distance states.</para>
      </summary>
      <param name="visible">True if only visible spheres should be retrieved; false if only invisible spheres should be retrieved.</param>
      <param name="distanceIndex">The distance band that retrieved spheres must be in.</param>
      <param name="result">An array that will be filled with the retrieved sphere indices.</param>
      <param name="firstIndex">The index of the sphere to begin searching at.</param>
      <returns>
        <para>The number of sphere indices found and written into the result array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CullingGroup.SetBoundingDistances(System.Single[])">
      <summary>
        <para>Set bounding distances for 'distance bands' the group should compute, as well as options for how spheres falling into each distance band should be treated.</para>
      </summary>
      <param name="distances">An array of bounding distances. The distances should be sorted in increasing order.</param>
      <param name="distanceBehaviours">An array of CullingDistanceBehaviour settings. The array should be the same length as the array provided to the distances parameter. It can also be omitted or passed as null, in which case all distances will be given CullingDistanceBehaviour.Normal behaviour.</param>
    </member>
    <member name="M:UnityEngine.CullingGroup.SetBoundingSphereCount(System.Int32)">
      <summary>
        <para>Sets the number of bounding spheres in the bounding spheres array that are actually being used.</para>
      </summary>
      <param name="count">The number of bounding spheres being used.</param>
    </member>
    <member name="M:UnityEngine.CullingGroup.SetBoundingSpheres(UnityEngine.BoundingSphere[])">
      <summary>
        <para>Sets the array of bounding sphere definitions that the CullingGroup should compute culling for.</para>
      </summary>
      <param name="array">The BoundingSpheres to cull.</param>
    </member>
    <member name="M:UnityEngine.CullingGroup.SetDistanceReferencePoint(UnityEngine.Vector3)">
      <summary>
        <para>Set the reference point from which distance bands are measured.</para>
      </summary>
      <param name="point">A fixed point to measure the distance from.</param>
      <param name="transform">A transform to measure the distance from. The transform's position will be automatically tracked.</param>
    </member>
    <member name="M:UnityEngine.CullingGroup.SetDistanceReferencePoint(UnityEngine.Transform)">
      <summary>
        <para>Set the reference point from which distance bands are measured.</para>
      </summary>
      <param name="point">A fixed point to measure the distance from.</param>
      <param name="transform">A transform to measure the distance from. The transform's position will be automatically tracked.</param>
    </member>
    <member name="T:UnityEngine.CullingGroup.StateChanged">
      <summary>
        <para>This delegate is used for recieving a callback when a sphere's distance or visibility state has changed.</para>
      </summary>
      <param name="sphere">A CullingGroupEvent that provides information about the sphere that has changed.</param>
    </member>
    <member name="T:UnityEngine.CullingGroupEvent">
      <summary>
        <para>Provides information about the current and previous states of one sphere in a CullingGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.currentDistance">
      <summary>
        <para>The current distance band index of the sphere, after the most recent culling pass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.hasBecomeInvisible">
      <summary>
        <para>Did this sphere change from being visible to being invisible in the most recent culling pass?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.hasBecomeVisible">
      <summary>
        <para>Did this sphere change from being invisible to being visible in the most recent culling pass?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.index">
      <summary>
        <para>The index of the sphere that has changed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.isVisible">
      <summary>
        <para>Was the sphere considered visible by the most recent culling pass?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.previousDistance">
      <summary>
        <para>The distance band index of the sphere before the most recent culling pass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CullingGroupEvent.wasVisible">
      <summary>
        <para>Was the sphere visible before the most recent culling pass?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Cursor">
      <summary>
        <para>Cursor API for setting the cursor (mouse pointer).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cursor.lockState">
      <summary>
        <para>Determines whether the hardware pointer is locked to the center of the view, constrained to the window, or not constrained at all.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Cursor.visible">
      <summary>
        <para>Determines whether the hardware pointer is visible or not.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Cursor.SetCursor">
      <summary>
        <para>Sets the mouse cursor to the given texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Cursor.SetCursor(UnityEngine.Texture2D,UnityEngine.Vector2,UnityEngine.CursorMode)">
      <summary>
        <para>Specify a custom cursor that you wish to use as a cursor.</para>
      </summary>
      <param name="texture">The texture to use for the cursor or null to set the default cursor. Note that a texture needs to be imported with "Read/Write enabled" in the texture importer (or using the "Cursor" defaults), in order to be used as a cursor.</param>
      <param name="hotspot">The offset from the top left of the texture to use as the target point (must be within the bounds of the cursor).</param>
      <param name="cursorMode">Allow this cursor to render as a hardware cursor on supported platforms, or force software cursor.</param>
    </member>
    <member name="T:UnityEngine.CursorLockMode">
      <summary>
        <para>How the cursor should behave.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CursorLockMode.Confined">
      <summary>
        <para>Confine cursor to the game window.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CursorLockMode.Locked">
      <summary>
        <para>Lock cursor to the center of the game window.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CursorLockMode.None">
      <summary>
        <para>Cursor behavior is unmodified.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CursorMode">
      <summary>
        <para>Determines whether the mouse cursor is rendered using software rendering or, on supported platforms, hardware rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CursorMode.Auto">
      <summary>
        <para>Use hardware cursors on supported platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CursorMode.ForceSoftware">
      <summary>
        <para>Force the use of software cursors.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CustomRenderTextureInitializationSource">
      <summary>
        <para>Specify the source of a Custom Render Texture initialization.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureInitializationSource.Material">
      <summary>
        <para>Custom Render Texture is initalized with a Material.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureInitializationSource.TextureAndColor">
      <summary>
        <para>Custom Render Texture is initialized by a Texture multiplied by a Color.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CustomRenderTextureUpdateMode">
      <summary>
        <para>Frequency of update or initialization of a Custom Render Texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureUpdateMode.OnDemand">
      <summary>
        <para>Initialization/Update will only occur when triggered by the script.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureUpdateMode.OnLoad">
      <summary>
        <para>Initialization/Update will occur once at load time and then can be triggered again by script.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureUpdateMode.Realtime">
      <summary>
        <para>Initialization/Update will occur at every frame.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CustomRenderTextureUpdateZoneSpace">
      <summary>
        <para>Space in which coordinates are provided for Update Zones.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureUpdateZoneSpace.Normalized">
      <summary>
        <para>Coordinates are normalized. (0, 0) is top left and (1, 1) is bottom right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CustomRenderTextureUpdateZoneSpace.Pixel">
      <summary>
        <para>Coordinates are expressed in pixels. (0, 0) is top left (width, height) is bottom right.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CustomYieldInstruction">
      <summary>
        <para>Base class for custom yield instructions to suspend coroutines.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CustomYieldInstruction.keepWaiting">
      <summary>
        <para>Indicates if coroutine should be kept suspended.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Debug">
      <summary>
        <para>Class containing methods to ease debugging while developing a game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Debug.developerConsoleVisible">
      <summary>
        <para>Reports whether the development console is visible. The development console cannot be made to appear using:</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Debug.isDebugBuild">
      <summary>
        <para>In the Build Settings dialog there is a check box called "Development Build".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Debug.logger">
      <summary>
        <para>Get default debug logger.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Debug.Assert(System.Boolean)">
      <summary>
        <para>Assert a condition and logs an error message to the Unity console on failure.</para>
      </summary>
      <param name="condition">Condition you expect to be true.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
    </member>
    <member name="M:UnityEngine.Debug.Assert(System.Boolean,UnityEngine.Object)">
      <summary>
        <para>Assert a condition and logs an error message to the Unity console on failure.</para>
      </summary>
      <param name="condition">Condition you expect to be true.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
    </member>
    <member name="M:UnityEngine.Debug.Assert(System.Boolean,System.Object)">
      <summary>
        <para>Assert a condition and logs an error message to the Unity console on failure.</para>
      </summary>
      <param name="condition">Condition you expect to be true.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
    </member>
    <member name="M:UnityEngine.Debug.Assert(System.Boolean,System.Object,UnityEngine.Object)">
      <summary>
        <para>Assert a condition and logs an error message to the Unity console on failure.</para>
      </summary>
      <param name="condition">Condition you expect to be true.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
    </member>
    <member name="M:UnityEngine.Debug.AssertFormat(System.Boolean,System.String,System.Object[])">
      <summary>
        <para>Assert a condition and logs a formatted error message to the Unity console on failure.</para>
      </summary>
      <param name="condition">Condition you expect to be true.</param>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.AssertFormat(System.Boolean,UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Assert a condition and logs a formatted error message to the Unity console on failure.</para>
      </summary>
      <param name="condition">Condition you expect to be true.</param>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.Break">
      <summary>
        <para>Pauses the editor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Debug.ClearDeveloperConsole">
      <summary>
        <para>Clears errors from the developer console.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Debug.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draws a line between specified start and end points.</para>
      </summary>
      <param name="start">Point in world space where the line should start.</param>
      <param name="end">Point in world space where the line should end.</param>
      <param name="color">Color of the line.</param>
      <param name="duration">How long the line should be visible for.</param>
      <param name="depthTest">Should the line be obscured by objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)">
      <summary>
        <para>Draws a line between specified start and end points.</para>
      </summary>
      <param name="start">Point in world space where the line should start.</param>
      <param name="end">Point in world space where the line should end.</param>
      <param name="color">Color of the line.</param>
      <param name="duration">How long the line should be visible for.</param>
      <param name="depthTest">Should the line be obscured by objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
      <summary>
        <para>Draws a line between specified start and end points.</para>
      </summary>
      <param name="start">Point in world space where the line should start.</param>
      <param name="end">Point in world space where the line should end.</param>
      <param name="color">Color of the line.</param>
      <param name="duration">How long the line should be visible for.</param>
      <param name="depthTest">Should the line be obscured by objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean)">
      <summary>
        <para>Draws a line between specified start and end points.</para>
      </summary>
      <param name="start">Point in world space where the line should start.</param>
      <param name="end">Point in world space where the line should end.</param>
      <param name="color">Color of the line.</param>
      <param name="duration">How long the line should be visible for.</param>
      <param name="depthTest">Should the line be obscured by objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draws a line from start to start + dir in world coordinates.</para>
      </summary>
      <param name="start">Point in world space where the ray should start.</param>
      <param name="dir">Direction and length of the ray.</param>
      <param name="color">Color of the drawn line.</param>
      <param name="duration">How long the line will be visible for (in seconds).</param>
      <param name="depthTest">Should the line be obscured by other objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color)">
      <summary>
        <para>Draws a line from start to start + dir in world coordinates.</para>
      </summary>
      <param name="start">Point in world space where the ray should start.</param>
      <param name="dir">Direction and length of the ray.</param>
      <param name="color">Color of the drawn line.</param>
      <param name="duration">How long the line will be visible for (in seconds).</param>
      <param name="depthTest">Should the line be obscured by other objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
      <summary>
        <para>Draws a line from start to start + dir in world coordinates.</para>
      </summary>
      <param name="start">Point in world space where the ray should start.</param>
      <param name="dir">Direction and length of the ray.</param>
      <param name="color">Color of the drawn line.</param>
      <param name="duration">How long the line will be visible for (in seconds).</param>
      <param name="depthTest">Should the line be obscured by other objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Boolean)">
      <summary>
        <para>Draws a line from start to start + dir in world coordinates.</para>
      </summary>
      <param name="start">Point in world space where the ray should start.</param>
      <param name="dir">Direction and length of the ray.</param>
      <param name="color">Color of the drawn line.</param>
      <param name="duration">How long the line will be visible for (in seconds).</param>
      <param name="depthTest">Should the line be obscured by other objects closer to the camera?</param>
    </member>
    <member name="M:UnityEngine.Debug.Log(System.Object)">
      <summary>
        <para>Logs message to the Unity Console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.Log(System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogAssertion(System.Object)">
      <summary>
        <para>A variant of Debug.Log that logs an assertion message to the console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogAssertion(System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of Debug.Log that logs an assertion message to the console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogAssertionFormat(System.String,System.Object[])">
      <summary>
        <para>Logs a formatted assertion message to the Unity console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogAssertionFormat(UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted assertion message to the Unity console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogError(System.Object)">
      <summary>
        <para>A variant of Debug.Log that logs an error message to the console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogError(System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of Debug.Log that logs an error message to the console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogErrorFormat(System.String,System.Object[])">
      <summary>
        <para>Logs a formatted error message to the Unity console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogErrorFormat(UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted error message to the Unity console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogException(System.Exception)">
      <summary>
        <para>A variant of Debug.Log that logs an error message to the console.</para>
      </summary>
      <param name="context">Object to which the message applies.</param>
      <param name="exception">Runtime Exception.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogException(System.Exception,UnityEngine.Object)">
      <summary>
        <para>A variant of Debug.Log that logs an error message to the console.</para>
      </summary>
      <param name="context">Object to which the message applies.</param>
      <param name="exception">Runtime Exception.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogFormat(System.String,System.Object[])">
      <summary>
        <para>Logs a formatted message to the Unity Console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogFormat(UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted message to the Unity Console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogWarning(System.Object)">
      <summary>
        <para>A variant of Debug.Log that logs a warning message to the console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogWarning(System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of Debug.Log that logs a warning message to the console.</para>
      </summary>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogWarningFormat(System.String,System.Object[])">
      <summary>
        <para>Logs a formatted warning message to the Unity Console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Debug.LogWarningFormat(UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted warning message to the Unity Console.</para>
      </summary>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="T:UnityEngine.DelayedAttribute">
      <summary>
        <para>Attribute used to make a float, int, or string variable in a script be delayed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.DelayedAttribute.#ctor">
      <summary>
        <para>Attribute used to make a float, int, or string variable in a script be delayed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DepthTextureMode">
      <summary>
        <para>Depth texture generation mode for Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DepthTextureMode.Depth">
      <summary>
        <para>Generate a depth texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DepthTextureMode.DepthNormals">
      <summary>
        <para>Generate a depth + normals texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DepthTextureMode.MotionVectors">
      <summary>
        <para>Specifies whether motion vectors should be rendered (if possible).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DepthTextureMode.None">
      <summary>
        <para>Do not generate depth texture (Default).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DetailPrototype">
      <summary>
        <para>Detail prototype used by the Terrain GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.bendFactor">
      <summary>
        <para>Bend factor of the detailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.dryColor">
      <summary>
        <para>Color when the DetailPrototypes are "dry".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.healthyColor">
      <summary>
        <para>Color when the DetailPrototypes are "healthy".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.maxHeight">
      <summary>
        <para>Maximum height of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.maxWidth">
      <summary>
        <para>Maximum width of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.minHeight">
      <summary>
        <para>Minimum height of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.minWidth">
      <summary>
        <para>Minimum width of the grass billboards (if render mode is GrassBillboard).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.noiseSpread">
      <summary>
        <para>How spread out is the noise for the DetailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.prototype">
      <summary>
        <para>GameObject used by the DetailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.prototypeTexture">
      <summary>
        <para>Texture used by the DetailPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DetailPrototype.renderMode">
      <summary>
        <para>Render mode for the DetailPrototype.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DetailRenderMode">
      <summary>
        <para>Render mode for detail prototypes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailRenderMode.Grass">
      <summary>
        <para>The detail prototype will use the grass shader.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailRenderMode.GrassBillboard">
      <summary>
        <para>The detail prototype will be rendered as billboards that are always facing the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DetailRenderMode.VertexLit">
      <summary>
        <para>Will show the prototype using diffuse shading.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DeviceOrientation">
      <summary>
        <para>Describes physical orientation of the device as determined by the OS.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.FaceDown">
      <summary>
        <para>The device is held parallel to the ground with the screen facing downwards.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.FaceUp">
      <summary>
        <para>The device is held parallel to the ground with the screen facing upwards.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.LandscapeLeft">
      <summary>
        <para>The device is in landscape mode, with the device held upright and the home button on the right side.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.LandscapeRight">
      <summary>
        <para>The device is in landscape mode, with the device held upright and the home button on the left side.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.Portrait">
      <summary>
        <para>The device is in portrait mode, with the device held upright and the home button at the bottom.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.PortraitUpsideDown">
      <summary>
        <para>The device is in portrait mode but upside down, with the device held upright and the home button at the top.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceOrientation.Unknown">
      <summary>
        <para>The orientation of the device cannot be determined.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DeviceType">
      <summary>
        <para>Enumeration for SystemInfo.deviceType, denotes a coarse grouping of kinds of devices.

Windows Store Apps: tablets are treated as desktop machines, thus DeviceType.Handheld will only be returned for Windows Phones.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceType.Console">
      <summary>
        <para>A stationary gaming console.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceType.Desktop">
      <summary>
        <para>Desktop or laptop computer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceType.Handheld">
      <summary>
        <para>A handheld device like mobile phone or a tablet.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DeviceType.Unknown">
      <summary>
        <para>Device type is unknown. You should never see this in practice.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Diagnostics.PlayerConnection">
      <summary>
        <para>Class for handling the connection between Editor and Player.
This connection can be established by connecting the profiler to the player.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Diagnostics.PlayerConnection.connected">
      <summary>
        <para>Returns true when Editor is connected to the player. When called in Editor, this function will always returns false.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Diagnostics.PlayerConnection.SendFile(System.String,System.Byte[])">
      <summary>
        <para>Send a file from the player to the editor and save it on disk.
You can specify either the absolute path or the relative path. When the path you specify is not absolute, it is relative to the project path.</para>
      </summary>
      <param name="remoteFilePath">File Path.</param>
      <param name="data">File contents.</param>
    </member>
    <member name="T:UnityEngine.DisallowMultipleComponent">
      <summary>
        <para>Prevents MonoBehaviour of same type (or subtype) to be added more than once to a GameObject.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Display">
      <summary>
        <para>Provides access to a display / screen for rendering operations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.active">
      <summary>
        <para>Gets the state of the display and returns true if the display is active and false if otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.colorBuffer">
      <summary>
        <para>Color RenderBuffer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.depthBuffer">
      <summary>
        <para>Depth RenderBuffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Display.displays">
      <summary>
        <para>The list of currently connected Displays. Contains at least one (main) display.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.main">
      <summary>
        <para>Main Display.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.renderingHeight">
      <summary>
        <para>Vertical resolution that the display is rendering at.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.renderingWidth">
      <summary>
        <para>Horizontal resolution that the display is rendering at.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.systemHeight">
      <summary>
        <para>Vertical native display resolution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Display.systemWidth">
      <summary>
        <para>Horizontal native display resolution.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Display.Activate">
      <summary>
        <para>Activate an external display. Eg. Secondary Monitors connected to the System.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Display.Activate(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>This overloaded function available for Windows allows specifying desired Window Width, Height and Refresh Rate.</para>
      </summary>
      <param name="width">Desired Width of the Window (for Windows only. On Linux and Mac uses Screen Width).</param>
      <param name="height">Desired Height of the Window (for Windows only. On Linux and Mac uses Screen Height).</param>
      <param name="refreshRate">Desired Refresh Rate.</param>
    </member>
    <member name="M:UnityEngine.Display.RelativeMouseAt(UnityEngine.Vector3)">
      <summary>
        <para>Query relative mouse coordinates.</para>
      </summary>
      <param name="inputMouseCoordinates">Mouse Input Position as Coordinates.</param>
    </member>
    <member name="M:UnityEngine.Display.SetParams(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Set rendering size and position on screen (Windows only).</para>
      </summary>
      <param name="width">Change Window Width (Windows Only).</param>
      <param name="height">Change Window Height (Windows Only).</param>
      <param name="x">Change Window Position X (Windows Only).</param>
      <param name="y">Change Window Position Y (Windows Only).</param>
    </member>
    <member name="M:UnityEngine.Display.SetRenderingResolution(System.Int32,System.Int32)">
      <summary>
        <para>Sets rendering resolution for the display.</para>
      </summary>
      <param name="w">Rendering width in pixels.</param>
      <param name="h">Rendering height in pixels.</param>
    </member>
    <member name="T:UnityEngine.DistanceJoint2D">
      <summary>
        <para>Joint that keeps two Rigidbody2D objects a fixed distance apart.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.autoConfigureDistance">
      <summary>
        <para>Should the distance be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.distance">
      <summary>
        <para>The distance separating the two ends of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.maxDistanceOnly">
      <summary>
        <para>Whether to maintain a maximum distance only or not.  If not then the absolute distance will be maintained instead.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DrivenRectTransformTracker">
      <summary>
        <para>A component can be designed to drive a RectTransform. The DrivenRectTransformTracker struct is used to specify which RectTransforms it is driving.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.DrivenRectTransformTracker.Add(UnityEngine.Object,UnityEngine.RectTransform,UnityEngine.DrivenTransformProperties)">
      <summary>
        <para>Add a RectTransform to be driven.</para>
      </summary>
      <param name="driver">The object to drive properties.</param>
      <param name="rectTransform">The RectTransform to be driven.</param>
      <param name="drivenProperties">The properties to be driven.</param>
    </member>
    <member name="M:UnityEngine.DrivenRectTransformTracker.Clear">
      <summary>
        <para>Clear the list of RectTransforms being driven.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DrivenTransformProperties">
      <summary>
        <para>An enumeration of transform properties that can be driven on a RectTransform by an object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.All">
      <summary>
        <para>Selects all driven properties.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchoredPosition">
      <summary>
        <para>Selects driven property RectTransform.anchoredPosition.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchoredPosition3D">
      <summary>
        <para>Selects driven property RectTransform.anchoredPosition3D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchoredPositionX">
      <summary>
        <para>Selects driven property RectTransform.anchoredPosition.x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchoredPositionY">
      <summary>
        <para>Selects driven property RectTransform.anchoredPosition.y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchoredPositionZ">
      <summary>
        <para>Selects driven property RectTransform.anchoredPosition3D.z.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchorMax">
      <summary>
        <para>Selects driven property combining AnchorMaxX and AnchorMaxY.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchorMaxX">
      <summary>
        <para>Selects driven property RectTransform.anchorMax.x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchorMaxY">
      <summary>
        <para>Selects driven property RectTransform.anchorMax.y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchorMin">
      <summary>
        <para>Selects driven property combining AnchorMinX and AnchorMinY.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchorMinX">
      <summary>
        <para>Selects driven property RectTransform.anchorMin.x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.AnchorMinY">
      <summary>
        <para>Selects driven property RectTransform.anchorMin.y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.Anchors">
      <summary>
        <para>Selects driven property combining AnchorMinX, AnchorMinY, AnchorMaxX and AnchorMaxY.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.None">
      <summary>
        <para>Deselects all driven properties.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.Pivot">
      <summary>
        <para>Selects driven property combining PivotX and PivotY.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.PivotX">
      <summary>
        <para>Selects driven property RectTransform.pivot.x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.PivotY">
      <summary>
        <para>Selects driven property RectTransform.pivot.y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.Rotation">
      <summary>
        <para>Selects driven property Transform.localRotation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.Scale">
      <summary>
        <para>Selects driven property combining ScaleX, ScaleY &amp;&amp; ScaleZ.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.ScaleX">
      <summary>
        <para>Selects driven property Transform.localScale.x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.ScaleY">
      <summary>
        <para>Selects driven property Transform.localScale.y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.ScaleZ">
      <summary>
        <para>Selects driven property Transform.localScale.z.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.SizeDelta">
      <summary>
        <para>Selects driven property combining SizeDeltaX and SizeDeltaY.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.SizeDeltaX">
      <summary>
        <para>Selects driven property RectTransform.sizeDelta.x.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DrivenTransformProperties.SizeDeltaY">
      <summary>
        <para>Selects driven property RectTransform.sizeDelta.y.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DynamicGI">
      <summary>
        <para>Allows to control the dynamic Global Illumination.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DynamicGI.indirectScale">
      <summary>
        <para>Allows for scaling the contribution coming from realtime &amp; static  lightmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DynamicGI.synchronousMode">
      <summary>
        <para>When enabled, new dynamic Global Illumination output is shown in each frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DynamicGI.updateThreshold">
      <summary>
        <para>Threshold for limiting updates of realtime GI. The unit of measurement is "percentage intensity change".</para>
      </summary>
    </member>
    <member name="M:UnityEngine.DynamicGI.SetEmissive(UnityEngine.Renderer,UnityEngine.Color)">
      <summary>
        <para>Allows to set an emissive color for a given renderer quickly, without the need to render the emissive input for the entire system.</para>
      </summary>
      <param name="renderer">The Renderer that should get a new color.</param>
      <param name="color">The emissive Color.</param>
    </member>
    <member name="M:UnityEngine.DynamicGI.UpdateEnvironment">
      <summary>
        <para>Schedules an update of the environment texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.DynamicGI.UpdateMaterials(UnityEngine.Renderer)">
      <summary>
        <para>Schedules an update of the albedo and emissive textures of a system that contains the renderer or the terrain.</para>
      </summary>
      <param name="renderer">The Renderer to use when searching for a system to update.</param>
      <param name="terrain">The Terrain to use when searching for systems to update.</param>
    </member>
    <member name="M:UnityEngine.DynamicGI.UpdateMaterials">
      <summary>
        <para>Schedules an update of the albedo and emissive textures of a system that contains the renderer or the terrain.</para>
      </summary>
      <param name="renderer">The Renderer to use when searching for a system to update.</param>
      <param name="terrain">The Terrain to use when searching for systems to update.</param>
    </member>
    <member name="M:UnityEngine.DynamicGI.UpdateMaterials">
      <summary>
        <para>Schedules an update of the albedo and emissive textures of a system that contains the renderer or the terrain.</para>
      </summary>
      <param name="renderer">The Renderer to use when searching for a system to update.</param>
      <param name="terrain">The Terrain to use when searching for systems to update.</param>
    </member>
    <member name="T:UnityEngine.EdgeCollider2D">
      <summary>
        <para>Collider for 2D physics representing an arbitrary set of connected edges (lines) defined by its vertices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.edgeCount">
      <summary>
        <para>Gets the number of edges.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.edgeRadius">
      <summary>
        <para>Controls the radius of all edges created by the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.pointCount">
      <summary>
        <para>Gets the number of points.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.points">
      <summary>
        <para>Get or set the points defining multiple continuous edges.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EdgeCollider2D.Reset">
      <summary>
        <para>Reset to a single edge consisting of two points.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Effector2D">
      <summary>
        <para>A base class for all 2D effectors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Effector2D.colliderMask">
      <summary>
        <para>The mask used to select specific layers allowed to interact with the effector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Effector2D.useColliderMask">
      <summary>
        <para>Should the collider-mask be used or the global collision matrix?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EffectorForceMode2D">
      <summary>
        <para>The mode used to apply Effector2D forces.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorForceMode2D.Constant">
      <summary>
        <para>The force is applied at a constant rate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorForceMode2D.InverseLinear">
      <summary>
        <para>The force is applied inverse-linear relative to a point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorForceMode2D.InverseSquared">
      <summary>
        <para>The force is applied inverse-squared relative to a point.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EffectorSelection2D">
      <summary>
        <para>Selects the source and/or target to be used by an Effector2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorSelection2D.Collider">
      <summary>
        <para>The source/target is defined by the Collider2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorSelection2D.Rigidbody">
      <summary>
        <para>The source/target is defined by the Rigidbody2D.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EllipsoidParticleEmitter">
      <summary>
        <para>Class used to allow GameObject.AddComponent / GameObject.GetComponent to be used.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Event">
      <summary>
        <para>A UnityGUI event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.alt">
      <summary>
        <para>Is Alt/Option key held down? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.button">
      <summary>
        <para>Which mouse button was pressed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.capsLock">
      <summary>
        <para>Is Caps Lock on? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.character">
      <summary>
        <para>The character typed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.clickCount">
      <summary>
        <para>How many consecutive mouse clicks have we received.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.command">
      <summary>
        <para>Is Command/Windows key held down? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.commandName">
      <summary>
        <para>The name of an ExecuteCommand or ValidateCommand Event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.control">
      <summary>
        <para>Is Control key held down? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.current">
      <summary>
        <para>The current event that's being processed right now.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.delta">
      <summary>
        <para>The relative movement of the mouse compared to last event.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.displayIndex">
      <summary>
        <para>Index of display that the event belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.functionKey">
      <summary>
        <para>Is the current keypress a function key? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.isKey">
      <summary>
        <para>Is this event a keyboard event? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.isMouse">
      <summary>
        <para>Is this event a mouse event? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.keyCode">
      <summary>
        <para>The raw key code for keyboard events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.modifiers">
      <summary>
        <para>Which modifier keys are held down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.mousePosition">
      <summary>
        <para>The mouse position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.numeric">
      <summary>
        <para>Is the current keypress on the numeric keyboard? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.shift">
      <summary>
        <para>Is Shift held down? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.type">
      <summary>
        <para>The type of event.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Event.GetEventCount">
      <summary>
        <para>Returns the current number of events that are stored in the event queue.</para>
      </summary>
      <returns>
        <para>Current number of events currently in the event queue.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Event.GetTypeForControl(System.Int32)">
      <summary>
        <para>Get a filtered event type for a given control ID.</para>
      </summary>
      <param name="controlID">The ID of the control you are querying from.</param>
    </member>
    <member name="M:UnityEngine.Event.KeyboardEvent(System.String)">
      <summary>
        <para>Create a keyboard event.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEngine.Event.PopEvent(UnityEngine.Event)">
      <summary>
        <para>Get the next queued [Event] from the event system.</para>
      </summary>
      <param name="outEvent">Next Event.</param>
    </member>
    <member name="M:UnityEngine.Event.Use">
      <summary>
        <para>Use this event.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventModifiers">
      <summary>
        <para>Types of modifier key that can be active during a keystroke event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Alt">
      <summary>
        <para>Alt key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.CapsLock">
      <summary>
        <para>Caps lock key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Command">
      <summary>
        <para>Command key (Mac).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Control">
      <summary>
        <para>Control key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.FunctionKey">
      <summary>
        <para>Function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.None">
      <summary>
        <para>No modifier key pressed during a keystroke event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Numeric">
      <summary>
        <para>Num lock key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Shift">
      <summary>
        <para>Shift key.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.PersistentListenerMode">
      <summary>
        <para>THe mode that a listener is operating in.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.Bool">
      <summary>
        <para>The listener will bind to one argument bool functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.EventDefined">
      <summary>
        <para>The listener will use the function binding specified by the even.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.Float">
      <summary>
        <para>The listener will bind to one argument float functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.Int">
      <summary>
        <para>The listener will bind to one argument int functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.Object">
      <summary>
        <para>The listener will bind to one argument Object functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.String">
      <summary>
        <para>The listener will bind to one argument string functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.PersistentListenerMode.Void">
      <summary>
        <para>The listener will bind to zero argument functions.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.UnityAction">
      <summary>
        <para>Zero argument delegate used by UnityEvents.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.UnityAction_1">
      <summary>
        <para>One argument delegate used by UnityEvents.</para>
      </summary>
      <param name="arg0"></param>
    </member>
    <member name="T:UnityEngine.Events.UnityAction_2">
      <summary>
        <para>Two argument delegate used by UnityEvents.</para>
      </summary>
      <param name="arg0"></param>
      <param name="arg1"></param>
    </member>
    <member name="T:UnityEngine.Events.UnityAction_3">
      <summary>
        <para>Three argument delegate used by UnityEvents.</para>
      </summary>
      <param name="arg0"></param>
      <param name="arg1"></param>
      <param name="arg2"></param>
    </member>
    <member name="T:UnityEngine.Events.UnityAction_4">
      <summary>
        <para>Four argument delegate used by UnityEvents.</para>
      </summary>
      <param name="arg0"></param>
      <param name="arg1"></param>
      <param name="arg2"></param>
      <param name="arg3"></param>
    </member>
    <member name="T:UnityEngine.Events.UnityEvent">
      <summary>
        <para>A zero argument persistent callback that can be saved with the scene.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Events.UnityEvent.AddListener(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Add a non persistent listener to the UnityEvent.</para>
      </summary>
      <param name="call">Callback function.</param>
    </member>
    <member name="M:UnityEngine.Events.UnityEvent.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Events.UnityEvent.Invoke">
      <summary>
        <para>Invoke all registered callbacks (runtime and persistent).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Events.UnityEvent.RemoveListener(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Remove a non persistent listener from the UnityEvent.</para>
      </summary>
      <param name="call">Callback function.</param>
    </member>
    <member name="T:UnityEngine.Events.UnityEvent`1">
      <summary>
        <para>One argument version of UnityEvent.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.UnityEvent`2">
      <summary>
        <para>Two argument version of UnityEvent.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.UnityEvent`3">
      <summary>
        <para>Three argument version of UnityEvent.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.UnityEvent`4">
      <summary>
        <para>Four argument version of UnityEvent.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Events.UnityEventBase">
      <summary>
        <para>Abstract base class for UnityEvents.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Events.UnityEventBase.GetPersistentEventCount">
      <summary>
        <para>Get the number of registered persistent listeners.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Events.UnityEventBase.GetPersistentMethodName(System.Int32)">
      <summary>
        <para>Get the target method name of the listener at index index.</para>
      </summary>
      <param name="index">Index of the listener to query.</param>
    </member>
    <member name="M:UnityEngine.Events.UnityEventBase.GetPersistentTarget(System.Int32)">
      <summary>
        <para>Get the target component of the listener at index index.</para>
      </summary>
      <param name="index">Index of the listener to query.</param>
    </member>
    <member name="M:UnityEngine.Events.UnityEventBase.GetValidMethodInfo(System.Object,System.String,System.Type[])">
      <summary>
        <para>Given an object, function name, and a list of argument types; find the method that matches.</para>
      </summary>
      <param name="obj">Object to search for the method.</param>
      <param name="functionName">Function name to search for.</param>
      <param name="argumentTypes">Argument types for the function.</param>
    </member>
    <member name="M:UnityEngine.Events.UnityEventBase.RemoveAllListeners">
      <summary>
        <para>Remove all non-persisent (ie created from script) listeners  from the event.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Events.UnityEventBase.SetPersistentListenerState(System.Int32,UnityEngine.Events.UnityEventCallState)">
      <summary>
        <para>Modify the execution state of a persistent listener.</para>
      </summary>
      <param name="index">Index of the listener to query.</param>
      <param name="state">State to set.</param>
    </member>
    <member name="T:UnityEngine.Events.UnityEventCallState">
      <summary>
        <para>Controls the scope of UnityEvent callbacks.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.UnityEventCallState.EditorAndRuntime">
      <summary>
        <para>Callback is always issued.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.UnityEventCallState.Off">
      <summary>
        <para>Callback is not issued.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Events.UnityEventCallState.RuntimeOnly">
      <summary>
        <para>Callback is only issued in the Runtime and Editor playmode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventType">
      <summary>
        <para>Types of UnityGUI input and processing events.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ContextClick">
      <summary>
        <para>User has right-clicked (or control-clicked on the mac).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.DragExited">
      <summary>
        <para>Editor only: drag &amp; drop operation exited.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.DragPerform">
      <summary>
        <para>Editor only: drag &amp; drop operation performed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.DragUpdated">
      <summary>
        <para>Editor only: drag &amp; drop operation updated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ExecuteCommand">
      <summary>
        <para>Execute a special command (eg. copy &amp; paste).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Ignore">
      <summary>
        <para>Event should be ignored.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.KeyDown">
      <summary>
        <para>A keyboard key was pressed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.KeyUp">
      <summary>
        <para>A keyboard key was released.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Layout">
      <summary>
        <para>A layout event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseDown">
      <summary>
        <para>Mouse button was pressed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseDrag">
      <summary>
        <para>Mouse was dragged.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseEnterWindow">
      <summary>
        <para>Mouse entered a window (Editor views only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseLeaveWindow">
      <summary>
        <para>Mouse left a window (Editor views only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseMove">
      <summary>
        <para>Mouse was moved (Editor views only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseUp">
      <summary>
        <para>Mouse button was released.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Repaint">
      <summary>
        <para>A repaint event. One is sent every frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ScrollWheel">
      <summary>
        <para>The scroll wheel was moved.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Used">
      <summary>
        <para>Already processed event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ValidateCommand">
      <summary>
        <para>Validates a special command (e.g. copy &amp; paste).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ExecuteInEditMode">
      <summary>
        <para>Makes all instances of a script execute in edit mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationClipPlayable">
      <summary>
        <para>Playable that plays an AnimationClip. Can be used as an input to an AnimationPlayable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationClipPlayable.applyFootIK">
      <summary>
        <para>Applies Humanoid FootIK solver.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationClipPlayable.clip">
      <summary>
        <para>AnimationClip played by this Playable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationClipPlayable.speed">
      <summary>
        <para>The speed at which the AnimationClip is played.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationLayerMixerPlayable">
      <summary>
        <para>Playable used to mix AnimationPlayables when used in Layers.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationMixerPlayable">
      <summary>
        <para>Playable used to mix AnimationPlayables.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationPlayable">
      <summary>
        <para>Base class for all animation related Playable classes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions">
      <summary>
        <para>Extends PlayableGraph for Animation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.CreateAnimationClipPlayable(UnityEngine.Experimental.Director.PlayableGraph,UnityEngine.AnimationClip)">
      <summary>
        <para>Creates an AnimationClipPlayable in the PlayableGraph.</para>
      </summary>
      <param name="graph">The PlayableGraph object.</param>
      <param name="clip">The AnimationClip that will be added in the graph.</param>
      <returns>
        <para>A PlayableHandle on the created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.CreateAnimationMixerPlayable(UnityEngine.Experimental.Director.PlayableGraph,System.Int32,System.Boolean)">
      <summary>
        <para>Creates an AnimationMixerPlayable in the PlayableGraph.</para>
      </summary>
      <param name="inputCount">The number of inputs that the mixer will update.</param>
      <param name="normalizeWeights">Set to true if you want the system to force a weight normalization of the inputs. If true, the sum of all the inputs weights will always be 1.0.</param>
      <param name="graph">The PlayableGraph object.</param>
      <returns>
        <para>A PlayableHandle on the created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.CreateAnimationOutput(UnityEngine.Experimental.Director.PlayableGraph,System.String,UnityEngine.Animator)">
      <summary>
        <para>Creates an AnimationPlayableOutput in the PlayableGraph. When the AnimationPlayableOutput.sourcePlayable is set, the Animator will be playing the Playable.</para>
      </summary>
      <param name="name">The name of output.</param>
      <param name="target">The target that will Play the AnimationPlayableOutput.sourcePlayable.</param>
      <param name="graph">The PlayableGraph object.</param>
      <returns>
        <para>A PlayableHandle on the created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.CreateAnimatorControllerPlayable(UnityEngine.Experimental.Director.PlayableGraph,UnityEngine.RuntimeAnimatorController)">
      <summary>
        <para>Creates an AnimatorControllerPlayable in the PlayableGraph.</para>
      </summary>
      <param name="controller">The RuntimeAnimatorController that will be added in the graph.</param>
      <param name="graph">The PlayableGraph object.</param>
      <returns>
        <para>A PlayableHandle on the created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.DestroyOutput(UnityEngine.Experimental.Director.PlayableGraph,UnityEngine.Experimental.Director.AnimationPlayableOutput)">
      <summary>
        <para>Destroys the PlayableOutput.</para>
      </summary>
      <param name="output">The output that will be destroyed.</param>
      <param name="graph">The PlayableGraph object.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.GetAnimationOutput(UnityEngine.Experimental.Director.PlayableGraph,System.Int32)">
      <summary>
        <para>Returns the AnimationPlayableOutput at the given index.</para>
      </summary>
      <param name="index">The index of the AnimationPlayableOutput.</param>
      <param name="graph"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableGraphExtensions.GetAnimationOutputCount(UnityEngine.Experimental.Director.PlayableGraph)">
      <summary>
        <para>Gets the number of AnimationPlayableOutput in the PlayableGraph.</para>
      </summary>
      <param name="graph"></param>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationPlayableOutput">
      <summary>
        <para>Animation output for the PlayableGraph.  Defines how a Playable is connected to an Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationPlayableOutput.sourcePlayable">
      <summary>
        <para>The Playable that is bound to the output.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationPlayableOutput.target">
      <summary>
        <para>The Animator component that is bound to this output.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationPlayableOutput.userData">
      <summary>
        <para>Used to pass custom data to ScriptPlayable.ProcessFrame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationPlayableOutput.weight">
      <summary>
        <para>The blend weight of the sourcePlayable to the animator.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableOutput.IsValid">
      <summary>
        <para>Returns true if the PlayableOutput has been properly constructed by the PlayableGraph and has not been destroyed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimationPlayableOutput.Null">
      <summary>
        <para>Used to compare against AnimationPlayableOutput instances to check their validity.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimationPlayableUtilities">
      <summary>
        <para>Implements high-level utility methods to simplify use of the Playable API with Animations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableUtilities.Play(UnityEngine.Animator,UnityEngine.Experimental.Director.PlayableHandle,UnityEngine.Experimental.Director.PlayableGraph)">
      <summary>
        <para>Plays the Playable on  the given Animator.</para>
      </summary>
      <param name="animator">Target Animator.</param>
      <param name="playable">The Playable that will be played.</param>
      <param name="graph">The Graph that owns the Playable.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableUtilities.PlayAnimatorController(UnityEngine.Animator,UnityEngine.RuntimeAnimatorController,UnityEngine.Experimental.Director.PlayableGraph&amp;)">
      <summary>
        <para>Creates a PlayableGraph to be played on the given Animator. An AnimatorControllerPlayable is also created for the given RuntimeAnimatorController.</para>
      </summary>
      <param name="animator">Target Animator.</param>
      <param name="controller">The RuntimeAnimatorController to create an AnimatorControllerPlayable for.</param>
      <param name="graph">The created PlayableGraph.</param>
      <returns>
        <para>A handle to the newly-created AnimatorControllerPlayable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableUtilities.PlayClip(UnityEngine.Animator,UnityEngine.AnimationClip,UnityEngine.Experimental.Director.PlayableGraph&amp;)">
      <summary>
        <para>Creates a PlayableGraph to be played on the given Animator. An AnimationClipPlayable is also created for the given AnimationClip.</para>
      </summary>
      <param name="animator">Target Animator.</param>
      <param name="clip">The AnimationClip to create an AnimationClipPlayable for.</param>
      <param name="graph">The created PlayableGraph.</param>
      <returns>
        <para>A handle to the newly-created AnimationClipPlayable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimationPlayableUtilities.PlayMixer(UnityEngine.Animator,System.Int32,UnityEngine.Experimental.Director.PlayableGraph&amp;)">
      <summary>
        <para>Creates a PlayableGraph to be played on the given Animator. An AnimationMixerPlayable is also created.</para>
      </summary>
      <param name="animator">Target Animator.</param>
      <param name="inputCount">The input count for the AnimationMixerPlayable.</param>
      <param name="graph">The created PlayableGraph.</param>
      <returns>
        <para>A handle to the newly-created AnimationMixerPlayable.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AnimatorControllerPlayable">
      <summary>
        <para>Playable that plays a RuntimeAnimatorController. Can be used as an input to an AnimationPlayable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimatorControllerPlayable.layerCount">
      <summary>
        <para>See IAnimatorControllerPlayable.layerCount.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.AnimatorControllerPlayable.parameterCount">
      <summary>
        <para>See IAnimatorControllerPlayable.parameterCount.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.CrossFade(System.String,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFade.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.CrossFade(System.Int32,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFade.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.CrossFadeInFixedTime(System.String,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFadeInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.CrossFadeInFixedTime(System.Int32,System.Single,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.CrossFadeInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="transitionDuration"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetAnimatorTransitionInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetAnimatorTransitionInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetBool(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetBool(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetCurrentAnimatorClipInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetCurrentAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="clips"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetCurrentAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorClipInfoCount.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetCurrentAnimatorStateInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetCurrentAnimatorStateInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetFloat(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetFloat(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetInteger(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetInteger(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetLayerIndex(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetLayerIndex.</para>
      </summary>
      <param name="layerName"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetLayerName(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetLayerName.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetLayerWeight(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetLayerWeight.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetNextAnimatorClipInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetNextAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="clips"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetNextAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorClipInfoCount.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetNextAnimatorStateInfo(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetNextAnimatorStateInfo.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.GetParameter(System.Int32)">
      <summary>
        <para>See AnimatorController.GetParameter.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.HasState(System.Int32,System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.HasState.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="stateID"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.IsInTransition(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.IsInTransition.</para>
      </summary>
      <param name="layerIndex"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.IsParameterControlledByCurve(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.IsParameterControlledByCurve.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.IsParameterControlledByCurve(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.IsParameterControlledByCurve.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.Play(System.String,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.Play.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.Play(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.Play.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="normalizedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.PlayInFixedTime(System.String,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.PlayInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.PlayInFixedTime(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.PlayInFixedTime.</para>
      </summary>
      <param name="stateName"></param>
      <param name="layer"></param>
      <param name="fixedTime"></param>
      <param name="stateNameHash"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.ResetTrigger(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.ResetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.ResetTrigger(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.ResetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetBool(System.String,System.Boolean)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetBool(System.Int32,System.Boolean)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetBool.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetFloat(System.String,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetInteger(System.String,System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetInteger(System.Int32,System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetInteger.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetLayerWeight(System.Int32,System.Single)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetLayerWeight.</para>
      </summary>
      <param name="layerIndex"></param>
      <param name="weight"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetTrigger(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.AnimatorControllerPlayable.SetTrigger(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetTrigger.</para>
      </summary>
      <param name="name"></param>
      <param name="id"></param>
    </member>
    <member name="T:UnityEngine.Experimental.Director.AudioPlayableGraphExtensions">
      <summary>
        <para>Extends PlayableGraph for Audio.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.FrameData">
      <summary>
        <para>This structure contains the frame information a Playable receives in Playable.PrepareFrame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.deltaTime">
      <summary>
        <para>Time difference between this frame and the preceding frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.effectiveSpeed">
      <summary>
        <para>The accumulated speed of the Playable during the PlayableGraph traversal.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.effectiveWeight">
      <summary>
        <para>The accumulated weight of the Playable during the PlayableGraph traversal.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.evaluationType">
      <summary>
        <para>Indicates the type of evaluation that caused PlayableGraph.PrepareFrame to be called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.frameId">
      <summary>
        <para>The current frame identifier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.seekOccurred">
      <summary>
        <para>Indicates that the local time was explicitly set.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.FrameData.weight">
      <summary>
        <para>The weight of the current Playable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.FrameData.EvaluationType">
      <summary>
        <para>Describes the cause for the evaluation of a PlayableGraph.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Director.FrameData.EvaluationType.Evaluate">
      <summary>
        <para>Indicates the graph was updated due to a call to PlayableGraph.Evaluate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Director.FrameData.EvaluationType.Playback">
      <summary>
        <para>Indicates the graph was called by the runtime during normal playback due to PlayableGraph.Play being called.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Experimental.Director.IAnimatorControllerPlayable">
      <summary>
        <para>Interface for objects that can control an AnimatorController.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.layerCount">
      <summary>
        <para>The AnimatorController layer count.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.parameterCount">
      <summary>
        <para>The number of AnimatorControllerParameters used by the AnimatorController.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.CrossFade(System.String,System.Single,System.Int32,System.Single)">
      <summary>
        <para>Creates a dynamic transition between the current state and the destination state.</para>
      </summary>
      <param name="stateName">The name of the destination state.</param>
      <param name="transitionDuration">The duration of the transition. Value is in source state normalized time.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="normalizedTime">Start time of the current destination state. Value is in source state normalized time, should be between 0 and 1.  If no explicit normalizedTime is specified or normalizedTime value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time and no transition will happen.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.CrossFade(System.Int32,System.Single,System.Int32,System.Single)">
      <summary>
        <para>Creates a dynamic transition between the current state and the destination state.</para>
      </summary>
      <param name="stateName">The name of the destination state.</param>
      <param name="transitionDuration">The duration of the transition. Value is in source state normalized time.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="normalizedTime">Start time of the current destination state. Value is in source state normalized time, should be between 0 and 1.  If no explicit normalizedTime is specified or normalizedTime value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time and no transition will happen.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.CrossFadeInFixedTime(System.String,System.Single,System.Int32,System.Single)">
      <summary>
        <para>Same as IAnimatorControllerPlayable.CrossFade, but the duration and offset in the target state are in fixed time.</para>
      </summary>
      <param name="stateName">The name of the destination state.</param>
      <param name="transitionDuration">The duration of the transition. Value is in seconds.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="fixedTime">Start time of the current destination state. Value is in seconds. If no explicit fixedTime is specified or fixedTime value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time and no transition will happen.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.CrossFadeInFixedTime(System.Int32,System.Single,System.Int32,System.Single)">
      <summary>
        <para>Same as IAnimatorControllerPlayable.CrossFade, but the duration and offset in the target state are in fixed time.</para>
      </summary>
      <param name="stateName">The name of the destination state.</param>
      <param name="transitionDuration">The duration of the transition. Value is in seconds.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="fixedTime">Start time of the current destination state. Value is in seconds. If no explicit fixedTime is specified or fixedTime value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time and no transition will happen.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetAnimatorTransitionInfo(System.Int32)">
      <summary>
        <para>Gets the Transition information on a specified AnimatorController layer.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetBool(System.String)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetBool.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetBool(System.Int32)">
      <summary>
        <para>See IAnimatorControllerPlayable.GetBool.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo(System.Int32)">
      <summary>
        <para>Gets the list of AnimatorClipInfo currently played by the current state.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>Gets the list of AnimatorClipInfo currently played by the current state.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
      <param name="clips">Array to receive results.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetCurrentAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>This function should be used when you want to use the allocation-free method IAnimatorControllerPlayable.GetCurrentAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex">Layer's Index.</param>
      <returns>
        <para>Returns the count of AnimatorClipInfo for the current state.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetCurrentAnimatorStateInfo(System.Int32)">
      <summary>
        <para>Gets the current State information on a specified AnimatorController layer.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetFloat(System.String)">
      <summary>
        <para>Gets the value of a float parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetFloat(System.Int32)">
      <summary>
        <para>Gets the value of a float parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetInteger(System.String)">
      <summary>
        <para>Gets the value of an integer parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetInteger(System.Int32)">
      <summary>
        <para>Gets the value of an integer parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetLayerIndex(System.String)">
      <summary>
        <para>Gets the index of the layer with specified name.</para>
      </summary>
      <param name="layerName">The layer's name.</param>
      <returns>
        <para>The index of the layer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetLayerName(System.Int32)">
      <summary>
        <para>Gets name of the layer.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetLayerWeight(System.Int32)">
      <summary>
        <para>Gets the layer's current weight.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetNextAnimatorClipInfo(System.Int32)">
      <summary>
        <para>Gets the list of AnimatorClipInfo currently played by the next state.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetNextAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>Gets the list of AnimatorClipInfo currently played by the next state.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
      <param name="clips">Array to receive results.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetNextAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>This function should be used when you want to use the allocation-free method IAnimatorControllerPlayable.GetNextAnimatorClipInfo.</para>
      </summary>
      <param name="layerIndex">Layer's Index.</param>
      <returns>
        <para>Returns the count of AnimatorClipInfo for the next state.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetNextAnimatorStateInfo(System.Int32)">
      <summary>
        <para>Gets the next State information on a specified AnimatorController layer.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.GetParameter(System.Int32)">
      <summary>
        <para>Read only access to the AnimatorControllerParameters used by the animator.</para>
      </summary>
      <param name="index">The index of the parameter.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.HasState(System.Int32,System.Int32)">
      <summary>
        <para>Returns true if the AnimatorState is present in the Animator's controller. For a state named State in sub state machine SubStateMachine of state machine StateMachine, the shortNameHash can be generated using Animator.StringToHash("State"), and the fullPathHash can be generated using Animator.StringToHash("StateMachine.SubStateMachine.State"). Typically, the name of the top level state machine is the name of the Layer.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
      <param name="stateID">The AnimatorState fullPathHash or shortNameHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.IsInTransition(System.Int32)">
      <summary>
        <para>Is the specified AnimatorController layer in a transition.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.IsParameterControlledByCurve(System.String)">
      <summary>
        <para>Returns true if a parameter is controlled by an additional curve on an animation.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.IsParameterControlledByCurve(System.Int32)">
      <summary>
        <para>Returns true if a parameter is controlled by an additional curve on an animation.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.Play(System.String,System.Int32,System.Single)">
      <summary>
        <para>Plays a state.</para>
      </summary>
      <param name="stateName">The name of the state to play.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="normalizedTime">Start time of the current destination state. Value is in normalized time. If no explicit normalizedTime is specified or value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.Play(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Plays a state.</para>
      </summary>
      <param name="stateName">The name of the state to play.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="normalizedTime">Start time of the current destination state. Value is in normalized time. If no explicit normalizedTime is specified or value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.PlayInFixedTime(System.String,System.Int32,System.Single)">
      <summary>
        <para>Same as IAnimatorControllerPlayable.Play, but the offset in the target state is in fixed time.</para>
      </summary>
      <param name="stateName">The name of the state to play.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="fixedTime">Start time of the current destination state. Value is in seconds. If no explicit fixedTime is specified or fixedTime value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.PlayInFixedTime(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Same as IAnimatorControllerPlayable.Play, but the offset in the target state is in fixed time.</para>
      </summary>
      <param name="stateName">The name of the state to play.</param>
      <param name="layer">Layer index containing the destination state. If no layer is specified or layer is -1, the first state that is found with the given name or hash will be played.</param>
      <param name="fixedTime">Start time of the current destination state. Value is in seconds. If no explicit fixedTime is specified or fixedTime value is float.NegativeInfinity, the state will either be played from the start if it's not already playing, or will continue playing from its current time.</param>
      <param name="stateNameHash">The AnimatorState fullPathHash, nameHash or shortNameHash to play. Passing 0 will transition to self.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.ResetTrigger(System.String)">
      <summary>
        <para>Resets the trigger parameter to false.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.ResetTrigger(System.Int32)">
      <summary>
        <para>Resets the trigger parameter to false.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetBool(System.String,System.Boolean)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetBool.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetBool(System.Int32,System.Boolean)">
      <summary>
        <para>See IAnimatorControllerPlayable.SetBool.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetFloat(System.String,System.Single)">
      <summary>
        <para>Sets the value of a float parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>Sets the value of a float parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetInteger(System.String,System.Int32)">
      <summary>
        <para>Sets the value of an integer parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetInteger(System.Int32,System.Int32)">
      <summary>
        <para>Sets the value of an integer parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The new value for the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetLayerWeight(System.Int32,System.Single)">
      <summary>
        <para>Sets the layer's current weight.</para>
      </summary>
      <param name="layerIndex">The layer's index.</param>
      <param name="weight">The weight of the layer.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetTrigger(System.String)">
      <summary>
        <para>Sets a trigger parameter to active.
A trigger parameter is a bool parameter that gets reset to false when it has been used in a transition. For state machines with multiple layers, the trigger will only get reset once all layers have been evaluated, so that the layers can synchronize their transitions on the same parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.IAnimatorControllerPlayable.SetTrigger(System.Int32)">
      <summary>
        <para>Sets a trigger parameter to active.
A trigger parameter is a bool parameter that gets reset to false when it has been used in a transition. For state machines with multiple layers, the trigger will only get reset once all layers have been evaluated, so that the layers can synchronize their transitions on the same parameter.</para>
      </summary>
      <param name="name">The name of the parameter.</param>
      <param name="id">The id of the parameter. The id is generated using Animator::StringToHash.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Director.Playable">
      <summary>
        <para>Playables are customizable runtime objects that can be connected together in a tree to create complex behaviours.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Director.Playable.handle">
      <summary>
        <para>Returns the PlayableHandle for this playable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.Playable.IsValid">
      <summary>
        <para>Returns true if the Playable is valid. A playable can be invalid if it was disposed. This is different from a Null playable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.PlayableGraph">
      <summary>
        <para>The PlayableGraph is used to manage PlayableHandle creation, destruction and connections.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableGraph.isDone">
      <summary>
        <para>Indicates that a graph has completed its operations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableGraph.playableCount">
      <summary>
        <para>Returns the number of PlayableHandle owned by the Graph.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableGraph.rootPlayableCount">
      <summary>
        <para>Returns the number of PlayableHandle owned by the Graph that have no connected outputs.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableGraph.scriptOutputCount">
      <summary>
        <para>Gets the number of ScriptPlayableOutput in the PlayableGraph.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Connect(UnityEngine.Experimental.Director.PlayableHandle,System.Int32,UnityEngine.Experimental.Director.PlayableHandle,System.Int32)">
      <summary>
        <para>Connects two Playable instances, either by referencing the Playable instances themselves or by their PlayableHandles.</para>
      </summary>
      <param name="source">The source playable or its handle.</param>
      <param name="sourceOutputPort">The port used in the source playable.</param>
      <param name="destination">The destination playable or its handle.</param>
      <param name="destinationInputPort">The port used in the destination playable.</param>
      <returns>
        <para>Returns true if connection is successful.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Connect(UnityEngine.Experimental.Director.Playable,System.Int32,UnityEngine.Experimental.Director.Playable,System.Int32)">
      <summary>
        <para>Connects two Playable instances, either by referencing the Playable instances themselves or by their PlayableHandles.</para>
      </summary>
      <param name="source">The source playable or its handle.</param>
      <param name="sourceOutputPort">The port used in the source playable.</param>
      <param name="destination">The destination playable or its handle.</param>
      <param name="destinationInputPort">The port used in the destination playable.</param>
      <returns>
        <para>Returns true if connection is successful.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.CreateGenericMixerPlayable(System.Int32)">
      <summary>
        <para>Creates a generic ScriptPlayable mixer.</para>
      </summary>
      <param name="inputCount">The number of input.</param>
      <returns>
        <para>The created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.CreateGraph">
      <summary>
        <para>Creates a PlayableGraph.</para>
      </summary>
      <returns>
        <para>The created graph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.CreatePlayable">
      <summary>
        <para>This method allows you to create custom Playable instances.</para>
      </summary>
      <returns>
        <para>The created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.CreateScriptOutput(System.String)">
      <summary>
        <para>Creates a ScriptPlayableOutput in the [PlayableGraph]].</para>
      </summary>
      <param name="name">The name of the output.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.CreateScriptPlayable">
      <summary>
        <para>Creates a ScriptPlayable in the PlayableGraph.</para>
      </summary>
      <returns>
        <para>A PlayableHandle on the created Playable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Destroy">
      <summary>
        <para>Destroys the graph.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.DestroyOutput(UnityEngine.Experimental.Director.ScriptPlayableOutput)">
      <summary>
        <para>Destroys the PlayableOutput.</para>
      </summary>
      <param name="output">The output to destroy.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.DestroyOutput">
      <summary>
        <para>Destroys the PlayableOutput.</para>
      </summary>
      <param name="output">The output to destroy.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.DestroyPlayable(UnityEngine.Experimental.Director.PlayableHandle)">
      <summary>
        <para>Destroys the Playable associated with this PlayableHandle.</para>
      </summary>
      <param name="playable">The playable to destroy.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.DestroySubgraph(UnityEngine.Experimental.Director.PlayableHandle)">
      <summary>
        <para>Recursively destroys the given Playable and all children connected to its inputs.</para>
      </summary>
      <param name="playable">The playable to destroy.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Disconnect(UnityEngine.Experimental.Director.Playable,System.Int32)">
      <summary>
        <para>Disconnects PlayableHandle.  The connections determine the topology of the PlayableGraph and how its is evaluated.</para>
      </summary>
      <param name="playable">The source playabe or its handle.</param>
      <param name="inputPort">The port used in the source playable.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Disconnect(UnityEngine.Experimental.Director.PlayableHandle,System.Int32)">
      <summary>
        <para>Disconnects PlayableHandle.  The connections determine the topology of the PlayableGraph and how its is evaluated.</para>
      </summary>
      <param name="playable">The source playabe or its handle.</param>
      <param name="inputPort">The port used in the source playable.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Evaluate(System.Single)">
      <summary>
        <para>Evaluates all the PlayableOutputs in the graph, and updates all the connected Playables in the graph.</para>
      </summary>
      <param name="deltaTime">The time in seconds by which to advance each Playable in the graph.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.GetRootPlayable(System.Int32)">
      <summary>
        <para>Returns the PlayableHandle with no output connections at the given index.</para>
      </summary>
      <param name="index">The index of the root PlayableHandle.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.GetScriptOutput(System.Int32)">
      <summary>
        <para>Returns the ScriptPlayableOutput at the given index.</para>
      </summary>
      <param name="index">The index of the ScriptPlayableOutput.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.IsValid">
      <summary>
        <para>Returns true if the PlayableGraph has been properly constructed using PlayableGraph.CreateGraph and is not deleted.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Play">
      <summary>
        <para>Plays the graph.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableGraph.Stop">
      <summary>
        <para>Stops the graph, if it is playing.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.PlayableHandle">
      <summary>
        <para>Handle representing a Playable created in a PlayableGraph. The PlayableHandle implements all general usage Playable methods.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.duration">
      <summary>
        <para>The duration of the Playable in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.graph">
      <summary>
        <para>The PlayableGraph that created the playable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.inputCount">
      <summary>
        <para>Gets and Sets the number of inputs for the  Playable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.isDone">
      <summary>
        <para>A flag indicating that a playable has completed its operation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.outputCount">
      <summary>
        <para>Gets and Sets the number of outputs for the  Playable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.playState">
      <summary>
        <para>When playing, the time will advance in the Playable during evaluation of the graph.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.speed">
      <summary>
        <para>Modulates how time is incremented when the Playable is playing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.time">
      <summary>
        <para>The current  time of the Playable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.Destroy">
      <summary>
        <para>Destroys the Playable associated with this PlayableHandle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.GetInput(System.Int32)">
      <summary>
        <para>Returns the PlayableHandle connected at the given input port index.</para>
      </summary>
      <param name="inputPort">The port index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.GetInputWeight(System.Int32)">
      <summary>
        <para>Returns the weight of the Playable connected at the given input port index.</para>
      </summary>
      <param name="inputIndex">The port index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.GetObject">
      <summary>
        <para>Returns a Playable representation of the handle.</para>
      </summary>
      <returns>
        <para>The Playable represented by this handle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.GetObject">
      <summary>
        <para>Returns a Playable representation of the handle.</para>
      </summary>
      <returns>
        <para>The Playable represented by this handle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.GetOutput(System.Int32)">
      <summary>
        <para>Returns the PlayableHandle connected at the given ouput port index.</para>
      </summary>
      <param name="outputPort">The port index.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.IsValid">
      <summary>
        <para>Returns true if the Playable is properly constructed by the PlayableGraph and has not been destroyed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.PlayableHandle.Null">
      <summary>
        <para>Used to compare PlayableHandles.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.PlayableHandle.SetInputWeight(System.Int32,System.Single)">
      <summary>
        <para>Sets the weight of the Playable connected at the given input port index.</para>
      </summary>
      <param name="inputIndex">The port index.</param>
      <param name="weight">The weight. Should be between 0 and 1.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Director.PlayState">
      <summary>
        <para>Status of a Playable.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Director.PlayState.Paused">
      <summary>
        <para>The Playable has been paused. Its local time will not advance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Director.PlayState.Playing">
      <summary>
        <para>The Playable is currently Playing.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Director.ScriptPlayable">
      <summary>
        <para>Base class for all user-defined playables.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayable.OnDestroy">
      <summary>
        <para>Called when the Playable is destroyed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayable.OnGraphStart">
      <summary>
        <para>Called when the PlayableGraph this Playable is owned by starts playing.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayable.OnGraphStop">
      <summary>
        <para>Called when the PlayableGraph this Playable is owned by is stopped.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayable.OnPlayStateChanged(UnityEngine.Experimental.Director.FrameData,UnityEngine.Experimental.Director.PlayState)">
      <summary>
        <para>Override this method to perform custom operations when the PlayState changes.</para>
      </summary>
      <param name="info">The current frame information.</param>
      <param name="newState">The new PlayState.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayable.PrepareFrame(UnityEngine.Experimental.Director.FrameData)">
      <summary>
        <para>Called during evaluation of the PlayableGraph.</para>
      </summary>
      <param name="info">Information about the current frame.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayable.ProcessFrame(UnityEngine.Experimental.Director.FrameData,System.Object)">
      <summary>
        <para>The ProcessFrame is the stage at which your Playable should do its work.</para>
      </summary>
      <param name="info">Information about the current frame.</param>
      <param name="playerData">Data that is set on the playable output userData.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Director.ScriptPlayableOutput">
      <summary>
        <para>Script output for the Graph. ScriptPlayable can be used to write custom Playable that implement their own PrepareFrame callback.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.ScriptPlayableOutput.sourcePlayable">
      <summary>
        <para>The Playable that is bound to the output.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.ScriptPlayableOutput.userData">
      <summary>
        <para>Used to pass custom data to ScriptPlayable.ProcessFrame.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Director.ScriptPlayableOutput.IsValid">
      <summary>
        <para>Returns true if the PlayableOutput is properly constructed by the PlayableGraph and has not been destroyed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Director.ScriptPlayableOutput.Null">
      <summary>
        <para>Used to compare ScriptPlayableOutput.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.CullingParameters">
      <summary>
        <para>Parameters controlling culling process in CullResults.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.cullingMask">
      <summary>
        <para>Layer mask used for culling.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.cullingMatrix">
      <summary>
        <para>World to clip space matrix.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.cullingPlaneCount">
      <summary>
        <para>Number of culling planes to use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.isOrthographic">
      <summary>
        <para>True if camera is orthographic (this affects LOD culling).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.lodParameters">
      <summary>
        <para>LODGroup culling parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.position">
      <summary>
        <para>Camera position.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.reflectionProbeSortOptions">
      <summary>
        <para>Visible reflection probes sorting options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullingParameters.shadowDistance">
      <summary>
        <para>Realtime shadows distance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullingParameters.GetCullingPlane(System.Int32)">
      <summary>
        <para>Get a culling plane.</para>
      </summary>
      <param name="index">Plane index (up to cullingPlaneCount).</param>
      <returns>
        <para>Culling plane.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullingParameters.GetLayerCullDistance(System.Int32)">
      <summary>
        <para>Get per-layer culling distance.</para>
      </summary>
      <param name="layerIndex">Game object layer index (0 to 31).</param>
      <returns>
        <para>Distance beyond which objects in this layer are culled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullingParameters.SetCullingPlane(System.Int32,UnityEngine.Plane)">
      <summary>
        <para>Set a culling plane.</para>
      </summary>
      <param name="index">Plane index (up to cullingPlaneCount).</param>
      <param name="plane">Culling plane.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullingParameters.SetLayerCullDistance(System.Int32,System.Single)">
      <summary>
        <para>Set per-layer culling distance.</para>
      </summary>
      <param name="layerIndex">Game object layer index (0 to 31).</param>
      <param name="distance">Distance beyond which objects in this layer are culled.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.CullResults">
      <summary>
        <para>Culling results (visible objects, lights, reflection probes).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullResults.visibleLights">
      <summary>
        <para>Array of visible lights.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.CullResults.visibleReflectionProbes">
      <summary>
        <para>Array of visible reflection probes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.ComputeDirectionalShadowMatricesAndCullingPrimitives(System.Int32,System.Int32,System.Int32,UnityEngine.Vector3,System.Int32,System.Single,UnityEngine.Matrix4x4&amp;,UnityEngine.Matrix4x4&amp;,UnityEngine.Experimental.Rendering.ShadowSplitData&amp;)">
      <summary>
        <para>Calculates the view and projection matrices and shadow split data for a directional light.</para>
      </summary>
      <param name="activeLightIndex">The index into the active light array.</param>
      <param name="splitIndex">The cascade index.</param>
      <param name="splitCount">The number of cascades.</param>
      <param name="splitRatio">The cascade ratios.</param>
      <param name="shadowResolution">The resolution of the shadowmap.</param>
      <param name="shadowNearPlaneOffset">The near plane offset for the light.</param>
      <param name="viewMatrix">The computed view matrix.</param>
      <param name="projMatrix">The computed projection matrix.</param>
      <param name="shadowSplitData">The computed cascade data.</param>
      <returns>
        <para>If false, the shadow map for this cascade does not need to be rendered this frame.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.ComputePointShadowMatricesAndCullingPrimitives(System.Int32,UnityEngine.CubemapFace,System.Single,UnityEngine.Matrix4x4&amp;,UnityEngine.Matrix4x4&amp;,UnityEngine.Experimental.Rendering.ShadowSplitData&amp;)">
      <summary>
        <para>Calculates the view and projection matrices and shadow split data for a point light.</para>
      </summary>
      <param name="activeLightIndex">The index into the active light array.</param>
      <param name="cubemapFace">The cubemap face to be rendered.</param>
      <param name="fovBias">The amount by which to increase the camera FOV above 90 degrees.</param>
      <param name="viewMatrix">The computed view matrix.</param>
      <param name="projMatrix">The computed projection matrix.</param>
      <param name="shadowSplitData">The computed split data.</param>
      <returns>
        <para>If false, the shadow map for this light and cubemap face does not need to be rendered this frame.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.ComputeSpotShadowMatricesAndCullingPrimitives(System.Int32,UnityEngine.Matrix4x4&amp;,UnityEngine.Matrix4x4&amp;,UnityEngine.Experimental.Rendering.ShadowSplitData&amp;)">
      <summary>
        <para>Calculates the view and projection matrices and shadow split data for a spot light.</para>
      </summary>
      <param name="activeLightIndex">The index into the active light array.</param>
      <param name="viewMatrix">The computed view matrix.</param>
      <param name="projMatrix">The computed projection matrix.</param>
      <param name="shadowSplitData">The computed split data.</param>
      <returns>
        <para>If false, the shadow map for this light does not need to be rendered this frame.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.Cull">
      <summary>
        <para>Perform culling for a Camera.</para>
      </summary>
      <param name="camera">Camera to cull for.</param>
      <param name="renderLoop">Render loop the culling results will be used with.</param>
      <param name="results">Culling results.</param>
      <returns>
        <para>Flag indicating whether culling succeeded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.Cull">
      <summary>
        <para>Perform culling with custom CullingParameters.</para>
      </summary>
      <param name="parameters">Parameters for culling.</param>
      <param name="renderLoop">Render loop the culling results will be used with.</param>
      <returns>
        <para>Culling results.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.FillLightIndices(UnityEngine.ComputeBuffer)">
      <summary>
        <para>Fills a compute buffer with per-object light indices.</para>
      </summary>
      <param name="computeBuffer">The compute buffer object to fill.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.GetCullingParameters(UnityEngine.Camera,UnityEngine.Experimental.Rendering.CullingParameters&amp;)">
      <summary>
        <para>Get culling parameters for a camera.</para>
      </summary>
      <param name="camera">Camera to get parameters for.</param>
      <param name="cullingParameters">Result culling parameters.</param>
      <returns>
        <para>Flag indicating whether culling parameters are valid.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.GetLightIndicesCount">
      <summary>
        <para>Gets the number of per-object light indices.</para>
      </summary>
      <returns>
        <para>The number of per-object light indices.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.CullResults.GetShadowCasterBounds(System.Int32,UnityEngine.Bounds&amp;)">
      <summary>
        <para>Returns the bounding box that encapsulates the visible shadow casters.  Can be used to, for instance, dynamically adjust cascade ranges.</para>
      </summary>
      <param name="lightIndex">The index of the shadow-casting light.</param>
      <param name="outBounds">The bounds to be computed.</param>
      <returns>
        <para>True if the light affects at least one shadow casting object in the scene.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.DrawRendererFlags">
      <summary>
        <para>Flags controlling RenderLoop.DrawRenderers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererFlags.EnableDynamicBatching">
      <summary>
        <para>When set, enables dynamic batching.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererFlags.EnableInstancing">
      <summary>
        <para>When set, enables GPU instancing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererFlags.None">
      <summary>
        <para>No flags are set.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.DrawRendererSettings">
      <summary>
        <para>Settings for RenderLoop.DrawRenderers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.DrawRendererSettings.cullResults">
      <summary>
        <para>Culling results to use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSettings.flags">
      <summary>
        <para>Other flags controlling object rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSettings.inputFilter">
      <summary>
        <para>Which subset of visible objects to render.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSettings.rendererConfiguration">
      <summary>
        <para>What kind of per-object data to setup during rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSettings.shaderPassName">
      <summary>
        <para>Which shader pass to use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSettings.sorting">
      <summary>
        <para>How to sort objects during rendering.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.DrawRendererSettings.#ctor(UnityEngine.Experimental.Rendering.CullResults,UnityEngine.Camera,UnityEngine.Experimental.Rendering.ShaderPassName)">
      <summary>
        <para>Create a draw settings struct.</para>
      </summary>
      <param name="cullResults">Culling results to use.</param>
      <param name="camera">Camera to use. Camera's transparency sort mode is used to determine whether to use orthographic or distance based sorting.</param>
      <param name="shaderPassName">Shader pass to use.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.DrawRendererSortSettings">
      <summary>
        <para>Describes how to sort objects during rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSortSettings.cameraPosition">
      <summary>
        <para>Camera position, used to determine distances to objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSortSettings.flags">
      <summary>
        <para>What kind of sorting to do while rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.DrawRendererSortSettings.sortOrthographic">
      <summary>
        <para>Should orthographic sorting be used?</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawRendererSortSettings.worldToCameraMatrix">
      <summary>
        <para>Camera view matrix, used to determine distances to objects.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.DrawShadowsSettings">
      <summary>
        <para>Settings for RenderLoop.DrawShadows.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.DrawShadowsSettings.cullResults">
      <summary>
        <para>Culling results to use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawShadowsSettings.lightIndex">
      <summary>
        <para>The index of the shadow-casting light to be rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.DrawShadowsSettings.splitData">
      <summary>
        <para>The split data.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.DrawShadowsSettings.#ctor(UnityEngine.Experimental.Rendering.CullResults,System.Int32)">
      <summary>
        <para>Create a shadow settings object.</para>
      </summary>
      <param name="cullResults">The cull results for this light.</param>
      <param name="lightIndex">The light index.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.InputFilter">
      <summary>
        <para>Describes which subset of visible objects to render.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.InputFilter.layerMask">
      <summary>
        <para>Only render objects in the given layer mask.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.InputFilter.renderQueueMax">
      <summary>
        <para>Render objects that have material render queue smaller or equal to this.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.InputFilter.renderQueueMin">
      <summary>
        <para>Render objects that have material render queue larger or equal to this.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.InputFilter.Default">
      <summary>
        <para>Default input filter: render all objects.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.InputFilter.SetQueuesOpaque">
      <summary>
        <para>Set to render only opaque objects.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.InputFilter.SetQueuesTransparent">
      <summary>
        <para>Set to render only transparent objects.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Experimental.Rendering.IRenderPipeline">
      <summary>
        <para>Defines a series of commands and settings that describes how Unity renders a frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.IRenderPipeline.disposed">
      <summary>
        <para>When the IRenderPipeline is invalid or destroyed this returns true.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.IRenderPipeline.Render(UnityEngine.Experimental.Rendering.ScriptableRenderContext,UnityEngine.Camera[])">
      <summary>
        <para>Defines custom rendering for this RenderPipeline.</para>
      </summary>
      <param name="renderContext">Structure that holds the rendering commands for this loop.</param>
      <param name="cameras">Cameras to render.</param>
    </member>
    <member name="?:UnityEngine.Experimental.Rendering.IRenderPipelineAsset">
      <summary>
        <para>An asset that produces a specific IRenderPipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.IRenderPipelineAsset.CreatePipeline">
      <summary>
        <para>Create a IRenderPipeline specific to this asset.</para>
      </summary>
      <returns>
        <para>Created pipeline.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.IRenderPipelineAsset.DestroyCreatedInstances">
      <summary>
        <para>Override this method to destroy RenderPipeline cached state.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.LODParameters">
      <summary>
        <para>LODGroup culling parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.LODParameters.cameraPixelHeight">
      <summary>
        <para>Rendering view height in pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.LODParameters.cameraPosition">
      <summary>
        <para>Camera position.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.LODParameters.fieldOfView">
      <summary>
        <para>Camera's field of view.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.LODParameters.isOrthographic">
      <summary>
        <para>Indicates whether camera is orthographic.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.LODParameters.orthoSize">
      <summary>
        <para>Orhographic camera size.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions">
      <summary>
        <para>Visible reflection probes sorting options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions.Importance">
      <summary>
        <para>Sort probes by importance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions.ImportanceThenSize">
      <summary>
        <para>Sort probes by importance, then by size.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions.None">
      <summary>
        <para>Do not sort reflection probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.ReflectionProbeSortOptions.Size">
      <summary>
        <para>Sort probes from largest to smallest.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.RendererConfiguration">
      <summary>
        <para>What kind of per-object data to setup during rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.RendererConfiguration.None">
      <summary>
        <para>Do not setup any particular per-object data besides the transformation matrix.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.RendererConfiguration.PerObjectLightmaps">
      <summary>
        <para>Setup per-object lightmaps.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.RendererConfiguration.PerObjectLightProbe">
      <summary>
        <para>Setup per-object light probe SH data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.RendererConfiguration.PerObjectLightProbeProxyVolume">
      <summary>
        <para>Setup per-object light probe proxy volume data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.RendererConfiguration.PerObjectReflectionProbes">
      <summary>
        <para>Setup per-object reflection probe data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.RendererConfiguration.ProvideLightIndices">
      <summary>
        <para>Setup per-object light indices.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.RenderPipelineAsset">
      <summary>
        <para>An asset that produces a specific IRenderPipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.RenderPipelineAsset.CreatePipeline">
      <summary>
        <para>Create a IRenderPipeline specific to this asset.</para>
      </summary>
      <returns>
        <para>Created pipeline.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.RenderPipelineAsset.DestroyCreatedInstances">
      <summary>
        <para>Destroys all cached data and created IRenderLoop's.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.RenderPipelineAsset.InternalCreatePipeline">
      <summary>
        <para>Create a IRenderPipeline specific to this asset.</para>
      </summary>
      <returns>
        <para>Created pipeline.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.ScriptableRenderContext">
      <summary>
        <para>Defines state and drawing commands used in a custom render pipelines.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ScriptableRenderContext.DrawRenderers(UnityEngine.Experimental.Rendering.DrawRendererSettings&amp;)">
      <summary>
        <para>Draw subset of visible objects.</para>
      </summary>
      <param name="settings">Specifies which set of visible objects to draw, and how to draw them.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ScriptableRenderContext.DrawShadows(UnityEngine.Experimental.Rendering.DrawShadowsSettings&amp;)">
      <summary>
        <para>Draw shadow casters for a single light.</para>
      </summary>
      <param name="settings">Specifies which set of shadow casters to draw, and how to draw them.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ScriptableRenderContext.DrawSkybox(UnityEngine.Camera)">
      <summary>
        <para>Draw skybox.</para>
      </summary>
      <param name="camera">Camera to draw the skybox for.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ScriptableRenderContext.ExecuteCommandBuffer(UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Execute a custom graphics command buffer.</para>
      </summary>
      <param name="commandBuffer">Command buffer to execute.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ScriptableRenderContext.SetupCameraProperties(UnityEngine.Camera)">
      <summary>
        <para>Setup camera specific global shader variables.</para>
      </summary>
      <param name="camera">Camera to setup shader variables for.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ScriptableRenderContext.Submit">
      <summary>
        <para>Submit rendering loop for execution.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.ShaderPassName">
      <summary>
        <para>Shader pass name identifier.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ShaderPassName.#ctor(System.String)">
      <summary>
        <para>Create shader pass name identifier.</para>
      </summary>
      <param name="name">Pass name.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.ShadowSplitData">
      <summary>
        <para>Describes the culling information for a given shadow split (e.g. directional cascade).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.ShadowSplitData.cullingPlaneCount">
      <summary>
        <para>The number of culling planes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.ShadowSplitData.cullingSphere">
      <summary>
        <para>The culling sphere.  The first three components of the vector describe the sphere center, and the last component specifies the radius.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ShadowSplitData.GetCullingPlane(System.Int32)">
      <summary>
        <para>Gets a culling plane.</para>
      </summary>
      <param name="index">The culling plane index.</param>
      <returns>
        <para>The culling plane.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Rendering.ShadowSplitData.SetCullingPlane(System.Int32,UnityEngine.Plane)">
      <summary>
        <para>Sets a culling plane.</para>
      </summary>
      <param name="index">The index of the culling plane to set.</param>
      <param name="plane">The culling plane.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.SortFlags">
      <summary>
        <para>How to sort objects during rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.BackToFront">
      <summary>
        <para>Sort objects back to front.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.CanvasOrder">
      <summary>
        <para>Sort renderers taking canvas order into account.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.CommonOpaque">
      <summary>
        <para>Typical sorting for opaque objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.CommonTransparent">
      <summary>
        <para>Typical sorting for transparencies.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.None">
      <summary>
        <para>Do not sort objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.OptimizeStateChanges">
      <summary>
        <para>Sort objects to reduce draw state changes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.QuantizedFrontToBack">
      <summary>
        <para>Sort objects in rough front-to-back buckets.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.RenderQueue">
      <summary>
        <para>Sort by material render queue.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.SortFlags.SortingLayer">
      <summary>
        <para>Sort by renderer sorting layer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.VisibleLight">
      <summary>
        <para>Holds data of a visible light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.finalColor">
      <summary>
        <para>Light color multiplied by intensity.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.flags">
      <summary>
        <para>Light flags, see VisibleLightFlags.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.VisibleLight.light">
      <summary>
        <para>Accessor to Light component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.lightType">
      <summary>
        <para>Light type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.localToWorld">
      <summary>
        <para>Light transformation matrix.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.range">
      <summary>
        <para>Light range.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.screenRect">
      <summary>
        <para>Light's influence rectangle on screen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLight.spotAngle">
      <summary>
        <para>Spot light angle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.VisibleLightFlags">
      <summary>
        <para>Flags for VisibleLight.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLightFlags.IntersectsFarPlane">
      <summary>
        <para>Light intersects far clipping plane.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLightFlags.IntersectsNearPlane">
      <summary>
        <para>Light intersects near clipping plane.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleLightFlags.None">
      <summary>
        <para>No flags are set.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Rendering.VisibleReflectionProbe">
      <summary>
        <para>Holds data of a visible reflection probe.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.blendDistance">
      <summary>
        <para>Probe blending distance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.bounds">
      <summary>
        <para>Probe bounding box.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.boxProjection">
      <summary>
        <para>Should probe use box projection.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.center">
      <summary>
        <para>Probe projection center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.hdr">
      <summary>
        <para>Shader data for probe HDR texture decoding.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.importance">
      <summary>
        <para>Probe importance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.localToWorld">
      <summary>
        <para>Probe transformation matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.probe">
      <summary>
        <para>Accessor to ReflectionProbe component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Rendering.VisibleReflectionProbe.texture">
      <summary>
        <para>Probe texture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ExposedPropertyResolver">
      <summary>
        <para>Object that is used to resolve references to an ExposedReference field.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ExposedReference`1">
      <summary>
        <para>Creates a type whos value is resolvable at runtime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ExposedReference_1.defaultValue">
      <summary>
        <para>The default value, in case the value cannot be resolved.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ExposedReference_1.exposedName">
      <summary>
        <para>The name of the ExposedReference.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ExposedReference_1.Resolve(UnityEngine.ExposedPropertyResolver)">
      <summary>
        <para>Gets the value of the reference by resolving it given the ExposedPropertyResolver context object.</para>
      </summary>
      <param name="resolver">The ExposedPropertyResolver context object.</param>
      <returns>
        <para>The resolved reference value.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.FFTWindow">
      <summary>
        <para>Spectrum analysis windowing types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Blackman">
      <summary>
        <para>W[n] = 0.42 - (0.5 * COS(nN) ) + (0.08 * COS(2.0 * nN) ).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.BlackmanHarris">
      <summary>
        <para>W[n] = 0.35875 - (0.48829 * COS(1.0 * nN)) + (0.14128 * COS(2.0 * nN)) - (0.01168 * COS(3.0 * n/N)).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Hamming">
      <summary>
        <para>W[n] = 0.54 - (0.46 * COS(n/N) ).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Hanning">
      <summary>
        <para>W[n] = 0.5 * (1.0 - COS(n/N) ).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Rectangular">
      <summary>
        <para>W[n] = 1.0.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Triangle">
      <summary>
        <para>W[n] = TRI(2n/N).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FilterMode">
      <summary>
        <para>Filtering mode for textures. Corresponds to the settings in a.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FilterMode.Bilinear">
      <summary>
        <para>Bilinear filtering - texture samples are averaged.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FilterMode.Point">
      <summary>
        <para>Point filtering - texture pixels become blocky up close.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FilterMode.Trilinear">
      <summary>
        <para>Trilinear filtering - texture samples are averaged and also blended between mipmap levels.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FixedJoint">
      <summary>
        <para>The Fixed joint groups together 2 rigidbodies, making them stick together in their bound position.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FixedJoint2D">
      <summary>
        <para>Connects two Rigidbody2D together at their anchor points using a configurable spring.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FixedJoint2D.dampingRatio">
      <summary>
        <para>The amount by which the spring force is reduced in proportion to the movement speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FixedJoint2D.frequency">
      <summary>
        <para>The frequency at which the spring oscillates around the distance between the objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FixedJoint2D.referenceAngle">
      <summary>
        <para>The angle referenced between the two bodies used as the constraint for the joint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Flare">
      <summary>
        <para>A flare asset. Read more about flares in the.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FlareLayer">
      <summary>
        <para>FlareLayer component.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FocusType">
      <summary>
        <para>Used by GUIUtility.GetControlID to inform the IMGUI system if a given control can get keyboard focus. This allows the IMGUI system to give focus appropriately when a user presses tab for cycling between controls.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FocusType.Keyboard">
      <summary>
        <para>This control can receive keyboard focus.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FocusType.Passive">
      <summary>
        <para>This control can not receive keyboard focus.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FogMode">
      <summary>
        <para>Fog mode to use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FogMode.Exponential">
      <summary>
        <para>Exponential fog.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FogMode.ExponentialSquared">
      <summary>
        <para>Exponential squared fog (default).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FogMode.Linear">
      <summary>
        <para>Linear fog.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Font">
      <summary>
        <para>Script interface for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Font.ascent">
      <summary>
        <para>The ascent of the font.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Font.characterInfo">
      <summary>
        <para>Access an array of all characters contained in the font texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Font.dynamic">
      <summary>
        <para>Is the font a dynamic font.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Font.fontSize">
      <summary>
        <para>The default size of the font.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Font.lineHeight">
      <summary>
        <para>The line height of the font.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Font.material">
      <summary>
        <para>The material used for the font display.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Font.textureRebuilt(System.Action`1&lt;UnityEngine.Font&gt;)">
      <summary>
        <para>Set a function to be called when the dynamic font texture is rebuilt.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Font.CreateDynamicFontFromOSFont(System.String,System.Int32)">
      <summary>
        <para>Creates a Font object which lets you render a font installed on the user machine.</para>
      </summary>
      <param name="fontname">The name of the OS font to use for this font object.</param>
      <param name="size">The default character size of the generated font.</param>
      <param name="fontnames">Am array of names of OS fonts to use for this font object. When rendering characters using this font object, the first font which is installed on the machine, which contains the requested character will be used.</param>
      <returns>
        <para>The generate Font object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Font.CreateDynamicFontFromOSFont(System.String[],System.Int32)">
      <summary>
        <para>Creates a Font object which lets you render a font installed on the user machine.</para>
      </summary>
      <param name="fontname">The name of the OS font to use for this font object.</param>
      <param name="size">The default character size of the generated font.</param>
      <param name="fontnames">Am array of names of OS fonts to use for this font object. When rendering characters using this font object, the first font which is installed on the machine, which contains the requested character will be used.</param>
      <returns>
        <para>The generate Font object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Font.#ctor">
      <summary>
        <para>Create a new Font.</para>
      </summary>
      <param name="name">The name of the created Font object.</param>
    </member>
    <member name="M:UnityEngine.Font.#ctor(System.String)">
      <summary>
        <para>Create a new Font.</para>
      </summary>
      <param name="name">The name of the created Font object.</param>
    </member>
    <member name="M:UnityEngine.Font.GetCharacterInfo(System.Char,UnityEngine.CharacterInfo&amp;)">
      <summary>
        <para>Get rendering info for a specific character.</para>
      </summary>
      <param name="ch">The character you need rendering information for.</param>
      <param name="info">Returns the CharacterInfo struct with the rendering information for the character (if available).</param>
      <param name="size">The size of the character (default value of zero will use font default size).</param>
      <param name="style">The style of the character.</param>
    </member>
    <member name="M:UnityEngine.Font.GetCharacterInfo(System.Char,UnityEngine.CharacterInfo&amp;,System.Int32)">
      <summary>
        <para>Get rendering info for a specific character.</para>
      </summary>
      <param name="ch">The character you need rendering information for.</param>
      <param name="info">Returns the CharacterInfo struct with the rendering information for the character (if available).</param>
      <param name="size">The size of the character (default value of zero will use font default size).</param>
      <param name="style">The style of the character.</param>
    </member>
    <member name="M:UnityEngine.Font.GetCharacterInfo(System.Char,UnityEngine.CharacterInfo&amp;,System.Int32,UnityEngine.FontStyle)">
      <summary>
        <para>Get rendering info for a specific character.</para>
      </summary>
      <param name="ch">The character you need rendering information for.</param>
      <param name="info">Returns the CharacterInfo struct with the rendering information for the character (if available).</param>
      <param name="size">The size of the character (default value of zero will use font default size).</param>
      <param name="style">The style of the character.</param>
    </member>
    <member name="M:UnityEngine.Font.GetMaxVertsForString(System.String)">
      <summary>
        <para>Returns the maximum number of verts that the text generator may return for a given string.</para>
      </summary>
      <param name="str">Input string.</param>
    </member>
    <member name="M:UnityEngine.Font.GetOSInstalledFontNames">
      <summary>
        <para>Get names of fonts installed on the machine.</para>
      </summary>
      <returns>
        <para>An array of the names of all fonts installed on the machine.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Font.HasCharacter(System.Char)">
      <summary>
        <para>Does this font have a specific character?</para>
      </summary>
      <param name="c">The character to check for.</param>
      <returns>
        <para>Whether or not the font has the character specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Font.RequestCharactersInTexture(System.String,System.Int32,UnityEngine.FontStyle)">
      <summary>
        <para>Request characters to be added to the font texture (dynamic fonts only).</para>
      </summary>
      <param name="characters">The characters which are needed to be in the font texture.</param>
      <param name="size">The size of the requested characters (the default value of zero will use the font's default size).</param>
      <param name="style">The style of the requested characters.</param>
    </member>
    <member name="T:UnityEngine.FontStyle">
      <summary>
        <para>Font Style applied to GUI Texts, Text Meshes or GUIStyles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FontStyle.Bold">
      <summary>
        <para>Bold style applied to your texts.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FontStyle.BoldAndItalic">
      <summary>
        <para>Bold and Italic styles applied to your texts.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FontStyle.Italic">
      <summary>
        <para>Italic style applied to your texts.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FontStyle.Normal">
      <summary>
        <para>No special style is applied.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ForceMode">
      <summary>
        <para>Option for how to apply a force using Rigidbody.AddForce.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode.Acceleration">
      <summary>
        <para>Add a continuous acceleration to the rigidbody, ignoring its mass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode.Force">
      <summary>
        <para>Add a continuous force to the rigidbody, using its mass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode.Impulse">
      <summary>
        <para>Add an instant force impulse to the rigidbody, using its mass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode.VelocityChange">
      <summary>
        <para>Add an instant velocity change to the rigidbody, ignoring its mass.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ForceMode2D">
      <summary>
        <para>Option for how to apply a force using Rigidbody2D.AddForce.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode2D.Force">
      <summary>
        <para>Add a force to the Rigidbody2D, using its mass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode2D.Impulse">
      <summary>
        <para>Add an instant force impulse to the rigidbody2D, using its mass.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FrictionJoint2D">
      <summary>
        <para>Applies both force and torque to reduce both the linear and angular velocities to zero.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FrictionJoint2D.maxForce">
      <summary>
        <para>The maximum force that can be generated when trying to maintain the friction joint constraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FrictionJoint2D.maxTorque">
      <summary>
        <para>The maximum torque that can be generated when trying to maintain the friction joint constraint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FullScreenMovieControlMode">
      <summary>
        <para>Describes options for displaying movie playback controls.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieControlMode.CancelOnInput">
      <summary>
        <para>Do not display any controls, but cancel movie playback if input occurs.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieControlMode.Full">
      <summary>
        <para>Display the standard controls for controlling movie playback.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieControlMode.Hidden">
      <summary>
        <para>Do not display any controls.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieControlMode.Minimal">
      <summary>
        <para>Display minimal set of controls controlling movie playback.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FullScreenMovieScalingMode">
      <summary>
        <para>Describes scaling modes for displaying movies.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieScalingMode.AspectFill">
      <summary>
        <para>Scale the movie until the movie fills the entire screen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieScalingMode.AspectFit">
      <summary>
        <para>Scale the movie until one dimension fits on the screen exactly.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieScalingMode.Fill">
      <summary>
        <para>Scale the movie until both dimensions fit the screen exactly.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FullScreenMovieScalingMode.None">
      <summary>
        <para>Do not scale the movie.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GameObject">
      <summary>
        <para>Base class for all entities in Unity scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.activeInHierarchy">
      <summary>
        <para>Is the GameObject active in the scene?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.activeSelf">
      <summary>
        <para>The local active state of this GameObject. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.animation">
      <summary>
        <para>The Animation attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.audio">
      <summary>
        <para>The AudioSource attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.camera">
      <summary>
        <para>The Camera attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.collider">
      <summary>
        <para>The Collider attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.collider2D">
      <summary>
        <para>The Collider2D component attached to this object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.constantForce">
      <summary>
        <para>The ConstantForce attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.guiText">
      <summary>
        <para>The GUIText attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.guiTexture">
      <summary>
        <para>The GUITexture attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.hingeJoint">
      <summary>
        <para>The HingeJoint attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.isStatic">
      <summary>
        <para>Editor only API that specifies if a game object is static.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.layer">
      <summary>
        <para>The layer the game object is in. A layer is in the range [0...31].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.light">
      <summary>
        <para>The Light attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.networkView">
      <summary>
        <para>The NetworkView attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.particleEmitter">
      <summary>
        <para>The ParticleEmitter attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.particleSystem">
      <summary>
        <para>The ParticleSystem attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.renderer">
      <summary>
        <para>The Renderer attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.rigidbody">
      <summary>
        <para>The Rigidbody attached to this GameObject (Read Only). (Null if there is none attached).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.rigidbody2D">
      <summary>
        <para>The Rigidbody2D component attached to this GameObject. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.scene">
      <summary>
        <para>Scene that the GameObject is part of.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.tag">
      <summary>
        <para>The tag of this game object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GameObject.transform">
      <summary>
        <para>The Transform attached to this GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GameObject.AddComponent(System.String)">
      <summary>
        <para>Adds a component class named className to the game object.</para>
      </summary>
      <param name="className"></param>
    </member>
    <member name="M:UnityEngine.GameObject.AddComponent(System.Type)">
      <summary>
        <para>Adds a component class of type componentType to the game object. C# Users can use a generic version.</para>
      </summary>
      <param name="componentType"></param>
    </member>
    <member name="M:UnityEngine.GameObject.AddComponent">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GameObject.BroadcastMessage(System.String)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName"></param>
      <param name="parameter"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEngine.GameObject.BroadcastMessage(System.String,System.Object)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName"></param>
      <param name="parameter"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEngine.GameObject.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object or any of its children.</para>
      </summary>
      <param name="methodName"></param>
      <param name="parameter"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEngine.GameObject.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)">
      <summary>
        <para></para>
      </summary>
      <param name="methodName"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEngine.GameObject.CompareTag(System.String)">
      <summary>
        <para>Is this game object tagged with tag ?</para>
      </summary>
      <param name="tag">The tag to compare.</param>
    </member>
    <member name="M:UnityEngine.GameObject.CreatePrimitive(UnityEngine.PrimitiveType)">
      <summary>
        <para>Creates a game object with a primitive mesh renderer and appropriate collider.</para>
      </summary>
      <param name="type">The type of primitive object to create.</param>
    </member>
    <member name="M:UnityEngine.GameObject.#ctor">
      <summary>
        <para>Creates a new game object, named name.</para>
      </summary>
      <param name="name">The name that the GameObject is created with.</param>
      <param name="components">A list of Components to add to the GameObject on creation.</param>
    </member>
    <member name="M:UnityEngine.GameObject.#ctor(System.String)">
      <summary>
        <para>Creates a new game object, named name.</para>
      </summary>
      <param name="name">The name that the GameObject is created with.</param>
      <param name="components">A list of Components to add to the GameObject on creation.</param>
    </member>
    <member name="M:UnityEngine.GameObject.#ctor(System.String,System.Type[])">
      <summary>
        <para>Creates a new game object, named name.</para>
      </summary>
      <param name="name">The name that the GameObject is created with.</param>
      <param name="components">A list of Components to add to the GameObject on creation.</param>
    </member>
    <member name="M:UnityEngine.GameObject.Find(System.String)">
      <summary>
        <para>Finds a GameObject by name and returns it.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.GameObject.FindGameObjectsWithTag(System.String)">
      <summary>
        <para>Returns a list of active GameObjects tagged tag. Returns empty array if no GameObject was found.</para>
      </summary>
      <param name="tag">The name of the tag to search GameObjects for.</param>
    </member>
    <member name="M:UnityEngine.GameObject.FindWithTag(System.String)">
      <summary>
        <para>Returns one active GameObject tagged tag. Returns null if no GameObject was found.</para>
      </summary>
      <param name="tag">The tag to search for.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponent(System.Type)">
      <summary>
        <para>Returns the component of Type type if the game object has one attached, null if it doesn't.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponent">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponent(System.String)">
      <summary>
        <para>Returns the component with name type if the game object has one attached, null if it doesn't.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInChildren(System.Type)">
      <summary>
        <para>Returns the component of Type type in the GameObject or any of its children using depth first search.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
      <param name="includeInactive"></param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInChildren(System.Type,System.Boolean)">
      <summary>
        <para>Returns the component of Type type in the GameObject or any of its children using depth first search.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
      <param name="includeInactive"></param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInChildren()">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive"></param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInChildren(System.Boolean)">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive"></param>
      <returns>
        <para>A component of the matching type, if found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInParent(System.Type)">
      <summary>
        <para>Returns the component of Type type in the GameObject or any of its parents.</para>
      </summary>
      <param name="type">Type of component to find.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentInParent">
      <summary>
        <para>Returns the component &lt;T&gt; in the GameObject or any of its parents.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponents(System.Type)">
      <summary>
        <para>Returns all components of Type type in the GameObject.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponents">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponents(System.Type,System.Collections.Generic.List`1&lt;UnityEngine.Component&gt;)">
      <summary>
        <para>Returns all components of Type type in the GameObject into List results. Note that results is of type Component, not the type of the component retrieved.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
      <param name="results">List to receive the results.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponents(System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>Returns all components of Type type in the GameObject into List results.</para>
      </summary>
      <param name="results">List of type T to receive the results.</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(System.Type)">
      <summary>
        <para>Returns all components of Type type in the GameObject or any of its children.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
      <param name="includeInactive">Should Components on inactive GameObjects be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(System.Type,System.Boolean)">
      <summary>
        <para>Returns all components of Type type in the GameObject or any of its children.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
      <param name="includeInactive">Should Components on inactive GameObjects be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should inactive GameObjects be included in the found set?</param>
      <returns>
        <para>A list of all found components matching the specified type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(System.Boolean)">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should inactive GameObjects be included in the found set?</param>
      <returns>
        <para>A list of all found components matching the specified type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>Return all found Components into List results.</para>
      </summary>
      <param name="results">List to receive found Components.</param>
      <param name="includeInactive">Should inactive GameObjects be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInChildren(System.Boolean,System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>Return all found Components into List results.</para>
      </summary>
      <param name="results">List to receive found Components.</param>
      <param name="includeInactive">Should inactive GameObjects be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInParent(System.Type,System.Boolean)">
      <summary>
        <para>Returns all components of Type type in the GameObject or any of its parents.</para>
      </summary>
      <param name="type">The type of Component to retrieve.</param>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInParent">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInParent(System.Boolean)">
      <summary>
        <para>Generic version. See the page for more details.</para>
      </summary>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
    </member>
    <member name="M:UnityEngine.GameObject.GetComponentsInParent(System.Boolean,System.Collections.Generic.List`1&lt;T&gt;)">
      <summary>
        <para>Find Components in GameObject or parents, and return them in List results.</para>
      </summary>
      <param name="includeInactive">Should inactive Components be included in the found set?</param>
      <param name="results">List holding the found Components.</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessage(System.String)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessage(System.String,System.Object)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object.</para>
      </summary>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessage(System.String,UnityEngine.SendMessageOptions)">
      <summary>
        <para></para>
      </summary>
      <param name="methodName"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessageUpwards(System.String)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessageUpwards(System.String,System.Object)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)">
      <summary>
        <para>Calls the method named methodName on every MonoBehaviour in this game object and on every ancestor of the behaviour.</para>
      </summary>
      <param name="methodName">The name of the method to call.</param>
      <param name="value">An optional parameter value to pass to the called method.</param>
      <param name="options">Should an error be raised if the method doesn't exist on the target object?</param>
    </member>
    <member name="M:UnityEngine.GameObject.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)">
      <summary>
        <para></para>
      </summary>
      <param name="methodName"></param>
      <param name="options"></param>
    </member>
    <member name="M:UnityEngine.GameObject.SetActive(System.Boolean)">
      <summary>
        <para>Activates/Deactivates the GameObject.</para>
      </summary>
      <param name="value">Activate or deactivation the  object.</param>
    </member>
    <member name="T:UnityEngine.GeometryUtility">
      <summary>
        <para>Utility class for common geometric functions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GeometryUtility.CalculateBounds(UnityEngine.Vector3[],UnityEngine.Matrix4x4)">
      <summary>
        <para>Calculates a bounding box given an array of positions and a transformation matrix.</para>
      </summary>
      <param name="positions"></param>
      <param name="transform"></param>
    </member>
    <member name="M:UnityEngine.GeometryUtility.CalculateFrustumPlanes(UnityEngine.Camera)">
      <summary>
        <para>Calculates frustum planes.</para>
      </summary>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEngine.GeometryUtility.CalculateFrustumPlanes(UnityEngine.Matrix4x4)">
      <summary>
        <para>Calculates frustum planes.</para>
      </summary>
      <param name="worldToProjectionMatrix"></param>
    </member>
    <member name="M:UnityEngine.GeometryUtility.TestPlanesAABB(UnityEngine.Plane[],UnityEngine.Bounds)">
      <summary>
        <para>Returns true if bounds are inside the plane array.</para>
      </summary>
      <param name="planes"></param>
      <param name="bounds"></param>
    </member>
    <member name="T:UnityEngine.Gizmos">
      <summary>
        <para>Gizmos are used to give visual debugging or setup aids in the scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gizmos.color">
      <summary>
        <para>Sets the color for the gizmos that will be drawn next.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gizmos.matrix">
      <summary>
        <para>Set the gizmo matrix used to draw all gizmos.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawCube(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draw a solid box with center and size.</para>
      </summary>
      <param name="center"></param>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawFrustum(UnityEngine.Vector3,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draw a camera frustum using the currently set Gizmos.matrix for it's location and rotation.</para>
      </summary>
      <param name="center">The apex of the truncated pyramid.</param>
      <param name="fov">Vertical field of view (ie, the angle at the apex in degrees).</param>
      <param name="maxRange">Distance of the frustum's far plane.</param>
      <param name="minRange">Distance of the frustum's near plane.</param>
      <param name="aspect">Width/height ratio.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawGUITexture(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Draw a texture in the scene.</para>
      </summary>
      <param name="screenRect">The size and position of the texture on the "screen" defined by the XY plane.</param>
      <param name="texture">The texture to be displayed.</param>
      <param name="mat">An optional material to apply the texture.</param>
      <param name="leftBorder">Inset from the rectangle's left edge.</param>
      <param name="rightBorder">Inset from the rectangle's right edge.</param>
      <param name="topBorder">Inset from the rectangle's top edge.</param>
      <param name="bottomBorder">Inset from the rectangle's bottom edge.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawGUITexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material)">
      <summary>
        <para>Draw a texture in the scene.</para>
      </summary>
      <param name="screenRect">The size and position of the texture on the "screen" defined by the XY plane.</param>
      <param name="texture">The texture to be displayed.</param>
      <param name="mat">An optional material to apply the texture.</param>
      <param name="leftBorder">Inset from the rectangle's left edge.</param>
      <param name="rightBorder">Inset from the rectangle's right edge.</param>
      <param name="topBorder">Inset from the rectangle's top edge.</param>
      <param name="bottomBorder">Inset from the rectangle's bottom edge.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawGUITexture(UnityEngine.Rect,UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draw a texture in the scene.</para>
      </summary>
      <param name="screenRect">The size and position of the texture on the "screen" defined by the XY plane.</param>
      <param name="texture">The texture to be displayed.</param>
      <param name="mat">An optional material to apply the texture.</param>
      <param name="leftBorder">Inset from the rectangle's left edge.</param>
      <param name="rightBorder">Inset from the rectangle's right edge.</param>
      <param name="topBorder">Inset from the rectangle's top edge.</param>
      <param name="bottomBorder">Inset from the rectangle's bottom edge.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawGUITexture(UnityEngine.Rect,UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Material)">
      <summary>
        <para>Draw a texture in the scene.</para>
      </summary>
      <param name="screenRect">The size and position of the texture on the "screen" defined by the XY plane.</param>
      <param name="texture">The texture to be displayed.</param>
      <param name="mat">An optional material to apply the texture.</param>
      <param name="leftBorder">Inset from the rectangle's left edge.</param>
      <param name="rightBorder">Inset from the rectangle's right edge.</param>
      <param name="topBorder">Inset from the rectangle's top edge.</param>
      <param name="bottomBorder">Inset from the rectangle's bottom edge.</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawIcon(UnityEngine.Vector3,System.String)">
      <summary>
        <para>Draw an icon at a position in the scene view.</para>
      </summary>
      <param name="center"></param>
      <param name="name"></param>
      <param name="allowScaling"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawIcon(UnityEngine.Vector3,System.String,System.Boolean)">
      <summary>
        <para>Draw an icon at a position in the scene view.</para>
      </summary>
      <param name="center"></param>
      <param name="name"></param>
      <param name="allowScaling"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draws a line starting at from towards to.</para>
      </summary>
      <param name="from"></param>
      <param name="to"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Draws a mesh.</para>
      </summary>
      <param name="mesh">Mesh to draw as a gizmo.</param>
      <param name="position">Position (default is zero).</param>
      <param name="rotation">Rotation (default is no rotation).</param>
      <param name="scale">Scale (default is no scale).</param>
      <param name="submeshIndex">Submesh to draw (default is -1, which draws whole mesh).</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawMesh(UnityEngine.Mesh,System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Draws a mesh.</para>
      </summary>
      <param name="mesh">Mesh to draw as a gizmo.</param>
      <param name="position">Position (default is zero).</param>
      <param name="rotation">Rotation (default is no rotation).</param>
      <param name="scale">Scale (default is no scale).</param>
      <param name="submeshIndex">Submesh to draw (default is -1, which draws whole mesh).</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawRay(UnityEngine.Ray)">
      <summary>
        <para>Draws a ray starting at from to from + direction.</para>
      </summary>
      <param name="r"></param>
      <param name="from"></param>
      <param name="direction"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draws a ray starting at from to from + direction.</para>
      </summary>
      <param name="r"></param>
      <param name="from"></param>
      <param name="direction"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawSphere(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draws a solid sphere with center and radius.</para>
      </summary>
      <param name="center"></param>
      <param name="radius"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawWireCube(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draw a wireframe box with center and size.</para>
      </summary>
      <param name="center"></param>
      <param name="size"></param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawWireMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Draws a wireframe mesh.</para>
      </summary>
      <param name="mesh">Mesh to draw as a gizmo.</param>
      <param name="position">Position (default is zero).</param>
      <param name="rotation">Rotation (default is no rotation).</param>
      <param name="scale">Scale (default is no scale).</param>
      <param name="submeshIndex">Submesh to draw (default is -1, which draws whole mesh).</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawWireMesh(UnityEngine.Mesh,System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Draws a wireframe mesh.</para>
      </summary>
      <param name="mesh">Mesh to draw as a gizmo.</param>
      <param name="position">Position (default is zero).</param>
      <param name="rotation">Rotation (default is no rotation).</param>
      <param name="scale">Scale (default is no scale).</param>
      <param name="submeshIndex">Submesh to draw (default is -1, which draws whole mesh).</param>
    </member>
    <member name="M:UnityEngine.Gizmos.DrawWireSphere(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draws a wireframe sphere with center and radius.</para>
      </summary>
      <param name="center"></param>
      <param name="radius"></param>
    </member>
    <member name="T:UnityEngine.GL">
      <summary>
        <para>Low-level graphics library.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GL.invertCulling">
      <summary>
        <para>Select whether to invert the backface culling (true) or not (false).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GL.modelview">
      <summary>
        <para>The current modelview matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GL.sRGBWrite">
      <summary>
        <para>Controls whether Linear-to-sRGB color conversion is performed while rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GL.wireframe">
      <summary>
        <para>Should rendering be done in wireframe?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.Begin(System.Int32)">
      <summary>
        <para>Begin drawing 3D primitives.</para>
      </summary>
      <param name="mode">Primitives to draw: can be TRIANGLES, TRIANGLE_STRIP, QUADS or LINES.</param>
    </member>
    <member name="M:UnityEngine.GL.Clear(System.Boolean,System.Boolean,UnityEngine.Color,System.Single)">
      <summary>
        <para>Clear the current render buffer.</para>
      </summary>
      <param name="clearDepth">Should the depth buffer be cleared?</param>
      <param name="clearColor">Should the color buffer be cleared?</param>
      <param name="backgroundColor">The color to clear with, used only if clearColor is true.</param>
      <param name="depth">The depth to clear Z buffer with, used only if clearDepth is true.</param>
    </member>
    <member name="M:UnityEngine.GL.ClearWithSkybox(System.Boolean,UnityEngine.Camera)">
      <summary>
        <para>Clear the current render buffer with camera's skybox.</para>
      </summary>
      <param name="clearDepth">Should the depth buffer be cleared?</param>
      <param name="camera">Camera to get projection parameters and skybox from.</param>
    </member>
    <member name="M:UnityEngine.GL.Color(UnityEngine.Color)">
      <summary>
        <para>Sets current vertex color.</para>
      </summary>
      <param name="c"></param>
    </member>
    <member name="M:UnityEngine.GL.End">
      <summary>
        <para>End drawing 3D primitives.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.Flush">
      <summary>
        <para>Sends queued-up commands in the driver's command buffer to the GPU.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.GetGPUProjectionMatrix(UnityEngine.Matrix4x4,System.Boolean)">
      <summary>
        <para>Compute GPU projection matrix from camera's projection matrix.</para>
      </summary>
      <param name="proj">Source projection matrix.</param>
      <param name="renderIntoTexture">Will this projection be used for rendering into a RenderTexture?</param>
      <returns>
        <para>Adjusted projection matrix for the current graphics API.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GL.InvalidateState">
      <summary>
        <para>Invalidate the internally cached render state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.IssuePluginEvent(System.Int32)">
      <summary>
        <para>Send a user-defined event to a native code plugin.</para>
      </summary>
      <param name="eventID">User defined id to send to the callback.</param>
      <param name="callback">Native code callback to queue for Unity's renderer to invoke.</param>
    </member>
    <member name="M:UnityEngine.GL.IssuePluginEvent(System.IntPtr,System.Int32)">
      <summary>
        <para>Send a user-defined event to a native code plugin.</para>
      </summary>
      <param name="eventID">User defined id to send to the callback.</param>
      <param name="callback">Native code callback to queue for Unity's renderer to invoke.</param>
    </member>
    <member name="F:UnityEngine.GL.LINE_STRIP">
      <summary>
        <para>Mode for Begin: draw line strip.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GL.LINES">
      <summary>
        <para>Mode for Begin: draw lines.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.LoadIdentity">
      <summary>
        <para>Load the identity matrix to the current modelview matrix.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.LoadOrtho">
      <summary>
        <para>Helper function to set up an ortho perspective transform.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.LoadPixelMatrix">
      <summary>
        <para>Setup a matrix for pixel-correct rendering.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.LoadPixelMatrix(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Setup a matrix for pixel-correct rendering.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
      <param name="bottom"></param>
      <param name="top"></param>
    </member>
    <member name="M:UnityEngine.GL.LoadProjectionMatrix(UnityEngine.Matrix4x4)">
      <summary>
        <para>Load an arbitrary matrix to the current projection matrix.</para>
      </summary>
      <param name="mat"></param>
    </member>
    <member name="M:UnityEngine.GL.MultiTexCoord(System.Int32,UnityEngine.Vector3)">
      <summary>
        <para>Sets current texture coordinate (v.x,v.y,v.z) to the actual texture unit.</para>
      </summary>
      <param name="unit"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.GL.MultiTexCoord2(System.Int32,System.Single,System.Single)">
      <summary>
        <para>Sets current texture coordinate (x,y) for the actual texture unit.</para>
      </summary>
      <param name="unit"></param>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.GL.MultiTexCoord3(System.Int32,System.Single,System.Single,System.Single)">
      <summary>
        <para>Sets current texture coordinate (x,y,z) to the actual texture unit.</para>
      </summary>
      <param name="unit"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.GL.MultMatrix(UnityEngine.Matrix4x4)">
      <summary>
        <para>Multiplies the current modelview matrix with the one specified.</para>
      </summary>
      <param name="mat"></param>
    </member>
    <member name="M:UnityEngine.GL.PopMatrix">
      <summary>
        <para>Restores both projection and modelview matrices off the top of the matrix stack.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.PushMatrix">
      <summary>
        <para>Saves both projection and modelview matrices to the matrix stack.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GL.QUADS">
      <summary>
        <para>Mode for Begin: draw quads.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.RenderTargetBarrier">
      <summary>
        <para>Resolves the render target for subsequent operations sampling from it.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.TexCoord(UnityEngine.Vector3)">
      <summary>
        <para>Sets current texture coordinate (v.x,v.y,v.z) for all texture units.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.GL.TexCoord2(System.Single,System.Single)">
      <summary>
        <para>Sets current texture coordinate (x,y) for all texture units.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.GL.TexCoord3(System.Single,System.Single,System.Single)">
      <summary>
        <para>Sets current texture coordinate (x,y,z) for all texture units.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="F:UnityEngine.GL.TRIANGLE_STRIP">
      <summary>
        <para>Mode for Begin: draw triangle strip.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GL.TRIANGLES">
      <summary>
        <para>Mode for Begin: draw triangles.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GL.Vertex(UnityEngine.Vector3)">
      <summary>
        <para>Submit a vertex.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.GL.Vertex3(System.Single,System.Single,System.Single)">
      <summary>
        <para>Submit a vertex.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.GL.Viewport(UnityEngine.Rect)">
      <summary>
        <para>Set the rendering viewport.</para>
      </summary>
      <param name="pixelRect"></param>
    </member>
    <member name="T:UnityEngine.Gradient">
      <summary>
        <para>Gradient used for animating colors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gradient.alphaKeys">
      <summary>
        <para>All alpha keys defined in the gradient.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gradient.colorKeys">
      <summary>
        <para>All color keys defined in the gradient.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gradient.mode">
      <summary>
        <para>Control how the gradient is evaluated.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Gradient.#ctor">
      <summary>
        <para>Create a new Gradient object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Gradient.Evaluate(System.Single)">
      <summary>
        <para>Calculate color at a given time.</para>
      </summary>
      <param name="time">Time of the key (0 - 1).</param>
    </member>
    <member name="M:UnityEngine.Gradient.SetKeys(UnityEngine.GradientColorKey[],UnityEngine.GradientAlphaKey[])">
      <summary>
        <para>Setup Gradient with an array of color keys and alpha keys.</para>
      </summary>
      <param name="colorKeys">Color keys of the gradient (maximum 8 color keys).</param>
      <param name="alphaKeys">Alpha keys of the gradient (maximum 8 alpha keys).</param>
    </member>
    <member name="T:UnityEngine.GradientAlphaKey">
      <summary>
        <para>Alpha key used by Gradient.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GradientAlphaKey.alpha">
      <summary>
        <para>Alpha channel of key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GradientAlphaKey.time">
      <summary>
        <para>Time of the key (0 - 1).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GradientAlphaKey.#ctor(System.Single,System.Single)">
      <summary>
        <para>Gradient alpha key.</para>
      </summary>
      <param name="alpha">Alpha of key (0 - 1).</param>
      <param name="time">Time of the key (0 - 1).</param>
    </member>
    <member name="T:UnityEngine.GradientColorKey">
      <summary>
        <para>Color key used by Gradient.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GradientColorKey.color">
      <summary>
        <para>Color of key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GradientColorKey.time">
      <summary>
        <para>Time of the key (0 - 1).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GradientColorKey.#ctor(UnityEngine.Color,System.Single)">
      <summary>
        <para>Gradient color key.</para>
      </summary>
      <param name="color">Color of key.</param>
      <param name="time">Time of the key (0 - 1).</param>
      <param name="col"></param>
    </member>
    <member name="T:UnityEngine.GradientMode">
      <summary>
        <para>Select how gradients will be evaluated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GradientMode.Blend">
      <summary>
        <para>Find the 2 keys adjacent to the requested evaluation time, and linearly interpolate between them to obtain a blended color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GradientMode.Fixed">
      <summary>
        <para>Return a fixed color, by finding the first key whose time value is greater than the requested evaluation time.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Graphics">
      <summary>
        <para>Raw interface to Unity's drawing functions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Graphics.activeColorBuffer">
      <summary>
        <para>Currently active color buffer (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Graphics.activeDepthBuffer">
      <summary>
        <para>Currently active depth/stencil buffer (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Graphics.activeTier">
      <summary>
        <para>Graphics Tier classification for current device.
Changing this value affects any subsequently loaded shaders. Initially this value is auto-detected from the hardware in use.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Graphics.Blit(UnityEngine.Texture,UnityEngine.RenderTexture)">
      <summary>
        <para>Copies source texture into destination render texture with a shader.</para>
      </summary>
      <param name="source">Source texture.</param>
      <param name="dest">Destination RenderTexture, or null to blit directly to screen.</param>
      <param name="mat">Material to use. Material's shader could do some post-processing effect, for example.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.Blit(UnityEngine.Texture,UnityEngine.RenderTexture,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Copies source texture into destination render texture with a shader.</para>
      </summary>
      <param name="source">Source texture.</param>
      <param name="dest">Destination RenderTexture, or null to blit directly to screen.</param>
      <param name="mat">Material to use. Material's shader could do some post-processing effect, for example.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.Blit(UnityEngine.Texture,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Copies source texture into destination render texture with a shader.</para>
      </summary>
      <param name="source">Source texture.</param>
      <param name="dest">Destination RenderTexture, or null to blit directly to screen.</param>
      <param name="mat">Material to use. Material's shader could do some post-processing effect, for example.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.BlitMultiTap(UnityEngine.Texture,UnityEngine.RenderTexture,UnityEngine.Material,UnityEngine.Vector2[])">
      <summary>
        <para>Copies source texture into destination, for multi-tap shader.</para>
      </summary>
      <param name="source">Source texture.</param>
      <param name="dest">Destination RenderTexture, or null to blit directly to screen.</param>
      <param name="mat">Material to use for copying. Material's shader should do some post-processing effect.</param>
      <param name="offsets">Variable number of filtering offsets. Offsets are given in pixels.</param>
    </member>
    <member name="M:UnityEngine.Graphics.ClearRandomWriteTargets">
      <summary>
        <para>Clear random write targets for level pixel shaders.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Graphics.ConvertTexture(UnityEngine.Texture,UnityEngine.Texture)">
      <summary>
        <para>This function provides an efficient way to convert between textures of different formats and dimensions.
The destination texture format should be uncompressed and correspond to a supported RenderTextureFormat.</para>
      </summary>
      <param name="src">Source texture.</param>
      <param name="dst">Destination texture.</param>
      <param name="srcElement">Source element (e.g. cubemap face).  Set this to 0 for 2d source textures.</param>
      <param name="dstElement">Destination element (e.g. cubemap face or texture array element).</param>
    </member>
    <member name="M:UnityEngine.Graphics.ConvertTexture(UnityEngine.Texture,System.Int32,UnityEngine.Texture,System.Int32)">
      <summary>
        <para>This function provides an efficient way to convert between textures of different formats and dimensions.
The destination texture format should be uncompressed and correspond to a supported RenderTextureFormat.</para>
      </summary>
      <param name="src">Source texture.</param>
      <param name="dst">Destination texture.</param>
      <param name="srcElement">Source element (e.g. cubemap face).  Set this to 0 for 2d source textures.</param>
      <param name="dstElement">Destination element (e.g. cubemap face or texture array element).</param>
    </member>
    <member name="M:UnityEngine.Graphics.CopyTexture(UnityEngine.Texture,UnityEngine.Texture)">
      <summary>
        <para>Copy texture contents.</para>
      </summary>
      <param name="src">Source texture.</param>
      <param name="dst">Destination texture.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Graphics.CopyTexture(UnityEngine.Texture,System.Int32,System.Int32,UnityEngine.Texture,System.Int32,System.Int32)">
      <summary>
        <para>Copy texture contents.</para>
      </summary>
      <param name="src">Source texture.</param>
      <param name="dst">Destination texture.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Graphics.CopyTexture(UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Copy texture contents.</para>
      </summary>
      <param name="src">Source texture.</param>
      <param name="dst">Destination texture.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,UnityEngine.Transform)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,System.Int32)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,UnityEngine.Camera,System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Draw a mesh.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations).</param>
      <param name="material">Material to use.</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be rendered in the given camera only.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="useLightProbes">Should the mesh use light probes?</param>
      <param name="probeAnchor">If used, the mesh will use this Transform's position to sample light probes and find the matching reflection probe.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshInstanced(UnityEngine.Mesh,System.Int32,UnityEngine.Material,UnityEngine.Matrix4x4[],System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,System.Int32,UnityEngine.Camera)">
      <summary>
        <para>Draw the same mesh multiple times using GPU instancing.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="material">Material to use.</param>
      <param name="matrices">The array of object transformation matrices.</param>
      <param name="count">The number of instances to be drawn.</param>
      <param name="properties">Additional material properties to apply. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be drawn in the given camera only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshInstanced(UnityEngine.Mesh,System.Int32,UnityEngine.Material,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,System.Int32,UnityEngine.Camera)">
      <summary>
        <para>Draw the same mesh multiple times using GPU instancing.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="material">Material to use.</param>
      <param name="matrices">The array of object transformation matrices.</param>
      <param name="count">The number of instances to be drawn.</param>
      <param name="properties">Additional material properties to apply. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be drawn in the given camera only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshInstancedIndirect(UnityEngine.Mesh,System.Int32,UnityEngine.Material,UnityEngine.Bounds,UnityEngine.ComputeBuffer,System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,System.Int32,UnityEngine.Camera)">
      <summary>
        <para>Draw the same mesh multiple times using GPU instancing.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="material">Material to use.</param>
      <param name="bounds">The bounding volume surrounding the instances you intend to draw.</param>
      <param name="bufferWithArgs">The GPU buffer containing the arguments for how many instances of this mesh to draw.</param>
      <param name="argsOffset">The byte offset into the buffer, where the draw arguments start.</param>
      <param name="properties">Additional material properties to apply. See MaterialPropertyBlock.</param>
      <param name="castShadows">Should the mesh cast shadows?</param>
      <param name="receiveShadows">Should the mesh receive shadows?</param>
      <param name="layer"> to use.</param>
      <param name="camera">If null (default), the mesh will be drawn in all cameras. Otherwise it will be drawn in the given camera only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshNow(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Draw a mesh immediately.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations). Note that the mesh will not be displayed correctly if matrix has negative scale.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshNow(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32)">
      <summary>
        <para>Draw a mesh immediately.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations). Note that the mesh will not be displayed correctly if matrix has negative scale.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshNow(UnityEngine.Mesh,UnityEngine.Matrix4x4)">
      <summary>
        <para>Draw a mesh immediately.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations). Note that the mesh will not be displayed correctly if matrix has negative scale.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawMeshNow(UnityEngine.Mesh,UnityEngine.Matrix4x4,System.Int32)">
      <summary>
        <para>Draw a mesh immediately.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="position">Position of the mesh.</param>
      <param name="rotation">Rotation of the mesh.</param>
      <param name="matrix">Transformation matrix of the mesh (combines position, rotation and other transformations). Note that the mesh will not be displayed correctly if matrix has negative scale.</param>
      <param name="materialIndex">Subset of the mesh to draw.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawProcedural(UnityEngine.MeshTopology,System.Int32,System.Int32)">
      <summary>
        <para>Draws a fully procedural geometry on the GPU.</para>
      </summary>
      <param name="topology"></param>
      <param name="vertexCount"></param>
      <param name="instanceCount"></param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawProceduralIndirect(UnityEngine.MeshTopology,UnityEngine.ComputeBuffer,System.Int32)">
      <summary>
        <para>Draws a fully procedural geometry on the GPU.</para>
      </summary>
      <param name="topology">Topology of the procedural geometry.</param>
      <param name="bufferWithArgs">Buffer with draw arguments.</param>
      <param name="argsOffset">Byte offset where in the buffer the draw arguments are.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Color,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Material)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Material)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Color,UnityEngine.Material)">
      <summary>
        <para>Draw a texture in screen coordinates.</para>
      </summary>
      <param name="screenRect">Rectangle on the screen to use for the texture. In pixel coordinates with (0,0) in the upper-left corner.</param>
      <param name="texture">Texture to draw.</param>
      <param name="sourceRect">Region of the texture to use. In normalized coordinates with (0,0) in the bottom-left corner.</param>
      <param name="leftBorder">Number of pixels from the left that are not affected by scale.</param>
      <param name="rightBorder">Number of pixels from the right that are not affected by scale.</param>
      <param name="topBorder">Number of pixels from the top that are not affected by scale.</param>
      <param name="bottomBorder">Number of pixels from the bottom that are not affected by scale.</param>
      <param name="color">Color that modulates the output. The neutral value is (0.5, 0.5, 0.5, 0.5). Set as vertex color for the shader.</param>
      <param name="mat">Custom Material that can be used to draw the texture. If null is passed, a default material with the Internal-GUITexture.shader is used.</param>
      <param name="pass">If -1 (default), draws all passes in the material. Otherwise, draws given pass only.</param>
    </member>
    <member name="M:UnityEngine.Graphics.ExecuteCommandBuffer(UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Execute a command buffer.</para>
      </summary>
      <param name="buffer">The buffer to execute.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRandomWriteTarget(System.Int32,UnityEngine.ComputeBuffer,System.Boolean)">
      <summary>
        <para>Set random write target for level pixel shaders.</para>
      </summary>
      <param name="index">Index of the random write target in the shader.</param>
      <param name="uav">RenderTexture to set as write target.</param>
      <param name="preserveCounterValue">Whether to leave the append/consume counter value unchanged.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRandomWriteTarget(System.Int32,UnityEngine.RenderTexture)">
      <summary>
        <para>Set random write target for level pixel shaders.</para>
      </summary>
      <param name="index">Index of the random write target in the shader.</param>
      <param name="uav">RenderTexture to set as write target.</param>
      <param name="preserveCounterValue">Whether to leave the append/consume counter value unchanged.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderTexture)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderTexture,System.Int32)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderTexture,System.Int32,UnityEngine.CubemapFace)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderTexture,System.Int32,UnityEngine.CubemapFace,System.Int32)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderBuffer[],UnityEngine.RenderBuffer)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer,System.Int32)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer,System.Int32,UnityEngine.CubemapFace)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer,System.Int32,UnityEngine.CubemapFace,System.Int32)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="M:UnityEngine.Graphics.SetRenderTarget(UnityEngine.RenderTargetSetup)">
      <summary>
        <para>Sets current render target.</para>
      </summary>
      <param name="rt">RenderTexture to set as active render target.</param>
      <param name="mipLevel">Mipmap level to render into (use 0 if not mipmapped).</param>
      <param name="face">Cubemap face to render into (use Unknown if not a cubemap).</param>
      <param name="depthSlice">Depth slice to render into (use 0 if not a 3D or 2DArray render target).</param>
      <param name="colorBuffer">Color buffer to render into.</param>
      <param name="depthBuffer">Depth buffer to render into.</param>
      <param name="colorBuffers">
Color buffers to render into (for multiple render target effects).</param>
      <param name="setup">Full render target setup information.</param>
    </member>
    <member name="T:UnityEngine.GUI">
      <summary>
        <para>The GUI class is the interface for Unity's GUI with manual positioning.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.backgroundColor">
      <summary>
        <para>Global tinting color for all background elements rendered by the GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.changed">
      <summary>
        <para>Returns true if any controls changed the value of the input data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.color">
      <summary>
        <para>Global tinting color for the GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.contentColor">
      <summary>
        <para>Tinting color for all text rendered by the GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.depth">
      <summary>
        <para>The sorting depth of the currently executing GUI behaviour.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.enabled">
      <summary>
        <para>Is the GUI enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.matrix">
      <summary>
        <para>The GUI transform matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.skin">
      <summary>
        <para>The global skin to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.tooltip">
      <summary>
        <para>The tooltip of the control the mouse is currently over, or which has keyboard focus. (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,System.String)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a group. Must be matched with a call to EndGroup.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect)">
      <summary>
        <para>Begin a scrolling view inside your GUI.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when viewRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when viewRect is taller than position.</param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Begin a scrolling view inside your GUI.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when viewRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when viewRect is taller than position.</param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a scrolling view inside your GUI.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when viewRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when viewRect is taller than position.</param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a scrolling view inside your GUI.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when viewRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when viewRect is taller than position.</param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,System.String)">
      <summary>
        <para>Create a Box on the GUI Layer.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Create a Box on the GUI Layer.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Create a Box on the GUI Layer.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a Box on the GUI Layer.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a Box on the GUI Layer.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a Box on the GUI Layer.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the box.</param>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.BringWindowToBack(System.Int32)">
      <summary>
        <para>Bring a specific window to back of the floating windows.</para>
      </summary>
      <param name="windowID">The identifier used when you created the window in the Window call.</param>
    </member>
    <member name="M:UnityEngine.GUI.BringWindowToFront(System.Int32)">
      <summary>
        <para>Bring a specific window to front of the floating windows.</para>
      </summary>
      <param name="windowID">The identifier used when you created the window in the Window call.</param>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,System.String)">
      <summary>
        <para>Make a single press button. The user clicks them and something happens immediately.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Make a single press button. The user clicks them and something happens immediately.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Make a single press button. The user clicks them and something happens immediately.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a single press button. The user clicks them and something happens immediately.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a single press button. The user clicks them and something happens immediately.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a single press button. The user clicks them and something happens immediately.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.DragWindow(UnityEngine.Rect)">
      <summary>
        <para>Make a window draggable.</para>
      </summary>
      <param name="position">The part of the window that can be dragged. This is clipped to the actual window.</param>
    </member>
    <member name="M:UnityEngine.GUI.DragWindow">
      <summary>
        <para>If you want to have the entire window background to act as a drag area, use the version of DragWindow that takes no parameters and put it at the end of the window function.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Draw a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to apply alpha blending when drawing the image (enabled by default).</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.  Pass in w/h for the desired aspect ratio.  This allows the aspect ratio of the source image to be adjusted without changing the pixel width and height.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode)">
      <summary>
        <para>Draw a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to apply alpha blending when drawing the image (enabled by default).</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.  Pass in w/h for the desired aspect ratio.  This allows the aspect ratio of the source image to be adjusted without changing the pixel width and height.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Boolean)">
      <summary>
        <para>Draw a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to apply alpha blending when drawing the image (enabled by default).</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.  Pass in w/h for the desired aspect ratio.  This allows the aspect ratio of the source image to be adjusted without changing the pixel width and height.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Boolean,System.Single)">
      <summary>
        <para>Draw a texture within a rectangle.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="scaleMode">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to apply alpha blending when drawing the image (enabled by default).</param>
      <param name="imageAspect">Aspect ratio to use for the source image. If 0 (the default), the aspect ratio from the image is used.  Pass in w/h for the desired aspect ratio.  This allows the aspect ratio of the source image to be adjusted without changing the pixel width and height.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTextureWithTexCoords(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect)">
      <summary>
        <para>Draw a texture within a rectangle with the given texture coordinates.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="texCoords">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to alpha blend the image on to the display (the default). If false, the picture is drawn on to the display.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTextureWithTexCoords(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Draw a texture within a rectangle with the given texture coordinates.</para>
      </summary>
      <param name="position">Rectangle on the screen to draw the texture within.</param>
      <param name="image">Texture to display.</param>
      <param name="texCoords">How to scale the image when the aspect ratio of it doesn't fit the aspect ratio to be drawn within.</param>
      <param name="alphaBlend">Whether to alpha blend the image on to the display (the default). If false, the picture is drawn on to the display.</param>
    </member>
    <member name="M:UnityEngine.GUI.EndGroup">
      <summary>
        <para>End a group.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.EndScrollView">
      <summary>
        <para>Ends a scrollview started with a call to BeginScrollView.</para>
      </summary>
      <param name="handleScrollWheel"></param>
    </member>
    <member name="M:UnityEngine.GUI.EndScrollView(System.Boolean)">
      <summary>
        <para>Ends a scrollview started with a call to BeginScrollView.</para>
      </summary>
      <param name="handleScrollWheel"></param>
    </member>
    <member name="M:UnityEngine.GUI.FocusControl(System.String)">
      <summary>
        <para>Move keyboard focus to a named control.</para>
      </summary>
      <param name="name">Name set using SetNextControlName.</param>
    </member>
    <member name="M:UnityEngine.GUI.FocusWindow(System.Int32)">
      <summary>
        <para>Make a window become the active window.</para>
      </summary>
      <param name="windowID">The identifier used when you created the window in the Window call.</param>
    </member>
    <member name="M:UnityEngine.GUI.GetNameOfFocusedControl">
      <summary>
        <para>Get the name of named control that has focus.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUI.GroupScope">
      <summary>
        <para>Disposable helper class for managing BeginGroup / EndGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,System.String)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new GroupScope and begin the corresponding group.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the group.</param>
      <param name="text">Text to display on the group.</param>
      <param name="image">Texture to display on the group.</param>
      <param name="content">Text, image and tooltip for this group. If supplied, any mouse clicks are "captured" by the group and not If left out, no background is rendered, and mouse clicks are passed.</param>
      <param name="style">The style to use for the background.</param>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Make a horizontal scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the scrollbar.</param>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="leftValue">The value at the left end of the scrollbar.</param>
      <param name="rightValue">The value at the right end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a horizontal scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the scrollbar.</param>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="leftValue">The value at the left end of the scrollbar.</param>
      <param name="rightValue">The value at the right end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>A horizontal slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>A horizontal slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,System.String)">
      <summary>
        <para>Make a text or texture label on screen.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Make a text or texture label on screen.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Make a text or texture label on screen.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text or texture label on screen.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text or texture label on screen.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text or texture label on screen.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the label.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String)">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture)">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent)">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow">
      <summary>
        <para>Show a Modal Window.</para>
      </summary>
      <param name="id">A unique id number.</param>
      <param name="clientRect">Position and size of the window.</param>
      <param name="func">A function which contains the immediate mode GUI code to draw the contents of your window.</param>
      <param name="text">Text to appear in the title-bar area of the window, if any.</param>
      <param name="image">An image to appear in the title bar of the window, if any.</param>
      <param name="content">GUIContent to appear in the title bar of the window, if any.</param>
      <param name="style">Style to apply to the window.</param>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char)">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char,System.Int32)">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,System.String)">
      <summary>
        <para>Make a button that is active as long as the user holds it down.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>True when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Make a button that is active as long as the user holds it down.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>True when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Make a button that is active as long as the user holds it down.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>True when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a button that is active as long as the user holds it down.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>True when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a button that is active as long as the user holds it down.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>True when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a button that is active as long as the user holds it down.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <returns>
        <para>True when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.ScrollTo(UnityEngine.Rect)">
      <summary>
        <para>Scrolls all enclosing scrollviews so they try to make position visible.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="T:UnityEngine.GUI.ScrollViewScope">
      <summary>
        <para>Disposable helper class for managing BeginScrollView / EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Whether this ScrollView should handle scroll wheel events. (default: true).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.ScrollViewScope.scrollPosition">
      <summary>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect)">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when clientRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when clientRect is taller than position.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when clientRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when clientRect is taller than position.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when clientRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when clientRect is taller than position.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the ScrollView.</param>
      <param name="scrollPosition">The pixel distance that the view is scrolled in the X and Y directions.</param>
      <param name="viewRect">The rectangle used inside the scrollview.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when clientRect is wider than position.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when clientRect is taller than position.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,System.String[],System.Int32)">
      <summary>
        <para>Make a grid of buttons.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.Texture[],System.Int32)">
      <summary>
        <para>Make a grid of buttons.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32)">
      <summary>
        <para>Make a grid of buttons.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,System.String[],System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a grid of buttons.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.Texture[],System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a grid of buttons.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a grid of buttons.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the grid.</param>
      <param name="selected">The index of the selected grid button.</param>
      <param name="texts">An array of strings to show on the grid buttons.</param>
      <param name="images">An array of textures on the grid buttons.</param>
      <param name="contents">An array of text, image and tooltips for the grid button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The controls will be scaled to fit unless the style defines a fixedWidth to use.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SetNextControlName(System.String)">
      <summary>
        <para>Set the name of the next control.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Make a Multi-line text area where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Make a Multi-line text area where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a Multi-line text area where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a Multi-line text area where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the text field.</param>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.Texture)">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the button.</param>
      <param name="value">Is this button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the toggle style from the current GUISkin is used.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.Texture[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.Texture[],UnityEngine.GUIStyle)">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the toolbar.</param>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the toolbar buttons.</param>
      <param name="images">An array of textures on the toolbar buttons.</param>
      <param name="contents">An array of text, image and tooltips for the toolbar buttons.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.UnfocusWindow">
      <summary>
        <para>Remove focus from all windows.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.VerticalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Make a vertical scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the scrollbar.</param>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="topValue">The value at the top of the scrollbar.</param>
      <param name="bottomValue">The value at the bottom of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.VerticalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a vertical scrollbar. Scrollbars are what you use to scroll through a document. Most likely, you want to use scrollViews instead.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the scrollbar.</param>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="topValue">The value at the top of the scrollbar.</param>
      <param name="bottomValue">The value at the bottom of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.VerticalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>A vertical slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="topValue">The value at the top end of the slider.</param>
      <param name="bottomValue">The value at the bottom end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.VerticalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>A vertical slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the slider.</param>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="topValue">The value at the top end of the slider.</param>
      <param name="bottomValue">The value at the bottom end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String)">
      <summary>
        <para>Make a popup window.</para>
      </summary>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
      <returns>
        <para>Onscreen rectangle denoting the window's position and size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture)">
      <summary>
        <para>Make a popup window.</para>
      </summary>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
      <returns>
        <para>Onscreen rectangle denoting the window's position and size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent)">
      <summary>
        <para>Make a popup window.</para>
      </summary>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
      <returns>
        <para>Onscreen rectangle denoting the window's position and size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a popup window.</para>
      </summary>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
      <returns>
        <para>Onscreen rectangle denoting the window's position and size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a popup window.</para>
      </summary>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
      <returns>
        <para>Onscreen rectangle denoting the window's position and size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a popup window.</para>
      </summary>
      <param name="Style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="id">ID number for the window (can be any value as long as it is unique).</param>
      <param name="clientRect">Onscreen rectangle denoting the window's position and size.</param>
      <param name="func">Script function to display the window's contents.</param>
      <param name="text">Text to render inside the window.</param>
      <param name="image">Image to render inside the window.</param>
      <param name="content">GUIContent to render inside the window.</param>
      <param name="style">Style information for the window.</param>
      <param name="title">Text displayed in the window's title bar.</param>
      <returns>
        <para>Onscreen rectangle denoting the window's position and size.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUI.WindowFunction">
      <summary>
        <para>Callback to draw GUI within a window (used with GUI.Window).</para>
      </summary>
      <param name="id"></param>
    </member>
    <member name="T:UnityEngine.GUIContent">
      <summary>
        <para>The contents of a GUI element.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIContent.image">
      <summary>
        <para>The icon image contained.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GUIContent.none">
      <summary>
        <para>Shorthand for empty content.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIContent.text">
      <summary>
        <para>The text contained.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIContent.tooltip">
      <summary>
        <para>The tooltip of this element.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor">
      <summary>
        <para>Constructor for GUIContent in all shapes and sizes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String)">
      <summary>
        <para>Build a GUIContent object containing only text.</para>
      </summary>
      <param name="text"></param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(UnityEngine.Texture)">
      <summary>
        <para>Build a GUIContent object containing only an image.</para>
      </summary>
      <param name="image"></param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String,UnityEngine.Texture)">
      <summary>
        <para>Build a GUIContent object containing both text and an image.</para>
      </summary>
      <param name="text"></param>
      <param name="image"></param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String,System.String)">
      <summary>
        <para>Build a GUIContent containing some text. When the user hovers the mouse over it, the global GUI.tooltip is set to the tooltip.</para>
      </summary>
      <param name="text"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(UnityEngine.Texture,System.String)">
      <summary>
        <para>Build a GUIContent containing an image. When the user hovers the mouse over it, the global GUI.tooltip is set to the tooltip.</para>
      </summary>
      <param name="image"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String,UnityEngine.Texture,System.String)">
      <summary>
        <para>Build a GUIContent that contains both text, an image and has a tooltip defined. When the user hovers the mouse over it, the global GUI.tooltip is set to the tooltip.</para>
      </summary>
      <param name="text"></param>
      <param name="image"></param>
      <param name="tooltip"></param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(UnityEngine.GUIContent)">
      <summary>
        <para>Build a GUIContent as a copy of another GUIContent.</para>
      </summary>
      <param name="src"></param>
    </member>
    <member name="T:UnityEngine.GUIElement">
      <summary>
        <para>Base class for images &amp; text strings displayed in a GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIElement.GetScreenRect()">
      <summary>
        <para>Returns bounding rectangle of GUIElement in screen coordinates.</para>
      </summary>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEngine.GUIElement.GetScreenRect(UnityEngine.Camera)">
      <summary>
        <para>Returns bounding rectangle of GUIElement in screen coordinates.</para>
      </summary>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEngine.GUIElement.HitTest(UnityEngine.Vector3)">
      <summary>
        <para>Is a point on screen inside the element?</para>
      </summary>
      <param name="screenPosition"></param>
      <param name="camera"></param>
    </member>
    <member name="M:UnityEngine.GUIElement.HitTest(UnityEngine.Vector3,UnityEngine.Camera)">
      <summary>
        <para>Is a point on screen inside the element?</para>
      </summary>
      <param name="screenPosition"></param>
      <param name="camera"></param>
    </member>
    <member name="T:UnityEngine.GUILayer">
      <summary>
        <para>Component added to a camera to make it render 2D GUI elements.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayer.HitTest(UnityEngine.Vector3)">
      <summary>
        <para>Get the GUI element at a specific screen position.</para>
      </summary>
      <param name="screenPosition"></param>
    </member>
    <member name="T:UnityEngine.GUILayout">
      <summary>
        <para>The GUILayout class is the interface for Unity gui with automatic layout.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUILayout.AreaScope">
      <summary>
        <para>Disposable helper class for managing BeginArea / EndArea.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,System.String)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Create a new AreaScope and begin the corresponding Area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin a GUILayout block of GUI controls in a fixed screen area.</para>
      </summary>
      <param name="text">Optional text to display in the area.</param>
      <param name="image">Optional texture to display in the area.</param>
      <param name="content">Optional text, image and tooltip top display for this area.</param>
      <param name="style">The style to use. If left out, the empty GUIStyle (GUIStyle.none) is used, giving a transparent background.</param>
      <param name="screenRect"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a Horizontal control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a Horizontal control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a Horizontal control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a Horizontal control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a Horizontal control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle)">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin an automatically laid out scrollview.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwayShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwayShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="alwaysShowHorizontal"></param>
      <param name="alwaysShowVertical"></param>
      <param name="style"></param>
      <param name="background"></param>
      <returns>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Begin a vertical control group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout box.</para>
      </summary>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout box.</para>
      </summary>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout box.</para>
      </summary>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout box.</para>
      </summary>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout box.</para>
      </summary>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout box.</para>
      </summary>
      <param name="text">Text to display on the box.</param>
      <param name="image">Texture to display on the box.</param>
      <param name="content">Text, image and tooltip for this box.</param>
      <param name="style">The style to use. If left out, the box style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single press button.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single press button.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single press button.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single press button.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single press button.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single press button.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the users clicks the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.EndArea">
      <summary>
        <para>Close a GUILayout block started with BeginArea.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.EndHorizontal">
      <summary>
        <para>Close a group started with BeginHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.EndScrollView">
      <summary>
        <para>End a scroll view begun with a call to BeginScrollView.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.EndVertical">
      <summary>
        <para>Close a group started with BeginVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.ExpandHeight(System.Boolean)">
      <summary>
        <para>Option passed to a control to allow or disallow vertical expansion.</para>
      </summary>
      <param name="expand"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.ExpandWidth(System.Boolean)">
      <summary>
        <para>Option passed to a control to allow or disallow horizontal expansion.</para>
      </summary>
      <param name="expand"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.FlexibleSpace">
      <summary>
        <para>Insert a flexible space element.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.Height(System.Single)">
      <summary>
        <para>Option passed to a control to give it an absolute height.</para>
      </summary>
      <param name="height"></param>
    </member>
    <member name="T:UnityEngine.GUILayout.HorizontalScope">
      <summary>
        <para>Disposable helper class for managing BeginHorizontal / EndHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new HorizontalScope and begin the corresponding horizontal group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a horizontal scrollbar.</para>
      </summary>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="leftValue">The value at the left end of the scrollbar.</param>
      <param name="rightValue">The value at the right end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a horizontal scrollbar.</para>
      </summary>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="leftValue">The value at the left end of the scrollbar.</param>
      <param name="rightValue">The value at the right end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalSlider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>A horizontal slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalSlider(System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>A horizontal slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="leftValue">The value at the left end of the slider.</param>
      <param name="rightValue">The value at the right end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout label.</para>
      </summary>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout label.</para>
      </summary>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout label.</para>
      </summary>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout label.</para>
      </summary>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout label.</para>
      </summary>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an auto-layout label.</para>
      </summary>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.MaxHeight(System.Single)">
      <summary>
        <para>Option passed to a control to specify a maximum height.</para>
      </summary>
      <param name="maxHeight"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.MaxWidth(System.Single)">
      <summary>
        <para>Option passed to a control to specify a maximum width.</para>
      </summary>
      <param name="maxWidth"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.MinHeight(System.Single)">
      <summary>
        <para>Option passed to a control to specify a minimum height.</para>
      </summary>
      <param name="minHeight"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.MinWidth(System.Single)">
      <summary>
        <para>Option passed to a control to specify a minimum width.
</para>
      </summary>
      <param name="minWidth"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options"></param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options"></param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options"></param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a text field where the user can enter a password.</para>
      </summary>
      <param name="password">Password to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maskChar">Character to mask the password with.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options"></param>
      <returns>
        <para>The edited password.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a repeating button. The button returns true as long as the user holds down the mouse.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the holds down the mouse.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a repeating button. The button returns true as long as the user holds down the mouse.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the holds down the mouse.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a repeating button. The button returns true as long as the user holds down the mouse.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the holds down the mouse.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a repeating button. The button returns true as long as the user holds down the mouse.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the holds down the mouse.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a repeating button. The button returns true as long as the user holds down the mouse.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the holds down the mouse.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a repeating button. The button returns true as long as the user holds down the mouse.</para>
      </summary>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true when the holds down the mouse.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUILayout.ScrollViewScope">
      <summary>
        <para>Disposable helper class for managing BeginScrollView / EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUILayout.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Whether this ScrollView should handle scroll wheel events. (default: true).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUILayout.ScrollViewScope.scrollPosition">
      <summary>
        <para>The modified scrollPosition. Feed this back into the variable you pass in, as shown in the example.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new ScrollViewScope and begin the corresponding ScrollView.</para>
      </summary>
      <param name="scrollPosition">The position to use display.</param>
      <param name="alwaysShowHorizontal">Optional parameter to always show the horizontal scrollbar. If false or left out, it is only shown when the content inside the ScrollView is wider than the scrollview itself.</param>
      <param name="alwaysShowVertical">Optional parameter to always show the vertical scrollbar. If false or left out, it is only shown when content inside the ScrollView is taller than the scrollview itself.</param>
      <param name="horizontalScrollbar">Optional GUIStyle to use for the horizontal scrollbar. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="verticalScrollbar">Optional GUIStyle to use for the vertical scrollbar. If left out, the verticalScrollbar style from the current GUISkin is used.</param>
      <param name="options"></param>
      <param name="style"></param>
      <param name="background"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,System.String[],System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a Selection Grid.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.Texture[],System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a Selection Grid.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.GUIContent[],System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a Selection Grid.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,System.String[],System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a Selection Grid.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.Texture[],System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a Selection Grid.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.GUIContent[],System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a Selection Grid.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="xCount">How many elements to fit in the horizontal direction. The elements will be scaled to fit unless the style defines a fixedWidth to use. The height of the control will be determined from the number of elements.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Space(System.Single)">
      <summary>
        <para>Insert a space in the current layout group.</para>
      </summary>
      <param name="pixels"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a multi-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&amp;amp;lt;br&amp;amp;gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a multi-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&amp;amp;lt;br&amp;amp;gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a multi-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&amp;amp;lt;br&amp;amp;gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a multi-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textField style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&amp;amp;lt;br&amp;amp;gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a single-line text field where the user can edit a string.</para>
      </summary>
      <param name="text">Text to edit. The return value of this function should be assigned back to the string as shown in the example.</param>
      <param name="maxLength">The maximum length of the string. If left out, the user can type for ever and ever.</param>
      <param name="style">The style to use. If left out, the textArea style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The edited string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make an on/off toggle button.</para>
      </summary>
      <param name="value">Is the button on or off?</param>
      <param name="text">Text to display on the button.</param>
      <param name="image">Texture to display on the button.</param>
      <param name="content">Text, image and tooltip for this button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The new value of the button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.Texture[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.Texture[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a toolbar.</para>
      </summary>
      <param name="selected">The index of the selected button.</param>
      <param name="texts">An array of strings to show on the buttons.</param>
      <param name="images">An array of textures on the buttons.</param>
      <param name="contents">An array of text, image and tooltips for the button.</param>
      <param name="style">The style to use. If left out, the button style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content"></param>
      <returns>
        <para>The index of the selected button.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUILayout.VerticalScope">
      <summary>
        <para>Disposable helper class for managing BeginVertical / EndVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Create a new VerticalScope and begin the corresponding vertical group.</para>
      </summary>
      <param name="text">Text to display on group.</param>
      <param name="image">Texture to display on group.</param>
      <param name="content">Text, image, and tooltip for this group.</param>
      <param name="style">The style to use for background image and padding values. If left out, the background is transparent.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a vertical scrollbar.</para>
      </summary>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="topValue">The value at the top end of the scrollbar.</param>
      <param name="bottomValue">The value at the bottom end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a vertical scrollbar.</para>
      </summary>
      <param name="value">The position between min and max.</param>
      <param name="size">How much can we see?</param>
      <param name="topValue">The value at the top end of the scrollbar.</param>
      <param name="bottomValue">The value at the bottom end of the scrollbar.</param>
      <param name="style">The style to use for the scrollbar background. If left out, the horizontalScrollbar style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <returns>
        <para>The modified value. This can be changed by the user by dragging the scrollbar, or clicking the arrows at the end.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalSlider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>A vertical slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="topValue">The value at the top end of the slider.</param>
      <param name="bottomValue">The value at the bottom end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <param name="leftValue"></param>
      <param name="rightValue"></param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalSlider(System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>A vertical slider the user can drag to change a value between a min and a max.</para>
      </summary>
      <param name="value">The value the slider shows. This determines the position of the draggable thumb.</param>
      <param name="topValue">The value at the top end of the slider.</param>
      <param name="bottomValue">The value at the bottom end of the slider.</param>
      <param name="slider">The GUIStyle to use for displaying the dragging area. If left out, the horizontalSlider style from the current GUISkin is used.</param>
      <param name="thumb">The GUIStyle to use for displaying draggable thumb. If left out, the horizontalSliderThumb style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.</param>
      <param name="leftValue"></param>
      <param name="rightValue"></param>
      <returns>
        <para>The value that has been set by the user.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Width(System.Single)">
      <summary>
        <para>Option passed to a control to give it an absolute width.</para>
      </summary>
      <param name="width"></param>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a popup window that layouts its contents automatically.</para>
      </summary>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectangle the window is at. This can be in a different position and have a different size than the one you passed in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a popup window that layouts its contents automatically.</para>
      </summary>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectangle the window is at. This can be in a different position and have a different size than the one you passed in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a popup window that layouts its contents automatically.</para>
      </summary>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectangle the window is at. This can be in a different position and have a different size than the one you passed in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a popup window that layouts its contents automatically.</para>
      </summary>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectangle the window is at. This can be in a different position and have a different size than the one you passed in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a popup window that layouts its contents automatically.</para>
      </summary>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectangle the window is at. This can be in a different position and have a different size than the one you passed in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Make a popup window that layouts its contents automatically.</para>
      </summary>
      <param name="id">A unique ID to use for each window. This is the ID you'll use to interface to it.</param>
      <param name="screenRect">Rectangle on the screen to use for the window. The layouting system will attempt to fit the window inside it - if that cannot be done, it will adjust the rectangle to fit.</param>
      <param name="func">The function that creates the GUI inside the window. This function must take one parameter - the id of the window it's currently making GUI for.</param>
      <param name="text">Text to display as a title for the window.</param>
      <param name="image">Texture to display an image in the titlebar.</param>
      <param name="content">Text, image and tooltip for this window.</param>
      <param name="style">An optional style to use for the window. If left out, the window style from the current GUISkin is used.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style or the screenRect you pass in.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectangle the window is at. This can be in a different position and have a different size than the one you passed in.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUILayoutOption">
      <summary>
        <para>Class internally used to pass layout options into GUILayout functions. You don't use these directly, but construct them with the layouting functions in the GUILayout class.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUILayoutUtility">
      <summary>
        <para>Utility functions for implementing and extending the GUILayout class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single)">
      <summary>
        <para>Reserve layout space for a rectangle with a specific aspect ratio.</para>
      </summary>
      <param name="aspect">The aspect ratio of the element (width / height).</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes of the returned rectangle &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rect for the control.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Reserve layout space for a rectangle with a specific aspect ratio.</para>
      </summary>
      <param name="aspect">The aspect ratio of the element (width / height).</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes of the returned rectangle &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rect for the control.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a rectangle with a specific aspect ratio.</para>
      </summary>
      <param name="aspect">The aspect ratio of the element (width / height).</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes of the returned rectangle &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rect for the control.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a rectangle with a specific aspect ratio.</para>
      </summary>
      <param name="aspect">The aspect ratio of the element (width / height).</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes of the returned rectangle &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rect for the control.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetLastRect">
      <summary>
        <para>Get the rectangle last used by GUILayout for a control.</para>
      </summary>
      <returns>
        <para>The last used rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Reserve layout space for a rectangle for displaying some contents with a specific style.</para>
      </summary>
      <param name="content">The content to make room for displaying.</param>
      <param name="style">The GUIStyle to layout for.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>A rectangle that is large enough to contain content when rendered in style.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a rectangle for displaying some contents with a specific style.</para>
      </summary>
      <param name="content">The content to make room for displaying.</param>
      <param name="style">The GUIStyle to layout for.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>A rectangle that is large enough to contain content when rendered in style.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single)">
      <summary>
        <para>Reserve layout space for a rectangle with a fixed content area.</para>
      </summary>
      <param name="width">The width of the area you want.</param>
      <param name="height">The height of the area you want.</param>
      <param name="style">An optional GUIStyle to layout for. If specified, the style's padding value will be added to your sizes &amp; its margin value will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectanlge to put your control in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Reserve layout space for a rectangle with a fixed content area.</para>
      </summary>
      <param name="width">The width of the area you want.</param>
      <param name="height">The height of the area you want.</param>
      <param name="style">An optional GUIStyle to layout for. If specified, the style's padding value will be added to your sizes &amp; its margin value will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectanlge to put your control in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a rectangle with a fixed content area.</para>
      </summary>
      <param name="width">The width of the area you want.</param>
      <param name="height">The height of the area you want.</param>
      <param name="style">An optional GUIStyle to layout for. If specified, the style's padding value will be added to your sizes &amp; its margin value will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectanlge to put your control in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a rectangle with a fixed content area.</para>
      </summary>
      <param name="width">The width of the area you want.</param>
      <param name="height">The height of the area you want.</param>
      <param name="style">An optional GUIStyle to layout for. If specified, the style's padding value will be added to your sizes &amp; its margin value will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The rectanlge to put your control in.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Reserve layout space for a flexible rect.</para>
      </summary>
      <param name="minWidth">The minimum width of the area passed back.</param>
      <param name="maxWidth">The maximum width of the area passed back.</param>
      <param name="minHeight">The minimum width of the area passed back.</param>
      <param name="maxHeight">The maximum width of the area passed back.</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes requested &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>A rectangle with size between minWidth &amp; maxWidth on both axes.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Reserve layout space for a flexible rect.</para>
      </summary>
      <param name="minWidth">The minimum width of the area passed back.</param>
      <param name="maxWidth">The maximum width of the area passed back.</param>
      <param name="minHeight">The minimum width of the area passed back.</param>
      <param name="maxHeight">The maximum width of the area passed back.</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes requested &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>A rectangle with size between minWidth &amp; maxWidth on both axes.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a flexible rect.</para>
      </summary>
      <param name="minWidth">The minimum width of the area passed back.</param>
      <param name="maxWidth">The maximum width of the area passed back.</param>
      <param name="minHeight">The minimum width of the area passed back.</param>
      <param name="maxHeight">The maximum width of the area passed back.</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes requested &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>A rectangle with size between minWidth &amp; maxWidth on both axes.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Reserve layout space for a flexible rect.</para>
      </summary>
      <param name="minWidth">The minimum width of the area passed back.</param>
      <param name="maxWidth">The maximum width of the area passed back.</param>
      <param name="minHeight">The minimum width of the area passed back.</param>
      <param name="maxHeight">The maximum width of the area passed back.</param>
      <param name="style">An optional style. If specified, the style's padding value will be added to the sizes requested &amp; the style's margin values will be used for spacing.</param>
      <param name="options">An optional list of layout options that specify extra layouting properties. Any values passed in here will override settings defined by the style.&lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>A rectangle with size between minWidth &amp; maxWidth on both axes.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUISettings">
      <summary>
        <para>General settings for how the GUI behaves.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.cursorColor">
      <summary>
        <para>The color of the cursor in text fields.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.cursorFlashSpeed">
      <summary>
        <para>The speed of text field cursor flashes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.doubleClickSelectsWord">
      <summary>
        <para>Should double-clicking select words in text fields.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.selectionColor">
      <summary>
        <para>The color of the selection rect in text fields.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.tripleClickSelectsLine">
      <summary>
        <para>Should triple-clicking select whole text in text fields.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUISkin">
      <summary>
        <para>Defines how GUI looks and behaves.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.box">
      <summary>
        <para>Style used by default for GUI.Box controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.button">
      <summary>
        <para>Style used by default for GUI.Button controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.customStyles">
      <summary>
        <para>Array of GUI styles for specific needs.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.font">
      <summary>
        <para>The default font to use for all styles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbar">
      <summary>
        <para>Style used by default for the background part of GUI.HorizontalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarLeftButton">
      <summary>
        <para>Style used by default for the left button on GUI.HorizontalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarRightButton">
      <summary>
        <para>Style used by default for the right button on GUI.HorizontalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarThumb">
      <summary>
        <para>Style used by default for the thumb that is dragged in GUI.HorizontalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalSlider">
      <summary>
        <para>Style used by default for the background part of GUI.HorizontalSlider controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalSliderThumb">
      <summary>
        <para>Style used by default for the thumb that is dragged in GUI.HorizontalSlider controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.label">
      <summary>
        <para>Style used by default for GUI.Label controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.scrollView">
      <summary>
        <para>Style used by default for the background of ScrollView controls (see GUI.BeginScrollView).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.settings">
      <summary>
        <para>Generic settings for how controls should behave with this skin.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.textArea">
      <summary>
        <para>Style used by default for GUI.TextArea controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.textField">
      <summary>
        <para>Style used by default for GUI.TextField controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.toggle">
      <summary>
        <para>Style used by default for GUI.Toggle controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbar">
      <summary>
        <para>Style used by default for the background part of GUI.VerticalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarDownButton">
      <summary>
        <para>Style used by default for the down button on GUI.VerticalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarThumb">
      <summary>
        <para>Style used by default for the thumb that is dragged in GUI.VerticalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarUpButton">
      <summary>
        <para>Style used by default for the up button on GUI.VerticalScrollbar controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalSlider">
      <summary>
        <para>Style used by default for the background part of GUI.VerticalSlider controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalSliderThumb">
      <summary>
        <para>Style used by default for the thumb that is dragged in GUI.VerticalSlider controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.window">
      <summary>
        <para>Style used by default for Window controls (SA GUI.Window).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUISkin.FindStyle(System.String)">
      <summary>
        <para>Try to search for a GUIStyle. This functions returns NULL and does not give an error.</para>
      </summary>
      <param name="styleName"></param>
    </member>
    <member name="M:UnityEngine.GUISkin.GetStyle(System.String)">
      <summary>
        <para>Get a named GUIStyle.</para>
      </summary>
      <param name="styleName"></param>
    </member>
    <member name="T:UnityEngine.GUIStyle">
      <summary>
        <para>Styling information for GUI elements.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.active">
      <summary>
        <para>Rendering settings for when the control is pressed down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.alignment">
      <summary>
        <para>Text alignment.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.border">
      <summary>
        <para>The borders of all background images.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.clipping">
      <summary>
        <para>What to do when the contents to be rendered is too large to fit within the area given.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.contentOffset">
      <summary>
        <para>Pixel offset to apply to the content of this GUIstyle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fixedHeight">
      <summary>
        <para>If non-0, any GUI elements rendered with this style will have the height specified here.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fixedWidth">
      <summary>
        <para>If non-0, any GUI elements rendered with this style will have the width specified here.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.focused">
      <summary>
        <para>Rendering settings for when the element has keyboard focus.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.font">
      <summary>
        <para>The font to use for rendering. If null, the default font for the current GUISkin is used instead.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fontSize">
      <summary>
        <para>The font size to use (for dynamic fonts).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fontStyle">
      <summary>
        <para>The font style to use (for dynamic fonts).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.hover">
      <summary>
        <para>Rendering settings for when the mouse is hovering over the control.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.imagePosition">
      <summary>
        <para>How image and text of the GUIContent is combined.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.lineHeight">
      <summary>
        <para>The height of one line of text with this style, measured in pixels. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.margin">
      <summary>
        <para>The margins between elements rendered in this style and any other GUI elements.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.name">
      <summary>
        <para>The name of this GUIStyle. Used for getting them based on name.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.none">
      <summary>
        <para>Shortcut for an empty GUIStyle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.normal">
      <summary>
        <para>Rendering settings for when the component is displayed normally.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onActive">
      <summary>
        <para>Rendering settings for when the element is turned on and pressed down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onFocused">
      <summary>
        <para>Rendering settings for when the element has keyboard and is turned on.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onHover">
      <summary>
        <para>Rendering settings for when the control is turned on and the mouse is hovering it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onNormal">
      <summary>
        <para>Rendering settings for when the control is turned on.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.overflow">
      <summary>
        <para>Extra space to be added to the background image.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.padding">
      <summary>
        <para>Space from the edge of GUIStyle to the start of the contents.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.richText">
      <summary>
        <para>Enable HTML-style tags for Text Formatting Markup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.stretchHeight">
      <summary>
        <para>Can GUI elements of this style be stretched vertically for better layout?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.stretchWidth">
      <summary>
        <para>Can GUI elements of this style be stretched horizontally for better layouting?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.wordWrap">
      <summary>
        <para>Should the text be wordwrapped?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcHeight(UnityEngine.GUIContent,System.Single)">
      <summary>
        <para>How tall this element will be when rendered with content and a specific width.</para>
      </summary>
      <param name="content"></param>
      <param name="width"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcMinMaxWidth(UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;)">
      <summary>
        <para>Calculate the minimum and maximum widths for this style rendered with content.</para>
      </summary>
      <param name="content"></param>
      <param name="minWidth"></param>
      <param name="maxWidth"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcScreenSize(UnityEngine.Vector2)">
      <summary>
        <para>Calculate the size of an element formatted with this style, and a given space to content.</para>
      </summary>
      <param name="contentSize"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcSize(UnityEngine.GUIContent)">
      <summary>
        <para>Calculate the size of some content if it is rendered with this style.</para>
      </summary>
      <param name="content"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.#ctor">
      <summary>
        <para>Constructor for empty GUIStyle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIStyle.#ctor(UnityEngine.GUIStyle)">
      <summary>
        <para>Constructs GUIStyle identical to given other GUIStyle.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw this GUIStyle on to the screen, internal version.</para>
      </summary>
      <param name="position"></param>
      <param name="isHover"></param>
      <param name="isActive"></param>
      <param name="on"></param>
      <param name="hasKeyboardFocus"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw the GUIStyle with a text string inside.</para>
      </summary>
      <param name="position"></param>
      <param name="text"></param>
      <param name="isHover"></param>
      <param name="isActive"></param>
      <param name="on"></param>
      <param name="hasKeyboardFocus"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw the GUIStyle with an image inside. If the image is too large to fit within the content area of the style it is scaled down.</para>
      </summary>
      <param name="position"></param>
      <param name="image"></param>
      <param name="isHover"></param>
      <param name="isActive"></param>
      <param name="on"></param>
      <param name="hasKeyboardFocus"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Draw the GUIStyle with text and an image inside. If the image is too large to fit within the content area of the style it is scaled down.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="controlID"></param>
      <param name="on"></param>
      <param name="isHover"></param>
      <param name="isActive"></param>
      <param name="hasKeyboardFocus"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Boolean)">
      <summary>
        <para>Draw the GUIStyle with text and an image inside. If the image is too large to fit within the content area of the style it is scaled down.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="controlID"></param>
      <param name="on"></param>
      <param name="isHover"></param>
      <param name="isActive"></param>
      <param name="hasKeyboardFocus"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Draw the GUIStyle with text and an image inside. If the image is too large to fit within the content area of the style it is scaled down.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="controlID"></param>
      <param name="on"></param>
      <param name="isHover"></param>
      <param name="isActive"></param>
      <param name="hasKeyboardFocus"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.DrawCursor(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32)">
      <summary>
        <para>Draw this GUIStyle with selected content.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="controlID"></param>
      <param name="Character"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.DrawWithTextSelection(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Draw this GUIStyle with selected content.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="controlID"></param>
      <param name="firstSelectedCharacter"></param>
      <param name="lastSelectedCharacter"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.GetCursorPixelPosition(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Get the pixel position of a given string index.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="cursorStringIndex"></param>
    </member>
    <member name="M:UnityEngine.GUIStyle.GetCursorStringIndex(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2)">
      <summary>
        <para>Get the cursor position (indexing into contents.text) when the user clicked at cursorPixelPosition.</para>
      </summary>
      <param name="position"></param>
      <param name="content"></param>
      <param name="cursorPixelPosition"></param>
    </member>
    <member name="?:UnityEngine.GUIStyle.implop_GUIStyle(string)(System.String)">
      <summary>
        <para>Get a named GUI style from the current skin.</para>
      </summary>
      <param name="str"></param>
    </member>
    <member name="T:UnityEngine.GUIStyleState">
      <summary>
        <para>Specialized values for the given states used by GUIStyle objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyleState.background">
      <summary>
        <para>The background image used by GUI elements in this given state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyleState.scaledBackgrounds">
      <summary>
        <para>Background images used by this state when on a high-resolution screen. It should either be left empty, or contain a single image that is exactly twice the resolution of background. This is only used by the editor. The field is not copied to player data, and is not accessible from player code.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyleState.textColor">
      <summary>
        <para>The text color used by GUI elements in this state.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUITargetAttribute">
      <summary>
        <para>Allows to control for which display the OnGUI is called.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor">
      <summary>
        <para>Default constructor initializes the attribute for OnGUI to be called for all available displays.</para>
      </summary>
      <param name="displayIndex">Display index.</param>
      <param name="displayIndex1">Display index.</param>
      <param name="displayIndexList">Display index list.</param>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor(System.Int32)">
      <summary>
        <para>Default constructor initializes the attribute for OnGUI to be called for all available displays.</para>
      </summary>
      <param name="displayIndex">Display index.</param>
      <param name="displayIndex1">Display index.</param>
      <param name="displayIndexList">Display index list.</param>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Default constructor initializes the attribute for OnGUI to be called for all available displays.</para>
      </summary>
      <param name="displayIndex">Display index.</param>
      <param name="displayIndex1">Display index.</param>
      <param name="displayIndexList">Display index list.</param>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor(System.Int32,System.Int32,System.Int32[])">
      <summary>
        <para>Default constructor initializes the attribute for OnGUI to be called for all available displays.</para>
      </summary>
      <param name="displayIndex">Display index.</param>
      <param name="displayIndex1">Display index.</param>
      <param name="displayIndexList">Display index list.</param>
    </member>
    <member name="T:UnityEngine.GUIText">
      <summary>
        <para>A text string displayed in a GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.alignment">
      <summary>
        <para>The alignment of the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.anchor">
      <summary>
        <para>The anchor of the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.color">
      <summary>
        <para>The color used to render the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.font">
      <summary>
        <para>The font used for the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.fontSize">
      <summary>
        <para>The font size to use (for dynamic fonts).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.fontStyle">
      <summary>
        <para>The font style to use (for dynamic fonts).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.lineSpacing">
      <summary>
        <para>The line spacing multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.material">
      <summary>
        <para>The Material to use for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.pixelOffset">
      <summary>
        <para>The pixel offset of the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.richText">
      <summary>
        <para>Enable HTML-style tags for Text Formatting Markup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.tabSize">
      <summary>
        <para>The tab width multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIText.text">
      <summary>
        <para>The text to display.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUITexture">
      <summary>
        <para>A texture image used in a 2D GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUITexture.border">
      <summary>
        <para>The border defines the number of pixels from the edge that are not affected by scale.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUITexture.color">
      <summary>
        <para>The color of the GUI texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUITexture.pixelInset">
      <summary>
        <para>Pixel inset used for pixel adjustments for size and position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUITexture.texture">
      <summary>
        <para>The texture used for drawing.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUIUtility">
      <summary>
        <para>Utility class for making new GUI controls.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.hasModalWindow">
      <summary>
        <para>A global property, which is true if a ModalWindow is being displayed, false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.hotControl">
      <summary>
        <para>The controlID of the current hot control.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.keyboardControl">
      <summary>
        <para>The controlID of the control that has keyboard focus.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.systemCopyBuffer">
      <summary>
        <para>Get access to the system-wide pasteboard.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.FocusType)">
      <summary>
        <para>Get a unique ID for a control.</para>
      </summary>
      <param name="focus"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.FocusType,UnityEngine.Rect)">
      <summary>
        <para>Get a unique ID for a control.</para>
      </summary>
      <param name="focus"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(System.Int32,UnityEngine.FocusType)">
      <summary>
        <para>Get a unique ID for a control, using an integer as a hint to help ensure correct matching of IDs to controls.</para>
      </summary>
      <param name="hint"></param>
      <param name="focus"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(System.Int32,UnityEngine.FocusType,UnityEngine.Rect)">
      <summary>
        <para>Get a unique ID for a control, using an integer as a hint to help ensure correct matching of IDs to controls.</para>
      </summary>
      <param name="hint"></param>
      <param name="focus"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.GUIContent,UnityEngine.FocusType)">
      <summary>
        <para>Get a unique ID for a control, using a the label content as a hint to help ensure correct matching of IDs to controls.</para>
      </summary>
      <param name="contents"></param>
      <param name="focus"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.Rect)">
      <summary>
        <para>Get a unique ID for a control, using a the label content as a hint to help ensure correct matching of IDs to controls.</para>
      </summary>
      <param name="contents"></param>
      <param name="focus"></param>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetStateObject(System.Type,System.Int32)">
      <summary>
        <para>Get a state object from a controlID.</para>
      </summary>
      <param name="t"></param>
      <param name="controlID"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GUIToScreenPoint(UnityEngine.Vector2)">
      <summary>
        <para>Convert a point from GUI position to screen space.</para>
      </summary>
      <param name="guiPoint"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.QueryStateObject(System.Type,System.Int32)">
      <summary>
        <para>Get an existing state object from a controlID.</para>
      </summary>
      <param name="t"></param>
      <param name="controlID"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.RotateAroundPivot(System.Single,UnityEngine.Vector2)">
      <summary>
        <para>Helper function to rotate the GUI around a point.</para>
      </summary>
      <param name="angle"></param>
      <param name="pivotPoint"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScaleAroundPivot(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Helper function to scale the GUI around a point.</para>
      </summary>
      <param name="scale"></param>
      <param name="pivotPoint"></param>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScreenToGUIPoint(UnityEngine.Vector2)">
      <summary>
        <para>Convert a point from screen space to GUI position.</para>
      </summary>
      <param name="screenPoint"></param>
    </member>
    <member name="T:UnityEngine.Gyroscope">
      <summary>
        <para>Interface into the Gyroscope.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.attitude">
      <summary>
        <para>Returns the attitude (ie, orientation in space) of the device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.enabled">
      <summary>
        <para>Sets or retrieves the enabled status of this gyroscope.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.gravity">
      <summary>
        <para>Returns the gravity acceleration vector expressed in the device's reference frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.rotationRate">
      <summary>
        <para>Returns rotation rate as measured by the device's gyroscope.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.rotationRateUnbiased">
      <summary>
        <para>Returns unbiased rotation rate as measured by the device's gyroscope.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.updateInterval">
      <summary>
        <para>Sets or retrieves gyroscope interval in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Gyroscope.userAcceleration">
      <summary>
        <para>Returns the acceleration that the user is giving to the device.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Handheld">
      <summary>
        <para>Interface into functionality unique to handheld devices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Handheld.use32BitDisplayBuffer">
      <summary>
        <para>Determines whether or not a 32-bit display buffer will be used.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Handheld.GetActivityIndicatorStyle">
      <summary>
        <para>Gets the current activity indicator style.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Handheld.PlayFullScreenMovie(System.String)">
      <summary>
        <para>Plays a full-screen movie.</para>
      </summary>
      <param name="path">Filesystem path to the movie file.</param>
      <param name="bgColor">Background color.</param>
      <param name="controlMode">How the playback controls are to be displayed.</param>
      <param name="scalingMode">How the movie is to be scaled to fit the screen.</param>
    </member>
    <member name="M:UnityEngine.Handheld.PlayFullScreenMovie(System.String,UnityEngine.Color)">
      <summary>
        <para>Plays a full-screen movie.</para>
      </summary>
      <param name="path">Filesystem path to the movie file.</param>
      <param name="bgColor">Background color.</param>
      <param name="controlMode">How the playback controls are to be displayed.</param>
      <param name="scalingMode">How the movie is to be scaled to fit the screen.</param>
    </member>
    <member name="M:UnityEngine.Handheld.PlayFullScreenMovie(System.String,UnityEngine.Color,UnityEngine.FullScreenMovieControlMode)">
      <summary>
        <para>Plays a full-screen movie.</para>
      </summary>
      <param name="path">Filesystem path to the movie file.</param>
      <param name="bgColor">Background color.</param>
      <param name="controlMode">How the playback controls are to be displayed.</param>
      <param name="scalingMode">How the movie is to be scaled to fit the screen.</param>
    </member>
    <member name="M:UnityEngine.Handheld.PlayFullScreenMovie(System.String,UnityEngine.Color,UnityEngine.FullScreenMovieControlMode,UnityEngine.FullScreenMovieScalingMode)">
      <summary>
        <para>Plays a full-screen movie.</para>
      </summary>
      <param name="path">Filesystem path to the movie file.</param>
      <param name="bgColor">Background color.</param>
      <param name="controlMode">How the playback controls are to be displayed.</param>
      <param name="scalingMode">How the movie is to be scaled to fit the screen.</param>
    </member>
    <member name="M:UnityEngine.Handheld.SetActivityIndicatorStyle">
      <summary>
        <para>Sets the desired activity indicator style.</para>
      </summary>
      <param name="style"></param>
    </member>
    <member name="M:UnityEngine.Handheld.SetActivityIndicatorStyle(UnityEngine.AndroidActivityIndicatorStyle)">
      <summary>
        <para>Sets the desired activity indicator style.</para>
      </summary>
      <param name="style"></param>
    </member>
    <member name="M:UnityEngine.Handheld.SetActivityIndicatorStyle(UnityEngine.TizenActivityIndicatorStyle)">
      <summary>
        <para>Sets the desired activity indicator style.</para>
      </summary>
      <param name="style"></param>
    </member>
    <member name="M:UnityEngine.Handheld.StartActivityIndicator">
      <summary>
        <para>Starts os activity indicator.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Handheld.StopActivityIndicator">
      <summary>
        <para>Stops os activity indicator.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Handheld.Vibrate">
      <summary>
        <para>Triggers device vibration.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Hash128">
      <summary>
        <para>Represent the hash value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Hash128.isValid">
      <summary>
        <para>Get if the hash value is valid or not. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Hash128.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
      <summary>
        <para>Construct the Hash128.</para>
      </summary>
      <param name="u32_0"></param>
      <param name="u32_1"></param>
      <param name="u32_2"></param>
      <param name="u32_3"></param>
    </member>
    <member name="M:UnityEngine.Hash128.Parse(System.String)">
      <summary>
        <para>Convert the input string to Hash128.</para>
      </summary>
      <param name="hashString"></param>
    </member>
    <member name="M:UnityEngine.Hash128.ToString">
      <summary>
        <para>Convert Hash128 to string.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HeaderAttribute">
      <summary>
        <para>Use this PropertyAttribute to add a header above some fields in the Inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeaderAttribute.header">
      <summary>
        <para>The header text.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HeaderAttribute.#ctor(System.String)">
      <summary>
        <para>Add a header above some fields in the Inspector.</para>
      </summary>
      <param name="header">The header text.</param>
    </member>
    <member name="T:UnityEngine.HelpURLAttribute">
      <summary>
        <para>Provide a custom documentation URL for a class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HelpURLAttribute.#ctor(System.String)">
      <summary>
        <para>Initialize the HelpURL attribute with a documentation url.</para>
      </summary>
      <param name="url">The custom documentation URL for this class.</param>
    </member>
    <member name="P:UnityEngine.HelpURLAttribute.URL">
      <summary>
        <para>The documentation URL specified for this class.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HideFlags">
      <summary>
        <para>Bit mask that controls object destruction, saving and visibility in inspectors.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.DontSave">
      <summary>
        <para>The object will not be saved to the scene. It will not be destroyed when a new scene is loaded. It is a shortcut for HideFlags.DontSaveInBuild | HideFlags.DontSaveInEditor | HideFlags.DontUnloadUnusedAsset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.DontSaveInBuild">
      <summary>
        <para>The object will not be saved when building a player.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.DontSaveInEditor">
      <summary>
        <para>The object will not be saved to the scene in the editor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.DontUnloadUnusedAsset">
      <summary>
        <para>The object will not be unloaded by Resources.UnloadUnusedAssets.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.HideAndDontSave">
      <summary>
        <para>A combination of not shown in the hierarchy, not saved to to scenes and not unloaded by The object will not be unloaded by Resources.UnloadUnusedAssets.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.HideInHierarchy">
      <summary>
        <para>The object will not appear in the hierarchy.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.HideInInspector">
      <summary>
        <para>It is not possible to view it in the inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.None">
      <summary>
        <para>A normal, visible object. This is the default.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HideFlags.NotEditable">
      <summary>
        <para>The object is not be editable in the inspector.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HideInInspector">
      <summary>
        <para>Makes a variable not show up in the inspector but be serialized.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HingeJoint">
      <summary>
        <para>The HingeJoint groups together 2 rigid bodies, constraining them to move like connected by a hinge.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.angle">
      <summary>
        <para>The current angle in degrees of the joint relative to its rest position. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.limits">
      <summary>
        <para>Limit of angular rotation (in degrees) on the hinge joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.motor">
      <summary>
        <para>The motor will apply a force up to a maximum force to achieve the target velocity in degrees per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.spring">
      <summary>
        <para>The spring attempts to reach a target angle by adding spring and damping forces.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.useLimits">
      <summary>
        <para>Enables the joint's limits. Disabled by default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.useMotor">
      <summary>
        <para>Enables the joint's motor. Disabled by default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.useSpring">
      <summary>
        <para>Enables the joint's spring. Disabled by default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint.velocity">
      <summary>
        <para>The angular velocity of the joint in degrees per second. (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HingeJoint2D">
      <summary>
        <para>Joint that allows a Rigidbody2D object to rotate around a point in space or a point on another object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.jointAngle">
      <summary>
        <para>The current joint angle (in degrees) with respect to the reference angle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.jointSpeed">
      <summary>
        <para>The current joint speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.limits">
      <summary>
        <para>Limit of angular rotation (in degrees) on the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.limitState">
      <summary>
        <para>Gets the state of the joint limit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.motor">
      <summary>
        <para>Parameters for the motor force applied to the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.referenceAngle">
      <summary>
        <para>The angle (in degrees) referenced between the two bodies used as the constraint for the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.useLimits">
      <summary>
        <para>Should limits be placed on the range of rotation?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.useMotor">
      <summary>
        <para>Should the joint be rotated automatically by a motor torque?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HingeJoint2D.GetMotorTorque(System.Single)">
      <summary>
        <para>Gets the motor torque of the joint given the specified timestep.</para>
      </summary>
      <param name="timeStep">The time to calculate the motor torque for.</param>
    </member>
    <member name="T:UnityEngine.HorizontalWrapMode">
      <summary>
        <para>Wrapping modes for text that reaches the horizontal boundary.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HorizontalWrapMode.Overflow">
      <summary>
        <para>Text can exceed the horizontal boundary.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HorizontalWrapMode.Wrap">
      <summary>
        <para>Text will word-wrap when reaching the horizontal boundary.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HostData">
      <summary>
        <para>This is the data structure for holding individual host information.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.comment">
      <summary>
        <para>A miscellaneous comment (can hold data).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.connectedPlayers">
      <summary>
        <para>Currently connected players.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.gameName">
      <summary>
        <para>The name of the game (like John Doe's Game).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.gameType">
      <summary>
        <para>The type of the game (like "MyUniqueGameType").</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.guid">
      <summary>
        <para>The GUID of the host, needed when connecting with NAT punchthrough.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.ip">
      <summary>
        <para>Server IP address.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.passwordProtected">
      <summary>
        <para>Does the server require a password?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.playerLimit">
      <summary>
        <para>Maximum players limit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.port">
      <summary>
        <para>Server port.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HostData.useNat">
      <summary>
        <para>Does this server require NAT punchthrough?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanBodyBones">
      <summary>
        <para>Human Body Bones.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Chest">
      <summary>
        <para>This is the Chest bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Head">
      <summary>
        <para>This is the Head bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Hips">
      <summary>
        <para>This is the Hips bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Jaw">
      <summary>
        <para>This is the Jaw bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LastBone">
      <summary>
        <para>This is the Last bone index delimiter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftEye">
      <summary>
        <para>This is the Left Eye bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftFoot">
      <summary>
        <para>This is the Left Ankle bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftHand">
      <summary>
        <para>This is the Left Wrist bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftIndexDistal">
      <summary>
        <para>This is the left index 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftIndexIntermediate">
      <summary>
        <para>This is the left index 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftIndexProximal">
      <summary>
        <para>This is the left index 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLittleDistal">
      <summary>
        <para>This is the left little 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLittleIntermediate">
      <summary>
        <para>This is the left little 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLittleProximal">
      <summary>
        <para>This is the left little 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLowerArm">
      <summary>
        <para>This is the Left Elbow bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLowerLeg">
      <summary>
        <para>This is the Left Knee bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftMiddleDistal">
      <summary>
        <para>This is the left middle 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftMiddleIntermediate">
      <summary>
        <para>This is the left middle 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftMiddleProximal">
      <summary>
        <para>This is the left middle 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftRingDistal">
      <summary>
        <para>This is the left ring 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftRingIntermediate">
      <summary>
        <para>This is the left ring 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftRingProximal">
      <summary>
        <para>This is the left ring 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftShoulder">
      <summary>
        <para>This is the Left Shoulder bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftThumbDistal">
      <summary>
        <para>This is the left thumb 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftThumbIntermediate">
      <summary>
        <para>This is the left thumb 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftThumbProximal">
      <summary>
        <para>This is the left thumb 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftToes">
      <summary>
        <para>This is the Left Toes bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftUpperArm">
      <summary>
        <para>This is the Left Upper Arm bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftUpperLeg">
      <summary>
        <para>This is the Left Upper Leg bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Neck">
      <summary>
        <para>This is the Neck bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightEye">
      <summary>
        <para>This is the Right Eye bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightFoot">
      <summary>
        <para>This is the Right Ankle bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightHand">
      <summary>
        <para>This is the Right Wrist bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightIndexDistal">
      <summary>
        <para>This is the right index 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightIndexIntermediate">
      <summary>
        <para>This is the right index 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightIndexProximal">
      <summary>
        <para>This is the right index 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLittleDistal">
      <summary>
        <para>This is the right little 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLittleIntermediate">
      <summary>
        <para>This is the right little 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLittleProximal">
      <summary>
        <para>This is the right little 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLowerArm">
      <summary>
        <para>This is the Right Elbow bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLowerLeg">
      <summary>
        <para>This is the Right Knee bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightMiddleDistal">
      <summary>
        <para>This is the right middle 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightMiddleIntermediate">
      <summary>
        <para>This is the right middle 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightMiddleProximal">
      <summary>
        <para>This is the right middle 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightRingDistal">
      <summary>
        <para>This is the right ring 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightRingIntermediate">
      <summary>
        <para>This is the right ring 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightRingProximal">
      <summary>
        <para>This is the right ring 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightShoulder">
      <summary>
        <para>This is the Right Shoulder bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightThumbDistal">
      <summary>
        <para>This is the right thumb 3rd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightThumbIntermediate">
      <summary>
        <para>This is the right thumb 2nd phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightThumbProximal">
      <summary>
        <para>This is the right thumb 1st phalange.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightToes">
      <summary>
        <para>This is the Right Toes bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightUpperArm">
      <summary>
        <para>This is the Right Upper Arm bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightUpperLeg">
      <summary>
        <para>This is the Right Upper Leg bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Spine">
      <summary>
        <para>This is the first Spine bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.UpperChest">
      <summary>
        <para>This is the Upper Chest bone.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanBone">
      <summary>
        <para>The mapping between a bone in the model and the conceptual bone in the Mecanim human anatomy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanBone.boneName">
      <summary>
        <para>The name of the bone to which the Mecanim human bone is mapped.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanBone.humanName">
      <summary>
        <para>The name of the Mecanim human bone to which the bone from the model is mapped.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBone.limit">
      <summary>
        <para>The rotation limits that define the muscle for this bone.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanDescription">
      <summary>
        <para>Class that holds humanoid avatar parameters to pass to the AvatarBuilder.BuildHumanAvatar function.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.armStretch">
      <summary>
        <para>Amount by which the arm's length is allowed to stretch when using IK.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.feetSpacing">
      <summary>
        <para>Modification to the minimum distance between the feet of a humanoid model.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.hasTranslationDoF">
      <summary>
        <para>True for any human that has a translation Degree of Freedom (DoF). It is set to false by default.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanDescription.human">
      <summary>
        <para>Mapping between Mecanim bone names and bone names in the rig.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.legStretch">
      <summary>
        <para>Amount by which the leg's length is allowed to stretch when using IK.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.lowerArmTwist">
      <summary>
        <para>Defines how the lower arm's roll/twisting is distributed between the elbow and wrist joints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.lowerLegTwist">
      <summary>
        <para>Defines how the lower leg's roll/twisting is distributed between the knee and ankle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanDescription.skeleton">
      <summary>
        <para>List of bone Transforms to include in the model.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.upperArmTwist">
      <summary>
        <para>Defines how the lower arm's roll/twisting is distributed between the shoulder and elbow joints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.upperLegTwist">
      <summary>
        <para>Defines how the upper leg's roll/twisting is distributed between the thigh and knee joints.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanLimit">
      <summary>
        <para>This class stores the rotation limits that define the muscle for a single human bone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.axisLength">
      <summary>
        <para>Length of the bone to which the limit is applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.center">
      <summary>
        <para>The default orientation of a bone when no muscle action is applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.max">
      <summary>
        <para>The maximum rotation away from the initial value that this muscle can apply.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.min">
      <summary>
        <para>The maximum negative rotation away from the initial value that this muscle can apply.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.useDefaultValues">
      <summary>
        <para>Should this limit use the default values?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanPose">
      <summary>
        <para>Retargetable humanoid pose.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPose.bodyPosition">
      <summary>
        <para>The human body position for that pose.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPose.bodyRotation">
      <summary>
        <para>The human body orientation for that pose.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPose.muscles">
      <summary>
        <para>The array of muscle values for that pose.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanPoseHandler">
      <summary>
        <para>A handler that lets you read or write a HumanPose from or to a humanoid avatar skeleton hierarchy.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.#ctor(UnityEngine.Avatar,UnityEngine.Transform)">
      <summary>
        <para>Creates a human pose handler from an avatar and a root transform.</para>
      </summary>
      <param name="avatar">The avatar that defines the humanoid rig on skeleton hierarchy with root as the top most parent.</param>
      <param name="root">The top most node of the skeleton hierarchy defined in humanoid avatar.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.GetHumanPose(UnityEngine.HumanPose&amp;)">
      <summary>
        <para>Gets a human pose from the handled avatar skeleton.</para>
      </summary>
      <param name="humanPose">The output human pose.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.SetHumanPose(UnityEngine.HumanPose&amp;)">
      <summary>
        <para>Sets a human pose on the handled avatar skeleton.</para>
      </summary>
      <param name="humanPose">The human pose to be set.</param>
    </member>
    <member name="T:UnityEngine.HumanTrait">
      <summary>
        <para>Details of all the human bone and muscle types defined by Mecanim.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanTrait.BoneCount">
      <summary>
        <para>The number of human bone types defined by Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.BoneFromMuscle(System.Int32)">
      <summary>
        <para>Return the bone to which a particular muscle is connected.</para>
      </summary>
      <param name="i">Muscle index.</param>
    </member>
    <member name="P:UnityEngine.HumanTrait.BoneName">
      <summary>
        <para>Array of the names of all human bone types defined by Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetMuscleDefaultMax(System.Int32)">
      <summary>
        <para>Get the default maximum value of rotation for a muscle in degrees.</para>
      </summary>
      <param name="i">Muscle index.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetMuscleDefaultMin(System.Int32)">
      <summary>
        <para>Get the default minimum value of rotation for a muscle in degrees.</para>
      </summary>
      <param name="i">Muscle index.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetParentBone(System.Int32)">
      <summary>
        <para>Returns parent humanoid bone index of a bone.</para>
      </summary>
      <param name="i">Humanoid bone index to get parent from.</param>
      <returns>
        <para>Humanoid bone index of parent.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.HumanTrait.MuscleCount">
      <summary>
        <para>The number of human muscle types defined by Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.MuscleFromBone(System.Int32,System.Int32)">
      <summary>
        <para>Obtain the muscle index for a particular bone index and "degree of freedom".</para>
      </summary>
      <param name="i">Bone index.</param>
      <param name="dofIndex">Number representing a "degree of freedom": 0 for X-Axis, 1 for Y-Axis, 2 for Z-Axis.</param>
    </member>
    <member name="P:UnityEngine.HumanTrait.MuscleName">
      <summary>
        <para>Array of the names of all human muscle types defined by Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.RequiredBone(System.Int32)">
      <summary>
        <para>Is the bone a member of the minimal set of bones that Mecanim requires for a human model?</para>
      </summary>
      <param name="i">Index of the bone to test.</param>
    </member>
    <member name="P:UnityEngine.HumanTrait.RequiredBoneCount">
      <summary>
        <para>The number of bone types that are required by Mecanim for any human model.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.ICanvasRaycastFilter">
      <summary>
        <para>This element can filter raycasts. If the top level element is hit it can further 'check' if the location is valid.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ICanvasRaycastFilter.IsRaycastLocationValid(UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>Given a point and a camera is the raycast valid.</para>
      </summary>
      <param name="sp">Screen position.</param>
      <param name="eventCamera">Raycast camera.</param>
      <returns>
        <para>Valid.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.ILogger">
      <summary>
        <para>Interface for custom logger implementation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ILogger.filterLogType">
      <summary>
        <para>To selective enable debug log message.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ILogger.logEnabled">
      <summary>
        <para>To runtime toggle debug logging [ON/OFF].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ILogger.logHandler">
      <summary>
        <para>Set Logger.ILogHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ILogger.IsLogTypeAllowed(UnityEngine.LogType)">
      <summary>
        <para>Check logging is enabled based on the LogType.</para>
      </summary>
      <param name="logType"></param>
      <returns>
        <para>Retrun true in case logs of LogType will be logged otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ILogger.Log(UnityEngine.LogType,System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.Log(UnityEngine.LogType,System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.Log(UnityEngine.LogType,System.String,System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.Log(UnityEngine.LogType,System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.Log(System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.Log(System.String,System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.Log(System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType"></param>
      <param name="message"></param>
      <param name="context"></param>
      <param name="tag"></param>
    </member>
    <member name="M:UnityEngine.ILogger.LogError(System.String,System.Object)">
      <summary>
        <para>A variant of ILogger.Log that logs an error message.</para>
      </summary>
      <param name="tag"></param>
      <param name="message"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEngine.ILogger.LogError(System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of ILogger.Log that logs an error message.</para>
      </summary>
      <param name="tag"></param>
      <param name="message"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEngine.ILogger.LogException(System.Exception)">
      <summary>
        <para>A variant of ILogger.Log that logs an exception message.</para>
      </summary>
      <param name="exception"></param>
    </member>
    <member name="M:UnityEngine.ILogger.LogFormat(UnityEngine.LogType,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted message.</para>
      </summary>
      <param name="logType"></param>
      <param name="format"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.ILogger.LogWarning(System.String,System.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an warning message.</para>
      </summary>
      <param name="tag"></param>
      <param name="message"></param>
      <param name="context"></param>
    </member>
    <member name="M:UnityEngine.ILogger.LogWarning(System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an warning message.</para>
      </summary>
      <param name="tag"></param>
      <param name="message"></param>
      <param name="context"></param>
    </member>
    <member name="?:UnityEngine.ILogHandler">
      <summary>
        <para>Interface for custom log handler implementation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ILogHandler.LogException(System.Exception,UnityEngine.Object)">
      <summary>
        <para>A variant of ILogHandler.LogFormat that logs an exception message.</para>
      </summary>
      <param name="exception">Runtime Exception.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.ILogHandler.LogFormat(UnityEngine.LogType,UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted message.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
    </member>
    <member name="T:UnityEngine.ImageEffectAllowedInSceneView">
      <summary>
        <para>Any Image Effect with this attribute can be rendered into the scene view camera.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ImageEffectOpaque">
      <summary>
        <para>Any Image Effect with this attribute will be rendered after opaque geometry but before transparent geometry.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ImageEffectTransformsToLDR">
      <summary>
        <para>When using HDR rendering it can sometime be desirable to switch to LDR rendering during ImageEffect rendering.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ImagePosition">
      <summary>
        <para>How image and text is placed inside GUIStyle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.ImageAbove">
      <summary>
        <para>Image is above the text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.ImageLeft">
      <summary>
        <para>Image is to the left of the text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.ImageOnly">
      <summary>
        <para>Only the image is displayed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.TextOnly">
      <summary>
        <para>Only the text is displayed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.IMECompositionMode">
      <summary>
        <para>Controls IME input.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.IMECompositionMode.Auto">
      <summary>
        <para>Enable IME input only when a text field is selected (default).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.IMECompositionMode.Off">
      <summary>
        <para>Disable IME input.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.IMECompositionMode.On">
      <summary>
        <para>Enable IME input.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Input">
      <summary>
        <para>Interface into the Input system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.acceleration">
      <summary>
        <para>Last measured linear acceleration of a device in three-dimensional space. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.accelerationEventCount">
      <summary>
        <para>Number of acceleration measurements which occurred during last frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.accelerationEvents">
      <summary>
        <para>Returns list of acceleration measurements which occurred during the last frame. (Read Only) (Allocates temporary variables).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.anyKey">
      <summary>
        <para>Is any key or mouse button currently held down? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.anyKeyDown">
      <summary>
        <para>Returns true the first frame the user hits any key or mouse button. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.backButtonLeavesApp">
      <summary>
        <para>Should  Back button quit the application?

Only usable on Android, Windows Phone or Windows Tablets.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.compass">
      <summary>
        <para>Property for accessing compass (handheld devices only). (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.compensateSensors">
      <summary>
        <para>This property controls if input sensors should be compensated for screen orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.compositionCursorPos">
      <summary>
        <para>The current text input position used by IMEs to open windows.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.compositionString">
      <summary>
        <para>The current IME composition string being typed by the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.deviceOrientation">
      <summary>
        <para>Device physical orientation as reported by OS. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.eatKeyPressOnTextFieldFocus">
      <summary>
        <para>Property indicating whether keypresses are eaten by a textinput if it has focus (default true).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.gyro">
      <summary>
        <para>Returns default gyroscope.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.imeCompositionMode">
      <summary>
        <para>Controls enabling and disabling of IME input composition.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.imeIsSelected">
      <summary>
        <para>Does the user have an IME keyboard input source selected?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.inputString">
      <summary>
        <para>Returns the keyboard input entered this frame. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.location">
      <summary>
        <para>Property for accessing device location (handheld devices only). (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.mousePosition">
      <summary>
        <para>The current mouse position in pixel coordinates. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.mousePresent">
      <summary>
        <para>Indicates if a mouse device is detected.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.mouseScrollDelta">
      <summary>
        <para>The current mouse scroll delta. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.multiTouchEnabled">
      <summary>
        <para>Property indicating whether the system handles multiple touches.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.simulateMouseWithTouches">
      <summary>
        <para>Enables/Disables mouse simulation with touches. By default this option is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.stylusTouchSupported">
      <summary>
        <para>Returns true when Stylus Touch is supported by a device or platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.touchCount">
      <summary>
        <para>Number of touches. Guaranteed not to change throughout the frame. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.touches">
      <summary>
        <para>Returns list of objects representing status of all touches during last frame. (Read Only) (Allocates temporary variables).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.touchPressureSupported">
      <summary>
        <para>Bool value which let's users check if touch pressure is supported.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Input.touchSupported">
      <summary>
        <para>Returns whether the device on which application is currently running supports touch input.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Input.GetAccelerationEvent(System.Int32)">
      <summary>
        <para>Returns specific acceleration measurement which occurred during last frame. (Does not allocate temporary variables).</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.Input.GetAxis(System.String)">
      <summary>
        <para>Returns the value of the virtual axis identified by axisName.</para>
      </summary>
      <param name="axisName"></param>
    </member>
    <member name="M:UnityEngine.Input.GetAxisRaw(System.String)">
      <summary>
        <para>Returns the value of the virtual axis identified by axisName with no smoothing filtering applied.</para>
      </summary>
      <param name="axisName"></param>
    </member>
    <member name="M:UnityEngine.Input.GetButton(System.String)">
      <summary>
        <para>Returns true while the virtual button identified by buttonName is held down.</para>
      </summary>
      <param name="buttonName"></param>
    </member>
    <member name="M:UnityEngine.Input.GetButtonDown(System.String)">
      <summary>
        <para>Returns true during the frame the user pressed down the virtual button identified by buttonName.</para>
      </summary>
      <param name="buttonName"></param>
    </member>
    <member name="M:UnityEngine.Input.GetButtonUp(System.String)">
      <summary>
        <para>Returns true the first frame the user releases the virtual button identified by buttonName.</para>
      </summary>
      <param name="buttonName"></param>
    </member>
    <member name="M:UnityEngine.Input.GetJoystickNames">
      <summary>
        <para>Returns an array of strings describing the connected joysticks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Input.GetKey(System.String)">
      <summary>
        <para>Returns true while the user holds down the key identified by name. Think auto fire.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Input.GetKey(UnityEngine.KeyCode)">
      <summary>
        <para>Returns true while the user holds down the key identified by the key KeyCode enum parameter.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEngine.Input.GetKeyDown(System.String)">
      <summary>
        <para>Returns true during the frame the user starts pressing down the key identified by name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Input.GetKeyDown(UnityEngine.KeyCode)">
      <summary>
        <para>Returns true during the frame the user starts pressing down the key identified by the key KeyCode enum parameter.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEngine.Input.GetKeyUp(System.String)">
      <summary>
        <para>Returns true during the frame the user releases the key identified by name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Input.GetKeyUp(UnityEngine.KeyCode)">
      <summary>
        <para>Returns true during the frame the user releases the key identified by the key KeyCode enum parameter.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEngine.Input.GetMouseButton(System.Int32)">
      <summary>
        <para>Returns whether the given mouse button is held down.</para>
      </summary>
      <param name="button"></param>
    </member>
    <member name="M:UnityEngine.Input.GetMouseButtonDown(System.Int32)">
      <summary>
        <para>Returns true during the frame the user pressed the given mouse button.</para>
      </summary>
      <param name="button"></param>
    </member>
    <member name="M:UnityEngine.Input.GetMouseButtonUp(System.Int32)">
      <summary>
        <para>Returns true during the frame the user releases the given mouse button.</para>
      </summary>
      <param name="button"></param>
    </member>
    <member name="M:UnityEngine.Input.GetTouch(System.Int32)">
      <summary>
        <para>Returns object representing status of a specific touch. (Does not allocate temporary variables).</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.Input.IsJoystickPreconfigured(System.String)">
      <summary>
        <para>Determine whether a particular joystick model has been preconfigured by Unity. (Linux-only).</para>
      </summary>
      <param name="joystickName">The name of the joystick to check (returned by Input.GetJoystickNames).</param>
      <returns>
        <para>True if the joystick layout has been preconfigured; false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Input.ResetInputAxes">
      <summary>
        <para>Resets all input. After ResetInputAxes all axes return to 0 and all buttons return to 0 for one frame.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ActivityIndicatorStyle">
      <summary>
        <para>ActivityIndicator Style (iOS Specific).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ActivityIndicatorStyle.DontShow">
      <summary>
        <para>Do not show ActivityIndicator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ActivityIndicatorStyle.Gray">
      <summary>
        <para>The standard gray style of indicator (UIActivityIndicatorViewStyleGray).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ActivityIndicatorStyle.White">
      <summary>
        <para>The standard white style of indicator (UIActivityIndicatorViewStyleWhite).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ActivityIndicatorStyle.WhiteLarge">
      <summary>
        <para>The large white style of indicator (UIActivityIndicatorViewStyleWhiteLarge).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADBannerView">
      <summary>
        <para>ADBannerView is a wrapper around the ADBannerView class found in the Apple iAd framework and is only available on iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADBannerView.layout">
      <summary>
        <para>Banner layout.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADBannerView.loaded">
      <summary>
        <para>Checks if banner contents are loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADBannerView.position">
      <summary>
        <para>The position of the banner view.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADBannerView.size">
      <summary>
        <para>The size of the banner view.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADBannerView.visible">
      <summary>
        <para>Banner visibility. Initially banner is not visible.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADBannerView.BannerFailedToLoadDelegate">
      <summary>
        <para>Will be fired when banner ad failed to load.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADBannerView.BannerWasClickedDelegate">
      <summary>
        <para>Will be fired when banner was clicked.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADBannerView.BannerWasLoadedDelegate">
      <summary>
        <para>Will be fired when banner loaded new ad.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.ADBannerView.#ctor(UnityEngine.iOS.ADBannerView/Type,UnityEngine.iOS.ADBannerView/Layout)">
      <summary>
        <para>Creates a banner view with given type and auto-layout params.</para>
      </summary>
      <param name="type"></param>
      <param name="layout"></param>
    </member>
    <member name="M:UnityEngine.iOS.ADBannerView.IsAvailable(UnityEngine.iOS.ADBannerView/Type)">
      <summary>
        <para>Checks if the banner type is available (e.g. MediumRect is available only starting with ios6).</para>
      </summary>
      <param name="type"></param>
    </member>
    <member name="T:UnityEngine.iOS.ADBannerView.Layout">
      <summary>
        <para>Specifies how banner should be layed out on screen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.Bottom">
      <summary>
        <para>Traditional Banner: align to screen bottom.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.BottomCenter">
      <summary>
        <para>Rect Banner: align to screen bottom, placing at the center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.BottomLeft">
      <summary>
        <para>Rect Banner: place in bottom-left corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.BottomRight">
      <summary>
        <para>Rect Banner: place in bottom-right corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.Center">
      <summary>
        <para>Rect Banner: place exactly at screen center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.CenterLeft">
      <summary>
        <para>Rect Banner: align to screen left, placing at the center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.CenterRight">
      <summary>
        <para>Rect Banner: align to screen right, placing at the center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.Manual">
      <summary>
        <para>Completely manual positioning.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.Top">
      <summary>
        <para>Traditional Banner: align to screen top.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.TopCenter">
      <summary>
        <para>Rect Banner: align to screen top, placing at the center.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.TopLeft">
      <summary>
        <para>Rect Banner: place in top-left corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Layout.TopRight">
      <summary>
        <para>Rect Banner: place in top-right corner.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADBannerView.Type">
      <summary>
        <para>The type of the banner view.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Type.Banner">
      <summary>
        <para>Traditional Banner (it takes full screen width).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.ADBannerView.Type.MediumRect">
      <summary>
        <para>Rect Banner (300x250).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADInterstitialAd">
      <summary>
        <para>ADInterstitialAd is a wrapper around the ADInterstitialAd class found in the Apple iAd framework and is only available on iPad.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADInterstitialAd.isAvailable">
      <summary>
        <para>Checks if InterstitialAd is available (it is available on iPad since iOS 4.3, and on iPhone since iOS 7.0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.ADInterstitialAd.loaded">
      <summary>
        <para>Has the interstitial ad object downloaded an advertisement? (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.ADInterstitialAd.#ctor">
      <summary>
        <para>Creates an interstitial ad.</para>
      </summary>
      <param name="autoReload"></param>
    </member>
    <member name="M:UnityEngine.iOS.ADInterstitialAd.#ctor(System.Boolean)">
      <summary>
        <para>Creates an interstitial ad.</para>
      </summary>
      <param name="autoReload"></param>
    </member>
    <member name="T:UnityEngine.iOS.ADInterstitialAd.InterstitialWasLoadedDelegate">
      <summary>
        <para>Will be called when ad is ready to be shown.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.ADInterstitialAd.InterstitialWasViewedDelegate">
      <summary>
        <para>Will be called when user viewed ad contents: i.e. they went past the initial screen. Please note that it is impossible to determine if they clicked on any links in ad sequences that follows the initial screen.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.ADInterstitialAd.ReloadAd">
      <summary>
        <para>Reload advertisement.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.ADInterstitialAd.Show">
      <summary>
        <para>Shows full-screen advertisement to user.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.CalendarIdentifier">
      <summary>
        <para>Specify calendar types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.BuddhistCalendar">
      <summary>
        <para>Identifies the Buddhist calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.ChineseCalendar">
      <summary>
        <para>Identifies the Chinese calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.GregorianCalendar">
      <summary>
        <para>Identifies the Gregorian calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.HebrewCalendar">
      <summary>
        <para>Identifies the Hebrew calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.IndianCalendar">
      <summary>
        <para>Identifies the Indian calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.IslamicCalendar">
      <summary>
        <para>Identifies the Islamic calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.IslamicCivilCalendar">
      <summary>
        <para>Identifies the Islamic civil calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.ISO8601Calendar">
      <summary>
        <para>Identifies the ISO8601.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.JapaneseCalendar">
      <summary>
        <para>Identifies the Japanese calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.PersianCalendar">
      <summary>
        <para>Identifies the Persian calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarIdentifier.RepublicOfChinaCalendar">
      <summary>
        <para>Identifies the Republic of China (Taiwan) calendar.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.CalendarUnit">
      <summary>
        <para>Specify calendrical units.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Day">
      <summary>
        <para>Specifies the day unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Era">
      <summary>
        <para>Specifies the era unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Hour">
      <summary>
        <para>Specifies the hour unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Minute">
      <summary>
        <para>Specifies the minute unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Month">
      <summary>
        <para>Specifies the month unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Quarter">
      <summary>
        <para>Specifies the quarter of the calendar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Second">
      <summary>
        <para>Specifies the second unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Week">
      <summary>
        <para>Specifies the week unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Weekday">
      <summary>
        <para>Specifies the weekday unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.WeekdayOrdinal">
      <summary>
        <para>Specifies the ordinal weekday unit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.CalendarUnit.Year">
      <summary>
        <para>Specifies the year unit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.Device">
      <summary>
        <para>Interface into iOS specific functionality.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.Device.advertisingIdentifier">
      <summary>
        <para>Advertising ID.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.Device.advertisingTrackingEnabled">
      <summary>
        <para>Is advertising tracking enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.Device.generation">
      <summary>
        <para>The generation of the device. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.Device.systemVersion">
      <summary>
        <para>iOS version.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.Device.vendorIdentifier">
      <summary>
        <para>Vendor ID.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.Device.ResetNoBackupFlag(System.String)">
      <summary>
        <para>Reset "no backup" file flag: file will be synced with iCloud/iTunes backup and can be deleted by OS in low storage situations.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="M:UnityEngine.iOS.Device.SetNoBackupFlag(System.String)">
      <summary>
        <para>Set file flag to be excluded from iCloud/iTunes backup.</para>
      </summary>
      <param name="path"></param>
    </member>
    <member name="T:UnityEngine.iOS.DeviceGeneration">
      <summary>
        <para>iOS device generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPad1Gen">
      <summary>
        <para>iPad, first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPad2Gen">
      <summary>
        <para>iPad, second generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPad3Gen">
      <summary>
        <para>iPad, third generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPad4Gen">
      <summary>
        <para>iPad, fourth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPad5Gen">
      <summary>
        <para>iPad Air, fifth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadAir1">
      <summary>
        <para>iPad Air.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadAir2">
      <summary>
        <para>iPad Air 2.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadMini1Gen">
      <summary>
        <para>iPadMini, first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadMini2Gen">
      <summary>
        <para>iPadMini Retina, second generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadMini3Gen">
      <summary>
        <para>iPad Mini 3.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadMini4Gen">
      <summary>
        <para>iPad Mini, fourth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadPro10Inch1Gen">
      <summary>
        <para>iPad Pro 9.7", first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadPro1Gen">
      <summary>
        <para>iPad Pro, first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPadUnknown">
      <summary>
        <para>Yet unknown iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone">
      <summary>
        <para>iPhone, first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone3G">
      <summary>
        <para>iPhone, second generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone3GS">
      <summary>
        <para>iPhone, third generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone4">
      <summary>
        <para>iPhone, fourth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone4S">
      <summary>
        <para>iPhone, fifth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone5">
      <summary>
        <para>iPhone5.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone5C">
      <summary>
        <para>iPhone 5C.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone5S">
      <summary>
        <para>iPhone 5S.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone6">
      <summary>
        <para>iPhone 6.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone6Plus">
      <summary>
        <para>iPhone 6 plus.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone6S">
      <summary>
        <para>iPhone 6S.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone6SPlus">
      <summary>
        <para>iPhone 6S Plus.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone7">
      <summary>
        <para>iPhone 7.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhone7Plus">
      <summary>
        <para>iPhone 7 Plus.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhoneSE1Gen">
      <summary>
        <para>iPhone SE, first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPhoneUnknown">
      <summary>
        <para>Yet unknown iPhone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouch1Gen">
      <summary>
        <para>iPod Touch, first generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouch2Gen">
      <summary>
        <para>iPod Touch, second generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouch3Gen">
      <summary>
        <para>iPod Touch, third generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouch4Gen">
      <summary>
        <para>iPod Touch, fourth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouch5Gen">
      <summary>
        <para>iPod Touch, fifth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouch6Gen">
      <summary>
        <para>iPod Touch, sixth generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.DeviceGeneration.iPodTouchUnknown">
      <summary>
        <para>Yet unknown iPod Touch.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.LocalNotification">
      <summary>
        <para>iOS.LocalNotification is a wrapper around the UILocalNotification class found in the Apple UIKit framework and is only available on iPhoneiPadiPod Touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.alertAction">
      <summary>
        <para>The title of the action button or slider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.alertBody">
      <summary>
        <para>The message displayed in the notification alert.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.alertLaunchImage">
      <summary>
        <para>Identifies the image used as the launch image when the user taps the action button.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.applicationIconBadgeNumber">
      <summary>
        <para>The number to display as the application's icon badge.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.defaultSoundName">
      <summary>
        <para>The default system sound. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.fireDate">
      <summary>
        <para>The date and time when the system should deliver the notification.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.hasAction">
      <summary>
        <para>A boolean value that controls whether the alert action is visible or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.repeatCalendar">
      <summary>
        <para>The calendar type (Gregorian, Chinese, etc) to use for rescheduling the notification.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.repeatInterval">
      <summary>
        <para>The calendar interval at which to reschedule the notification.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.soundName">
      <summary>
        <para>The name of the sound file to play when an alert is displayed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.timeZone">
      <summary>
        <para>The time zone of the notification's fire date.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.LocalNotification.userInfo">
      <summary>
        <para>A dictionary for passing custom information to the notified application.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.LocalNotification.#ctor">
      <summary>
        <para>Creates a new local notification.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.NotificationServices">
      <summary>
        <para>NotificationServices is only available on iPhoneiPadiPod Touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.deviceToken">
      <summary>
        <para>Device token received from Apple Push Service after calling NotificationServices.RegisterForRemoteNotificationTypes. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.enabledNotificationTypes">
      <summary>
        <para>Enabled local and remote notification types.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.localNotificationCount">
      <summary>
        <para>The number of received local notifications. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.localNotifications">
      <summary>
        <para>The list of objects representing received local notifications. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.registrationError">
      <summary>
        <para>Returns an error that might occur on registration for remote notifications via NotificationServices.RegisterForRemoteNotificationTypes. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.remoteNotificationCount">
      <summary>
        <para>The number of received remote notifications. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.remoteNotifications">
      <summary>
        <para>The list of objects representing received remote notifications. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.NotificationServices.scheduledLocalNotifications">
      <summary>
        <para>All currently scheduled local notifications.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.CancelAllLocalNotifications">
      <summary>
        <para>Cancels the delivery of all scheduled local notifications.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.CancelLocalNotification(UnityEngine.iOS.LocalNotification)">
      <summary>
        <para>Cancels the delivery of the specified scheduled local notification.</para>
      </summary>
      <param name="notification"></param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.ClearLocalNotifications">
      <summary>
        <para>Discards of all received local notifications.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.ClearRemoteNotifications">
      <summary>
        <para>Discards of all received remote notifications.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.GetLocalNotification(System.Int32)">
      <summary>
        <para>Returns an object representing a specific local notification. (Read Only)</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.GetRemoteNotification(System.Int32)">
      <summary>
        <para>Returns an object representing a specific remote notification. (Read Only)</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.PresentLocalNotificationNow(UnityEngine.iOS.LocalNotification)">
      <summary>
        <para>Presents a local notification immediately.</para>
      </summary>
      <param name="notification"></param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.RegisterForNotifications(UnityEngine.iOS.NotificationType)">
      <summary>
        <para>Register to receive local and remote notifications of the specified types from a provider via Apple Push Service.</para>
      </summary>
      <param name="notificationTypes">Notification types to register for.</param>
      <param name="registerForRemote">Specify true to also register for remote notifications.</param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.RegisterForNotifications(UnityEngine.iOS.NotificationType,System.Boolean)">
      <summary>
        <para>Register to receive local and remote notifications of the specified types from a provider via Apple Push Service.</para>
      </summary>
      <param name="notificationTypes">Notification types to register for.</param>
      <param name="registerForRemote">Specify true to also register for remote notifications.</param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.ScheduleLocalNotification(UnityEngine.iOS.LocalNotification)">
      <summary>
        <para>Schedules a local notification.</para>
      </summary>
      <param name="notification"></param>
    </member>
    <member name="M:UnityEngine.iOS.NotificationServices.UnregisterForRemoteNotifications">
      <summary>
        <para>Unregister for remote notifications.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.NotificationType">
      <summary>
        <para>Specifies local and remote notification types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.NotificationType.Alert">
      <summary>
        <para>Notification is an alert message.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.NotificationType.Badge">
      <summary>
        <para>Notification is a badge shown above the application's icon.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.NotificationType.None">
      <summary>
        <para>No notification types specified.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.iOS.NotificationType.Sound">
      <summary>
        <para>Notification is an alert sound.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.iOS.OnDemandResources">
      <summary>
        <para>On Demand Resources API.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.OnDemandResources.enabled">
      <summary>
        <para>Indicates whether player was built with "Use On Demand Resources" player setting enabled.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.OnDemandResources.PreloadAsync(System.String[])">
      <summary>
        <para>Creates an On Demand Resources (ODR) request.</para>
      </summary>
      <param name="tags">Tags for On Demand Resources that should be included in the request.</param>
      <returns>
        <para>Object representing ODR request.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.iOS.OnDemandResourcesRequest">
      <summary>
        <para>Represents a request for On Demand Resources (ODR). It's an AsyncOperation and can be yielded in a coroutine.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.OnDemandResourcesRequest.error">
      <summary>
        <para>Returns an error after operation is complete.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.OnDemandResourcesRequest.loadingPriority">
      <summary>
        <para>Sets the priority for request.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.OnDemandResourcesRequest.Dispose">
      <summary>
        <para>Release all resources kept alive by On Demand Resources (ODR) request.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.iOS.OnDemandResourcesRequest.GetResourcePath(System.String)">
      <summary>
        <para>Gets file system's path to the resource available in On Demand Resources (ODR) request.</para>
      </summary>
      <param name="resourceName">Resource name.</param>
    </member>
    <member name="T:UnityEngine.iOS.RemoteNotification">
      <summary>
        <para>RemoteNotification is only available on iPhoneiPadiPod Touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.RemoteNotification.alertBody">
      <summary>
        <para>The message displayed in the notification alert. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.RemoteNotification.applicationIconBadgeNumber">
      <summary>
        <para>The number to display as the application's icon badge. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.RemoteNotification.hasAction">
      <summary>
        <para>A boolean value that controls whether the alert action is visible or not. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.RemoteNotification.soundName">
      <summary>
        <para>The name of the sound file to play when an alert is displayed. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.iOS.RemoteNotification.userInfo">
      <summary>
        <para>A dictionary for passing custom information to the notified application. (Read Only)</para>
      </summary>
    </member>
    <member name="?:UnityEngine.ISerializationCallbackReceiver">
      <summary>
        <para>Interface to receive callbacks upon serialization and deserialization.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize">
      <summary>
        <para>Implement this method to receive a callback after Unity deserializes your object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize">
      <summary>
        <para>Implement this method to receive a callback before Unity serializes your object.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Joint">
      <summary>
        <para>Joint is the base class for all joints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.anchor">
      <summary>
        <para>The Position of the anchor around which the joints motion is constrained.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.autoConfigureConnectedAnchor">
      <summary>
        <para>Should the connectedAnchor be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.axis">
      <summary>
        <para>The Direction of the axis around which the body is constrained.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.breakForce">
      <summary>
        <para>The force that needs to be applied for this joint to break.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.breakTorque">
      <summary>
        <para>The torque that needs to be applied for this joint to break.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.connectedAnchor">
      <summary>
        <para>Position of the anchor relative to the connected Rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.connectedBody">
      <summary>
        <para>A reference to another rigidbody this joint connects to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.currentForce">
      <summary>
        <para>The force applied by the solver to satisfy all constraints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.currentTorque">
      <summary>
        <para>The torque applied by the solver to satisfy all constraints.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.enableCollision">
      <summary>
        <para>Enable collision between bodies connected with the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint.enablePreprocessing">
      <summary>
        <para>Toggle preprocessing for this joint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Joint2D">
      <summary>
        <para>Parent class for joints to connect Rigidbody2D objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.breakForce">
      <summary>
        <para>The force that needs to be applied for this joint to break.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.breakTorque">
      <summary>
        <para>The torque that needs to be applied for this joint to break.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.collideConnected">
      <summary>
        <para>Can the joint collide with the other Rigidbody2D object to which it is attached?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.connectedBody">
      <summary>
        <para>The Rigidbody2D object to which the other end of the joint is attached (ie, the object without the joint component).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.enableCollision">
      <summary>
        <para>Should the two rigid bodies connected with this joint collide with each other?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.reactionForce">
      <summary>
        <para>Gets the reaction force of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.reactionTorque">
      <summary>
        <para>Gets the reaction torque of the joint.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Joint2D.GetReactionForce(System.Single)">
      <summary>
        <para>Gets the reaction force of the joint given the specified timeStep.</para>
      </summary>
      <param name="timeStep">The time to calculate the reaction force for.</param>
      <returns>
        <para>The reaction force of the joint in the specified timeStep.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Joint2D.GetReactionTorque(System.Single)">
      <summary>
        <para>Gets the reaction torque of the joint given the specified timeStep.</para>
      </summary>
      <param name="timeStep">The time to calculate the reaction torque for.</param>
      <returns>
        <para>The reaction torque of the joint in the specified timeStep.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.JointAngleLimits2D">
      <summary>
        <para>Angular limits on the rotation of a Rigidbody2D object around a HingeJoint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointAngleLimits2D.max">
      <summary>
        <para>Upper angular limit of rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointAngleLimits2D.min">
      <summary>
        <para>Lower angular limit of rotation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointDrive">
      <summary>
        <para>How the joint's movement will behave along its local X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointDrive.maximumForce">
      <summary>
        <para>Amount of force applied to push the object toward the defined direction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointDrive.mode">
      <summary>
        <para>Whether the drive should attempt to reach position, velocity, both or nothing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointDrive.positionDamper">
      <summary>
        <para>Resistance strength against the Position Spring. Only used if mode includes Position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointDrive.positionSpring">
      <summary>
        <para>Strength of a rubber-band pull toward the defined direction. Only used if mode includes Position.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointDriveMode">
      <summary>
        <para>The ConfigurableJoint attempts to attain position / velocity targets based on this flag.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointDriveMode.None">
      <summary>
        <para>Don't apply any forces to reach the target.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointDriveMode.Position">
      <summary>
        <para>Try to reach the specified target position.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointDriveMode.PositionAndVelocity">
      <summary>
        <para>Try to reach the specified target position and velocity.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointDriveMode.Velocity">
      <summary>
        <para>Try to reach the specified target velocity.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointLimits">
      <summary>
        <para>JointLimits is used by the HingeJoint to limit the joints angle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointLimits.bounceMinVelocity">
      <summary>
        <para>The minimum impact velocity which will cause the joint to bounce.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointLimits.bounciness">
      <summary>
        <para>Determines the size of the bounce when the joint hits it's limit. Also known as restitution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointLimits.contactDistance">
      <summary>
        <para>Distance inside the limit value at which the limit will be considered to be active by the solver.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointLimits.max">
      <summary>
        <para>The upper angular limit (in degrees) of the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointLimits.min">
      <summary>
        <para>The lower angular limit (in degrees) of the joint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointLimitState2D">
      <summary>
        <para>Represents the state of a joint limit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.EqualLimits">
      <summary>
        <para>Represents a state where the joint limit is at the specified lower and upper limits (they are identical).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.Inactive">
      <summary>
        <para>Represents a state where the joint limit is inactive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.LowerLimit">
      <summary>
        <para>Represents a state where the joint limit is at the specified lower limit.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.UpperLimit">
      <summary>
        <para>Represents a state where the joint limit is at the specified upper limit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointMotor">
      <summary>
        <para>The JointMotor is used to motorize a joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor.force">
      <summary>
        <para>The motor will apply a force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor.freeSpin">
      <summary>
        <para>If freeSpin is enabled the motor will only accelerate but never slow down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor.targetVelocity">
      <summary>
        <para>The motor will apply a force up to force to achieve targetVelocity.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointMotor2D">
      <summary>
        <para>Parameters for the optional motor force applied to a Joint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor2D.maxMotorTorque">
      <summary>
        <para>The maximum force that can be applied to the Rigidbody2D at the joint to attain the target speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor2D.motorSpeed">
      <summary>
        <para>The desired speed for the Rigidbody2D to reach as it moves with the joint.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointProjectionMode">
      <summary>
        <para>Determines how to snap physics joints back to its constrained position when it drifts off too much.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointProjectionMode.None">
      <summary>
        <para>Don't snap at all.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointProjectionMode.PositionAndRotation">
      <summary>
        <para>Snap both position and rotation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointProjectionMode.PositionOnly">
      <summary>
        <para>Snap Position only.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointSpring">
      <summary>
        <para>JointSpring is used add a spring force to HingeJoint and PhysicMaterial.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointSpring.damper">
      <summary>
        <para>The damper force uses to dampen the spring.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointSpring.spring">
      <summary>
        <para>The spring forces used to reach the target position.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointSpring.targetPosition">
      <summary>
        <para>The target position the joint attempts to reach.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointSuspension2D">
      <summary>
        <para>Joint suspension is used to define how suspension works on a WheelJoint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointSuspension2D.angle">
      <summary>
        <para>The world angle (in degrees) along which the suspension will move.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointSuspension2D.dampingRatio">
      <summary>
        <para>The amount by which the suspension spring force is reduced in proportion to the movement speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointSuspension2D.frequency">
      <summary>
        <para>The frequency at which the suspension spring oscillates.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointTranslationLimits2D">
      <summary>
        <para>Motion limits of a Rigidbody2D object along a SliderJoint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointTranslationLimits2D.max">
      <summary>
        <para>Maximum distance the Rigidbody2D object can move from the Slider Joint's anchor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointTranslationLimits2D.min">
      <summary>
        <para>Minimum distance the Rigidbody2D object can move from the Slider Joint's anchor.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JsonUtility">
      <summary>
        <para>Utility functions for working with JSON data.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.JsonUtility.FromJson(System.String)">
      <summary>
        <para>Create an object from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <returns>
        <para>An instance of the object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.JsonUtility.FromJson(System.String,System.Type)">
      <summary>
        <para>Create an object from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <param name="type">The type of object represented by the Json.</param>
      <returns>
        <para>An instance of the object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.JsonUtility.FromJsonOverwrite(System.String,System.Object)">
      <summary>
        <para>Overwrite data in an object by reading from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <param name="objectToOverwrite">The object that should be overwritten.</param>
    </member>
    <member name="M:UnityEngine.JsonUtility.ToJson(System.Object)">
      <summary>
        <para>Generate a JSON representation of the public fields of an object.</para>
      </summary>
      <param name="obj">The object to convert to JSON form.</param>
      <param name="prettyPrint">If true, format the output for readability. If false, format the output for minimum size. Default is false.</param>
      <returns>
        <para>The object's data in JSON format.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.JsonUtility.ToJson(System.Object,System.Boolean)">
      <summary>
        <para>Generate a JSON representation of the public fields of an object.</para>
      </summary>
      <param name="obj">The object to convert to JSON form.</param>
      <param name="prettyPrint">If true, format the output for readability. If false, format the output for minimum size. Default is false.</param>
      <returns>
        <para>The object's data in JSON format.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.KeyCode">
      <summary>
        <para>Key codes returned by Event.keyCode. These map directly to a physical key on the keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.A">
      <summary>
        <para>'a' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha0">
      <summary>
        <para>The '0' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha1">
      <summary>
        <para>The '1' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha2">
      <summary>
        <para>The '2' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha3">
      <summary>
        <para>The '3' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha4">
      <summary>
        <para>The '4' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha5">
      <summary>
        <para>The '5' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha6">
      <summary>
        <para>The '6' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha7">
      <summary>
        <para>The '7' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha8">
      <summary>
        <para>The '8' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Alpha9">
      <summary>
        <para>The '9' key on the top of the alphanumeric keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.AltGr">
      <summary>
        <para>Alt Gr key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Ampersand">
      <summary>
        <para>Ampersand key '&amp;'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Asterisk">
      <summary>
        <para>Asterisk key '*'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.At">
      <summary>
        <para>At key '@'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.B">
      <summary>
        <para>'b' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.BackQuote">
      <summary>
        <para>Back quote key '`'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Backslash">
      <summary>
        <para>Backslash key '\'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Backspace">
      <summary>
        <para>The backspace key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Break">
      <summary>
        <para>Break key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.C">
      <summary>
        <para>'c' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.CapsLock">
      <summary>
        <para>Capslock key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Caret">
      <summary>
        <para>Caret key '^'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Clear">
      <summary>
        <para>The Clear key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Colon">
      <summary>
        <para>Colon ':' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Comma">
      <summary>
        <para>Comma ',' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.D">
      <summary>
        <para>'d' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Delete">
      <summary>
        <para>The forward delete key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Dollar">
      <summary>
        <para>Dollar sign key '$'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.DoubleQuote">
      <summary>
        <para>Double quote key '"'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.DownArrow">
      <summary>
        <para>Down arrow key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.E">
      <summary>
        <para>'e' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.End">
      <summary>
        <para>End key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Equals">
      <summary>
        <para>Equals '=' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Escape">
      <summary>
        <para>Escape key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Exclaim">
      <summary>
        <para>Exclamation mark key '!'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F">
      <summary>
        <para>'f' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F1">
      <summary>
        <para>F1 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F10">
      <summary>
        <para>F10 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F11">
      <summary>
        <para>F11 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F12">
      <summary>
        <para>F12 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F13">
      <summary>
        <para>F13 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F14">
      <summary>
        <para>F14 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F15">
      <summary>
        <para>F15 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F2">
      <summary>
        <para>F2 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F3">
      <summary>
        <para>F3 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F4">
      <summary>
        <para>F4 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F5">
      <summary>
        <para>F5 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F6">
      <summary>
        <para>F6 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F7">
      <summary>
        <para>F7 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F8">
      <summary>
        <para>F8 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.F9">
      <summary>
        <para>F9 function key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.G">
      <summary>
        <para>'g' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Greater">
      <summary>
        <para>Greater than '&gt;' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.H">
      <summary>
        <para>'h' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Hash">
      <summary>
        <para>Hash key '#'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Help">
      <summary>
        <para>Help key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Home">
      <summary>
        <para>Home key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.I">
      <summary>
        <para>'i' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Insert">
      <summary>
        <para>Insert key key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.J">
      <summary>
        <para>'j' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button0">
      <summary>
        <para>Button 0 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button1">
      <summary>
        <para>Button 1 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button10">
      <summary>
        <para>Button 10 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button11">
      <summary>
        <para>Button 11 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button12">
      <summary>
        <para>Button 12 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button13">
      <summary>
        <para>Button 13 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button14">
      <summary>
        <para>Button 14 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button15">
      <summary>
        <para>Button 15 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button16">
      <summary>
        <para>Button 16 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button17">
      <summary>
        <para>Button 17 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button18">
      <summary>
        <para>Button 18 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button19">
      <summary>
        <para>Button 19 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button2">
      <summary>
        <para>Button 2 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button3">
      <summary>
        <para>Button 3 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button4">
      <summary>
        <para>Button 4 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button5">
      <summary>
        <para>Button 5 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button6">
      <summary>
        <para>Button 6 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button7">
      <summary>
        <para>Button 7 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button8">
      <summary>
        <para>Button 8 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick1Button9">
      <summary>
        <para>Button 9 on first joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button0">
      <summary>
        <para>Button 0 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button1">
      <summary>
        <para>Button 1 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button10">
      <summary>
        <para>Button 10 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button11">
      <summary>
        <para>Button 11 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button12">
      <summary>
        <para>Button 12 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button13">
      <summary>
        <para>Button 13 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button14">
      <summary>
        <para>Button 14 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button15">
      <summary>
        <para>Button 15 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button16">
      <summary>
        <para>Button 16 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button17">
      <summary>
        <para>Button 17 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button18">
      <summary>
        <para>Button 18 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button19">
      <summary>
        <para>Button 19 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button2">
      <summary>
        <para>Button 2 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button3">
      <summary>
        <para>Button 3 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button4">
      <summary>
        <para>Button 4 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button5">
      <summary>
        <para>Button 5 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button6">
      <summary>
        <para>Button 6 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button7">
      <summary>
        <para>Button 7 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button8">
      <summary>
        <para>Button 8 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick2Button9">
      <summary>
        <para>Button 9 on second joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button0">
      <summary>
        <para>Button 0 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button1">
      <summary>
        <para>Button 1 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button10">
      <summary>
        <para>Button 10 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button11">
      <summary>
        <para>Button 11 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button12">
      <summary>
        <para>Button 12 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button13">
      <summary>
        <para>Button 13 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button14">
      <summary>
        <para>Button 14 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button15">
      <summary>
        <para>Button 15 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button16">
      <summary>
        <para>Button 16 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button17">
      <summary>
        <para>Button 17 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button18">
      <summary>
        <para>Button 18 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button19">
      <summary>
        <para>Button 19 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button2">
      <summary>
        <para>Button 2 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button3">
      <summary>
        <para>Button 3 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button4">
      <summary>
        <para>Button 4 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button5">
      <summary>
        <para>Button 5 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button6">
      <summary>
        <para>Button 6 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button7">
      <summary>
        <para>Button 7 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button8">
      <summary>
        <para>Button 8 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick3Button9">
      <summary>
        <para>Button 9 on third joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button0">
      <summary>
        <para>Button 0 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button1">
      <summary>
        <para>Button 1 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button10">
      <summary>
        <para>Button 10 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button11">
      <summary>
        <para>Button 11 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button12">
      <summary>
        <para>Button 12 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button13">
      <summary>
        <para>Button 13 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button14">
      <summary>
        <para>Button 14 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button15">
      <summary>
        <para>Button 15 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button16">
      <summary>
        <para>Button 16 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button17">
      <summary>
        <para>Button 17 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button18">
      <summary>
        <para>Button 18 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button19">
      <summary>
        <para>Button 19 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button2">
      <summary>
        <para>Button 2 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button3">
      <summary>
        <para>Button 3 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button4">
      <summary>
        <para>Button 4 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button5">
      <summary>
        <para>Button 5 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button6">
      <summary>
        <para>Button 6 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button7">
      <summary>
        <para>Button 7 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button8">
      <summary>
        <para>Button 8 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick4Button9">
      <summary>
        <para>Button 9 on forth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button0">
      <summary>
        <para>Button 0 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button1">
      <summary>
        <para>Button 1 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button10">
      <summary>
        <para>Button 10 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button11">
      <summary>
        <para>Button 11 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button12">
      <summary>
        <para>Button 12 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button13">
      <summary>
        <para>Button 13 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button14">
      <summary>
        <para>Button 14 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button15">
      <summary>
        <para>Button 15 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button16">
      <summary>
        <para>Button 16 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button17">
      <summary>
        <para>Button 17 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button18">
      <summary>
        <para>Button 18 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button19">
      <summary>
        <para>Button 19 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button2">
      <summary>
        <para>Button 2 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button3">
      <summary>
        <para>Button 3 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button4">
      <summary>
        <para>Button 4 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button5">
      <summary>
        <para>Button 5 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button6">
      <summary>
        <para>Button 6 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button7">
      <summary>
        <para>Button 7 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button8">
      <summary>
        <para>Button 8 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick5Button9">
      <summary>
        <para>Button 9 on fifth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button0">
      <summary>
        <para>Button 0 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button1">
      <summary>
        <para>Button 1 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button10">
      <summary>
        <para>Button 10 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button11">
      <summary>
        <para>Button 11 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button12">
      <summary>
        <para>Button 12 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button13">
      <summary>
        <para>Button 13 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button14">
      <summary>
        <para>Button 14 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button15">
      <summary>
        <para>Button 15 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button16">
      <summary>
        <para>Button 16 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button17">
      <summary>
        <para>Button 17 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button18">
      <summary>
        <para>Button 18 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button19">
      <summary>
        <para>Button 19 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button2">
      <summary>
        <para>Button 2 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button3">
      <summary>
        <para>Button 3 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button4">
      <summary>
        <para>Button 4 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button5">
      <summary>
        <para>Button 5 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button6">
      <summary>
        <para>Button 6 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button7">
      <summary>
        <para>Button 7 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button8">
      <summary>
        <para>Button 8 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick6Button9">
      <summary>
        <para>Button 9 on sixth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button0">
      <summary>
        <para>Button 0 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button1">
      <summary>
        <para>Button 1 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button10">
      <summary>
        <para>Button 10 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button11">
      <summary>
        <para>Button 11 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button12">
      <summary>
        <para>Button 12 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button13">
      <summary>
        <para>Button 13 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button14">
      <summary>
        <para>Button 14 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button15">
      <summary>
        <para>Button 15 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button16">
      <summary>
        <para>Button 16 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button17">
      <summary>
        <para>Button 17 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button18">
      <summary>
        <para>Button 18 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button19">
      <summary>
        <para>Button 19 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button2">
      <summary>
        <para>Button 2 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button3">
      <summary>
        <para>Button 3 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button4">
      <summary>
        <para>Button 4 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button5">
      <summary>
        <para>Button 5 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button6">
      <summary>
        <para>Button 6 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button7">
      <summary>
        <para>Button 7 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button8">
      <summary>
        <para>Button 8 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick7Button9">
      <summary>
        <para>Button 9 on seventh joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button0">
      <summary>
        <para>Button 0 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button1">
      <summary>
        <para>Button 1 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button10">
      <summary>
        <para>Button 10 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button11">
      <summary>
        <para>Button 11 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button12">
      <summary>
        <para>Button 12 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button13">
      <summary>
        <para>Button 13 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button14">
      <summary>
        <para>Button 14 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button15">
      <summary>
        <para>Button 15 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button16">
      <summary>
        <para>Button 16 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button17">
      <summary>
        <para>Button 17 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button18">
      <summary>
        <para>Button 18 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button19">
      <summary>
        <para>Button 19 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button2">
      <summary>
        <para>Button 2 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button3">
      <summary>
        <para>Button 3 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button4">
      <summary>
        <para>Button 4 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button5">
      <summary>
        <para>Button 5 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button6">
      <summary>
        <para>Button 6 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button7">
      <summary>
        <para>Button 7 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button8">
      <summary>
        <para>Button 8 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Joystick8Button9">
      <summary>
        <para>Button 9 on eighth joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton0">
      <summary>
        <para>Button 0 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton1">
      <summary>
        <para>Button 1 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton10">
      <summary>
        <para>Button 10 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton11">
      <summary>
        <para>Button 11 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton12">
      <summary>
        <para>Button 12 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton13">
      <summary>
        <para>Button 13 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton14">
      <summary>
        <para>Button 14 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton15">
      <summary>
        <para>Button 15 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton16">
      <summary>
        <para>Button 16 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton17">
      <summary>
        <para>Button 17 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton18">
      <summary>
        <para>Button 18 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton19">
      <summary>
        <para>Button 19 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton2">
      <summary>
        <para>Button 2 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton3">
      <summary>
        <para>Button 3 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton4">
      <summary>
        <para>Button 4 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton5">
      <summary>
        <para>Button 5 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton6">
      <summary>
        <para>Button 6 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton7">
      <summary>
        <para>Button 7 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton8">
      <summary>
        <para>Button 8 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.JoystickButton9">
      <summary>
        <para>Button 9 on any joystick.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.K">
      <summary>
        <para>'k' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad0">
      <summary>
        <para>Numeric keypad 0.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad1">
      <summary>
        <para>Numeric keypad 1.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad2">
      <summary>
        <para>Numeric keypad 2.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad3">
      <summary>
        <para>Numeric keypad 3.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad4">
      <summary>
        <para>Numeric keypad 4.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad5">
      <summary>
        <para>Numeric keypad 5.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad6">
      <summary>
        <para>Numeric keypad 6.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad7">
      <summary>
        <para>Numeric keypad 7.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad8">
      <summary>
        <para>Numeric keypad 8.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Keypad9">
      <summary>
        <para>Numeric keypad 9.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadDivide">
      <summary>
        <para>Numeric keypad '/'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadEnter">
      <summary>
        <para>Numeric keypad enter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadEquals">
      <summary>
        <para>Numeric keypad '='.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadMinus">
      <summary>
        <para>Numeric keypad '-'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadMultiply">
      <summary>
        <para>Numeric keypad '*'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadPeriod">
      <summary>
        <para>Numeric keypad '.'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.KeypadPlus">
      <summary>
        <para>Numeric keypad '+'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.L">
      <summary>
        <para>'l' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftAlt">
      <summary>
        <para>Left Alt key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftApple">
      <summary>
        <para>Left Command key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftArrow">
      <summary>
        <para>Left arrow key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftBracket">
      <summary>
        <para>Left square bracket key '['.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftCommand">
      <summary>
        <para>Left Command key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftControl">
      <summary>
        <para>Left Control key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftParen">
      <summary>
        <para>Left Parenthesis key '('.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftShift">
      <summary>
        <para>Left shift key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.LeftWindows">
      <summary>
        <para>Left Windows key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Less">
      <summary>
        <para>Less than '&lt;' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.M">
      <summary>
        <para>'m' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Menu">
      <summary>
        <para>Menu key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Minus">
      <summary>
        <para>Minus '-' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse0">
      <summary>
        <para>First (primary) mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse1">
      <summary>
        <para>Second (secondary) mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse2">
      <summary>
        <para>Third mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse3">
      <summary>
        <para>Fourth mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse4">
      <summary>
        <para>Fifth mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse5">
      <summary>
        <para>Sixth mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Mouse6">
      <summary>
        <para>Seventh mouse button.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.N">
      <summary>
        <para>'n' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.None">
      <summary>
        <para>Not assigned (never returned as the result of a keystroke).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Numlock">
      <summary>
        <para>Numlock key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.O">
      <summary>
        <para>'o' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.P">
      <summary>
        <para>'p' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.PageDown">
      <summary>
        <para>Page down.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.PageUp">
      <summary>
        <para>Page up.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Pause">
      <summary>
        <para>Pause on PC machines.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Period">
      <summary>
        <para>Period '.' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Plus">
      <summary>
        <para>Plus key '+'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Print">
      <summary>
        <para>Print key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Q">
      <summary>
        <para>'q' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Question">
      <summary>
        <para>Question mark '?' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Quote">
      <summary>
        <para>Quote key '.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.R">
      <summary>
        <para>'r' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Return">
      <summary>
        <para>Return key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightAlt">
      <summary>
        <para>Right Alt key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightApple">
      <summary>
        <para>Right Command key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightArrow">
      <summary>
        <para>Right arrow key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightBracket">
      <summary>
        <para>Right square bracket key ']'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightCommand">
      <summary>
        <para>Right Command key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightControl">
      <summary>
        <para>Right Control key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightParen">
      <summary>
        <para>Right Parenthesis key ')'.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightShift">
      <summary>
        <para>Right shift key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.RightWindows">
      <summary>
        <para>Right Windows key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.S">
      <summary>
        <para>'s' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.ScrollLock">
      <summary>
        <para>Scroll lock key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Semicolon">
      <summary>
        <para>Semicolon ';' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Slash">
      <summary>
        <para>Slash '/' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Space">
      <summary>
        <para>Space key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.SysReq">
      <summary>
        <para>Sys Req key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.T">
      <summary>
        <para>'t' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Tab">
      <summary>
        <para>The tab key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.U">
      <summary>
        <para>'u' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Underscore">
      <summary>
        <para>Underscore '_' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.UpArrow">
      <summary>
        <para>Up arrow key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.V">
      <summary>
        <para>'v' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.W">
      <summary>
        <para>'w' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.X">
      <summary>
        <para>'x' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Y">
      <summary>
        <para>'y' key.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.KeyCode.Z">
      <summary>
        <para>'z' key.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Keyframe">
      <summary>
        <para>A single keyframe that can be injected into an animation curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Keyframe.inTangent">
      <summary>
        <para>Describes the tangent when approaching this point from the previous point in the curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Keyframe.outTangent">
      <summary>
        <para>Describes the tangent when leaving this point towards the next point in the curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Keyframe.tangentMode">
      <summary>
        <para>TangentMode is deprecated.  Use AnimationUtility.SetKeyLeftTangentMode or AnimationUtility.SetKeyRightTangentMode instead.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Keyframe.time">
      <summary>
        <para>The time of the keyframe.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Keyframe.value">
      <summary>
        <para>The value of the curve at keyframe.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Keyframe.#ctor(System.Single,System.Single)">
      <summary>
        <para>Create a keyframe.</para>
      </summary>
      <param name="time"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Keyframe.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Create a keyframe.</para>
      </summary>
      <param name="time"></param>
      <param name="value"></param>
      <param name="inTangent"></param>
      <param name="outTangent"></param>
    </member>
    <member name="T:UnityEngine.LayerMask">
      <summary>
        <para>LayerMask allow you to display the LayerMask popup menu in the inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LayerMask.value">
      <summary>
        <para>Converts a layer mask value to an integer value.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LayerMask.GetMask(System.String[])">
      <summary>
        <para>Given a set of layer names as defined by either a Builtin or a User Layer in the, returns the equivalent layer mask for all of them.</para>
      </summary>
      <param name="layerNames">List of layer names to convert to a layer mask.</param>
      <returns>
        <para>The layer mask created from the layerNames.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.LayerMask.implop_LayerMask(int)(System.Int32)">
      <summary>
        <para>Implicitly converts an integer to a LayerMask.</para>
      </summary>
      <param name="intVal"></param>
    </member>
    <member name="M:UnityEngine.LayerMask.LayerToName(System.Int32)">
      <summary>
        <para>Given a layer number, returns the name of the layer as defined in either a Builtin or a User Layer in the.</para>
      </summary>
      <param name="layer"></param>
    </member>
    <member name="M:UnityEngine.LayerMask.NameToLayer(System.String)">
      <summary>
        <para>Given a layer name, returns the layer index as defined by either a Builtin or a User Layer in the.</para>
      </summary>
      <param name="layerName"></param>
    </member>
    <member name="T:UnityEngine.LensFlare">
      <summary>
        <para>Script interface for a.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LensFlare.brightness">
      <summary>
        <para>The strength of the flare.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LensFlare.color">
      <summary>
        <para>The color of the flare.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LensFlare.fadeSpeed">
      <summary>
        <para>The fade speed of the flare.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LensFlare.flare">
      <summary>
        <para>The to use.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Light">
      <summary>
        <para>Script interface for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.areaSize">
      <summary>
        <para>The size of the area light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.bounceIntensity">
      <summary>
        <para>The multiplier that defines the strength of the bounce lighting.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.color">
      <summary>
        <para>The color of the light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.colorTemperature">
      <summary>
        <para>
          The color temperature of the light.
          Correlated Color Temperature (abbreviated as CCT) is multiplied with the color filter when calculating the final color of a light source. The color temperature of the electromagnetic radiation emitted from an ideal black body is defined as its surface temperature in Kelvin. White is 6500K according to the D65 standard. Candle light is 1800K.
          If you want to use lightsUseCCT, lightsUseLinearIntensity has to be enabled to ensure physically correct output.
          See Also: GraphicsSettings.lightsUseLinearIntensity, GraphicsSettings.lightsUseCCT.
        </para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.commandBufferCount">
      <summary>
        <para>Number of command buffers set up on this light (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.cookie">
      <summary>
        <para>The cookie texture projected by the light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.cookieSize">
      <summary>
        <para>The size of a directional light's cookie.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.cullingMask">
      <summary>
        <para>This is used to light certain objects in the scene selectively.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.flare">
      <summary>
        <para>The to use for this light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.intensity">
      <summary>
        <para>The Intensity of a light is multiplied with the Light color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.isBaked">
      <summary>
        <para>Is the light contribution already stored in lightmaps and/or lightprobes (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.lightmapBakeType">
      <summary>
        <para>This property describes what part of a light's contribution can be baked.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.range">
      <summary>
        <para>The range of the light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.renderMode">
      <summary>
        <para>How to render the light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadowBias">
      <summary>
        <para>Shadow mapping constant bias.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadowCustomResolution">
      <summary>
        <para>The custom resolution of the shadow map.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadowNearPlane">
      <summary>
        <para>Near plane value to use for shadow frustums.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadowNormalBias">
      <summary>
        <para>Shadow mapping normal-based bias.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadowResolution">
      <summary>
        <para>The resolution of the shadow map.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadows">
      <summary>
        <para>How this light casts shadows</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.shadowStrength">
      <summary>
        <para>Strength of light's shadows.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.spotAngle">
      <summary>
        <para>The angle of the light's spotlight cone in degrees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Light.type">
      <summary>
        <para>The type of the light.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Light.AddCommandBuffer(UnityEngine.Rendering.LightEvent,UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Add a command buffer to be executed at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <param name="buffer">The buffer to execute.</param>
      <param name="shadowPassMask">A mask specifying which shadow passes to execute the buffer for.</param>
    </member>
    <member name="M:UnityEngine.Light.AddCommandBuffer(UnityEngine.Rendering.LightEvent,UnityEngine.Rendering.CommandBuffer,UnityEngine.Rendering.ShadowMapPass)">
      <summary>
        <para>Add a command buffer to be executed at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <param name="buffer">The buffer to execute.</param>
      <param name="shadowPassMask">A mask specifying which shadow passes to execute the buffer for.</param>
    </member>
    <member name="M:UnityEngine.Light.GetCommandBuffers(UnityEngine.Rendering.LightEvent)">
      <summary>
        <para>Get command buffers to be executed at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <returns>
        <para>Array of command buffers.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Light.RemoveAllCommandBuffers">
      <summary>
        <para>Remove all command buffers set on this light.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Light.RemoveCommandBuffer(UnityEngine.Rendering.LightEvent,UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Remove command buffer from execution at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
      <param name="buffer">The buffer to execute.</param>
    </member>
    <member name="M:UnityEngine.Light.RemoveCommandBuffers(UnityEngine.Rendering.LightEvent)">
      <summary>
        <para>Remove command buffers from execution at a specified place.</para>
      </summary>
      <param name="evt">When to execute the command buffer during rendering.</param>
    </member>
    <member name="T:UnityEngine.LightmapBakeType">
      <summary>
        <para>Enum describing what part of a light contribution can be baked.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapBakeType.Baked">
      <summary>
        <para>Baked lights cannot move or change in any way during run time. All lighting for static objects gets baked into lightmaps. Lighting and shadows for dynamic objects gets baked into Light Probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapBakeType.Mixed">
      <summary>
        <para>Mixed lights allow a mix of realtime and baked lighting, based on the Mixed Lighting Mode used. These lights cannot move, but can change color and intensity at run time. Changes to color and intensity only affect direct lighting as indirect lighting gets baked. If using Subtractive mode, changes to color or intensity are not calculated at run time on static objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapBakeType.Realtime">
      <summary>
        <para>Realtime lights cast run time light and shadows. They can change position, orientation, color, brightness, and many other properties at run time. No lighting gets baked into lightmaps or light probes..</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightmapData">
      <summary>
        <para>Data of a lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightmapData.lightmapColor">
      <summary>
        <para>Lightmap storing color of incoming light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightmapData.lightmapDir">
      <summary>
        <para>Lightmap storing dominant direction of incoming light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightmapData.shadowMask">
      <summary>
        <para>Texture storing occlusion mask per light (ShadowMask, up to four lights).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightmapSettings">
      <summary>
        <para>Stores lightmaps of the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightmapSettings.lightmaps">
      <summary>
        <para>Lightmap array.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightmapSettings.lightmapsMode">
      <summary>
        <para>Non-directional, Directional or Directional Specular lightmaps rendering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightmapSettings.lightProbes">
      <summary>
        <para>Holds all data needed by the light probes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightmapsMode">
      <summary>
        <para>Lightmap (and lighting) configuration mode, controls how lightmaps interact with lighting and what kind of information they store.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapsMode.CombinedDirectional">
      <summary>
        <para>Directional information for direct light is combined with directional information for indirect light, encoded as 2 lightmaps.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapsMode.NonDirectional">
      <summary>
        <para>Light intensity (no directional information), encoded as 1 lightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapsMode.SeparateDirectional">
      <summary>
        <para>Directional information for direct light is stored separately from directional information for indirect light, encoded as 4 lightmaps.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightmapsModeLegacy">
      <summary>
        <para>Single, dual, or directional lightmaps rendering mode, used only in GIWorkflowMode.Legacy</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapsModeLegacy.Directional">
      <summary>
        <para>Directional rendering mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapsModeLegacy.Dual">
      <summary>
        <para>Dual lightmap rendering mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightmapsModeLegacy.Single">
      <summary>
        <para>Single, traditional lightmap rendering mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbeGroup">
      <summary>
        <para>Light Probe Group.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeGroup.probePositions">
      <summary>
        <para>Editor only function to access and modify probe positions.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbeProxyVolume">
      <summary>
        <para>The Light Probe Proxy Volume component offers the possibility to use higher resolution lighting for large non-static GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.boundingBoxMode">
      <summary>
        <para>The bounding box mode for generating the 3D grid of interpolated Light Probes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.boundsGlobal">
      <summary>
        <para>The world-space bounding box in which the 3D grid of interpolated Light Probes is generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.gridResolutionX">
      <summary>
        <para>The 3D grid resolution on the z-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.gridResolutionY">
      <summary>
        <para>The 3D grid resolution on the y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.gridResolutionZ">
      <summary>
        <para>The 3D grid resolution on the z-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.isFeatureSupported">
      <summary>
        <para>Checks if Light Probe Proxy Volumes are supported.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.originCustom">
      <summary>
        <para>The local-space origin of the bounding box in which the 3D grid of interpolated Light Probes is generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.probeDensity">
      <summary>
        <para>Interpolated Light Probe density.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.probePositionMode">
      <summary>
        <para>The mode in which the interpolated Light Probe positions are generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.refreshMode">
      <summary>
        <para>Sets the way the Light Probe Proxy Volume refreshes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.resolutionMode">
      <summary>
        <para>The resolution mode for generating the grid of interpolated Light Probes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbeProxyVolume.sizeCustom">
      <summary>
        <para>The size of the bounding box in which the 3D grid of interpolated Light Probes is generated.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbeProxyVolume.BoundingBoxMode">
      <summary>
        <para>The bounding box mode for generating a grid of interpolated Light Probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.BoundingBoxMode.AutomaticLocal">
      <summary>
        <para>The bounding box encloses the current Renderer and all the relevant Renderers down the hierarchy, in local space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.BoundingBoxMode.AutomaticWorld">
      <summary>
        <para>The bounding box encloses the current Renderer and all the relevant Renderers down the hierarchy, in world space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.BoundingBoxMode.Custom">
      <summary>
        <para>A custom local-space bounding box is used. The user is able to edit the bounding box.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbeProxyVolume.ProbePositionMode">
      <summary>
        <para>The mode in which the interpolated Light Probe positions are generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.ProbePositionMode.CellCenter">
      <summary>
        <para>Divide the volume in cells based on resolution, and generate interpolated Light Probe positions in the center of the cells.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.ProbePositionMode.CellCorner">
      <summary>
        <para>Divide the volume in cells based on resolution, and generate interpolated Light Probes positions in the corner/edge of the cells.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbeProxyVolume.RefreshMode">
      <summary>
        <para>An enum describing the way a Light Probe Proxy Volume refreshes in the Player.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.RefreshMode.Automatic">
      <summary>
        <para>Automatically detects updates in Light Probes and triggers an update of the Light Probe volume.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.RefreshMode.EveryFrame">
      <summary>
        <para>Causes Unity to update the Light Probe Proxy Volume every frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.RefreshMode.ViaScripting">
      <summary>
        <para>Use this option to indicate that the Light Probe Proxy Volume is never to be automatically updated by Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbeProxyVolume.ResolutionMode">
      <summary>
        <para>The resolution mode for generating a grid of interpolated Light Probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.ResolutionMode.Automatic">
      <summary>
        <para>The automatic mode uses a number of interpolated Light Probes per unit area, and uses the bounding volume size to compute the resolution. The final resolution value is a power of 2.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightProbeProxyVolume.ResolutionMode.Custom">
      <summary>
        <para>The custom mode allows you to specify the 3D grid resolution.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LightProbeProxyVolume.Update">
      <summary>
        <para>Triggers an update of the Light Probe Proxy Volume.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightProbes">
      <summary>
        <para>Stores light probes for the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbes.bakedProbes">
      <summary>
        <para>Coefficients of baked light probes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbes.cellCount">
      <summary>
        <para>The number of cells space is divided into (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbes.count">
      <summary>
        <para>The number of light probes (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LightProbes.positions">
      <summary>
        <para>Positions of the baked light probes (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LightProbes.GetInterpolatedProbe(UnityEngine.Vector3,UnityEngine.Renderer,UnityEngine.Rendering.SphericalHarmonicsL2&amp;)">
      <summary>
        <para>Returns an interpolated probe for the given position for both realtime and baked light probes combined.</para>
      </summary>
      <param name="position"></param>
      <param name="renderer"></param>
      <param name="probe"></param>
    </member>
    <member name="T:UnityEngine.LightRenderMode">
      <summary>
        <para>How the Light is rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightRenderMode.Auto">
      <summary>
        <para>Automatically choose the render mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightRenderMode.ForcePixel">
      <summary>
        <para>Force the Light to be a pixel light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightRenderMode.ForceVertex">
      <summary>
        <para>Force the Light to be a vertex light.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightShadows">
      <summary>
        <para>Shadow casting options for a Light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightShadows.Hard">
      <summary>
        <para>Cast "hard" shadows (with no shadow filtering).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightShadows.None">
      <summary>
        <para>Do not cast shadows (default).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightShadows.Soft">
      <summary>
        <para>Cast "soft" shadows (with 4x PCF filtering).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LightType">
      <summary>
        <para>The type of a Light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightType.Area">
      <summary>
        <para>The light is an area light. It affects only lightmaps and lightprobes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightType.Directional">
      <summary>
        <para>The light is a directional light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightType.Point">
      <summary>
        <para>The light is a point light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LightType.Spot">
      <summary>
        <para>The light is a spot light.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LineAlignment">
      <summary>
        <para>Control the direction lines face, when using the LineRenderer or TrailRenderer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LineAlignment.Local">
      <summary>
        <para>Lines face the direction of the Transform Component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LineAlignment.View">
      <summary>
        <para>Lines face the camera.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LineRenderer">
      <summary>
        <para>The line renderer is used to draw free-floating lines in 3D space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.alignment">
      <summary>
        <para>Select whether the line will face the camera, or the orientation of the Transform Component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.colorGradient">
      <summary>
        <para>Set the color gradient describing the color of the line at various points along its length.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.endColor">
      <summary>
        <para>Set the color at the end of the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.endWidth">
      <summary>
        <para>Set the width at the end of the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.loop">
      <summary>
        <para>Connect the start and end positions of the line together to form a continuous loop.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.numCapVertices">
      <summary>
        <para>Set this to a value greater than 0, to get rounded corners on each end of the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.numCornerVertices">
      <summary>
        <para>Set this to a value greater than 0, to get rounded corners between each segment of the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.numPositions">
      <summary>
        <para>Set the number of line segments.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.positionCount">
      <summary>
        <para>Set the number of line segments.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.startColor">
      <summary>
        <para>Set the color at the start of the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.startWidth">
      <summary>
        <para>Set the width at the start of the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.textureMode">
      <summary>
        <para>Choose whether the U coordinate of the line texture is tiled or stretched.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.useWorldSpace">
      <summary>
        <para>If enabled, the lines are defined in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.widthCurve">
      <summary>
        <para>Set the curve describing the width of the line at various points along its length.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LineRenderer.widthMultiplier">
      <summary>
        <para>Set an overall multiplier that is applied to the LineRenderer.widthCurve to get the final width of the line.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LineRenderer.GetPosition(System.Int32)">
      <summary>
        <para>Get the position of a vertex in the line.</para>
      </summary>
      <param name="index">The index of the position to retrieve.</param>
      <returns>
        <para>The position at the specified index in the array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.LineRenderer.GetPositions(UnityEngine.Vector3[])">
      <summary>
        <para>Get the positions of all vertices in the line.</para>
      </summary>
      <param name="positions">The array of positions to retrieve. The array passed should be of at least numPositions in size.</param>
      <returns>
        <para>How many positions were actually stored in the output array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetColors(UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Set the line color at the start and at the end.</para>
      </summary>
      <param name="start"></param>
      <param name="end"></param>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetPosition(System.Int32,UnityEngine.Vector3)">
      <summary>
        <para>Set the position of a vertex in the line.</para>
      </summary>
      <param name="index">Which position to set.</param>
      <param name="position">The new position.</param>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetPositions(UnityEngine.Vector3[])">
      <summary>
        <para>Set the positions of all vertices in the line.</para>
      </summary>
      <param name="positions">The array of positions to set.</param>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetVertexCount(System.Int32)">
      <summary>
        <para>Set the number of line segments.</para>
      </summary>
      <param name="count"></param>
    </member>
    <member name="M:UnityEngine.LineRenderer.SetWidth(System.Single,System.Single)">
      <summary>
        <para>Set the line width at the start and at the end.</para>
      </summary>
      <param name="start"></param>
      <param name="end"></param>
    </member>
    <member name="T:UnityEngine.LineTextureMode">
      <summary>
        <para>Choose how textures are applied to Lines and Trails.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LineTextureMode.DistributePerSegment">
      <summary>
        <para>Map the texture once along the entire length of the line, assuming all vertices are evenly spaced.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LineTextureMode.RepeatPerSegment">
      <summary>
        <para>Repeat the texture along the line, repeating at a rate of once per line segment. To adjust the tiling rate, use Material.SetTextureScale.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LineTextureMode.Stretch">
      <summary>
        <para>Map the texture once along the entire length of the line.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LineTextureMode.Tile">
      <summary>
        <para>Repeat the texture along the line, based on its length in world units. To set the tiling rate, use Material.SetTextureScale.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LocationInfo">
      <summary>
        <para>Structure describing device location.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationInfo.altitude">
      <summary>
        <para>Geographical device location altitude.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationInfo.horizontalAccuracy">
      <summary>
        <para>Horizontal accuracy of the location.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationInfo.latitude">
      <summary>
        <para>Geographical device location latitude.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationInfo.longitude">
      <summary>
        <para>Geographical device location latitude.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationInfo.timestamp">
      <summary>
        <para>Timestamp (in seconds since 1970) when location was last time updated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationInfo.verticalAccuracy">
      <summary>
        <para>Vertical accuracy of the location.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LocationService">
      <summary>
        <para>Interface into location functionality.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationService.isEnabledByUser">
      <summary>
        <para>Specifies whether location service is enabled in user settings.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationService.lastData">
      <summary>
        <para>Last measured device geographical location.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LocationService.status">
      <summary>
        <para>Returns location service status.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LocationService.Start()">
      <summary>
        <para>Starts location service updates.  Last location coordinates could be.</para>
      </summary>
      <param name="desiredAccuracyInMeters"></param>
      <param name="updateDistanceInMeters"></param>
    </member>
    <member name="M:UnityEngine.LocationService.Start(System.Single)">
      <summary>
        <para>Starts location service updates.  Last location coordinates could be.</para>
      </summary>
      <param name="desiredAccuracyInMeters"></param>
      <param name="updateDistanceInMeters"></param>
    </member>
    <member name="M:UnityEngine.LocationService.Start(System.Single,System.Single)">
      <summary>
        <para>Starts location service updates.  Last location coordinates could be.</para>
      </summary>
      <param name="desiredAccuracyInMeters"></param>
      <param name="updateDistanceInMeters"></param>
    </member>
    <member name="M:UnityEngine.LocationService.Stop">
      <summary>
        <para>Stops location service updates. This could be useful for saving battery life.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LocationServiceStatus">
      <summary>
        <para>Describes location service status.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LocationServiceStatus.Failed">
      <summary>
        <para>Location service failed (user denied access to location service).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LocationServiceStatus.Initializing">
      <summary>
        <para>Location service is initializing, some time later it will switch to.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LocationServiceStatus.Running">
      <summary>
        <para>Location service is running and locations could be queried.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LocationServiceStatus.Stopped">
      <summary>
        <para>Location service is stopped.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LOD">
      <summary>
        <para>Structure for building a LOD for passing to the SetLODs function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LOD.fadeTransitionWidth">
      <summary>
        <para>Width of the cross-fade transition zone (proportion to the current LOD's whole length) [0-1]. Only used if it's not animated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LOD.renderers">
      <summary>
        <para>List of renderers for this LOD level.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LOD.screenRelativeTransitionHeight">
      <summary>
        <para>The screen relative height to use for the transition [0-1].</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LOD.#ctor(System.Single,UnityEngine.Renderer[])">
      <summary>
        <para>Construct a LOD.</para>
      </summary>
      <param name="screenRelativeTransitionHeight">The screen relative height to use for the transition [0-1].</param>
      <param name="renderers">An array of renderers to use for this LOD level.</param>
    </member>
    <member name="T:UnityEngine.LODFadeMode">
      <summary>
        <para>The LOD fade modes. Modes other than LODFadeMode.None will result in Unity calculating a blend factor for blending/interpolating between two neighbouring LODs and pass it to your shader.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LODFadeMode.CrossFade">
      <summary>
        <para>Perform cross-fade style blending between the current LOD and the next LOD if the distance to camera falls in the range specified by the LOD.fadeTransitionWidth of each LOD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LODFadeMode.None">
      <summary>
        <para>Indicates the LOD fading is turned off.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LODFadeMode.SpeedTree">
      <summary>
        <para>By specifying this mode, your LODGroup will perform a SpeedTree-style LOD fading scheme:


* For all the mesh LODs other than the last (most crude) mesh LOD, the fade factor is calculated as the percentage of the object's current screen height, compared to the whole range of the LOD. It is 1, if the camera is right at the position where the previous LOD switches out and 0, if the next LOD is just about to switch in.


* For the last mesh LOD and the billboard LOD, the cross-fade mode is used.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.LODGroup">
      <summary>
        <para>LODGroup lets you group multiple Renderers into LOD levels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.animateCrossFading">
      <summary>
        <para>Specify if the cross-fading should be animated by time. The animation duration is specified globally as crossFadeAnimationDuration.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.crossFadeAnimationDuration">
      <summary>
        <para>The cross-fading animation duration in seconds. ArgumentException will be thrown if it is set to zero or a negative value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.enabled">
      <summary>
        <para>Enable / Disable the LODGroup - Disabling will turn off all renderers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.fadeMode">
      <summary>
        <para>The LOD fade mode used.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.localReferencePoint">
      <summary>
        <para>The local reference point against which the LOD distance is calculated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.lodCount">
      <summary>
        <para>The number of LOD levels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.LODGroup.size">
      <summary>
        <para>The size of the LOD object in local space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LODGroup.ForceLOD(System.Int32)">
      <summary>
        <para></para>
      </summary>
      <param name="index">The LOD level to use. Passing index &lt; 0 will return to standard LOD processing.</param>
    </member>
    <member name="M:UnityEngine.LODGroup.GetLODs">
      <summary>
        <para>Returns the array of LODs.</para>
      </summary>
      <returns>
        <para>The LOD array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.LODGroup.RecalculateBounds">
      <summary>
        <para>Recalculate the bounding region for the LODGroup (Relatively slow, do not call often).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.LODGroup.SetLODs(UnityEngine.LOD[])">
      <summary>
        <para>Set the LODs for the LOD group. This will remove any existing LODs configured on the LODGroup.</para>
      </summary>
      <param name="lods">The LODs to use for this group.</param>
    </member>
    <member name="T:UnityEngine.Logger">
      <summary>
        <para>Initializes a new instance of the Logger.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Logger.filterLogType">
      <summary>
        <para>To selective enable debug log message.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Logger.logEnabled">
      <summary>
        <para>To runtime toggle debug logging [ON/OFF].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Logger.logHandler">
      <summary>
        <para>Set  Logger.ILogHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Logger.#ctor(UnityEngine.ILogHandler)">
      <summary>
        <para>Create a custom Logger.</para>
      </summary>
      <param name="logHandler">Pass in default log handler or custom log handler.</param>
    </member>
    <member name="M:UnityEngine.Logger.IsLogTypeAllowed(UnityEngine.LogType)">
      <summary>
        <para>Check logging is enabled based on the LogType.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <returns>
        <para>Retrun true in case logs of LogType will be logged otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Logger.Log(UnityEngine.LogType,System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.Log(UnityEngine.LogType,System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.Log(UnityEngine.LogType,System.String,System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.Log(UnityEngine.LogType,System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.Log(System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.Log(System.String,System.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.Log(System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>Logs message to the Unity Console using default logger.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogError(System.String,System.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an error message.</para>
      </summary>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogError(System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an error message.</para>
      </summary>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogException(System.Exception)">
      <summary>
        <para>A variant of Logger.Log that logs an exception message.</para>
      </summary>
      <param name="exception">Runtime Exception.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogException(System.Exception,UnityEngine.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an exception message.</para>
      </summary>
      <param name="exception">Runtime Exception.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogFormat(UnityEngine.LogType,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted message.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogFormat(UnityEngine.LogType,UnityEngine.Object,System.String,System.Object[])">
      <summary>
        <para>Logs a formatted message.</para>
      </summary>
      <param name="logType">The type of the log message.</param>
      <param name="context">Object to which the message applies.</param>
      <param name="format">A composite format string.</param>
      <param name="args">Format arguments.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogWarning(System.String,System.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an warning message.</para>
      </summary>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="M:UnityEngine.Logger.LogWarning(System.String,System.Object,UnityEngine.Object)">
      <summary>
        <para>A variant of Logger.Log that logs an warning message.</para>
      </summary>
      <param name="tag">Used to identify the source of a log message. It usually identifies the class where the log call occurs.</param>
      <param name="message">String or object to be converted to string representation for display.</param>
      <param name="context">Object to which the message applies.</param>
    </member>
    <member name="T:UnityEngine.LogType">
      <summary>
        <para>The type of the log message in Debug.logger.Log or delegate registered with Application.RegisterLogCallback.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LogType.Assert">
      <summary>
        <para>LogType used for Asserts. (These could also indicate an error inside Unity itself.)</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LogType.Error">
      <summary>
        <para>LogType used for Errors.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LogType.Exception">
      <summary>
        <para>LogType used for Exceptions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LogType.Log">
      <summary>
        <para>LogType used for regular log messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LogType.Warning">
      <summary>
        <para>LogType used for Warnings.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MasterServer">
      <summary>
        <para>The Master Server is used to make matchmaking between servers and clients easy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MasterServer.dedicatedServer">
      <summary>
        <para>Report this machine as a dedicated server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MasterServer.ipAddress">
      <summary>
        <para>The IP address of the master server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MasterServer.port">
      <summary>
        <para>The connection port of the master server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MasterServer.updateRate">
      <summary>
        <para>Set the minimum update rate for master server host information update.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MasterServer.ClearHostList">
      <summary>
        <para>Clear the host list which was received by MasterServer.PollHostList.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MasterServer.PollHostList">
      <summary>
        <para>Check for the latest host list received by using MasterServer.RequestHostList.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MasterServer.RegisterHost(System.String,System.String)">
      <summary>
        <para>Register this server on the master server.</para>
      </summary>
      <param name="gameTypeName"></param>
      <param name="gameName"></param>
      <param name="comment"></param>
    </member>
    <member name="M:UnityEngine.MasterServer.RegisterHost(System.String,System.String,System.String)">
      <summary>
        <para>Register this server on the master server.</para>
      </summary>
      <param name="gameTypeName"></param>
      <param name="gameName"></param>
      <param name="comment"></param>
    </member>
    <member name="M:UnityEngine.MasterServer.RequestHostList(System.String)">
      <summary>
        <para>Request a host list from the master server.</para>
      </summary>
      <param name="gameTypeName"></param>
    </member>
    <member name="M:UnityEngine.MasterServer.UnregisterHost">
      <summary>
        <para>Unregister this server from the master server.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MasterServerEvent">
      <summary>
        <para>Describes status messages from the master server as returned in MonoBehaviour.OnMasterServerEvent|OnMasterServerEvent.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MasterServerEvent.HostListReceived">
      <summary>
        <para>Received a host list from the master server.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MasterServerEvent.RegistrationFailedGameName">
      <summary>
        <para>Registration failed because an empty game name was given.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MasterServerEvent.RegistrationFailedGameType">
      <summary>
        <para>Registration failed because an empty game type was given.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MasterServerEvent.RegistrationFailedNoServer">
      <summary>
        <para>Registration failed because no server is running.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MasterServerEvent.RegistrationSucceeded">
      <summary>
        <para>Registration to master server succeeded, received confirmation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MatchTargetWeightMask">
      <summary>
        <para>To specify position and rotation weight mask for Animator::MatchTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MatchTargetWeightMask.positionXYZWeight">
      <summary>
        <para>Position XYZ weight.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MatchTargetWeightMask.rotationWeight">
      <summary>
        <para>Rotation weight.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MatchTargetWeightMask.#ctor(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>MatchTargetWeightMask contructor.</para>
      </summary>
      <param name="positionXYZWeight">Position XYZ weight.</param>
      <param name="rotationWeight">Rotation weight.</param>
    </member>
    <member name="T:UnityEngine.Material">
      <summary>
        <para>The material class.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.color">
      <summary>
        <para>The main material's color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.doubleSidedGI">
      <summary>
        <para>Gets and sets whether the Double Sided Global Illumination setting is enabled for this material.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.enableInstancing">
      <summary>
        <para>Gets and sets whether GPU instancing is enabled for this material.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.globalIlluminationFlags">
      <summary>
        <para>Defines how the material should interact with lightmaps and lightprobes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.mainTexture">
      <summary>
        <para>The material's texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.mainTextureOffset">
      <summary>
        <para>The texture offset of the main texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.mainTextureScale">
      <summary>
        <para>The texture scale of the main texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.passCount">
      <summary>
        <para>How many passes are in this material (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.renderQueue">
      <summary>
        <para>Render queue of this material.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.shader">
      <summary>
        <para>The shader used by the material.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Material.shaderKeywords">
      <summary>
        <para>Additional shader keywords set by this material.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Material.CopyPropertiesFromMaterial(UnityEngine.Material)">
      <summary>
        <para>Copy properties from other material into this material.</para>
      </summary>
      <param name="mat"></param>
    </member>
    <member name="M:UnityEngine.Material.#ctor(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="contents"></param>
    </member>
    <member name="M:UnityEngine.Material.#ctor(UnityEngine.Shader)">
      <summary>
        <para>Create a temporary Material.</para>
      </summary>
      <param name="shader">Create a material with a given Shader.</param>
      <param name="source">Create a material by copying all properties from another material.</param>
    </member>
    <member name="M:UnityEngine.Material.#ctor(UnityEngine.Material)">
      <summary>
        <para>Create a temporary Material.</para>
      </summary>
      <param name="shader">Create a material with a given Shader.</param>
      <param name="source">Create a material by copying all properties from another material.</param>
    </member>
    <member name="M:UnityEngine.Material.DisableKeyword(System.String)">
      <summary>
        <para>Unset a shader keyword.</para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="M:UnityEngine.Material.EnableKeyword(System.String)">
      <summary>
        <para>Sets a shader keyword that is enabled by this material.</para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="M:UnityEngine.Material.FindPass(System.String)">
      <summary>
        <para>Returns the index of the pass passName.</para>
      </summary>
      <param name="passName"></param>
    </member>
    <member name="M:UnityEngine.Material.GetColor(System.String)">
      <summary>
        <para>Get a named color value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetColor(System.Int32)">
      <summary>
        <para>Get a named color value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetColorArray(System.String)">
      <summary>
        <para>Get a named color array.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetColorArray(System.Int32)">
      <summary>
        <para>Get a named color array.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetColorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;)">
      <summary>
        <para>Fetch a named color array into a list.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetColorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;)">
      <summary>
        <para>Fetch a named color array into a list.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetFloat(System.String)">
      <summary>
        <para>Get a named float value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetFloat(System.Int32)">
      <summary>
        <para>Get a named float value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetFloatArray(System.String)">
      <summary>
        <para>Get a named float array.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
    </member>
    <member name="M:UnityEngine.Material.GetFloatArray(System.Int32)">
      <summary>
        <para>Get a named float array.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
    </member>
    <member name="M:UnityEngine.Material.GetFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Fetch a named float array into a list.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Fetch a named float array into a list.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetInt(System.String)">
      <summary>
        <para>Get a named integer value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetInt(System.Int32)">
      <summary>
        <para>Get a named integer value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetMatrix(System.String)">
      <summary>
        <para>Get a named matrix value from the shader.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetMatrix(System.Int32)">
      <summary>
        <para>Get a named matrix value from the shader.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetMatrixArray(System.String)">
      <summary>
        <para>Get a named matrix array.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
    </member>
    <member name="M:UnityEngine.Material.GetMatrixArray(System.Int32)">
      <summary>
        <para>Get a named matrix array.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
    </member>
    <member name="M:UnityEngine.Material.GetMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Fetch a named matrix array into a list.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Fetch a named matrix array into a list.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetPassName(System.Int32)">
      <summary>
        <para>Returns the name of the shader pass at index pass.</para>
      </summary>
      <param name="pass"></param>
    </member>
    <member name="M:UnityEngine.Material.GetShaderPassEnabled(System.String)">
      <summary>
        <para>Checks whether a given Shader pass is enabled on this Material.</para>
      </summary>
      <param name="passName">Shader pass name (case insensitive).</param>
      <returns>
        <para>True if the Shader pass is enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Material.GetTag(System.String,System.Boolean)">
      <summary>
        <para>Get the value of material's shader tag.</para>
      </summary>
      <param name="tag"></param>
      <param name="searchFallbacks"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.Material.GetTag(System.String,System.Boolean,System.String)">
      <summary>
        <para>Get the value of material's shader tag.</para>
      </summary>
      <param name="tag"></param>
      <param name="searchFallbacks"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.Material.GetTexture(System.String)">
      <summary>
        <para>Get a named texture.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetTexture(System.Int32)">
      <summary>
        <para>Get a named texture.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetTextureOffset(System.String)">
      <summary>
        <para>Gets the placement offset of texture propertyName.</para>
      </summary>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetTextureScale(System.String)">
      <summary>
        <para>Gets the placement scale of texture propertyName.</para>
      </summary>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetVector(System.String)">
      <summary>
        <para>Get a named vector value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetVector(System.Int32)">
      <summary>
        <para>Get a named vector value.</para>
      </summary>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:UnityEngine.Material.GetVectorArray(System.String)">
      <summary>
        <para>Get a named vector array.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
    </member>
    <member name="M:UnityEngine.Material.GetVectorArray(System.Int32)">
      <summary>
        <para>Get a named vector array.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
    </member>
    <member name="M:UnityEngine.Material.GetVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Fetch a named vector array into a list.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.GetVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Fetch a named vector array into a list.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The list to hold the returned array.</param>
    </member>
    <member name="M:UnityEngine.Material.HasProperty(System.String)">
      <summary>
        <para>Checks if material's shader has a property of a given name.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Material.HasProperty(System.Int32)">
      <summary>
        <para>Checks if material's shader has a property of a given name.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Material.IsKeywordEnabled(System.String)">
      <summary>
        <para>Is the shader keyword enabled on this material?</para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="M:UnityEngine.Material.Lerp(UnityEngine.Material,UnityEngine.Material,System.Single)">
      <summary>
        <para>Interpolate properties between two materials.</para>
      </summary>
      <param name="start"></param>
      <param name="end"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Material.SetBuffer(System.String,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Sets a named ComputeBuffer value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name.</param>
      <param name="value">The ComputeBuffer value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetBuffer(System.Int32,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Sets a named ComputeBuffer value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name.</param>
      <param name="value">The ComputeBuffer value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetColor(System.String,UnityEngine.Color)">
      <summary>
        <para>Sets a named color value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_Color".</param>
      <param name="value">Color value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetColor(System.Int32,UnityEngine.Color)">
      <summary>
        <para>Sets a named color value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_Color".</param>
      <param name="value">Color value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetColorArray(System.String,UnityEngine.Color[])">
      <summary>
        <para>Sets a color array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetColorArray(System.Int32,UnityEngine.Color[])">
      <summary>
        <para>Sets a color array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetColorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;)">
      <summary>
        <para>Sets a color array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetColorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;)">
      <summary>
        <para>Sets a color array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetFloat(System.String,System.Single)">
      <summary>
        <para>Sets a named float value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="value">Float value to set.</param>
      <param name="name">Property name, e.g. "_Glossiness".</param>
    </member>
    <member name="M:UnityEngine.Material.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>Sets a named float value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="value">Float value to set.</param>
      <param name="name">Property name, e.g. "_Glossiness".</param>
    </member>
    <member name="M:UnityEngine.Material.SetFloatArray(System.String,System.Single[])">
      <summary>
        <para>Sets a float array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID. Use Shader.PropertyToID to get this ID.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetFloatArray(System.Int32,System.Single[])">
      <summary>
        <para>Sets a float array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID. Use Shader.PropertyToID to get this ID.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Sets a float array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID. Use Shader.PropertyToID to get this ID.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Sets a float array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="nameID">Property name ID. Use Shader.PropertyToID to get this ID.</param>
      <param name="values">Array of values to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetInt(System.String,System.Int32)">
      <summary>
        <para>Sets a named integer value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="value">Integer value to set.</param>
      <param name="name">Property name, e.g. "_SrcBlend".</param>
    </member>
    <member name="M:UnityEngine.Material.SetInt(System.Int32,System.Int32)">
      <summary>
        <para>Sets a named integer value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="value">Integer value to set.</param>
      <param name="name">Property name, e.g. "_SrcBlend".</param>
    </member>
    <member name="M:UnityEngine.Material.SetMatrix(System.String,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets a named matrix for the shader.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_CubemapRotation".</param>
      <param name="value">Matrix value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetMatrix(System.Int32,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets a named matrix for the shader.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_CubemapRotation".</param>
      <param name="value">Matrix value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetMatrixArray(System.String,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Sets a matrix array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetMatrixArray(System.Int32,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Sets a matrix array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Sets a matrix array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Sets a matrix array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetOverrideTag(System.String,System.String)">
      <summary>
        <para>Sets an override tag/value on the material.</para>
      </summary>
      <param name="tag">Name of the tag to set.</param>
      <param name="val">Name of the value to set. Empty string to clear the override flag.</param>
    </member>
    <member name="M:UnityEngine.Material.SetPass(System.Int32)">
      <summary>
        <para>Activate the given pass for rendering.</para>
      </summary>
      <param name="pass">Shader pass number to setup.</param>
      <returns>
        <para>If false is returned, no rendering should be done.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Material.SetShaderPassEnabled(System.String,System.Boolean)">
      <summary>
        <para>Enables or disables a Shader pass on a per-Material level.</para>
      </summary>
      <param name="passName">Shader pass name (case insensitive).</param>
      <param name="enabled">Flag indicating whether this Shader pass should be enabled.</param>
    </member>
    <member name="M:UnityEngine.Material.SetTexture(System.String,UnityEngine.Texture)">
      <summary>
        <para>Sets a named texture.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_MainTex".</param>
      <param name="value">Texture to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetTexture(System.Int32,UnityEngine.Texture)">
      <summary>
        <para>Sets a named texture.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_MainTex".</param>
      <param name="value">Texture to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetTextureOffset(System.String,UnityEngine.Vector2)">
      <summary>
        <para>Sets the placement offset of texture propertyName.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, for example: "_MainTex".</param>
      <param name="value">Texture placement offset.</param>
    </member>
    <member name="M:UnityEngine.Material.SetTextureOffset(System.Int32,UnityEngine.Vector2)">
      <summary>
        <para>Sets the placement offset of texture propertyName.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, for example: "_MainTex".</param>
      <param name="value">Texture placement offset.</param>
    </member>
    <member name="M:UnityEngine.Material.SetTextureScale(System.String,UnityEngine.Vector2)">
      <summary>
        <para>Sets the placement scale of texture propertyName.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_MainTex".</param>
      <param name="value">Texture placement scale.</param>
    </member>
    <member name="M:UnityEngine.Material.SetTextureScale(System.Int32,UnityEngine.Vector2)">
      <summary>
        <para>Sets the placement scale of texture propertyName.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_MainTex".</param>
      <param name="value">Texture placement scale.</param>
    </member>
    <member name="M:UnityEngine.Material.SetVector(System.String,UnityEngine.Vector4)">
      <summary>
        <para>Sets a named vector value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_WaveAndDistance".</param>
      <param name="value">Vector value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetVector(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Sets a named vector value.</para>
      </summary>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
      <param name="name">Property name, e.g. "_WaveAndDistance".</param>
      <param name="value">Vector value to set.</param>
    </member>
    <member name="M:UnityEngine.Material.SetVectorArray(System.String,UnityEngine.Vector4[])">
      <summary>
        <para>Sets a vector array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetVectorArray(System.Int32,UnityEngine.Vector4[])">
      <summary>
        <para>Sets a vector array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Sets a vector array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="M:UnityEngine.Material.SetVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Sets a vector array property.</para>
      </summary>
      <param name="name">Property name.</param>
      <param name="values">Array of values to set.</param>
      <param name="nameID">Property name ID, use Shader.PropertyToID to get it.</param>
    </member>
    <member name="T:UnityEngine.MaterialGlobalIlluminationFlags">
      <summary>
        <para>How the material interacts with lightmaps and lightprobes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MaterialGlobalIlluminationFlags.AnyEmissive">
      <summary>
        <para>Helper Mask to be used to query the enum only based on whether realtime GI or baked GI is set, ignoring all other bits.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MaterialGlobalIlluminationFlags.BakedEmissive">
      <summary>
        <para>The emissive lighting affects baked Global Illumination. It emits lighting into baked lightmaps and baked lightprobes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MaterialGlobalIlluminationFlags.EmissiveIsBlack">
      <summary>
        <para>The emissive lighting is guaranteed to be black. This lets the lightmapping system know that it doesn't have to extract emissive lighting information from the material and can simply assume it is completely black.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MaterialGlobalIlluminationFlags.None">
      <summary>
        <para>The emissive lighting does not affect Global Illumination at all.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MaterialGlobalIlluminationFlags.RealtimeEmissive">
      <summary>
        <para>The emissive lighting will affect realtime Global Illumination. It emits lighting into realtime lightmaps and realtime lightprobes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MaterialPropertyBlock">
      <summary>
        <para>A block of material values to apply.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MaterialPropertyBlock.isEmpty">
      <summary>
        <para>Is the material property block empty? (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.Clear">
      <summary>
        <para>Clear material property values.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloat(System.String)">
      <summary>
        <para>Get a float from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloat(System.Int32)">
      <summary>
        <para>Get a float from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloatArray(System.String)">
      <summary>
        <para>Get a float array from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloatArray(System.Int32)">
      <summary>
        <para>Get a float array from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Fetch a float array from the property block into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Fetch a float array from the property block into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrix(System.String)">
      <summary>
        <para>Get a matrix from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrix(System.Int32)">
      <summary>
        <para>Get a matrix from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrixArray(System.String)">
      <summary>
        <para>Get a matrix array from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrixArray(System.Int32)">
      <summary>
        <para>Get a matrix array from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Fetch a matrix array from the property block into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Fetch a matrix array from the property block into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetTexture(System.String)">
      <summary>
        <para>Get a texture from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetTexture(System.Int32)">
      <summary>
        <para>Get a texture from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVector(System.String)">
      <summary>
        <para>Get a vector from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVector(System.Int32)">
      <summary>
        <para>Get a vector from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVectorArray(System.String)">
      <summary>
        <para>Get a vector array from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVectorArray(System.Int32)">
      <summary>
        <para>Get a vector array from the property block.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Fetch a vector array from the property block into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.GetVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Fetch a vector array from the property block into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetBuffer(System.String,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Set a ComputeBuffer property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The ComputeBuffer to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetBuffer(System.Int32,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Set a ComputeBuffer property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The ComputeBuffer to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetColor(System.String,UnityEngine.Color)">
      <summary>
        <para>Set a color property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The Color value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetColor(System.Int32,UnityEngine.Color)">
      <summary>
        <para>Set a color property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The Color value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetFloat(System.String,System.Single)">
      <summary>
        <para>Set a float property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The float value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>Set a float property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The float value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetFloatArray(System.String,System.Single[])">
      <summary>
        <para>Set a float array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetFloatArray(System.Int32,System.Single[])">
      <summary>
        <para>Set a float array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Set a float array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Set a float array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="values">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetMatrix(System.String,UnityEngine.Matrix4x4)">
      <summary>
        <para>Set a matrix property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The matrix value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetMatrix(System.Int32,UnityEngine.Matrix4x4)">
      <summary>
        <para>Set a matrix property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The matrix value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetMatrixArray(System.String,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Set a matrix array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="nameID">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetMatrixArray(System.Int32,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Set a matrix array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="nameID">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Set a matrix array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="nameID">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Set a matrix array property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="nameID">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetTexture(System.String,UnityEngine.Texture)">
      <summary>
        <para>Set a texture property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The Texture to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetTexture(System.Int32,UnityEngine.Texture)">
      <summary>
        <para>Set a texture property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The Texture to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetVector(System.String,UnityEngine.Vector4)">
      <summary>
        <para>Set a vector property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The Vector4 value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetVector(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Set a vector property.</para>
      </summary>
      <param name="name">The name of the property.</param>
      <param name="nameID">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="value">The Vector4 value to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetVectorArray(System.String,UnityEngine.Vector4[])">
      <summary>
        <para>Set a vector array property.</para>
      </summary>
      <param name="nameID">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetVectorArray(System.Int32,UnityEngine.Vector4[])">
      <summary>
        <para>Set a vector array property.</para>
      </summary>
      <param name="nameID">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Set a vector array property.</para>
      </summary>
      <param name="nameID">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The array to set.</param>
    </member>
    <member name="M:UnityEngine.MaterialPropertyBlock.SetVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Set a vector array property.</para>
      </summary>
      <param name="nameID">The name of the property.</param>
      <param name="values">The name ID of the property retrieved by Shader.PropertyToID.</param>
      <param name="name">The array to set.</param>
    </member>
    <member name="T:UnityEngine.Mathf">
      <summary>
        <para>A collection of common math functions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.Abs(System.Single)">
      <summary>
        <para>Returns the absolute value of f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Abs(System.Int32)">
      <summary>
        <para>Returns the absolute value of value.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Acos(System.Single)">
      <summary>
        <para>Returns the arc-cosine of f - the angle in radians whose cosine is f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Approximately(System.Single,System.Single)">
      <summary>
        <para>Compares two floating point values and returns true if they are similar.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Asin(System.Single)">
      <summary>
        <para>Returns the arc-sine of f - the angle in radians whose sine is f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Atan(System.Single)">
      <summary>
        <para>Returns the arc-tangent of f - the angle in radians whose tangent is f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Atan2(System.Single,System.Single)">
      <summary>
        <para>Returns the angle in radians whose Tan is y/x.</para>
      </summary>
      <param name="y"></param>
      <param name="x"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Ceil(System.Single)">
      <summary>
        <para>Returns the smallest integer greater to or equal to f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.CeilToInt(System.Single)">
      <summary>
        <para>Returns the smallest integer greater to or equal to f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Clamp(System.Single,System.Single,System.Single)">
      <summary>
        <para>Clamps a value between a minimum float and maximum float value.</para>
      </summary>
      <param name="value"></param>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Clamp(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Clamps value between min and max and returns value.</para>
      </summary>
      <param name="value"></param>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Clamp01(System.Single)">
      <summary>
        <para>Clamps value between 0 and 1 and returns value.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.ClosestPowerOfTwo(System.Int32)">
      <summary>
        <para>Returns the closest power of two value.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.CorrelatedColorTemperatureToRGB(System.Single)">
      <summary>
        <para>Convert a color temperature in Kelvin to RGB color.</para>
      </summary>
      <param name="kelvin">Temperature in Kelvin. Range 1000 to 40000 Kelvin.</param>
      <returns>
        <para>Correlated Color Temperature as floating point RGB color.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Mathf.Cos(System.Single)">
      <summary>
        <para>Returns the cosine of angle f in radians.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="F:UnityEngine.Mathf.Deg2Rad">
      <summary>
        <para>Degrees-to-radians conversion constant (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.DeltaAngle(System.Single,System.Single)">
      <summary>
        <para>Calculates the shortest difference between two given angles given in degrees.</para>
      </summary>
      <param name="current"></param>
      <param name="target"></param>
    </member>
    <member name="F:UnityEngine.Mathf.Epsilon">
      <summary>
        <para>A tiny floating point value (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.Exp(System.Single)">
      <summary>
        <para>Returns e raised to the specified power.</para>
      </summary>
      <param name="power"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Floor(System.Single)">
      <summary>
        <para>Returns the largest integer smaller to or equal to f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.FloorToInt(System.Single)">
      <summary>
        <para>Returns the largest integer smaller to or equal to f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.GammaToLinearSpace(System.Single)">
      <summary>
        <para>Converts the given value from gamma (sRGB) to linear color space.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="F:UnityEngine.Mathf.Infinity">
      <summary>
        <para>A representation of positive infinity (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.InverseLerp(System.Single,System.Single,System.Single)">
      <summary>
        <para>Calculates the linear parameter t that produces the interpolant value within the range [a, b].</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.IsPowerOfTwo(System.Int32)">
      <summary>
        <para>Returns true if the value is power of two.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Lerp(System.Single,System.Single,System.Single)">
      <summary>
        <para>Linearly interpolates between a and b by t.</para>
      </summary>
      <param name="a">The start value.</param>
      <param name="b">The end value.</param>
      <param name="t">The interpolation value between the two floats.</param>
      <returns>
        <para>The interpolated float result between the two float values.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Mathf.LerpAngle(System.Single,System.Single,System.Single)">
      <summary>
        <para>Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Mathf.LerpUnclamped(System.Single,System.Single,System.Single)">
      <summary>
        <para>Linearly interpolates between a and b by t with no limit to t.</para>
      </summary>
      <param name="a">The start value.</param>
      <param name="b">The end value.</param>
      <param name="t">The interpolation between the two floats.</param>
      <returns>
        <para>The float value as a result from the linear interpolation.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Mathf.LinearToGammaSpace(System.Single)">
      <summary>
        <para>Converts the given value from linear to gamma (sRGB) color space.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Log(System.Single,System.Single)">
      <summary>
        <para>Returns the logarithm of a specified number in a specified base.</para>
      </summary>
      <param name="f"></param>
      <param name="p"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Log(System.Single)">
      <summary>
        <para>Returns the natural (base e) logarithm of a specified number.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Log10(System.Single)">
      <summary>
        <para>Returns the base 10 logarithm of a specified number.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Max(System.Single,System.Single)">
      <summary>
        <para>Returns largest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Max(System.Single[])">
      <summary>
        <para>Returns largest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Max(System.Int32,System.Int32)">
      <summary>
        <para>Returns the largest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Max(System.Int32[])">
      <summary>
        <para>Returns the largest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Min(System.Single,System.Single)">
      <summary>
        <para>Returns the smallest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Min(System.Single[])">
      <summary>
        <para>Returns the smallest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Min(System.Int32,System.Int32)">
      <summary>
        <para>Returns the smallest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Min(System.Int32[])">
      <summary>
        <para>Returns the smallest of two or more values.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="values"></param>
    </member>
    <member name="M:UnityEngine.Mathf.MoveTowards(System.Single,System.Single,System.Single)">
      <summary>
        <para>Moves a value current towards target.</para>
      </summary>
      <param name="current">The current value.</param>
      <param name="target">The value to move towards.</param>
      <param name="maxDelta">The maximum change that should be applied to the value.</param>
    </member>
    <member name="M:UnityEngine.Mathf.MoveTowardsAngle(System.Single,System.Single,System.Single)">
      <summary>
        <para>Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.</para>
      </summary>
      <param name="current"></param>
      <param name="target"></param>
      <param name="maxDelta"></param>
    </member>
    <member name="F:UnityEngine.Mathf.NegativeInfinity">
      <summary>
        <para>A representation of negative infinity (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.NextPowerOfTwo(System.Int32)">
      <summary>
        <para>Returns the next power of two value.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Mathf.PerlinNoise(System.Single,System.Single)">
      <summary>
        <para>Generate 2D Perlin noise.</para>
      </summary>
      <param name="x">X-coordinate of sample point.</param>
      <param name="y">Y-coordinate of sample point.</param>
      <returns>
        <para>Value between 0.0 and 1.0.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.Mathf.PI">
      <summary>
        <para>The infamous 3.14159265358979... value (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.PingPong(System.Single,System.Single)">
      <summary>
        <para>PingPongs the value t, so that it is never larger than length and never smaller than 0.</para>
      </summary>
      <param name="t"></param>
      <param name="length"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Pow(System.Single,System.Single)">
      <summary>
        <para>Returns f raised to power p.</para>
      </summary>
      <param name="f"></param>
      <param name="p"></param>
    </member>
    <member name="F:UnityEngine.Mathf.Rad2Deg">
      <summary>
        <para>Radians-to-degrees conversion constant (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mathf.Repeat(System.Single,System.Single)">
      <summary>
        <para>Loops the value t, so that it is never larger than length and never smaller than 0.</para>
      </summary>
      <param name="t"></param>
      <param name="length"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Round(System.Single)">
      <summary>
        <para>Returns f rounded to the nearest integer.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.RoundToInt(System.Single)">
      <summary>
        <para>Returns f rounded to the nearest integer.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Sign(System.Single)">
      <summary>
        <para>Returns the sign of f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Sin(System.Single)">
      <summary>
        <para>Returns the sine of angle f in radians.</para>
      </summary>
      <param name="f">The argument as a radian.</param>
      <returns>
        <para>The return value between -1 and +1.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDamp(System.Single,System.Single,System.Single&amp;,System.Single)">
      <summary>
        <para>Gradually changes a value towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDamp(System.Single,System.Single,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Gradually changes a value towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDamp(System.Single,System.Single,System.Single&amp;,System.Single,System.Single,System.Single)">
      <summary>
        <para>Gradually changes a value towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDampAngle(System.Single,System.Single,System.Single&amp;,System.Single)">
      <summary>
        <para>Gradually changes an angle given in degrees towards a desired goal angle over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDampAngle(System.Single,System.Single,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Gradually changes an angle given in degrees towards a desired goal angle over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothDampAngle(System.Single,System.Single,System.Single&amp;,System.Single,System.Single,System.Single)">
      <summary>
        <para>Gradually changes an angle given in degrees towards a desired goal angle over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Mathf.SmoothStep(System.Single,System.Single,System.Single)">
      <summary>
        <para>Interpolates between min and max with smoothing at the limits.</para>
      </summary>
      <param name="from"></param>
      <param name="to"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Sqrt(System.Single)">
      <summary>
        <para>Returns square root of f.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="M:UnityEngine.Mathf.Tan(System.Single)">
      <summary>
        <para>Returns the tangent of angle f in radians.</para>
      </summary>
      <param name="f"></param>
    </member>
    <member name="T:UnityEngine.Matrix4x4">
      <summary>
        <para>A standard 4x4 transformation matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.determinant">
      <summary>
        <para>The determinant of the matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.identity">
      <summary>
        <para>Returns the identity matrix (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.inverse">
      <summary>
        <para>The inverse of this matrix (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.isIdentity">
      <summary>
        <para>Is this the identity matrix?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.transpose">
      <summary>
        <para>Returns the transpose of this matrix (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.zero">
      <summary>
        <para>Returns a matrix with all elements set to zero (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Matrix4x4.GetColumn(System.Int32)">
      <summary>
        <para>Get a column of the matrix.</para>
      </summary>
      <param name="i"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.GetRow(System.Int32)">
      <summary>
        <para>Returns a row of the matrix.</para>
      </summary>
      <param name="i"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.LookAt(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Given a source point, a target point, and an up vector, computes a transformation matrix that corresponds to a camera viewing the target from the source, such that the right-hand vector is perpendicular to the up vector.</para>
      </summary>
      <param name="from">The source point.</param>
      <param name="to">The target point.</param>
      <param name="up">The vector describing the up direction (typically Vector3.up).</param>
      <returns>
        <para>The resulting transformation matrix.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Matrix4x4.MultiplyPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms a position by this matrix (generic).</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.MultiplyPoint3x4(UnityEngine.Vector3)">
      <summary>
        <para>Transforms a position by this matrix (fast).</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.MultiplyVector(UnityEngine.Vector3)">
      <summary>
        <para>Transforms a direction by this matrix.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="?:UnityEngine.Matrix4x4.op_Multiply(UnityEngine.Matrix4x4,UnityEngine.Matrix4x4)">
      <summary>
        <para>Multiplies two matrices.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Matrix4x4.op_Multiply(UnityEngine.Matrix4x4,UnityEngine.Vector4)">
      <summary>
        <para>Transforms a Vector4 by a matrix.</para>
      </summary>
      <param name="lhs"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.Ortho(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates an orthogonal projection matrix.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
      <param name="bottom"></param>
      <param name="top"></param>
      <param name="zNear"></param>
      <param name="zFar"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.Perspective(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a perspective projection matrix.</para>
      </summary>
      <param name="fov"></param>
      <param name="aspect"></param>
      <param name="zNear"></param>
      <param name="zFar"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.Scale(UnityEngine.Vector3)">
      <summary>
        <para>Creates a scaling matrix.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.SetColumn(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Sets a column of the matrix.</para>
      </summary>
      <param name="i"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.SetRow(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Sets a row of the matrix.</para>
      </summary>
      <param name="i"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.SetTRS(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Sets this matrix to a translation, rotation and scaling matrix.</para>
      </summary>
      <param name="pos"></param>
      <param name="q"></param>
      <param name="s"></param>
    </member>
    <member name="P:UnityEngine.Matrix4x4.this">
      <summary>
        <para>Access element at [row, column].</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Matrix4x4.this">
      <summary>
        <para>Access element at sequential index (0..15 inclusive).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Matrix4x4.ToString">
      <summary>
        <para>Returns a nicely formatted string for this matrix.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for this matrix.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Matrix4x4.TRS(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Creates a translation, rotation and scaling matrix.</para>
      </summary>
      <param name="pos"></param>
      <param name="q"></param>
      <param name="s"></param>
    </member>
    <member name="T:UnityEngine.Mesh">
      <summary>
        <para>A class that allows creating or modifying meshes from scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.bindposes">
      <summary>
        <para>The bind poses. The bind pose at each index refers to the bone with the same index.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.blendShapeCount">
      <summary>
        <para>Returns BlendShape count on this mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.boneWeights">
      <summary>
        <para>The bone weights of each vertex.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.bounds">
      <summary>
        <para>The bounding volume of the mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.colors">
      <summary>
        <para>Vertex colors of the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.colors32">
      <summary>
        <para>Vertex colors of the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.isReadable">
      <summary>
        <para>Returns state of the Read/Write Enabled checkbox when model was imported.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.normals">
      <summary>
        <para>The normals of the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.subMeshCount">
      <summary>
        <para>The number of sub-Meshes. Every Material has a separate triangle list.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.tangents">
      <summary>
        <para>The tangents of the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.triangles">
      <summary>
        <para>An array containing all triangles in the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.uv">
      <summary>
        <para>The base texture coordinates of the Mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.uv2">
      <summary>
        <para>The second texture coordinate set of the mesh, if present.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.uv3">
      <summary>
        <para>The third texture coordinate set of the mesh, if present.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.uv4">
      <summary>
        <para>The fourth texture coordinate set of the mesh, if present.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.vertexBufferCount">
      <summary>
        <para>Get the number of vertex buffers present in the Mesh. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.vertexCount">
      <summary>
        <para>Returns the number of vertices in the Mesh (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Mesh.vertices">
      <summary>
        <para>Returns a copy of the vertex positions or assigns a new vertex positions array.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.AddBlendShapeFrame(System.String,System.Single,UnityEngine.Vector3[],UnityEngine.Vector3[],UnityEngine.Vector3[])">
      <summary>
        <para>Adds a new blend shape frame.</para>
      </summary>
      <param name="shapeName">Name of the blend shape to add a frame to.</param>
      <param name="frameWeight">Weight for the frame being added.</param>
      <param name="deltaVertices">Delta vertices for the frame being added.</param>
      <param name="deltaNormals">Delta normals for the frame being added.</param>
      <param name="deltaTangents">Delta tangents for the frame being added.</param>
    </member>
    <member name="M:UnityEngine.Mesh.Clear(System.Boolean)">
      <summary>
        <para>Clears all vertex data and all triangle indices.</para>
      </summary>
      <param name="keepVertexLayout"></param>
    </member>
    <member name="M:UnityEngine.Mesh.ClearBlendShapes">
      <summary>
        <para>Clears all blend shapes from Mesh.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.CombineMeshes(UnityEngine.CombineInstance[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Combines several Meshes into this Mesh.</para>
      </summary>
      <param name="combine">Descriptions of the Meshes to combine.</param>
      <param name="mergeSubMeshes">Defines whether Meshes should be combined into a single sub-Mesh.</param>
      <param name="useMatrices">Defines whether the transforms supplied in the CombineInstance array should be used or ignored.</param>
      <param name="hasLightmapData"></param>
    </member>
    <member name="M:UnityEngine.Mesh.#ctor">
      <summary>
        <para>Creates an empty Mesh.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.GetBindposes(System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Gets the bind poses for this instance.</para>
      </summary>
      <param name="bindposes">A list of bind poses to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBlendShapeFrameCount(System.Int32)">
      <summary>
        <para>Returns the frame count for a blend shape.</para>
      </summary>
      <param name="shapeIndex">The shape index to get frame count from.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBlendShapeFrameVertices(System.Int32,System.Int32,UnityEngine.Vector3[],UnityEngine.Vector3[],UnityEngine.Vector3[])">
      <summary>
        <para>Retreives deltaVertices, deltaNormals and deltaTangents of a blend shape frame.</para>
      </summary>
      <param name="shapeIndex">The shape index of the frame.</param>
      <param name="frameIndex">The frame index to get the weight from.</param>
      <param name="deltaVertices">Delta vertices output array for the frame being retreived.</param>
      <param name="deltaNormals">Delta normals output array for the frame being retreived.</param>
      <param name="deltaTangents">Delta tangents output array for the frame being retreived.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBlendShapeFrameWeight(System.Int32,System.Int32)">
      <summary>
        <para>Returns the weight of a blend shape frame.</para>
      </summary>
      <param name="shapeIndex">The shape index of the frame.</param>
      <param name="frameIndex">The frame index to get the weight from.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBlendShapeIndex(System.String)">
      <summary>
        <para>Returns index of BlendShape by given name.</para>
      </summary>
      <param name="blendShapeName"></param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBlendShapeName(System.Int32)">
      <summary>
        <para>Returns name of BlendShape by given index.</para>
      </summary>
      <param name="shapeIndex"></param>
    </member>
    <member name="M:UnityEngine.Mesh.GetBoneWeights(System.Collections.Generic.List`1&lt;UnityEngine.BoneWeight&gt;)">
      <summary>
        <para>Gets the bone weights for this instance.</para>
      </summary>
      <param name="boneWeights">A list of bone weights to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetColors(System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;)">
      <summary>
        <para>Gets the vertex colors for this instance.</para>
      </summary>
      <param name="colors">A list of vertex colors to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetColors(System.Collections.Generic.List`1&lt;UnityEngine.Color32&gt;)">
      <summary>
        <para>Gets the vertex colors for this instance.</para>
      </summary>
      <param name="colors">A list of vertex colors to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetIndexCount(System.Int32)">
      <summary>
        <para>Gets the index count of the given submesh.</para>
      </summary>
      <param name="submesh"></param>
    </member>
    <member name="M:UnityEngine.Mesh.GetIndexStart(System.Int32)">
      <summary>
        <para>Gets the starting index location within the Mesh's index buffer, for the given submesh.</para>
      </summary>
      <param name="submesh"></param>
    </member>
    <member name="M:UnityEngine.Mesh.GetIndices(System.Collections.Generic.List`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Gets the index buffer for the specified sub mesh on this instance.</para>
      </summary>
      <param name="indices">A list of indices to populate.</param>
      <param name="submesh">The sub mesh on this instance. See subMeshCount.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetIndices(System.Int32)">
      <summary>
        <para>Gets the index buffer for the specified sub mesh on this instance.</para>
      </summary>
      <param name="indices">A list of indices to populate.</param>
      <param name="submesh">The sub mesh on this instance. See subMeshCount.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetNativeIndexBufferPtr">
      <summary>
        <para>Retrieves a native (underlying graphics API) pointer to the index buffer.</para>
      </summary>
      <returns>
        <para>Pointer to the underlying graphics API index buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Mesh.GetNativeVertexBufferPtr(System.Int32)">
      <summary>
        <para>Retrieves a native (underlying graphics API) pointer to the vertex buffer.</para>
      </summary>
      <param name="bufferIndex">Which vertex buffer to get (some Meshes might have more than one). See vertexBufferCount.</param>
      <returns>
        <para>Pointer to the underlying graphics API vertex buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Mesh.GetNormals(System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Gets the vertex normals for this instance.</para>
      </summary>
      <param name="normals">A list of vertex normals to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetTangents(System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Gets the tangents for this instance.</para>
      </summary>
      <param name="tangents">A list of tangents to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetTopology(System.Int32)">
      <summary>
        <para>Gets the topology of a sub-Mesh.</para>
      </summary>
      <param name="submesh"></param>
    </member>
    <member name="M:UnityEngine.Mesh.GetTriangles(System.Collections.Generic.List`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Gets the triangle list for the specified sub mesh on this instance.</para>
      </summary>
      <param name="triangles">A list of vertex indices to populate.</param>
      <param name="submesh">The sub mesh on this instance. See subMeshCount.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetTriangles(System.Int32)">
      <summary>
        <para>Gets the triangle list for the specified sub mesh on this instance.</para>
      </summary>
      <param name="triangles">A list of vertex indices to populate.</param>
      <param name="submesh">The sub mesh on this instance. See subMeshCount.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetUVs(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Get the UVs for a given chanel.</para>
      </summary>
      <param name="channel">The UV Channel (zero-indexed).</param>
      <param name="uvs">List of UVs to get for the given index.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetUVs(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Get the UVs for a given chanel.</para>
      </summary>
      <param name="channel">The UV Channel (zero-indexed).</param>
      <param name="uvs">List of UVs to get for the given index.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetUVs(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Get the UVs for a given chanel.</para>
      </summary>
      <param name="channel">The UV Channel (zero-indexed).</param>
      <param name="uvs">List of UVs to get for the given index.</param>
    </member>
    <member name="M:UnityEngine.Mesh.GetVertices(System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Gets the vertex positions for this instance.</para>
      </summary>
      <param name="vertices">A list of vertex positions to populate.</param>
    </member>
    <member name="M:UnityEngine.Mesh.MarkDynamic">
      <summary>
        <para>Optimize mesh for frequent updates.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.Optimize">
      <summary>
        <para>Optimizes the Mesh for display.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.RecalculateBounds">
      <summary>
        <para>Recalculate the bounding volume of the Mesh from the vertices.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.RecalculateNormals">
      <summary>
        <para>Recalculates the normals of the Mesh from the triangles and vertices.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.RecalculateTangents">
      <summary>
        <para>Recalculates the tangents of the Mesh from the normals and texture coordinates.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Mesh.SetColors(System.Collections.Generic.List`1&lt;UnityEngine.Color&gt;)">
      <summary>
        <para>Vertex colors of the Mesh.</para>
      </summary>
      <param name="inColors">Per-Vertex Colours.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetColors(System.Collections.Generic.List`1&lt;UnityEngine.Color32&gt;)">
      <summary>
        <para>Vertex colors of the Mesh.</para>
      </summary>
      <param name="inColors">Per-Vertex Colours.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetIndices(System.Int32[],UnityEngine.MeshTopology,System.Int32,System.Boolean)">
      <summary>
        <para>Sets the index buffer for the sub-Mesh.</para>
      </summary>
      <param name="indices">The array of indices that define the Mesh.</param>
      <param name="topology">The topology of the Mesh, e.g: Triangles, Lines, Quads, Points, etc. See MeshTopology.</param>
      <param name="submesh">The submesh to modify.</param>
      <param name="calculateBounds">Calculate the bounding box of the Mesh after setting the indices. This is done by default.
Use false when you want to use the existing bounding box and reduce the CPU cost of setting the indices.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetIndices(System.Int32[],UnityEngine.MeshTopology,System.Int32)">
      <summary>
        <para>Sets the index buffer for the sub-Mesh.</para>
      </summary>
      <param name="indices">The array of indices that define the Mesh.</param>
      <param name="topology">The topology of the Mesh, e.g: Triangles, Lines, Quads, Points, etc. See MeshTopology.</param>
      <param name="submesh">The submesh to modify.</param>
      <param name="calculateBounds">Calculate the bounding box of the Mesh after setting the indices. This is done by default.
Use false when you want to use the existing bounding box and reduce the CPU cost of setting the indices.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetNormals(System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Set the normals of the Mesh.</para>
      </summary>
      <param name="inNormals">Per-vertex normals.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetTangents(System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Set the tangents of the Mesh.</para>
      </summary>
      <param name="inTangents">Per-vertex tangents.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetTriangles(System.Collections.Generic.List`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Sets the triangle list for the sub-Mesh.</para>
      </summary>
      <param name="triangles">The list of indices that define the triangles.</param>
      <param name="submesh">The submesh to modify.</param>
      <param name="calculateBounds">Calculate the bounding box of the Mesh after setting the triangles. This is done by default.
Use false when you want to use the existing bounding box and reduce the CPU cost of setting the triangles.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetTriangles(System.Int32[],System.Int32)">
      <summary>
        <para>Sets the triangle list for the sub-Mesh.</para>
      </summary>
      <param name="triangles">The list of indices that define the triangles.</param>
      <param name="submesh">The submesh to modify.</param>
      <param name="calculateBounds">Calculate the bounding box of the Mesh after setting the triangles. This is done by default.
Use false when you want to use the existing bounding box and reduce the CPU cost of setting the triangles.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetUVs(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Set the UVs for a given chanel.</para>
      </summary>
      <param name="channel">The UV Channel (zero-indexed).</param>
      <param name="uvs">List of UVs to set for the given index.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetUVs(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Set the UVs for a given chanel.</para>
      </summary>
      <param name="channel">The UV Channel (zero-indexed).</param>
      <param name="uvs">List of UVs to set for the given index.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetUVs(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Set the UVs for a given chanel.</para>
      </summary>
      <param name="channel">The UV Channel (zero-indexed).</param>
      <param name="uvs">List of UVs to set for the given index.</param>
    </member>
    <member name="M:UnityEngine.Mesh.SetVertices(System.Collections.Generic.List`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Assigns a new vertex positions array.</para>
      </summary>
      <param name="inVertices">Per-vertex position.</param>
    </member>
    <member name="M:UnityEngine.Mesh.UploadMeshData(System.Boolean)">
      <summary>
        <para>Upload previously done Mesh modifications to the graphics API.</para>
      </summary>
      <param name="markNoLongerReadable">Frees up system memory copy of mesh data when set to true.</param>
      <param name="markNoLogerReadable"></param>
    </member>
    <member name="T:UnityEngine.MeshCollider">
      <summary>
        <para>A mesh collider allows you to do between meshes and primitives.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshCollider.convex">
      <summary>
        <para>Use a convex collider from the mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshCollider.inflateMesh">
      <summary>
        <para>Allow the physics engine to increase the volume of the input mesh in attempt to generate a valid convex mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshCollider.sharedMesh">
      <summary>
        <para>The mesh object used for collision detection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshCollider.skinWidth">
      <summary>
        <para>Used when set to inflateMesh to determine how much inflation is acceptable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshCollider.smoothSphereCollisions">
      <summary>
        <para>Uses interpolated normals for sphere collisions instead of flat polygonal normals.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MeshFilter">
      <summary>
        <para>A class to access the Mesh of the.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshFilter.mesh">
      <summary>
        <para>Returns the instantiated Mesh assigned to the mesh filter.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshFilter.sharedMesh">
      <summary>
        <para>Returns the shared mesh of the mesh filter.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MeshParticleEmitter">
      <summary>
        <para>Class used to allow GameObject.AddComponent / GameObject.GetComponent to be used.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MeshRenderer">
      <summary>
        <para>Renders meshes inserted by the MeshFilter or TextMesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MeshRenderer.additionalVertexStreams">
      <summary>
        <para>Vertex attributes in this mesh will override or add attributes of the primary mesh in the MeshRenderer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MeshTopology">
      <summary>
        <para>Topology of Mesh faces.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MeshTopology.Lines">
      <summary>
        <para>Mesh is made from lines.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MeshTopology.LineStrip">
      <summary>
        <para>Mesh is a line strip.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MeshTopology.Points">
      <summary>
        <para>Mesh is made from points.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MeshTopology.Quads">
      <summary>
        <para>Mesh is made from quads.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MeshTopology.Triangles">
      <summary>
        <para>Mesh is made from triangles.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Microphone">
      <summary>
        <para>Use this class to record to an AudioClip using a connected microphone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Microphone.devices">
      <summary>
        <para>A list of available microphone devices, identified by name.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Microphone.End(System.String)">
      <summary>
        <para>Stops recording.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.GetDeviceCaps(System.String,System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Get the frequency capabilities of a device.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
      <param name="minFreq">Returns the minimum sampling frequency of the device.</param>
      <param name="maxFreq">Returns the maximum sampling frequency of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.GetPosition(System.String)">
      <summary>
        <para>Get the position in samples of the recording.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.IsRecording(System.String)">
      <summary>
        <para>Query if a device is currently recording.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.Start(System.String,System.Boolean,System.Int32,System.Int32)">
      <summary>
        <para>Start Recording with device.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
      <param name="loop">Indicates whether the recording should continue recording if lengthSec is reached, and wrap around and record from the beginning of the AudioClip.</param>
      <param name="lengthSec">Is the length of the AudioClip produced by the recording.</param>
      <param name="frequency">The sample rate of the AudioClip produced by the recording.</param>
      <returns>
        <para>The function returns null if the recording fails to start.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.MonoBehaviour">
      <summary>
        <para>MonoBehaviour is the base class from which every Unity script derives.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.print(System.Object)">
      <summary>
        <para>Logs message to the Unity Console (identical to Debug.Log).</para>
      </summary>
      <param name="message"></param>
    </member>
    <member name="P:UnityEngine.MonoBehaviour.runInEditMode">
      <summary>
        <para>Allow a specific instance of a MonoBehaviour to run in edit mode (only available in the editor).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MonoBehaviour.useGUILayout">
      <summary>
        <para>Disabling this lets you skip the GUI layout phase.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.CancelInvoke">
      <summary>
        <para>Cancels all Invoke calls on this MonoBehaviour.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)">
      <summary>
        <para>Cancels all Invoke calls with name methodName on this behaviour.</para>
      </summary>
      <param name="methodName"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)">
      <summary>
        <para>Invokes the method methodName in time seconds.</para>
      </summary>
      <param name="methodName"></param>
      <param name="time"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)">
      <summary>
        <para>Invokes the method methodName in time seconds, then repeatedly every repeatRate seconds.</para>
      </summary>
      <param name="methodName"></param>
      <param name="time"></param>
      <param name="repeatRate"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.IsInvoking(System.String)">
      <summary>
        <para>Is any invoke on methodName pending?</para>
      </summary>
      <param name="methodName"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.IsInvoking">
      <summary>
        <para>Is any invoke pending on this MonoBehaviour?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)">
      <summary>
        <para>Starts a coroutine.</para>
      </summary>
      <param name="routine"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)">
      <summary>
        <para>Starts a coroutine named methodName.</para>
      </summary>
      <param name="methodName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)">
      <summary>
        <para>Starts a coroutine named methodName.</para>
      </summary>
      <param name="methodName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StopAllCoroutines">
      <summary>
        <para>Stops all coroutines running on this behaviour.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)">
      <summary>
        <para>Stops the first coroutine named methodName, or the coroutine stored in routine running on this behaviour.</para>
      </summary>
      <param name="methodName">Name of coroutine.</param>
      <param name="routine">Name of the function in code.</param>
    </member>
    <member name="M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)">
      <summary>
        <para>Stops the first coroutine named methodName, or the coroutine stored in routine running on this behaviour.</para>
      </summary>
      <param name="methodName">Name of coroutine.</param>
      <param name="routine">Name of the function in code.</param>
    </member>
    <member name="T:UnityEngine.Motion">
      <summary>
        <para>Base class for AnimationClips and BlendTrees.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MotionVectorGenerationMode">
      <summary>
        <para>The type of motion vectors that should be generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MotionVectorGenerationMode.Camera">
      <summary>
        <para>Use only camera movement to track motion.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MotionVectorGenerationMode.ForceNoMotion">
      <summary>
        <para>Do not track motion. Motion vectors will be 0.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.MotionVectorGenerationMode.Object">
      <summary>
        <para>Use a specific pass (if required) to track motion.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MovieTexture">
      <summary>
        <para>Movie Textures are textures onto which movies are played back.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.audioClip">
      <summary>
        <para>Returns the AudioClip belonging to the MovieTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.duration">
      <summary>
        <para>The time, in seconds, that the movie takes to play back completely.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.isPlaying">
      <summary>
        <para>Returns whether the movie is playing or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.isReadyToPlay">
      <summary>
        <para>If the movie is downloading from a web site, this returns if enough data has been downloaded so playback should be able to start without interruptions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.loop">
      <summary>
        <para>Set this to true to make the movie loop.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MovieTexture.Pause">
      <summary>
        <para>Pauses playing the movie.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MovieTexture.Play">
      <summary>
        <para>Starts playing the movie.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MovieTexture.Stop">
      <summary>
        <para>Stops playing the movie, and rewinds it to the beginning.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MultilineAttribute">
      <summary>
        <para>Attribute to make a string be edited with a multi-line textfield.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MultilineAttribute.#ctor">
      <summary>
        <para>Attribute used to make a string value be shown in a multiline textarea.</para>
      </summary>
      <param name="lines">How many lines of text to make room for. Default is 3.</param>
    </member>
    <member name="M:UnityEngine.MultilineAttribute.#ctor(System.Int32)">
      <summary>
        <para>Attribute used to make a string value be shown in a multiline textarea.</para>
      </summary>
      <param name="lines">How many lines of text to make room for. Default is 3.</param>
    </member>
    <member name="T:UnityEngine.Network">
      <summary>
        <para>The network class is at the heart of the network implementation and provides the core functions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.connections">
      <summary>
        <para>All connected players.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.connectionTesterIP">
      <summary>
        <para>The IP address of the connection tester used in Network.TestConnection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.connectionTesterPort">
      <summary>
        <para>The port of the connection tester used in Network.TestConnection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.incomingPassword">
      <summary>
        <para>Set the password for the server (for incoming connections).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.isClient">
      <summary>
        <para>Returns true if your peer type is client.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.isMessageQueueRunning">
      <summary>
        <para>Enable or disable the processing of network messages.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.isServer">
      <summary>
        <para>Returns true if your peer type is server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.logLevel">
      <summary>
        <para>Set the log level for network messages (default is Off).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.maxConnections">
      <summary>
        <para>Set the maximum amount of connections/players allowed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.minimumAllocatableViewIDs">
      <summary>
        <para>Get or set the minimum number of ViewID numbers in the ViewID pool given to clients by the server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.natFacilitatorIP">
      <summary>
        <para>The IP address of the NAT punchthrough facilitator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.natFacilitatorPort">
      <summary>
        <para>The port of the NAT punchthrough facilitator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.peerType">
      <summary>
        <para>The status of the peer type, i.e. if it is disconnected, connecting, server or client.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.player">
      <summary>
        <para>Get the local NetworkPlayer instance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.proxyIP">
      <summary>
        <para>The IP address of the proxy server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.proxyPassword">
      <summary>
        <para>Set the proxy server password.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.proxyPort">
      <summary>
        <para>The port of the proxy server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.sendRate">
      <summary>
        <para>The default send rate of network updates for all Network Views.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.time">
      <summary>
        <para>Get the current network time (seconds).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Network.useProxy">
      <summary>
        <para>Indicate if proxy support is needed, in which case traffic is relayed through the proxy server.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Network.AllocateViewID">
      <summary>
        <para>Query for the next available network view ID number and allocate it (reserve).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Network.CloseConnection(UnityEngine.NetworkPlayer,System.Boolean)">
      <summary>
        <para>Close the connection to another system.</para>
      </summary>
      <param name="target"></param>
      <param name="sendDisconnectionNotification"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(System.String,System.Int32)">
      <summary>
        <para>Connect to the specified host (ip or domain name) and server port.</para>
      </summary>
      <param name="IP"></param>
      <param name="remotePort"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(System.String,System.Int32,System.String)">
      <summary>
        <para>Connect to the specified host (ip or domain name) and server port.</para>
      </summary>
      <param name="IP"></param>
      <param name="remotePort"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(System.String[],System.Int32)">
      <summary>
        <para>This function is exactly like Network.Connect but can accept an array of IP addresses.</para>
      </summary>
      <param name="IPs"></param>
      <param name="remotePort"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(System.String[],System.Int32,System.String)">
      <summary>
        <para>This function is exactly like Network.Connect but can accept an array of IP addresses.</para>
      </summary>
      <param name="IPs"></param>
      <param name="remotePort"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(System.String)">
      <summary>
        <para>Connect to a server GUID. NAT punchthrough can only be performed this way.</para>
      </summary>
      <param name="GUID"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(System.String,System.String)">
      <summary>
        <para>Connect to a server GUID. NAT punchthrough can only be performed this way.</para>
      </summary>
      <param name="GUID"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(UnityEngine.HostData)">
      <summary>
        <para>Connect to the host represented by a HostData structure returned by the Master Server.</para>
      </summary>
      <param name="hostData"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Connect(UnityEngine.HostData,System.String)">
      <summary>
        <para>Connect to the host represented by a HostData structure returned by the Master Server.</para>
      </summary>
      <param name="hostData"></param>
      <param name="password"></param>
    </member>
    <member name="M:UnityEngine.Network.Destroy(UnityEngine.NetworkViewID)">
      <summary>
        <para>Destroy the object associated with this view ID across the network.</para>
      </summary>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.Network.Destroy(UnityEngine.GameObject)">
      <summary>
        <para>Destroy the object across the network.</para>
      </summary>
      <param name="gameObject"></param>
    </member>
    <member name="M:UnityEngine.Network.DestroyPlayerObjects(UnityEngine.NetworkPlayer)">
      <summary>
        <para>Destroy all the objects based on view IDs belonging to this player.</para>
      </summary>
      <param name="playerID"></param>
    </member>
    <member name="M:UnityEngine.Network.Disconnect()">
      <summary>
        <para>Close all open connections and shuts down the network interface.</para>
      </summary>
      <param name="timeout"></param>
    </member>
    <member name="M:UnityEngine.Network.Disconnect(System.Int32)">
      <summary>
        <para>Close all open connections and shuts down the network interface.</para>
      </summary>
      <param name="timeout"></param>
    </member>
    <member name="M:UnityEngine.Network.GetAveragePing(UnityEngine.NetworkPlayer)">
      <summary>
        <para>The last average ping time to the given player in milliseconds.</para>
      </summary>
      <param name="player"></param>
    </member>
    <member name="M:UnityEngine.Network.GetLastPing(UnityEngine.NetworkPlayer)">
      <summary>
        <para>The last ping time to the given player in milliseconds.</para>
      </summary>
      <param name="player"></param>
    </member>
    <member name="M:UnityEngine.Network.HavePublicAddress">
      <summary>
        <para>Check if this machine has a public IP address.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Network.InitializeSecurity">
      <summary>
        <para>Initializes security layer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Network.InitializeServer(System.Int32,System.Int32)">
      <summary>
        <para>Initialize the server.</para>
      </summary>
      <param name="connections"></param>
      <param name="listenPort"></param>
      <param name="useNat"></param>
    </member>
    <member name="M:UnityEngine.Network.InitializeServer(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Initialize the server.</para>
      </summary>
      <param name="connections"></param>
      <param name="listenPort"></param>
      <param name="useNat"></param>
    </member>
    <member name="M:UnityEngine.Network.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32)">
      <summary>
        <para>Network instantiate a prefab.</para>
      </summary>
      <param name="prefab"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <param name="group"></param>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCs(UnityEngine.NetworkPlayer)">
      <summary>
        <para>Remove all RPC functions which belong to this player ID.</para>
      </summary>
      <param name="playerID"></param>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCs(UnityEngine.NetworkPlayer,System.Int32)">
      <summary>
        <para>Remove all RPC functions which belong to this player ID and were sent based on the given group.</para>
      </summary>
      <param name="playerID"></param>
      <param name="group"></param>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCs(UnityEngine.NetworkViewID)">
      <summary>
        <para>Remove the RPC function calls accociated with this view ID number.</para>
      </summary>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.Network.RemoveRPCsInGroup(System.Int32)">
      <summary>
        <para>Remove all RPC functions which belong to given group number.</para>
      </summary>
      <param name="group"></param>
    </member>
    <member name="M:UnityEngine.Network.SetLevelPrefix(System.Int32)">
      <summary>
        <para>Set the level prefix which will then be prefixed to all network ViewID numbers.</para>
      </summary>
      <param name="prefix"></param>
    </member>
    <member name="M:UnityEngine.Network.SetReceivingEnabled(UnityEngine.NetworkPlayer,System.Int32,System.Boolean)">
      <summary>
        <para>Enable or disables the reception of messages in a specific group number from a specific player.</para>
      </summary>
      <param name="player"></param>
      <param name="group"></param>
      <param name="enabled"></param>
    </member>
    <member name="M:UnityEngine.Network.SetSendingEnabled(System.Int32,System.Boolean)">
      <summary>
        <para>Enables or disables transmission of messages and RPC calls on a specific network group number.</para>
      </summary>
      <param name="group"></param>
      <param name="enabled"></param>
    </member>
    <member name="M:UnityEngine.Network.SetSendingEnabled(UnityEngine.NetworkPlayer,System.Int32,System.Boolean)">
      <summary>
        <para>Enable or disable transmission of messages and RPC calls based on target network player as well as the network group.</para>
      </summary>
      <param name="player"></param>
      <param name="group"></param>
      <param name="enabled"></param>
    </member>
    <member name="M:UnityEngine.Network.TestConnection()">
      <summary>
        <para>Test this machines network connection.</para>
      </summary>
      <param name="forceTest"></param>
    </member>
    <member name="M:UnityEngine.Network.TestConnection(System.Boolean)">
      <summary>
        <para>Test this machines network connection.</para>
      </summary>
      <param name="forceTest"></param>
    </member>
    <member name="M:UnityEngine.Network.TestConnectionNAT()">
      <summary>
        <para>Test the connection specifically for NAT punch-through connectivity.</para>
      </summary>
      <param name="forceTest"></param>
    </member>
    <member name="M:UnityEngine.Network.TestConnectionNAT(System.Boolean)">
      <summary>
        <para>Test the connection specifically for NAT punch-through connectivity.</para>
      </summary>
      <param name="forceTest"></param>
    </member>
    <member name="T:UnityEngine.NetworkConnectionError">
      <summary>
        <para>Possible status messages returned by Network.Connect and in MonoBehaviour.OnFailedToConnect|OnFailedToConnect in case the error was not immediate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.AlreadyConnectedToAnotherServer">
      <summary>
        <para>Cannot connect to two servers at once. Close the connection before connecting again.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.AlreadyConnectedToServer">
      <summary>
        <para>We are already connected to this particular server (can happen after fast disconnect/reconnect).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.ConnectionBanned">
      <summary>
        <para>We are banned from the system we attempted to connect to (likely temporarily).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.ConnectionFailed">
      <summary>
        <para>Connection attempt failed, possibly because of internal connectivity problems.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.CreateSocketOrThreadFailure">
      <summary>
        <para>Internal error while attempting to initialize network interface. Socket possibly already in use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.EmptyConnectTarget">
      <summary>
        <para>No host target given in Connect.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.IncorrectParameters">
      <summary>
        <para>Incorrect parameters given to Connect function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.InternalDirectConnectFailed">
      <summary>
        <para>Client could not connect internally to same network NAT enabled server.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.InvalidPassword">
      <summary>
        <para>The server is using a password and has refused our connection because we did not set the correct password.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.NATPunchthroughFailed">
      <summary>
        <para>NAT punchthrough attempt has failed. The cause could be a too restrictive NAT implementation on either endpoints.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.NATTargetConnectionLost">
      <summary>
        <para>Connection lost while attempting to connect to NAT target.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.NATTargetNotConnected">
      <summary>
        <para>The NAT target we are trying to connect to is not connected to the facilitator server.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.NoError">
      <summary>
        <para>No error occurred.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.RSAPublicKeyMismatch">
      <summary>
        <para>We presented an RSA public key which does not match what the system we connected to is using.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkConnectionError.TooManyConnectedPlayers">
      <summary>
        <para>The server is at full capacity, failed to connect.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkDisconnection">
      <summary>
        <para>The reason a disconnect event occured, like in MonoBehaviour.OnDisconnectedFromServer|OnDisconnectedFromServer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkDisconnection.Disconnected">
      <summary>
        <para>The connection to the system has been closed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkDisconnection.LostConnection">
      <summary>
        <para>The connection to the system has been lost, no reliable packets could be delivered.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.ChannelQOS">
      <summary>
        <para>Defines parameters of channels.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.ChannelQOS.#ctor(UnityEngine.Networking.QosType)">
      <summary>
        <para>UnderlyingModel.MemDoc.MemDocModel.</para>
      </summary>
      <param name="value">Requested type of quality of service (default Unreliable).</param>
      <param name="channel">Copy constructor.</param>
    </member>
    <member name="M:UnityEngine.Networking.ChannelQOS.#ctor">
      <summary>
        <para>UnderlyingModel.MemDoc.MemDocModel.</para>
      </summary>
      <param name="value">Requested type of quality of service (default Unreliable).</param>
      <param name="channel">Copy constructor.</param>
    </member>
    <member name="M:UnityEngine.Networking.ChannelQOS.#ctor(UnityEngine.Networking.ChannelQOS)">
      <summary>
        <para>UnderlyingModel.MemDoc.MemDocModel.</para>
      </summary>
      <param name="value">Requested type of quality of service (default Unreliable).</param>
      <param name="channel">Copy constructor.</param>
    </member>
    <member name="P:UnityEngine.Networking.ChannelQOS.QOS">
      <summary>
        <para>Channel quality of service.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.ConnectionAcksType">
      <summary>
        <para>Defines size of the buffer holding reliable messages, before they will be acknowledged.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.ConnectionAcksType.Acks128">
      <summary>
        <para>Ack buffer can hold 128 messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.ConnectionAcksType.Acks32">
      <summary>
        <para>Ack buffer can hold 32 messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.ConnectionAcksType.Acks64">
      <summary>
        <para>Ack buffer can hold 64 messages.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.ConnectionAcksType.Acks96">
      <summary>
        <para>Ack buffer can hold 96 messages.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.ConnectionConfig">
      <summary>
        <para>This class defines parameters of connection between two peers, this definition includes various timeouts and sizes as well as channel configuration.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.AckDelay">
      <summary>
        <para>Defines the duration in milliseconds that the receiver waits for before it sends an acknowledgement back without waiting for any data payload. Default value = 33.

Network clients that send data to a server may do so using many different quality of service (QOS) modes, some of which (reliable modes) expect the server to send back acknowledgement of receipt of data sent.

Servers must periodically acknowledge data packets received over channels with reliable QOS modes by sending packets containing acknowledgement data (also known as "acks") back to the client. If the server were to send an acknowledgement immediately after receiving each packet from the client there would be significant overhead (the acknowledgement is a 32 or 64 bit integer, which is very small compared to the whole size of the packet which also contains the IP and the UDP header). AckDelay allows the server some time to accumulate a list of received reliable data packets to acknowledge, and decreases traffic overhead by combining many acknowledgements into a single packet.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.AcksType">
      <summary>
        <para>Determines the size of the buffer used to store reliable messages that are waiting for acknowledgement. It can be set to Ack32, Ack64, Ack96, or Ack128. Depends of this setting buffer can hold 32, 64, 96, or 128 messages. Default value = Ack32.

Messages sent on reliable quality of service channels are stored in a special buffer while they wait for acknowledgement from the peer. This buffer can be either 32, 64, 96 or 128 positions long. It is recommended to begin with this value set to Ack32, which defines a buffer up to 32 messages in size. If you receive NoResources errors often when you send reliable messages, change this value to the next possible size.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionConfig.AddChannel(UnityEngine.Networking.QosType)">
      <summary>
        <para>Adds a new channel to the configuration and returns the unique id of that channel.

Channels are logical delimiters of traffic between peers. Every time you send data to a peer, you should use two ids: connection id and channel id. Channels are not only logically separate traffic but could each be configured with a different quality of service (QOS). In the example below, a configuration is created containing two channels with Unreliable and Reliable QOS types. This configuration is then used for sending data.</para>
      </summary>
      <param name="value">Add new channel to configuration.</param>
      <returns>
        <para>Channel id, user can use this id to send message via this channel.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.AllCostTimeout">
      <summary>
        <para>Defines the timeout in milliseconds after which messages sent via the AllCost channel will be re-sent without waiting for acknowledgement. Default value = 20 ms.

AllCost delivery quality of service (QOS) is a special QOS for delivering game-critical information, such as when the game starts, or when bullets are shot.

Due to packets dropping, sometimes reliable messages cannot be delivered and need to be re-sent. Reliable messages will re-sent after RTT+Delta time, (RTT is round trip time) where RTT is a dynamic value and can reach couple of hundred milliseconds. For the AllCost delivery channel this timeout can be user-defined to force game critical information to be re-sent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.BandwidthPeakFactor">
      <summary>
        <para>Defines, when multiplied internally by InitialBandwidth, the maximum bandwidth that can be used under burst conditions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.ChannelCount">
      <summary>
        <para>(Read Only) The number of channels in the current configuration.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.Channels">
      <summary>
        <para>The list of channels belonging to the current configuration.

Note: any ConnectionConfig passed as a parameter to a function in Unity Multiplayer is deep copied (that is, an entirely new copy is made, with no references to the original).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.ConnectTimeout">
      <summary>
        <para>Timeout in ms which library will wait before it will send another connection request.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionConfig.#ctor">
      <summary>
        <para>Will create default connection config or will copy them from another.</para>
      </summary>
      <param name="config">Connection config.</param>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionConfig.#ctor(UnityEngine.Networking.ConnectionConfig)">
      <summary>
        <para>Will create default connection config or will copy them from another.</para>
      </summary>
      <param name="config">Connection config.</param>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.DisconnectTimeout">
      <summary>
        <para>Defines the timeout in milliseconds before a connection is considered to have been disconnected. Default value = 2000.

Unity Multiplayer defines conditions under which a connection is considered as disconnected. Disconnection can happen for the following reasons:

(1) A disconnection request was received.

(2) The connection has not received any traffic at all for a time longer than DisconnectTimeout (Note that live connections receive regular keep-alive packets, so in this case "no traffic" means not only no user traffic but also absence of any keep-alive traffic as well).

(3) Flow control determines that the time between sending packets is longer than DisconnectTimeout. Keep-alive packets are regularly delivered from peers and contain statistical information. This information includes values of packet loss due to network and peer overflow conditions. Setting NetworkDropThreshold and OverflowDropThreshold defines thresholds for flow control which can decrease packet frequency. When the time before sending the next packet is longer than DisconnectTimeout, the connection will be considered as disconnected and a disconnect event is received.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.FragmentSize">
      <summary>
        <para>Defines the fragment size for fragmented messages (for QOS: ReliableFragmented and UnreliableFragmented). Default value = 500.

Under fragmented quality of service modes, the original message is split into fragments (up to 64) of up to FragmentSize bytes each. The fragment size depends on the frequency and size of reliable messages sent. Each reliable message potentially could be re-sent, so you need to choose a fragment size less than the remaining free space in a UDP packet after retransmitted reliable messages are added to the packet. For example, if Networking.ConnectionConfig.PacketSize is 1440 bytes, and a reliable message's average size is 200 bytes, it would be wise to set this parameter to 900 – 1000 bytes.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionConfig.GetChannel(System.Byte)">
      <summary>
        <para>Return the QoS set for the given channel or throw an out of range exception.</para>
      </summary>
      <param name="idx">Index in array.</param>
      <returns>
        <para>Channel QoS.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.InitialBandwidth">
      <summary>
        <para>Gets or sets the bandwidth in bytes per second that can be used by Unity Multiplayer. No traffic over this limit is allowed. Unity Multiplayer may internally reduce the bandwidth it uses due to flow control. The default value is 1500MB/sec (1,536,000 bytes per second). The default value is intentionally a large number to allow all traffic to pass without delay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.MaxCombinedReliableMessageCount">
      <summary>
        <para>Defines the maximum number of small reliable messages that can be included in one combined message. Default value = 10.

Since each message sent to a server contains IP information and a UDP header, duplicating this information for every message sent can be inefficient in the case where there are many small messages being sent frequently. Many small reliable messages can be combined into one longer reliable message, saving space in the waiting buffer. Unity Multiplayer will automatically combine up to MaxCombinedReliableMessageCount small messages into one message. To qualify as a small message, the data payload of the message should not be greater than MaxCombinedReliableMessageSize.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.MaxCombinedReliableMessageSize">
      <summary>
        <para>Defines the maximum size in bytes of a reliable message which is considered small enough to include in a combined message. Default value = 100.

Since each message sent to a server contains IP information and a UDP header, duplicating this information for every message sent can be inefficient in the case where there are many small messages being sent frequently. Many small reliable messages can be combined into one longer reliable message, saving space in the waiting buffer. Unity Multiplayer will automatically combine up to MaxCombinedReliableMessageCount small messages into one message. To qualify as a small message, the data payload of the message should not be greater than MaxCombinedReliableMessageSize.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.MaxConnectionAttempt">
      <summary>
        <para>Defines the maximum number of times Unity Multiplayer will attempt to send a connection request without receiving a response before it reports that it cannot establish a connection. Default value = 10.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.MaxSentMessageQueueSize">
      <summary>
        <para>Defines maximum number of messages that can be held in the queue for sending. Default value = 128.

This buffer serves to smooth spikes in traffic and decreases network jitter. If the queue is full, a NoResources error will result from any calls to Send(). Setting this value greater than around 300 is likely to cause significant delaying of message delivering and can make game unplayable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.MinUpdateTimeout">
      <summary>
        <para>Defines minimum time in milliseconds between sending packets. This duration may be automatically increased if required by flow control. Default value = 10.

When Send() is called, Unity Multiplayer won’t send the message immediately. Instead, once every SendTimeout milliseconds each connection is checked to see if it has something to send. While initial and minimal send timeouts can be set, these may be increased internally due to network conditions or buffer overflows.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.NetworkDropThreshold">
      <summary>
        <para>Defines the percentage (from 0 to 100) of packets that need to be dropped due to network conditions before the SendUpdate timeout is automatically increased (and send rate is automatically decreased). Default value = 5.

To avoid receiver overflow, Unity Multiplayer supports flow control. Each ping packet sent between connected peers contains two values:

(1) Packets lost due to network conditions.

(2) Packets lost because the receiver does not have free space in its incoming buffers.

Like OverflowDropThreshold, both values are reported in percent. Use NetworkDropThreshold and OverflowDropThreshold to set thresholds for these values. If a value reported in the ping packet exceeds the corresponding threshold, Unity Multiplayer increases the sending timeout for packets up to a maximum value of DisconnectTimeout.

Note: wireless networks usually exhibit 5% or greater packet loss. For wireless networks it is advisable to use a NetworkDropThreshold of 40-50%.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.OverflowDropThreshold">
      <summary>
        <para>Defines the percentage (from 0 to 100) of packets that need to be dropped due to lack of space in internal buffers before the SendUpdate timeout is automatically increased (and send rate is automatically decreased). Default value = 5.

To avoid receiver overflow, Unity Multiplayer supports flow control. Each ping packet sent between connected peers contains two values:

(1) Packets lost due to network conditions.

(2) Packets lost because the receiver does not have free space in its incoming buffers.

Like NetworkDropThreshold, both values are reported in percent. Use NetworkDropThreshold and OverflowDropThreshold to set thresholds for these values. If a value reported in the ping packet exceeds the corresponding threshold, Unity Multiplayer increases the sending timeout for packets up to a maximum value of DisconnectTimeout.

Note: wireless networks usually exhibit 5% or greater packet loss. For wireless networks it is advisable to use a NetworkDropThreshold of 40-50%.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.PacketSize">
      <summary>
        <para>Defines maximum packet size (in bytes) (including payload and all header). Packet can contain multiple messages inside. Default value = 1500.

Note that this default value is suitable for local testing only. Usually you should change this value; a recommended setting for PC or mobile is 1470. For games consoles this value should probably be less than ~1100. Wrong size definition can cause packet dropping.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.PingTimeout">
      <summary>
        <para>Defines the duration in milliseconds between keep-alive packets, also known as pings. Default value = 500.

The ping frequency should be long enough to accumulate good statistics and short enough to compare with DisconnectTimeout. A good guideline is to have more than 3 pings per disconnect timeout, and more than 5 messages per ping. For example, with a DisconnectTimeout of 2000ms, a PingTimeout of 500ms works well.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.ResendTimeout">
      <summary>
        <para>Defines the maximum wait time in milliseconds before the "not acknowledged" message is re-sent. Default value = 1200.

It does not make a lot of sense to wait for acknowledgement forever. This parameter sets an upper time limit at which point reliable messages are re-sent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.SendDelay">
      <summary>
        <para>Gets or sets the delay in milliseconds after a call to Send() before packets are sent. During this time, new messages may be combined in queued packets. Default value: 10ms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.SSLCAFilePath">
      <summary>
        <para>Defines the path to the file containing the certification authority (CA) certificate for WebSocket via SSL communication.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.SSLCertFilePath">
      <summary>
        <para>Defines path to SSL certificate file, for WebSocket via SSL communication.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.SSLPrivateKeyFilePath">
      <summary>
        <para>Defines the path to the file containing the private key for WebSocket via SSL communication.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.UdpSocketReceiveBufferMaxSize">
      <summary>
        <para>Defines the size in bytes of the receiving buffer for UDP sockets. It is useful to set this parameter equal to the maximum size of a fragmented message. Default value is OS specific (usually 8kb).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.UsePlatformSpecificProtocols">
      <summary>
        <para>When starting a server use protocols that make use of platform specific optimisations where appropriate rather than cross-platform protocols. (Sony consoles only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionConfig.Validate(UnityEngine.Networking.ConnectionConfig)">
      <summary>
        <para>Validate parameters of connection config. Will throw exceptions if parameters are incorrect.</para>
      </summary>
      <param name="config"></param>
    </member>
    <member name="P:UnityEngine.Networking.ConnectionConfig.WebSocketReceiveBufferMaxSize">
      <summary>
        <para>WebSocket only. Defines the buffer size in bytes for received frames on a WebSocket host. If this value is 0 (the default), a 4 kilobyte buffer is used. Any other value results in a buffer of that size, in bytes.

WebSocket message fragments are called "frames". A WebSocket host has a buffer to store incoming message frames. Therefore this buffer should be set to the largest legal frame size supported. If an incoming frame exceeds the buffer size, no error is reported. However, the buffer will invoke the user callback in order to create space for the overflow.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.ConnectionSimulatorConfig">
      <summary>
        <para>Create configuration for network simulator; You can use this class in editor and developer build only.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionSimulatorConfig.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Will create object describing network simulation parameters.</para>
      </summary>
      <param name="outMinDelay">Minimal simulation delay for outgoing traffic in ms.</param>
      <param name="outAvgDelay">Average simulation delay for outgoing traffic in ms.</param>
      <param name="inMinDelay">Minimal  simulation delay for incoming traffic in ms.</param>
      <param name="inAvgDelay">Average  simulation delay for incoming traffic in ms.</param>
      <param name="packetLossPercentage">Probability of packet loss  0 &lt;= p &lt;= 1.</param>
    </member>
    <member name="M:UnityEngine.Networking.ConnectionSimulatorConfig.Dispose">
      <summary>
        <para>Destructor.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.DownloadHandler">
      <summary>
        <para>Manage and process HTTP response body data received from a remote server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandler.data">
      <summary>
        <para>Returns the raw bytes downloaded from the remote server, or null. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandler.isDone">
      <summary>
        <para>Returns true if this DownloadHandler has been informed by its parent UnityWebRequest that all data has been received, and this DownloadHandler has completed any necessary post-download processing. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandler.text">
      <summary>
        <para>Convenience property. Returns the bytes from data interpreted as a UTF8 string. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.CompleteContent">
      <summary>
        <para>Callback, invoked when all data has been received from the remote server.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.Dispose">
      <summary>
        <para>Signals that this [DownloadHandler] is no longer being used, and should clean up any resources it is using.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.GetData">
      <summary>
        <para>Callback, invoked when the data property is accessed.</para>
      </summary>
      <returns>
        <para>Byte array to return as the value of the data property.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.GetProgress">
      <summary>
        <para>Callback, invoked when UnityWebRequest.downloadProgress is accessed.</para>
      </summary>
      <returns>
        <para>The return value for UnityWebRequest.downloadProgress.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.GetText">
      <summary>
        <para>Callback, invoked when the text property is accessed.</para>
      </summary>
      <returns>
        <para>String to return as the return value of the text property.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.ReceiveContentLength(System.Int32)">
      <summary>
        <para>Callback, invoked with a Content-Length header is received.</para>
      </summary>
      <param name="contentLength">The value of the received Content-Length header.</param>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandler.ReceiveData(System.Byte[],System.Int32)">
      <summary>
        <para>Callback, invoked as data is received from the remote server.</para>
      </summary>
      <param name="data">A buffer containing unprocessed data, received from the remote server.</param>
      <param name="dataLength">The number of bytes in data which are new.</param>
      <returns>
        <para>True if the download should continue, false to abort.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.DownloadHandlerAssetBundle">
      <summary>
        <para>A DownloadHandler subclass specialized for downloading AssetBundles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandlerAssetBundle.assetBundle">
      <summary>
        <para>Returns the downloaded AssetBundle, or null. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAssetBundle.#ctor(System.String,System.UInt32)">
      <summary>
        <para>Standard constructor for non-cached asset bundles.</para>
      </summary>
      <param name="url">The nominal (pre-redirect) URL at which the asset bundle is located.</param>
      <param name="crc">A checksum to compare to the downloaded data for integrity checking, or zero to skip integrity checking.</param>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAssetBundle.#ctor(System.String,System.UInt32,System.UInt32)">
      <summary>
        <para>Simple versioned constructor. Caches downloaded asset bundles.</para>
      </summary>
      <param name="url">The nominal (pre-redirect) URL at which the asset bundle is located.</param>
      <param name="crc">A checksum to compare to the downloaded data for integrity checking, or zero to skip integrity checking.</param>
      <param name="version">Current version number of the asset bundle at url. Increment to redownload.</param>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAssetBundle.#ctor(System.String,UnityEngine.Hash128,System.UInt32)">
      <summary>
        <para>Versioned constructor. Caches downloaded asset bundles.</para>
      </summary>
      <param name="url">The nominal (pre-redirect) URL at which the asset bundle is located.</param>
      <param name="crc">A checksum to compare to the downloaded data for integrity checking, or zero to skip integrity checking.</param>
      <param name="hash">A hash object defining the version of the asset bundle.</param>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAssetBundle.GetContent(UnityEngine.Networking.UnityWebRequest)">
      <summary>
        <para>Returns the downloaded AssetBundle, or null.</para>
      </summary>
      <param name="www">A finished UnityWebRequest object with DownloadHandlerAssetBundle attached.</param>
      <returns>
        <para>The same as DownloadHandlerAssetBundle.assetBundle</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAssetBundle.GetData">
      <summary>
        <para>Not implemented. Throws &lt;a href="http:msdn.microsoft.comen-uslibrarysystem.notsupportedexception"&gt;NotSupportedException&lt;a&gt;.</para>
      </summary>
      <returns>
        <para>Not implemented.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAssetBundle.GetText">
      <summary>
        <para>Not implemented. Throws &lt;a href="http:msdn.microsoft.comen-uslibrarysystem.notsupportedexception"&gt;NotSupportedException&lt;a&gt;.</para>
      </summary>
      <returns>
        <para>Not implemented.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.DownloadHandlerAudioClip">
      <summary>
        <para>A DownloadHandler subclass specialized for downloading audio data for use as AudioClip objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandlerAudioClip.audioClip">
      <summary>
        <para>Returns the downloaded AudioClip, or null. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAudioClip.#ctor(System.String,UnityEngine.AudioType)">
      <summary>
        <para>Constructor, specifies what kind of audio data is going to be downloaded.</para>
      </summary>
      <param name="url">The nominal (pre-redirect) URL at which the audio clip is located.</param>
      <param name="audioType">Value to set for AudioClip type.</param>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAudioClip.GetContent(UnityEngine.Networking.UnityWebRequest)">
      <summary>
        <para>Returns the downloaded AudioClip, or null.</para>
      </summary>
      <param name="www">A finished UnityWebRequest object with DownloadHandlerAudioClip attached.</param>
      <returns>
        <para>The same as DownloadHandlerAudioClip.audioClip</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerAudioClip.GetData">
      <summary>
        <para>Called by DownloadHandler.data. Returns a copy of the downloaded clip data as raw bytes.</para>
      </summary>
      <returns>
        <para>A copy of the downloaded data.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.DownloadHandlerBuffer">
      <summary>
        <para>A general-purpose DownloadHandler implementation which stores received data in a native byte buffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerBuffer.#ctor">
      <summary>
        <para>Default constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerBuffer.GetContent(UnityEngine.Networking.UnityWebRequest)">
      <summary>
        <para>Returns a copy of the native-memory buffer interpreted as a UTF8 string.</para>
      </summary>
      <param name="www">A finished UnityWebRequest object with DownloadHandlerBuffer attached.</param>
      <returns>
        <para>The same as DownloadHandlerBuffer.text</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerBuffer.GetData">
      <summary>
        <para>Returns a copy of the contents of the native-memory data buffer as a byte array.</para>
      </summary>
      <returns>
        <para>A copy of the data which has been downloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerBuffer.GetText">
      <summary>
        <para>Returns a copy of the native-memory buffer interpreted as a UTF8 string.</para>
      </summary>
      <returns>
        <para>A string representing the data in the native-memory buffer.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.DownloadHandlerScript">
      <summary>
        <para>An abstract base class for user-created scripting-driven DownloadHandler implementations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerScript.#ctor">
      <summary>
        <para>Create a DownloadHandlerScript which allocates new buffers when passing data to callbacks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerScript.#ctor(System.Byte[])">
      <summary>
        <para>Create a DownloadHandlerScript which reuses a preallocated buffer to pass data to callbacks.</para>
      </summary>
      <param name="preallocatedBuffer">A byte buffer into which data will be copied, for use by DownloadHandler.ReceiveData.</param>
    </member>
    <member name="T:UnityEngine.Networking.DownloadHandlerTexture">
      <summary>
        <para>A DownloadHandler subclass specialized for downloading images for use as Texture objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.DownloadHandlerTexture.texture">
      <summary>
        <para>Returns the downloaded Texture, or null. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerTexture.#ctor">
      <summary>
        <para>Default constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerTexture.#ctor(System.Boolean)">
      <summary>
        <para>Constructor, allows TextureImporter.isReadable property to be set.</para>
      </summary>
      <param name="readable">Value to set for TextureImporter.isReadable.</param>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerTexture.GetContent(UnityEngine.Networking.UnityWebRequest)">
      <summary>
        <para>Returns the downloaded Texture, or null.</para>
      </summary>
      <param name="www">A finished UnityWebRequest object with DownloadHandlerTexture attached.</param>
      <returns>
        <para>The same as DownloadHandlerTexture.texture</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.DownloadHandlerTexture.GetData">
      <summary>
        <para>Called by DownloadHandler.data. Returns a copy of the downloaded image data as raw bytes.</para>
      </summary>
      <returns>
        <para>A copy of the downloaded data.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.GlobalConfig">
      <summary>
        <para>Defines global paramters for network library.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.GlobalConfig.#ctor">
      <summary>
        <para>Create new global config object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.MaxHosts">
      <summary>
        <para>Defines how many hosts you can use. Default Value = 16. Max value = 128.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.MaxNetSimulatorTimeout">
      <summary>
        <para>Deprecated. Defines maximum delay for network simulator. See Also: MaxTimerTimeout.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.MaxPacketSize">
      <summary>
        <para>Defines maximum possible packet size in bytes for all network connections.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.MaxTimerTimeout">
      <summary>
        <para>Defines the maximum timeout in milliseconds for any configuration. The default value is 12 seconds (12000ms).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.MinNetSimulatorTimeout">
      <summary>
        <para>Deprecated. Defines the minimal timeout for network simulator. You cannot set up any delay less than this value. See Also: MinTimerTimeout.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.MinTimerTimeout">
      <summary>
        <para>Defines the minimum timeout in milliseconds recognised by the system. The default value is 1 ms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.ReactorMaximumReceivedMessages">
      <summary>
        <para>This property determines the initial size of the queue that holds messages received by Unity Multiplayer before they are processed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.ReactorMaximumSentMessages">
      <summary>
        <para>Defines the initial size of the send queue. Messages are placed in this queue ready to be sent in packets to their destination.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.ReactorModel">
      <summary>
        <para>Defines reactor model for the network library.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.ThreadAwakeTimeout">
      <summary>
        <para>Defines (1) for select reactor, minimum time period, when system will check if there are any messages for send (2) for fixrate reactor, minimum interval of time, when system will check for sending and receiving messages.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.GlobalConfig.ThreadPoolSize">
      <summary>
        <para>Defines how many worker threads are available to handle incoming and outgoing messages.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.HostTopology">
      <summary>
        <para>Class defines network topology for host (socket opened by Networking.NetworkTransport.AddHost function). This topology defines: (1) how many connection with default config will be supported and (2) what will be special connections (connections with config different from default).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.HostTopology.AddSpecialConnectionConfig(UnityEngine.Networking.ConnectionConfig)">
      <summary>
        <para>Add special connection to topology (for example if you need to keep connection to standalone chat server you will need to use this function). Returned id should be use as one of parameters (with ip and port) to establish connection to this server.</para>
      </summary>
      <param name="config">Connection config for special connection.</param>
      <returns>
        <para>Id of this connection. You should use this id when you call Networking.NetworkTransport.Connect.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.HostTopology.#ctor(UnityEngine.Networking.ConnectionConfig,System.Int32)">
      <summary>
        <para>Create topology.</para>
      </summary>
      <param name="defaultConfig">Default config.</param>
      <param name="maxDefaultConnections">Maximum default connections.</param>
    </member>
    <member name="P:UnityEngine.Networking.HostTopology.DefaultConfig">
      <summary>
        <para>Defines config for default connections in the topology.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.HostTopology.GetSpecialConnectionConfig(System.Int32)">
      <summary>
        <para>Return reference to special connection config. Parameters of this config can be changed.</para>
      </summary>
      <param name="i">Config id.</param>
      <returns>
        <para>Connection config.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.HostTopology.MaxDefaultConnections">
      <summary>
        <para>Defines how many connection with default config be permitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.HostTopology.ReceivedMessagePoolSize">
      <summary>
        <para>Defines the maximum number of messages that each host can hold in its pool of received messages. The default size is 128.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.HostTopology.SentMessagePoolSize">
      <summary>
        <para>Defines the maximum number of messages that each host can hold in its pool of messages waiting to be sent. The default size is 128.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.HostTopology.SpecialConnectionConfigs">
      <summary>
        <para>List of special connection configs.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.HostTopology.SpecialConnectionConfigsCount">
      <summary>
        <para>Returns count of special connection added to topology.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Networking.IMultipartFormSection">
      <summary>
        <para>An interface for composition of data into multipart forms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.IMultipartFormSection.contentType">
      <summary>
        <para>Returns the value to use in the Content-Type header for this form section.</para>
      </summary>
      <returns>
        <para>The value to use in the Content-Type header, or null.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.IMultipartFormSection.fileName">
      <summary>
        <para>Returns a string denoting the desired filename of this section on the destination server.</para>
      </summary>
      <returns>
        <para>The desired file name of this section, or null if this is not a file section.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.IMultipartFormSection.sectionData">
      <summary>
        <para>Returns the raw binary data contained in this section. Must not return null or a zero-length array.</para>
      </summary>
      <returns>
        <para>The raw binary data contained in this section. Must not be null or empty.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.IMultipartFormSection.sectionName">
      <summary>
        <para>Returns the name of this section, if any.</para>
      </summary>
      <returns>
        <para>The section's name, or null.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.Match.MatchInfo">
      <summary>
        <para>Details about a UNET MatchMaker match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.accessToken">
      <summary>
        <para>The binary access token this client uses to authenticate its session for future commands.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.address">
      <summary>
        <para>IP address of the host of the match,.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.domain">
      <summary>
        <para>The numeric domain for the match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.networkId">
      <summary>
        <para>The unique ID of this match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.nodeId">
      <summary>
        <para>NodeID for this member client in the match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.port">
      <summary>
        <para>Port of the host of the match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfo.usingRelay">
      <summary>
        <para>This flag indicates whether or not the match is using a Relay server.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Match.MatchInfoSnapshot">
      <summary>
        <para>A class describing the match information as a snapshot at the time the request was processed on the MatchMaker.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.averageEloScore">
      <summary>
        <para>The average Elo score of the match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.currentSize">
      <summary>
        <para>The current number of players in the match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.directConnectInfos">
      <summary>
        <para>The collection of direct connect info classes describing direct connection information supplied to the MatchMaker.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.hostNodeId">
      <summary>
        <para>The NodeID of the host for this match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.isPrivate">
      <summary>
        <para>Describes if the match is private. Private matches are unlisted in ListMatch results.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.matchAttributes">
      <summary>
        <para>The collection of match attributes on this match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.maxSize">
      <summary>
        <para>The maximum number of players this match can grow to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.name">
      <summary>
        <para>The text name for this match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.networkId">
      <summary>
        <para>The network ID for this match.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Match.MatchInfoSnapshot.MatchInfoDirectConnectSnapshot">
      <summary>
        <para>A class describing one member of a match and what direct connect information other clients have supplied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.MatchInfoDirectConnectSnapshot.hostPriority">
      <summary>
        <para>The host priority for this direct connect info. Host priority describes the order in which this match member occurs in the list of clients attached to a match.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.MatchInfoDirectConnectSnapshot.nodeId">
      <summary>
        <para>NodeID of the match member this info refers to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.MatchInfoDirectConnectSnapshot.privateAddress">
      <summary>
        <para>The private network address supplied for this direct connect info.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.MatchInfoSnapshot.MatchInfoDirectConnectSnapshot.publicAddress">
      <summary>
        <para>The public network address supplied for this direct connect info.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Match.NetworkMatch">
      <summary>
        <para>A component for communicating with the Unity Multiplayer Matchmaking service.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Match.NetworkMatch.baseUri">
      <summary>
        <para>The base URI of the MatchMaker that this NetworkMatch will communicate with.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Match.NetworkMatch.BasicResponseDelegate">
      <summary>
        <para>A delegate that can handle MatchMaker responses that return basic response types (generally only indicating success or failure and extended information if a failure did happen).</para>
      </summary>
      <param name="success">Indicates if the request succeeded.</param>
      <param name="extendedInfo">A text description of the failure if success is false.</param>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.CreateMatch(System.String,System.UInt32,System.Boolean,System.String,System.String,System.String,System.Int32,System.Int32,UnityEngine.Networking.Match.NetworkMatch/DataResponseDelegate`1&lt;UnityEngine.Networking.Match.MatchInfo&gt;)">
      <summary>
        <para>Use this function to create a new match. The client which calls this function becomes the host of the match.</para>
      </summary>
      <param name="matchName">The text string describing the name for this match.</param>
      <param name="matchSize">When creating a match, the matchmaker will use either this value, or the maximum size you have configured online at https:multiplayer.unity3d.com, whichever is lower. This way you can specify different match sizes for a particular game, but still maintain an overall size limit in the online control panel.</param>
      <param name="matchAdvertise">A bool indicating if this match should be available in NetworkMatch.ListMatches results.</param>
      <param name="matchPassword">A text string indicating if this match is password protected. If it is, all clients trying to join this match must supply the correct match password.</param>
      <param name="publicClientAddress">The optional public client address. This value is stored on the matchmaker and given to clients listing matches. It is intended to be a network address for connecting to this client directly over the internet. This value will only be present if a publicly available address is known, and direct connection is supported by the matchmaker.</param>
      <param name="privateClientAddress">The optional private client address. This value is stored on the matchmaker and given to clients listing matches. It is intended to be a network address for connecting to this client directly on a local area network. This value will only be present if direct connection is supported by the matchmaker. This may be an empty string and it will not affect the ability to interface with matchmaker or use relay server.</param>
      <param name="eloScoreForMatch">The Elo score for the client hosting the match being created.  If this number is set on all clients to indicate relative skill level, this number is used to return matches ordered by those that are most suitable for play given a listing player's skill level. This may be 0 on all clients, which would disable any Elo calculations in the MatchMaker.</param>
      <param name="requestDomain">The request domain for this request. Only requests in the same domain can interface with each other. For example if a NetworkMatch.CreateMatch is made with domain 1, only ListMatches that also specify domain 1 will find that match. Use this value to silo different (possibly incompatible) client versions.</param>
      <param name="callback">The callback to be called when this function completes. This will be called regardless of whether the function succeeds or fails.</param>
      <returns>
        <para>This function is asynchronous and will complete at some point in the future, when the coroutine has finished communicating with the service backend.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Networking.Match.NetworkMatch.DataResponseDelegate_1">
      <summary>
        <para>Response delegate containing basic information plus a data member. This is used on a subset of MatchMaker callbacks that require data passed in along with the success/failure information of the call itself.</para>
      </summary>
      <param name="success">Indicates if the request succeeded.</param>
      <param name="extendedInfo">If success is false, this will contain a text string indicating the reason.</param>
      <param name="responseData">The generic passed in containing data required by the callback. This typically contains data returned from a call to the service backend.</param>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.DestroyMatch(UnityEngine.Networking.Types.NetworkID,System.Int32,UnityEngine.Networking.Match.NetworkMatch/BasicResponseDelegate)">
      <summary>
        <para>This function is used to tell MatchMaker to destroy a match in progress, regardless of who is connected.</para>
      </summary>
      <param name="netId">The NetworkID of the match to terminate.</param>
      <param name="requestDomain">The request domain for this request. Only requests in the same domain can interface with each other. For example if a NetworkMatch.CreateMatch is made with domain 1, only ListMatches that also specify domain 1 will find that match. Use this value to silo different (possibly incompatible) client versions.</param>
      <param name="callback">The callback to be called when the request completes.</param>
      <returns>
        <para>This function is asynchronous and will complete at some point in the future, when the coroutine has finished communicating with the service backend.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.DropConnection(UnityEngine.Networking.Types.NetworkID,UnityEngine.Networking.Types.NodeID,System.Int32,UnityEngine.Networking.Match.NetworkMatch/BasicResponseDelegate)">
      <summary>
        <para>A function to allow an individual client to be dropped from a match.</para>
      </summary>
      <param name="netId">The NetworkID of the match the client to drop belongs to.</param>
      <param name="dropNodeId">The NodeID of the client to drop inside the specified match.</param>
      <param name="requestDomain">The request domain for this request. Only requests in the same domain can interface with each other. For example if a NetworkMatch.CreateMatch is made with domain 1, only ListMatches that also specify domain 1 will find that match. Use this value to silo different (possibly incompatible) client versions.</param>
      <param name="callback">The callback to invoke when the request completes.</param>
      <returns>
        <para>This function is asynchronous and will complete at some point in the future, when the coroutine has finished communicating with the service backend.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.JoinMatch(UnityEngine.Networking.Types.NetworkID,System.String,System.String,System.String,System.Int32,System.Int32,UnityEngine.Networking.Match.NetworkMatch/DataResponseDelegate`1&lt;UnityEngine.Networking.Match.MatchInfo&gt;)">
      <summary>
        <para>The function used to tell MatchMaker the current client wishes to join a specific match.</para>
      </summary>
      <param name="netId">The NetworkID of the match to join. This is found through calling NetworkMatch.ListMatches and picking a result from the returned list of matches.</param>
      <param name="matchPassword">The password of the match. Leave empty if there is no password for the match, and supply the text string password if the match was configured to have one of the NetworkMatch.CreateMatch request.</param>
      <param name="publicClientAddress">The optional public client address. This value will be stored on the matchmaker and given to other clients listing matches. You should send this value if you want your players to be able to connect directly with each other over the internet. Alternatively you can pass an empty string and it will not affect the ability to interface with matchmaker or use relay server.</param>
      <param name="privateClientAddress">The optional private client address. This value will be stored on the matchmaker and given to other clients listing matches. You should send this value if you want your players to be able to connect directly with each other over a Local Area Network. Alternatively you can pass an empty string and it will not affect the ability to interface with matchmaker or use relay server.</param>
      <param name="eloScoreForClient">The Elo score for the client joining the match being created. If this number is set on all clients to indicate relative skill level, this number is used to return matches ordered by those that are most suitable for play given a listing player's skill level. This may be 0 on all clients, which would disable any Elo calculations in the MatchMaker.</param>
      <param name="requestDomain">The request domain for this request. Only requests in the same domain can interface with each other. For example if a NetworkMatch.CreateMatch is made with domain 1, only ListMatches that also specify domain 1 will find that match. Use this value to silo different (possibly incompatible) client versions.</param>
      <param name="callback">The callback to be invoked when this call completes.</param>
      <returns>
        <para>This function is asynchronous and will complete at some point in the future, when the coroutine has finished communicating with the service backend.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.ListMatches(System.Int32,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,UnityEngine.Networking.Match.NetworkMatch/DataResponseDelegate`1&lt;System.Collections.Generic.List`1&lt;UnityEngine.Networking.Match.MatchInfoSnapshot&gt;&gt;)">
      <summary>
        <para>The function to list ongoing matches in the MatchMaker.</para>
      </summary>
      <param name="startPageNumber">The current page to list in the return results.</param>
      <param name="resultPageSize">The size of the page requested. This determines the maximum number of matches contained in the list of matches passed into the callback.</param>
      <param name="matchNameFilter">The text string name filter. This is a partial wildcard search against match names that are currently active, and can be thought of as matching equivalent to *&lt;matchNameFilter&gt;* where any result containing the entire string supplied here will be in the result set.</param>
      <param name="filterOutPrivateMatchesFromResults">Boolean that indicates if the response should contain matches that are private (meaning matches that are password protected).</param>
      <param name="eloScoreTarget">The Elo score target for the match list results to be grouped around. If used, this should be set to the Elo level of the client listing the matches so results will more closely match that player's skill level. If not used this can be set to 0 along with all other Elo refereces in funcitons like NetworkMatch.CreateMatch or NetworkMatch.JoinMatch.</param>
      <param name="requestDomain">The request domain for this request. Only requests in the same domain can interface with each other. For example if a NetworkMatch.CreateMatch is made with domain 1, only ListMatches that also specify domain 1 will find that match. Use this value to silo different (possibly incompatible) client versions.</param>
      <param name="callback">The callback invoked when this call completes on the MatchMaker.</param>
      <returns>
        <para>This function is asynchronous and will complete at some point in the future, when the coroutine has finished communicating with the service backend.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.SetMatchAttributes(UnityEngine.Networking.Types.NetworkID,System.Boolean,System.Int32,UnityEngine.Networking.Match.NetworkMatch/BasicResponseDelegate)">
      <summary>
        <para>This function allows the caller to change attributes on a match in progress.</para>
      </summary>
      <param name="networkId">The NetworkID of the match to set attributes on.</param>
      <param name="isListed">A bool indicating whether the match should be listed in NetworkMatch.ListMatches results after this call is complete.</param>
      <param name="requestDomain">The request domain for this request. Only requests in the same domain can interface with each other. For example if a NetworkMatch.CreateMatch is made with domain 1, only ListMatches that also specify domain 1 will find that match. Use this value to silo different (possibly incompatible) client versions.</param>
      <param name="callback">The callback invoked after the call has completed, indicating if it was successful or not.</param>
      <returns>
        <para>This function is asynchronous and will complete at some point in the future, when the coroutine has finished communicating with the service backend.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.Match.NetworkMatch.SetProgramAppID(UnityEngine.Networking.Types.AppID)">
      <summary>
        <para>This method is deprecated. Please instead log in through the editor services panel and setup the project under the Unity Multiplayer section. This will populate the required infomation from the cloud site automatically.</para>
      </summary>
      <param name="programAppID">Deprecated, see description.</param>
    </member>
    <member name="T:UnityEngine.Networking.MultipartFormDataSection">
      <summary>
        <para>A helper object for form sections containing generic, non-file data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormDataSection.contentType">
      <summary>
        <para>Returns the value to use in this section's Content-Type header.</para>
      </summary>
      <returns>
        <para>The Content-Type header for this section, or null.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormDataSection.fileName">
      <summary>
        <para>Returns a string denoting the desired filename of this section on the destination server.</para>
      </summary>
      <returns>
        <para>The desired file name of this section, or null if this is not a file section.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormDataSection.sectionData">
      <summary>
        <para>Returns the raw binary data contained in this section. Will not return null or a zero-length array.</para>
      </summary>
      <returns>
        <para>The raw binary data contained in this section. Will not be null or empty.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormDataSection.sectionName">
      <summary>
        <para>Returns the name of this section, if any.</para>
      </summary>
      <returns>
        <para>The section's name, or null.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.Byte[])">
      <summary>
        <para>Raw data section, unnamed and no Content-Type header.</para>
      </summary>
      <param name="data">Data payload of this section.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.String,System.Byte[])">
      <summary>
        <para>Raw data section with a section name, no Content-Type header.</para>
      </summary>
      <param name="name">Section name.</param>
      <param name="data">Data payload of this section.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.String,System.Byte[],System.String)">
      <summary>
        <para>A raw data section with a section name and a Content-Type header.</para>
      </summary>
      <param name="name">Section name.</param>
      <param name="data">Data payload of this section.</param>
      <param name="contentType">The value for this section's Content-Type header.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.String,System.String,System.Text.Encoding,System.String)">
      <summary>
        <para>A named raw data section whose payload is derived from a string, with a Content-Type header.</para>
      </summary>
      <param name="name">Section name.</param>
      <param name="data">String data payload for this section.</param>
      <param name="contentType">The value for this section's Content-Type header.</param>
      <param name="encoding">An encoding to marshal data to or from raw bytes.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.String,System.String,System.String)">
      <summary>
        <para>A named raw data section whose payload is derived from a UTF8 string, with a Content-Type header.</para>
      </summary>
      <param name="name">Section name.</param>
      <param name="data">String data payload for this section.</param>
      <param name="contentType">C.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.String,System.String)">
      <summary>
        <para>A names raw data section whose payload is derived from a UTF8 string, with a default Content-Type.</para>
      </summary>
      <param name="name">Section name.</param>
      <param name="data">String data payload for this section.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormDataSection.#ctor(System.String)">
      <summary>
        <para>An anonymous raw data section whose payload is derived from a UTF8 string, with a default Content-Type.</para>
      </summary>
      <param name="data">String data payload for this section.</param>
    </member>
    <member name="T:UnityEngine.Networking.MultipartFormFileSection">
      <summary>
        <para>A helper object for adding file uploads to multipart forms via the [IMultipartFormSection] API.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormFileSection.contentType">
      <summary>
        <para>Returns the value of the section's Content-Type header.</para>
      </summary>
      <returns>
        <para>The Content-Type header for this section, or null.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormFileSection.fileName">
      <summary>
        <para>Returns a string denoting the desired filename of this section on the destination server.</para>
      </summary>
      <returns>
        <para>The desired file name of this section, or null if this is not a file section.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormFileSection.sectionData">
      <summary>
        <para>Returns the raw binary data contained in this section. Will not return null or a zero-length array.</para>
      </summary>
      <returns>
        <para>The raw binary data contained in this section. Will not be null or empty.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.MultipartFormFileSection.sectionName">
      <summary>
        <para>Returns the name of this section, if any.</para>
      </summary>
      <returns>
        <para>The section's name, or null.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormFileSection.#ctor(System.String,System.Byte[],System.String,System.String)">
      <summary>
        <para>Contains a named file section based on the raw bytes from data, with a custom Content-Type and file name.</para>
      </summary>
      <param name="name">Name of this form section.</param>
      <param name="data">Raw contents of the file to upload.</param>
      <param name="fileName">Name of the file uploaded by this form section.</param>
      <param name="contentType">The value for this section's Content-Type header.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormFileSection.#ctor(System.Byte[])">
      <summary>
        <para>Contains an anonymous file section based on the raw bytes from data, assigns a default Content-Type and file name.</para>
      </summary>
      <param name="data">Raw contents of the file to upload.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormFileSection.#ctor(System.String,System.Byte[])">
      <summary>
        <para>Contains an anonymous file section based on the raw bytes from data with a specific file name. Assigns a default Content-Type.</para>
      </summary>
      <param name="data">Raw contents of the file to upload.</param>
      <param name="fileName">Name of the file uploaded by this form section.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormFileSection.#ctor(System.String,System.String,System.Text.Encoding,System.String)">
      <summary>
        <para>Contains a named file section with data drawn from data, as marshaled by dataEncoding. Assigns a specific file name from fileName and a default Content-Type.</para>
      </summary>
      <param name="name">Name of this form section.</param>
      <param name="data">Contents of the file to upload.</param>
      <param name="dataEncoding">A string encoding.</param>
      <param name="fileName">Name of the file uploaded by this form section.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormFileSection.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>
        <para>An anonymous file section with data drawn from data, as marshaled by dataEncoding. Assigns a specific file name from fileName and a default Content-Type.</para>
      </summary>
      <param name="data">Contents of the file to upload.</param>
      <param name="dataEncoding">A string encoding.</param>
      <param name="fileName">Name of the file uploaded by this form section.</param>
    </member>
    <member name="M:UnityEngine.Networking.MultipartFormFileSection.#ctor(System.String,System.String)">
      <summary>
        <para>An anonymous file section with data drawn from the UTF8 string data. Assigns a specific file name from fileName and a default Content-Type.</para>
      </summary>
      <param name="data">Contents of the file to upload.</param>
      <param name="fileName">Name of the file uploaded by this form section.</param>
    </member>
    <member name="T:UnityEngine.Networking.NetworkError">
      <summary>
        <para>Possible Networking.NetworkTransport errors.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.BadMessage">
      <summary>
        <para>Not a data message.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.CRCMismatch">
      <summary>
        <para>The Networking.ConnectionConfig  does not match the other endpoint.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.DNSFailure">
      <summary>
        <para>The address supplied to connect to was invalid or could not be resolved.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.MessageToLong">
      <summary>
        <para>The message is too long to fit the buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.NoResources">
      <summary>
        <para>Not enough resources are available to process this request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.Ok">
      <summary>
        <para>The operation completed successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.Timeout">
      <summary>
        <para>Connection timed out.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.UsageError">
      <summary>
        <para>This error will occur if any function is called with inappropriate parameter values.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.VersionMismatch">
      <summary>
        <para>The protocol versions are not compatible. Check your library versions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.WrongChannel">
      <summary>
        <para>The specified channel doesn't exist.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.WrongConnection">
      <summary>
        <para>The specified connectionId doesn't exist.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.WrongHost">
      <summary>
        <para>The specified host not available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkError.WrongOperation">
      <summary>
        <para>Operation is not supported.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.NetworkEventType">
      <summary>
        <para>Event that is returned when calling the Networking.NetworkTransport.Receive and Networking.NetworkTransport.ReceiveFromHost functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkEventType.BroadcastEvent">
      <summary>
        <para>Broadcast discovery event received.
To obtain sender connection info and possible complimentary message from them, call Networking.NetworkTransport.GetBroadcastConnectionInfo() and Networking.NetworkTransport.GetBroadcastConnectionMessage() functions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkEventType.ConnectEvent">
      <summary>
        <para>Connection event received. Indicating that a new connection was established.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkEventType.DataEvent">
      <summary>
        <para>Data event received. Indicating that data was received.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkEventType.DisconnectEvent">
      <summary>
        <para>Disconnection event received.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.NetworkEventType.Nothing">
      <summary>
        <para>No new event was received.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.NetworkTransport">
      <summary>
        <para>Transport Layer API.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.AddHost(UnityEngine.Networking.HostTopology,System.Int32,System.String)">
      <summary>
        <para>Creates a host based on Networking.HostTopology.</para>
      </summary>
      <param name="topology">The Networking.HostTopology associated with the host.</param>
      <param name="port">Port to bind to (when 0 is selected, the OS will choose a port at random).</param>
      <param name="ip">IP address to bind to.</param>
      <returns>
        <para>Returns the ID of the host that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.AddHostWithSimulator(UnityEngine.Networking.HostTopology,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Create a host and configure them to simulate Internet latency (works on Editor and development build only).</para>
      </summary>
      <param name="topology">The Networking.HostTopology associated with the host.</param>
      <param name="minTimeout">Minimum simulated delay in milliseconds.</param>
      <param name="maxTimeout">Maximum simulated delay in milliseconds.</param>
      <param name="port">Port to bind to (when 0 is selected, the OS will choose a port at random).</param>
      <param name="ip">IP address to bind to.</param>
      <returns>
        <para>Returns host ID just created.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.AddWebsocketHost(UnityEngine.Networking.HostTopology,System.Int32)">
      <summary>
        <para>Created web socket host.</para>
      </summary>
      <param name="port">Port to bind to.</param>
      <param name="topology">The Networking.HostTopology associated with the host.</param>
      <param name="ip">IP address to bind to.</param>
      <returns>
        <para>Web socket host id.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.AddWebsocketHost(UnityEngine.Networking.HostTopology,System.Int32,System.String)">
      <summary>
        <para>Created web socket host.</para>
      </summary>
      <param name="port">Port to bind to.</param>
      <param name="topology">The Networking.HostTopology associated with the host.</param>
      <param name="ip">IP address to bind to.</param>
      <returns>
        <para>Web socket host id.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.Connect(System.Int32,System.String,System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Tries to establish a connection to another peer.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="address">IPv4 address of the other peer.</param>
      <param name="port">Port of the other peer.</param>
      <param name="exceptionConnectionId">Set to 0 in the case of a default connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="exeptionConnectionId"></param>
      <returns>
        <para>A unique connection identifier on success (otherwise zero).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ConnectAsNetworkHost(System.Int32,System.String,System.Int32,UnityEngine.Networking.Types.NetworkID,UnityEngine.Networking.Types.SourceID,UnityEngine.Networking.Types.NodeID,System.Byte&amp;)">
      <summary>
        <para>Create dedicated connection to Relay server.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (Retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="address">IPv4 address of the relay.</param>
      <param name="port">Port of the relay.</param>
      <param name="network">GUID for the relay match, retrieved by calling Networking.Match.NetworkMatch.CreateMatch and using the Networking.Match.MatchInfo.networkId.</param>
      <param name="source">GUID for the source, can be retrieved by calling Utility.GetSourceID.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="node">Slot ID for this user, retrieved by calling Networking.Match.NetworkMatch.CreateMatch and using the Networking.Match.MatchInfo.nodeId.</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ConnectEndPoint(System.Int32,System.Net.EndPoint,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Try to establish connection to other peer, where the peer is specified using a C# System.EndPoint.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (Retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="xboxOneEndPoint">A valid System.EndPoint.</param>
      <param name="exceptionConnectionId">Set to 0 in the case of a default connection.</param>
      <param name="endPoint"></param>
      <returns>
        <para>A unique connection identifier on success (otherwise zero).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ConnectToNetworkPeer(System.Int32,System.String,System.Int32,System.Int32,System.Int32,UnityEngine.Networking.Types.NetworkID,UnityEngine.Networking.Types.SourceID,UnityEngine.Networking.Types.NodeID,System.Int32,System.Single,System.Byte&amp;)">
      <summary>
        <para>Create a connection to another peer in the Relay group.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="address">IP address of the peer, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.address.</param>
      <param name="port">Port of the peer, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.port.</param>
      <param name="exceptionConnectionId">Set to 0 in the case of a default connection.</param>
      <param name="relaySlotId">ID of the remote peer in relay.</param>
      <param name="network">GUID for the relay match, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.networkId.</param>
      <param name="source">GUID for the source, can be retrieved by calling Utility.GetSourceID.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="node">Slot ID reserved for the user, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.nodeId.</param>
      <param name="bucketSizeFactor">Allowed peak bandwidth (peak bandwidth = factor*bytesPerSec, recommended value is 2.0) If data has not been sent for a long time, it is allowed to send more data, with factor 2 it is allowed send 2*bytesPerSec bytes per sec.</param>
      <param name="bytesPerSec">Average bandwidth (bandwidth will be throttled on this level).</param>
      <returns>
        <para>A unique connection identifier on success (otherwise zero).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ConnectToNetworkPeer(System.Int32,System.String,System.Int32,System.Int32,System.Int32,UnityEngine.Networking.Types.NetworkID,UnityEngine.Networking.Types.SourceID,UnityEngine.Networking.Types.NodeID,System.Byte&amp;)">
      <summary>
        <para>Create a connection to another peer in the Relay group.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="address">IP address of the peer, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.address.</param>
      <param name="port">Port of the peer, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.port.</param>
      <param name="exceptionConnectionId">Set to 0 in the case of a default connection.</param>
      <param name="relaySlotId">ID of the remote peer in relay.</param>
      <param name="network">GUID for the relay match, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.networkId.</param>
      <param name="source">GUID for the source, can be retrieved by calling Utility.GetSourceID.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="node">Slot ID reserved for the user, retrieved by calling Networking.Match.NetworkMatch.JoinMatch and using the Networking.Match.MatchInfo.nodeId.</param>
      <param name="bucketSizeFactor">Allowed peak bandwidth (peak bandwidth = factor*bytesPerSec, recommended value is 2.0) If data has not been sent for a long time, it is allowed to send more data, with factor 2 it is allowed send 2*bytesPerSec bytes per sec.</param>
      <param name="bytesPerSec">Average bandwidth (bandwidth will be throttled on this level).</param>
      <returns>
        <para>A unique connection identifier on success (otherwise zero).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ConnectWithSimulator(System.Int32,System.String,System.Int32,System.Int32,System.Byte&amp;,UnityEngine.Networking.ConnectionSimulatorConfig)">
      <summary>
        <para>Connect with simulated latency.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (Retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="address">IPv4 address of the other peer.</param>
      <param name="port">Port of the other peer.</param>
      <param name="exeptionConnectionId">Set to 0 in the case of a default connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="conf">A Networking.ConnectionSimulatorConfig defined for this connection.</param>
      <returns>
        <para>A unique connection identifier on success (otherwise zero).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.Disconnect(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Send a disconnect signal to the connected peer and close the connection. Poll Networking.NetworkTransport.Receive() to be notified that the connection is closed. This signal is only sent once (best effort delivery).  If this packet is dropped for some reason, the peer closes the connection by timeout.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">The connection ID of the connection you want to close.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.DisconnectNetworkHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>This will disconnect the host and disband the group.
DisconnectNetworkHost can only be called by the group owner on the relay server.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.FinishSendMulticast(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Finalizes sending of a message to a group of connections. Only one multicast message at a time is allowed per host.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection (retrieved when calling Networking.NetworkTransport.AddHost).</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetAckBufferCount(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns size of reliable buffer.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Size of ack buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetAssetId(UnityEngine.GameObject)">
      <summary>
        <para>The Unity Multiplayer spawning system uses assetIds to identify what remote objects to spawn. This function allows you to get the assetId for the prefab associated with an object.</para>
      </summary>
      <param name="go">Target GameObject to get assetId for.</param>
      <returns>
        <para>The assetId of the game object's prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetBroadcastConnectionInfo(System.Int32,System.String&amp;,System.Int32&amp;,System.Byte&amp;)">
      <summary>
        <para>After Networking.NetworkTransport.Receive() returns Networking.NetworkEventType.BroadcastEvent, this function will return the connection information of the broadcast sender. This information can then be used for connecting to the broadcast sender.</para>
      </summary>
      <param name="hostId">ID of the broadcast receiver.</param>
      <param name="address">IPv4 address of broadcast sender.</param>
      <param name="port">Port of broadcast sender.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetBroadcastConnectionMessage(System.Int32,System.Byte[],System.Int32,System.Int32&amp;,System.Byte&amp;)">
      <summary>
        <para>After Networking.NetworkTransport.Receive() returns Networking.NetworkEventType.BroadcastEvent, this function returns a complimentary message from the broadcast sender.</para>
      </summary>
      <param name="hostId">ID of broadcast receiver.</param>
      <param name="buffer">Message buffer provided by caller.</param>
      <param name="bufferSize">Buffer size.</param>
      <param name="receivedSize">Received size (if received size &gt; bufferSize, corresponding error will be set).</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetConnectionInfo(System.Int32,System.Int32,System.String&amp;,System.Int32&amp;,UnityEngine.Networking.Types.NetworkID&amp;,UnityEngine.Networking.Types.NodeID&amp;,System.Byte&amp;)">
      <summary>
        <para>Returns the connection parameters for the specified connectionId. These parameters can be sent to other users to establish a direct connection to this peer. If this peer is connected to the host via Relay, the Relay-related parameters are set.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of connection.</param>
      <param name="address">IP address.</param>
      <param name="port">Port.</param>
      <param name="network">Relay network guid.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="dstNode">Destination slot id.</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetCurrentIncomingMessageAmount">
      <summary>
        <para>Returns the number of unread messages in the read-queue.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetCurrentOutgoingMessageAmount">
      <summary>
        <para>Returns the total number of messages still in the write-queue.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetCurrentRTT(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Return the round trip time for the given connectionId.</para>
      </summary>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <returns>
        <para>Current round trip time in ms.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetIncomingMessageQueueSize(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns the number of received messages waiting in the queue for processing.</para>
      </summary>
      <param name="hostId">Host ID associated with this queue.</param>
      <param name="error">Error code. Cast this value to Networking.NetworkError for more information.</param>
      <returns>
        <para>The number of messages in the queue.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetIncomingPacketCount(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how many packets have been received from start for connection.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>The absolute number of packets received since the connection was established.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetIncomingPacketCountForAllHosts">
      <summary>
        <para>Returns how many packets have been received from start. (from Networking.NetworkTransport.Init call).</para>
      </summary>
      <returns>
        <para>Packets count received from start for all hosts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetIncomingPacketDropCountForAllHosts">
      <summary>
        <para>How many packets have been dropped due lack space in incoming queue (absolute value, countinf from start).</para>
      </summary>
      <returns>
        <para>Dropping packet count.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetIncomingPacketLossCount(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how many incoming packets have been lost due transmitting (dropped by network).</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>The absolute number of packets that have been lost since the connection was established.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetMaxAllowedBandwidth(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Gets the currently-allowed network bandwidth in bytes per second. The value returned can vary because bandwidth can be throttled by flow control. If the bandwidth is throttled to zero, the connection is disconnected.ted.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Currently-allowed bandwidth in bytes per second.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetNetIOTimeuS">
      <summary>
        <para>Function returns time spent on network I/O operations in microseconds.</para>
      </summary>
      <returns>
        <para>Time in micro seconds.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetNetworkLostPacketNum(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Return the total number of packets that has been lost.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetNetworkTimestamp">
      <summary>
        <para>Get a network timestamp. Can be used in your messages to investigate network delays together with Networking.GetRemoteDelayTimeMS.</para>
      </summary>
      <returns>
        <para>Timestamp.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingFullBytesCount">
      <summary>
        <para>Returns how much raw data (in bytes) have been sent from start for all hosts (from Networking.NetworkTransport.Init call).</para>
      </summary>
      <returns>
        <para>Total data (user payload, protocol specific data, ip and udp headers) (in bytes) sent from start for all hosts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingFullBytesCountForConnection(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how much raw data (in bytes) have been sent from start for connection (from call Networking.NetworkTransport.Connect for active connect or from connection request receiving for passive connect).</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Total data (user payload, protocol specific data, ip and udp headers) (in bytes) sent from start for connection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingFullBytesCountForHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how much raw data (in bytes) have been sent from start for the host (from call Networking.NetworkTransport.AddHost).</para>
      </summary>
      <param name="hostId">ID of the host.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Total data (user payload, protocol specific data, ip and udp headers) (in bytes) sent from start for the host.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingMessageCount">
      <summary>
        <para>Returns how many messages have been sent from start (from Networking.NetworkTransport.Init call).</para>
      </summary>
      <returns>
        <para>Messages count sent from start (from call Networking.NetworkTransport.Init) for all hosts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingMessageCountForConnection(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how many packets have been sent from start for connection (from call Networking.NetworkTransport.Connect for active connect or from connection request receiving for passive connect).</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Messages count sending from start for connection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingMessageCountForHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how many messages have been sent from start for host (from call Networking.NetworkTransport.AddHost).</para>
      </summary>
      <param name="hostId">ID of the host.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Messages count sending from start for the host.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingMessageQueueSize(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns the number of messages waiting in the outgoing message queue to be sent.</para>
      </summary>
      <param name="hostId">Host ID associated with this queue.</param>
      <param name="error">Error code. Cast this value to Networking.NetworkError for more information.</param>
      <returns>
        <para>The number of messages waiting in the outgoing message queue to be sent.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingPacketCount">
      <summary>
        <para>Returns how many packets have been sent from start (from call Networking.NetworkTransport.Init) for all hosts.</para>
      </summary>
      <returns>
        <para>Packets count sent from networking library start (from call Networking.NetworkTransport.Init)  for all hosts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingPacketCountForConnection(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how many packets have been sent for connection from it start (from call Networking.NetworkTransport.Connect for active connect or from connection request receiving for passive connect).</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Packets count sent for connection from it start.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingPacketCountForHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how many packets have been sent for host from it start (from call Networking.NetworkTransport.AddHost).</para>
      </summary>
      <param name="hostId">ID of the host.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Count packets have been sent from host start.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingPacketNetworkLossPercent(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns the value in percent of the number of sent packets that were dropped by the network and not received by the peer.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>The number of packets dropped by the network in the last ping timeout period expressed as an integer percentage from 0 to 100.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingPacketOverflowLossPercent(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns the value in percent of the number of sent packets that were dropped by the peer.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>The number of packets dropped by the peer in the last ping timeout period expressed as an integer percentage from 0 to 100.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingSystemBytesCount">
      <summary>
        <para>Returns how much user payload and protocol system headers (in bytes)  have been sent from start (from Networking.NetworkTransport.Init call).</para>
      </summary>
      <returns>
        <para>Total payload and protocol system headers (in bytes) sent from start for all hosts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingSystemBytesCountForConnection(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how much payload and protocol system headers (in bytes) have been sent from start for connection (from call Networking.NetworkTransport.Connect for active connect or from connection request receiving for passive connect).</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Total user payload and protocol system headers (in bytes) sent from start for connection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingSystemBytesCountForHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how much payload and protocol system headers (in bytes) have been sent from start for the host (from call Networking.NetworkTransport.AddHost).</para>
      </summary>
      <param name="hostId">ID of the host.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Total user payload and protocol system headers (in bytes) sent from start for the host.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingUserBytesCount">
      <summary>
        <para>Returns how much payload (user) bytes have been sent from start (from Networking.NetworkTransport.Init call).</para>
      </summary>
      <returns>
        <para>Total payload (in bytes) sent from start for all hosts.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingUserBytesCountForConnection(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how much payload (user) bytes have been sent from start for connection (from call Networking.NetworkTransport.Connect for active connect or from connection request receiving for passive connect).</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Total payload (in bytes) sent from start for connection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetOutgoingUserBytesCountForHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns how much payload (user) bytes have been sent from start for the host (from call Networking.NetworkTransport.AddHost).</para>
      </summary>
      <param name="hostId">ID of the host.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Total payload (in bytes) sent from start for the host.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetPacketReceivedRate(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Return the current receive rate in bytes per second.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetPacketSentRate(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Return the current send rate in bytes per second.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetRemoteDelayTimeMS(System.Int32,System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Returns the delay for the timestamp received.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="remoteTime">Timestamp delivered from peer.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.GetRemotePacketReceivedRate(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Deprecated. Use Networking.NetworkTransport.GetNetworkLostPacketNum() instead.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.Init">
      <summary>
        <para>Initializes the NetworkTransport. Should be called before any other operations on the NetworkTransport are done.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.IsBroadcastDiscoveryRunning">
      <summary>
        <para>Check if the broadcast discovery sender is running.</para>
      </summary>
      <returns>
        <para>True if it is running. False if it is not running.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Networking.NetworkTransport.IsStarted">
      <summary>
        <para>Deprecated.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.QueueMessageForSending(System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte&amp;)">
      <summary>
        <para>Function is queueing but not sending messages.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <param name="channelId">The channel ID to send on.</param>
      <param name="buffer">Buffer containing the data to send.</param>
      <param name="size">Size of the buffer.</param>
      <returns>
        <para>True if success.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.Receive(System.Int32&amp;,System.Int32&amp;,System.Int32&amp;,System.Byte[],System.Int32,System.Int32&amp;,System.Byte&amp;)">
      <summary>
        <para>Called to poll the underlying system for events.</para>
      </summary>
      <param name="hostId">Host ID associated with the event.</param>
      <param name="connectionId">The connectionID that received the event.</param>
      <param name="channelId">The channel ID associated with the event.</param>
      <param name="buffer">The buffer that will hold the data received.</param>
      <param name="bufferSize">Size of the buffer supplied.</param>
      <param name="receivedSize">The actual receive size of the data.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Type of event returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ReceiveFromHost(System.Int32,System.Int32&amp;,System.Int32&amp;,System.Byte[],System.Int32,System.Int32&amp;,System.Byte&amp;)">
      <summary>
        <para>Similar to Networking.NetworkTransport.Receive but will only poll for the provided hostId.</para>
      </summary>
      <param name="hostId">The host ID to check for events.</param>
      <param name="connectionId">The connection ID that received the event.</param>
      <param name="channelId">The channel ID associated with the event.</param>
      <param name="buffer">The buffer that will hold the data received.</param>
      <param name="bufferSize">Size of the buffer supplied.</param>
      <param name="receivedSize">The actual receive size of the data.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Type of event returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.ReceiveRelayEventFromHost(System.Int32,System.Byte&amp;)">
      <summary>
        <para>Polls the host for the following events:  Networking.NetworkEventType.ConnectEvent and Networking.NetworkEventType.DisconnectEvent.
Can only be called by the relay group owner.</para>
      </summary>
      <param name="hostId">The host ID to check for events.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Type of event returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.RemoveHost(System.Int32)">
      <summary>
        <para>Closes the opened socket, and closes all connections belonging to that socket.</para>
      </summary>
      <param name="hostId">Host ID to remove.</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.Send(System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte&amp;)">
      <summary>
        <para>Send data to peer.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="channelId">The channel ID to send on.</param>
      <param name="buffer">Buffer containing the data to send.</param>
      <param name="size">Size of the buffer.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.SendMulticast(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Add a connection for the multicast send.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.SendQueuedMessages(System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Sends messages, previously queued by NetworkTransport.QueueMessageForSending function.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="connectionId">ID of the connection.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>True if hostId and connectioId are valid.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.SetBroadcastCredentials(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Sets the credentials required for receiving broadcast messages. Should any credentials of a received broadcast message not match, the broadcast discovery message is dropped.</para>
      </summary>
      <param name="hostId">Host ID associated with this broadcast.</param>
      <param name="key">Key part of the credentials associated with this broadcast.</param>
      <param name="version">Version part of the credentials associated with this broadcast.</param>
      <param name="subversion">Subversion part of the credentials associated with this broadcast.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.SetPacketStat">
      <summary>
        <para>Used to inform the profiler of network packet statistics.</para>
      </summary>
      <param name="packetStatId">The ID of the message being reported.</param>
      <param name="numMsgs">Number of message being reported.</param>
      <param name="numBytes">Number of bytes used by reported messages.</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.Shutdown">
      <summary>
        <para>Shut down the NetworkTransport.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.StartBroadcastDiscovery(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Byte&amp;)">
      <summary>
        <para>Starts sending a broadcasting message in all local subnets.</para>
      </summary>
      <param name="hostId">Host ID which should be reported via broadcast (broadcast receivers will connect to this host).</param>
      <param name="broadcastPort">Port used for the broadcast message.</param>
      <param name="key">Key part of the credentials associated with this broadcast.</param>
      <param name="version">Version part of the credentials associated with this broadcast.</param>
      <param name="subversion">Subversion part of the credentials associated with this broadcast.</param>
      <param name="buffer">Complimentary message. This message will delivered to the receiver with the broadcast event.</param>
      <param name="size">Size of message.</param>
      <param name="timeout">Specifies how often the broadcast message should be sent in milliseconds.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
      <returns>
        <para>Return true if broadcasting request has been submitted.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.StartSendMulticast(System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte&amp;)">
      <summary>
        <para>Start to multicast send.</para>
      </summary>
      <param name="hostId">Host ID associated with this connection.</param>
      <param name="channelId">The channel ID.</param>
      <param name="buffer">Buffer containing the data to send.</param>
      <param name="size">Size of the buffer.</param>
      <param name="error">Error (can be cast to Networking.NetworkError for more information).</param>
    </member>
    <member name="M:UnityEngine.Networking.NetworkTransport.StopBroadcastDiscovery">
      <summary>
        <para>Stop sending the broadcast discovery message.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.PlayerConnection.MessageEventArgs">
      <summary>
        <para>Arguments passed to Action callbacks registered in PlayerConnection.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.PlayerConnection.MessageEventArgs.data">
      <summary>
        <para>Data that is received.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.PlayerConnection.MessageEventArgs.playerId">
      <summary>
        <para>The Player ID that the data is received from.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.PlayerConnection.PlayerConnection">
      <summary>
        <para>Used for handling the network connection from the Player to the Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.PlayerConnection.PlayerConnection.instance">
      <summary>
        <para>Singleton instance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.PlayerConnection.PlayerConnection.isConnected">
      <summary>
        <para>Returns true when Editor is connected to the player.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.PlayerConnection.PlayerConnection.Register(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Registers a listener for a specific message ID, with an Action to be executed whenever that message is received by the Editor.
This ID must be the same as for messages sent from EditorConnection.Send().</para>
      </summary>
      <param name="messageId">The message ID that should cause the Action callback to be executed when received.</param>
      <param name="callback">Action that is executed when a message with ID messageId is received by the Editor.
The callback includes the data that is sent from the Player, and the Player ID.
The Player ID is always 1, because only one Editor can be connected.</param>
    </member>
    <member name="M:UnityEngine.Networking.PlayerConnection.PlayerConnection.RegisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Registers a callback that is invoked when the Editor connects to the Player.</para>
      </summary>
      <param name="callback">Action called when Player connects, with the Player ID of the Editor.</param>
    </member>
    <member name="M:UnityEngine.Networking.PlayerConnection.PlayerConnection.RegisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Registers a callback to be called when Editor disconnects.</para>
      </summary>
      <param name="callback">The Action that is called when a Player disconnects.</param>
    </member>
    <member name="M:UnityEngine.Networking.PlayerConnection.PlayerConnection.Send(System.Guid,System.Byte[])">
      <summary>
        <para>Sends data to the Editor.</para>
      </summary>
      <param name="messageId">The type ID of the message that is sent to the Editor.</param>
      <param name="data"></param>
    </member>
    <member name="M:UnityEngine.Networking.PlayerConnection.PlayerConnection.Unregister(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Deregisters a message listener.</para>
      </summary>
      <param name="messageId">Message ID associated with the callback that you wish to deregister.</param>
      <param name="callback">The associated callback function you wish to deregister.</param>
    </member>
    <member name="T:UnityEngine.Networking.QosType">
      <summary>
        <para>Enumeration of all supported quality of service channel modes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.AllCostDelivery">
      <summary>
        <para>A reliable message that will be re-sent with a high frequency until it is acknowledged.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.Reliable">
      <summary>
        <para>Each message is guaranteed to be delivered but not guaranteed to be in order.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.ReliableFragmented">
      <summary>
        <para>Each message is guaranteed to be delivered, also allowing fragmented messages with up to 32 fragments per message.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.ReliableSequenced">
      <summary>
        <para>Each message is guaranteed to be delivered and in order.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.ReliableStateUpdate">
      <summary>
        <para>A reliable message. Note: Only the last message in the send buffer is sent. Only the most recent message in the receive buffer will be delivered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.StateUpdate">
      <summary>
        <para>An unreliable message. Only the last message in the send buffer is sent. Only the most recent message in the receive buffer will be delivered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.Unreliable">
      <summary>
        <para>There is no guarantee of delivery or ordering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.UnreliableFragmented">
      <summary>
        <para>There is no guarantee of delivery or ordering, but allowing fragmented messages with up to 32 fragments per message.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.QosType.UnreliableSequenced">
      <summary>
        <para>There is no guarantee of delivery and all unordered messages will be dropped. Example: VoIP.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.ReactorModel">
      <summary>
        <para>Define how unet will handle network io operation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.ReactorModel.FixRateReactor">
      <summary>
        <para>Network thread will sleep up to threadawake timeout, after that it will try receive up to maxpoolsize amount of messages and then will try perform send operation for connection whihc ready to send.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.ReactorModel.SelectReactor">
      <summary>
        <para>Network thread will sleep up to threadawake timeout, or up to receive event on socket will happened. Awaked thread will try to read up to maxpoolsize packets from socket and will try update connections ready to send (with fixing awaketimeout rate).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.AppID">
      <summary>
        <para>The AppID identifies the application on the Unity Cloud or UNET servers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.AppID.Invalid">
      <summary>
        <para>Invalid AppID.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.HostPriority">
      <summary>
        <para>An Enum representing the priority of a client in a match, starting at 0 and increasing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.HostPriority.Invalid">
      <summary>
        <para>The Invalid case for a HostPriority. An Invalid host priority is not a valid host.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.NetworkAccessLevel">
      <summary>
        <para>Describes the access levels granted to this client.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NetworkAccessLevel.Admin">
      <summary>
        <para>Administration access level, generally describing clearence to perform game altering actions against anyone inside a particular match.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NetworkAccessLevel.Invalid">
      <summary>
        <para>Invalid access level, signifying no access level has been granted/specified.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NetworkAccessLevel.Owner">
      <summary>
        <para>Access level Owner, generally granting access for operations key to the peer host server performing it's work.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NetworkAccessLevel.User">
      <summary>
        <para>User access level. This means you can do operations which affect yourself only, like disconnect yourself from the match.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.NetworkAccessToken">
      <summary>
        <para>Access token used to authenticate a client session for the purposes of allowing or disallowing match operations requested by that client.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NetworkAccessToken.array">
      <summary>
        <para>Binary field for the actual token.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.Types.NetworkAccessToken.GetByteString">
      <summary>
        <para>Accessor to get an encoded string from the m_array data.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.Types.NetworkAccessToken.IsValid">
      <summary>
        <para>Checks if the token is a valid set of data with respect to default values (returns true if the values are not default, does not validate the token is a current legitimate token with respect to the server's auth framework).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.NetworkID">
      <summary>
        <para>Network ID, used for match making.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NetworkID.Invalid">
      <summary>
        <para>Invalid NetworkID.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.NodeID">
      <summary>
        <para>The NodeID is the ID used in Relay matches to track nodes in a network.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.NodeID.Invalid">
      <summary>
        <para>The invalid case of a NodeID.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.Types.SourceID">
      <summary>
        <para>Identifies a specific game instance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.Types.SourceID.Invalid">
      <summary>
        <para>Invalid SourceID.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.UnityWebRequest">
      <summary>
        <para>The UnityWebRequest object is used to communicate with web servers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.chunkedTransfer">
      <summary>
        <para>Indicates whether the UnityWebRequest system should employ the HTTP/1.1 chunked-transfer encoding method.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.disposeDownloadHandlerOnDispose">
      <summary>
        <para>If true, any DownloadHandler attached to this UnityWebRequest will have DownloadHandler.Dispose called automatically when UnityWebRequest.Dispose is called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.disposeUploadHandlerOnDispose">
      <summary>
        <para>If true, any UploadHandler attached to this UnityWebRequest will have UploadHandler.Dispose called automatically when UnityWebRequest.Dispose is called.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.downloadedBytes">
      <summary>
        <para>Returns the number of bytes of body data the system has downloaded from the remote server. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.downloadHandler">
      <summary>
        <para>Holds a reference to a DownloadHandler object, which manages body data received from the remote server by this UnityWebRequest.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.downloadProgress">
      <summary>
        <para>Returns a floating-point value between 0.0 and 1.0, indicating the progress of downloading body data from the server. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.error">
      <summary>
        <para>A human-readable string describing any system errors encountered by this UnityWebRequest object while handling HTTP requests or responses. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.isDone">
      <summary>
        <para>Returns true after the UnityWebRequest has finished communicating with the remote server. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.isError">
      <summary>
        <para>Returns true after this UnityWebRequest encounters a system error. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.isModifiable">
      <summary>
        <para>Returns true while a UnityWebRequest’s configuration properties can be altered. (Read Only)</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.UnityWebRequest.kHttpVerbCREATE">
      <summary>
        <para>The string "CREATE", commonly used as the verb for an HTTP CREATE request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.UnityWebRequest.kHttpVerbDELETE">
      <summary>
        <para>The string "DELETE", commonly used as the verb for an HTTP DELETE request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.UnityWebRequest.kHttpVerbGET">
      <summary>
        <para>The string "GET", commonly used as the verb for an HTTP GET request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.UnityWebRequest.kHttpVerbHEAD">
      <summary>
        <para>The string "HEAD", commonly used as the verb for an HTTP HEAD request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.UnityWebRequest.kHttpVerbPOST">
      <summary>
        <para>The string "POST", commonly used as the verb for an HTTP POST request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Networking.UnityWebRequest.kHttpVerbPUT">
      <summary>
        <para>The string "PUT", commonly used as the verb for an HTTP PUT request.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.method">
      <summary>
        <para>Defines the HTTP verb used by this UnityWebRequest, such as GET or POST.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.redirectLimit">
      <summary>
        <para>Indicates the number of redirects which this UnityWebRequest will follow before halting with a “Redirect Limit Exceeded” system error.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.responseCode">
      <summary>
        <para>The numeric HTTP response code returned by the server, such as 200, 404 or 500. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.timeout">
      <summary>
        <para>Sets UnityWebRequest to attempt to abort after the number of seconds in timeout have passed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.uploadedBytes">
      <summary>
        <para>Returns the number of bytes of body data the system has uploaded to the remote server. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.uploadHandler">
      <summary>
        <para>Holds a reference to the UploadHandler object which manages body data to be uploaded to the remote server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.uploadProgress">
      <summary>
        <para>Returns a floating-point value between 0.0 and 1.0, indicating the progress of uploading body data to the server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.url">
      <summary>
        <para>Defines the target URL for the UnityWebRequest to communicate with.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UnityWebRequest.useHttpContinue">
      <summary>
        <para>Determines whether this UnityWebRequest will include Expect: 100-Continue in its outgoing request headers. (Default: true).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Abort">
      <summary>
        <para>If in progress, halts the UnityWebRequest as soon as possible.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.#ctor">
      <summary>
        <para>Creates a UnityWebRequest with the default options and no attached DownloadHandler or UploadHandler. Default method is GET.</para>
      </summary>
      <param name="url">The target URL with which this UnityWebRequest will communicate. Also accessible via the url property.</param>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.#ctor(System.String)">
      <summary>
        <para>Creates a UnityWebRequest with the default options and no attached DownloadHandler or UploadHandler. Default method is GET.</para>
      </summary>
      <param name="url">The target URL with which this UnityWebRequest will communicate. Also accessible via the url property.</param>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Delete(System.String)">
      <summary>
        <para>Creates a UnityWebRequest configured for HTTP DELETE.</para>
      </summary>
      <param name="uri">The URI to which a DELETE request should be sent.</param>
      <returns>
        <para>A UnityWebRequest configured to send an HTTP DELETE request.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Dispose">
      <summary>
        <para>Signals that this [UnityWebRequest] is no longer being used, and should clean up any resources it is using.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GenerateBoundary">
      <summary>
        <para>Generate a random 40-byte array for use as a multipart form boundary.</para>
      </summary>
      <returns>
        <para>40 random bytes, guaranteed to contain only printable ASCII values.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Get(System.String)">
      <summary>
        <para>Creates a UnityWebRequest configured for HTTP GET.</para>
      </summary>
      <param name="uri">The URI of the resource to retrieve via HTTP GET.</param>
      <returns>
        <para>A UnityWebRequest object configured to retrieve data from uri.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetAssetBundle(System.String,System.UInt32)">
      <summary>
        <para>Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.</para>
      </summary>
      <param name="uri">The URI of the asset bundle to download.</param>
      <param name="crc">If nonzero, this number will be compared to the checksum of the downloaded asset bundle data. If the CRCs do not match, an error will be logged and the asset bundle will not be loaded. If set to zero, CRC checking will be skipped.</param>
      <param name="version">An integer version number, which will be compared to the cached version of the asset bundle to download. Increment this number to force Unity to redownload a cached asset bundle.

Analogous to the version parameter for WWW.LoadFromCacheOrDownload.</param>
      <param name="hash">A version hash. If this hash does not match the hash for the cached version of this asset bundle, the asset bundle will be redownloaded.</param>
      <returns>
        <para>A UnityWebRequest configured to downloading a Unity Asset Bundle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetAssetBundle(System.String,System.UInt32,System.UInt32)">
      <summary>
        <para>Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.</para>
      </summary>
      <param name="uri">The URI of the asset bundle to download.</param>
      <param name="crc">If nonzero, this number will be compared to the checksum of the downloaded asset bundle data. If the CRCs do not match, an error will be logged and the asset bundle will not be loaded. If set to zero, CRC checking will be skipped.</param>
      <param name="version">An integer version number, which will be compared to the cached version of the asset bundle to download. Increment this number to force Unity to redownload a cached asset bundle.

Analogous to the version parameter for WWW.LoadFromCacheOrDownload.</param>
      <param name="hash">A version hash. If this hash does not match the hash for the cached version of this asset bundle, the asset bundle will be redownloaded.</param>
      <returns>
        <para>A UnityWebRequest configured to downloading a Unity Asset Bundle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetAssetBundle(System.String,UnityEngine.Hash128,System.UInt32)">
      <summary>
        <para>Creates a UnityWebRequest optimized for downloading a Unity Asset Bundle via HTTP GET.</para>
      </summary>
      <param name="uri">The URI of the asset bundle to download.</param>
      <param name="crc">If nonzero, this number will be compared to the checksum of the downloaded asset bundle data. If the CRCs do not match, an error will be logged and the asset bundle will not be loaded. If set to zero, CRC checking will be skipped.</param>
      <param name="version">An integer version number, which will be compared to the cached version of the asset bundle to download. Increment this number to force Unity to redownload a cached asset bundle.

Analogous to the version parameter for WWW.LoadFromCacheOrDownload.</param>
      <param name="hash">A version hash. If this hash does not match the hash for the cached version of this asset bundle, the asset bundle will be redownloaded.</param>
      <returns>
        <para>A UnityWebRequest configured to downloading a Unity Asset Bundle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetAudioClip(System.String,UnityEngine.AudioType)">
      <summary>
        <para>Create a UnityWebRequest intended to download an audio clip via HTTP GET and create an AudioClip based on the retrieved data.</para>
      </summary>
      <param name="uri">The URI of the audio clip to download.</param>
      <param name="audioType">The type of audio encoding for the downloaded audio clip. See AudioType.</param>
      <returns>
        <para>A UnityWebRequest properly configured to download an audio clip and convert it to an AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetRequestHeader(System.String)">
      <summary>
        <para>Retrieves the value of a custom request header.</para>
      </summary>
      <param name="name">Name of the custom request header. Case-insensitive.</param>
      <returns>
        <para>The value of the custom request header. If no custom header with a matching name has been set, returns an empty string.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetResponseHeader(System.String)">
      <summary>
        <para>Retrieves the value of a response header from the latest HTTP response received.</para>
      </summary>
      <param name="name">The name of the HTTP header to retrieve. Case-insensitive.</param>
      <returns>
        <para>The value of the HTTP header from the latest HTTP response. If no header with a matching name has been received, or no responses have been received, returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetResponseHeaders">
      <summary>
        <para>Retrieves a dictionary containing all the response headers received by this UnityWebRequest in the latest HTTP response.</para>
      </summary>
      <returns>
        <para>A dictionary containing all the response headers received in the latest HTTP response. If no responses have been received, returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetTexture(System.String)">
      <summary>
        <para>Create a UnityWebRequest intended to download an image via HTTP GET and create a Texture based on the retrieved data.</para>
      </summary>
      <param name="uri">The URI of the image to download.</param>
      <param name="nonReadable">If true, the texture's raw data will not be accessible to script. This can conserve memory. Default: false.</param>
      <returns>
        <para>A UnityWebRequest properly configured to download an image and convert it to a Texture.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.GetTexture(System.String,System.Boolean)">
      <summary>
        <para>Create a UnityWebRequest intended to download an image via HTTP GET and create a Texture based on the retrieved data.</para>
      </summary>
      <param name="uri">The URI of the image to download.</param>
      <param name="nonReadable">If true, the texture's raw data will not be accessible to script. This can conserve memory. Default: false.</param>
      <returns>
        <para>A UnityWebRequest properly configured to download an image and convert it to a Texture.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Head(System.String)">
      <summary>
        <para>Creates a UnityWebRequest configured to send a HTTP HEAD request.</para>
      </summary>
      <param name="uri">The URI to which to send a HTTP HEAD request.</param>
      <returns>
        <para>A UnityWebRequest configured to transmit a HTTP HEAD request.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Post(System.String,System.String)">
      <summary>
        <para>Create a UnityWebRequest configured to send form data to a server via HTTP POST.</para>
      </summary>
      <param name="uri">The target URI to which form data will be transmitted.</param>
      <param name="postData">Form body data. Will be URLEncoded via WWWTranscoder.URLEncode prior to transmission.</param>
      <returns>
        <para>A UnityWebRequest configured to send form data to uri via POST.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Post(System.String,UnityEngine.WWWForm)">
      <summary>
        <para>Create a UnityWebRequest configured to send form data to a server via HTTP POST.</para>
      </summary>
      <param name="uri">The target URI to which form data will be transmitted.</param>
      <param name="formData">Form fields or files encapsulated in a WWWForm object, for formatting and transmission to the remote server.</param>
      <returns>
        <para>A UnityWebRequest configured to send form data to uri via POST.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Post(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Networking.IMultipartFormSection&gt;)">
      <summary>
        <para>Create a UnityWebRequest configured to send form data to a server via HTTP POST.</para>
      </summary>
      <param name="uri">The target URI to which form data will be transmitted.</param>
      <param name="multipartFormSections">A list of form fields or files to be formatted and transmitted to the remote server.</param>
      <param name="boundary">A unique boundary string, which will be used when separating form fields in a multipart form.  If not supplied, a boundary will be generated for you.</param>
      <returns>
        <para>A UnityWebRequest configured to send form data to uri via POST.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Post(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Networking.IMultipartFormSection&gt;,System.Byte[])">
      <summary>
        <para>Create a UnityWebRequest configured to send form data to a server via HTTP POST.</para>
      </summary>
      <param name="uri">The target URI to which form data will be transmitted.</param>
      <param name="multipartFormSections">A list of form fields or files to be formatted and transmitted to the remote server.</param>
      <param name="boundary">A unique boundary string, which will be used when separating form fields in a multipart form.  If not supplied, a boundary will be generated for you.</param>
      <returns>
        <para>A UnityWebRequest configured to send form data to uri via POST.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Post(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>Create a UnityWebRequest configured to send form data to a server via HTTP POST.</para>
      </summary>
      <param name="uri">The target URI to which form data will be transmitted.</param>
      <param name="formFields">Strings indicating the keys and values of form fields. Will be automatically formatted into a URL-encoded form body.</param>
      <returns>
        <para>A UnityWebRequest configured to send form data to uri via POST.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Put(System.String,System.Byte[])">
      <summary>
        <para>Create a UnityWebRequest configured to upload raw data to a remote server via HTTP PUT.</para>
      </summary>
      <param name="uri">The URI to which the data will be sent.</param>
      <param name="bodyData">The data to transmit to the remote server.

If a string, the string will be converted to raw bytes via &lt;a href="http:msdn.microsoft.comen-uslibrarysystem.text.encoding.utf8"&gt;System.Text.Encoding.UTF8&lt;a&gt;.</param>
      <returns>
        <para>A UnityWebRequest configured to transmit bodyData to uri via HTTP PUT.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Put(System.String,System.String)">
      <summary>
        <para>Create a UnityWebRequest configured to upload raw data to a remote server via HTTP PUT.</para>
      </summary>
      <param name="uri">The URI to which the data will be sent.</param>
      <param name="bodyData">The data to transmit to the remote server.

If a string, the string will be converted to raw bytes via &lt;a href="http:msdn.microsoft.comen-uslibrarysystem.text.encoding.utf8"&gt;System.Text.Encoding.UTF8&lt;a&gt;.</param>
      <returns>
        <para>A UnityWebRequest configured to transmit bodyData to uri via HTTP PUT.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.Send">
      <summary>
        <para>Begin communicating with the remote server.</para>
      </summary>
      <returns>
        <para>An AsyncOperation indicating the progress/completion state of the UnityWebRequest. Yield this object to wait until the UnityWebRequest is done.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.SerializeFormSections(System.Collections.Generic.List`1&lt;UnityEngine.Networking.IMultipartFormSection&gt;,System.Byte[])">
      <summary>
        <para>Converts a List of IMultipartFormSection objects into a byte array containing raw multipart form data.</para>
      </summary>
      <param name="multipartFormSections">A List of IMultipartFormSection objects.</param>
      <param name="boundary">A unique boundary string to separate the form sections.</param>
      <returns>
        <para>A byte array of raw multipart form data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.SerializeSimpleForm(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>Serialize a dictionary of strings into a byte array containing URL-encoded UTF8 characters.</para>
      </summary>
      <param name="formFields">A dictionary containing the form keys and values to serialize.</param>
      <returns>
        <para>A byte array containing the serialized form. The form's keys and values have been URL-encoded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Networking.UnityWebRequest.SetRequestHeader(System.String,System.String)">
      <summary>
        <para>Set a HTTP request header to a custom value.</para>
      </summary>
      <param name="name">The key of the header to be set. Case-sensitive.</param>
      <param name="value">The header's intended value.</param>
    </member>
    <member name="T:UnityEngine.Networking.UploadHandler">
      <summary>
        <para>Helper object for UnityWebRequests. Manages the buffering and transmission of body data during HTTP requests.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UploadHandler.contentType">
      <summary>
        <para>Determines the default Content-Type header which will be transmitted with the outbound HTTP request.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UploadHandler.data">
      <summary>
        <para>The raw data which will be transmitted to the remote server as body data. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.UploadHandler.progress">
      <summary>
        <para>Returns the proportion of data uploaded to the remote server compared to the total amount of data to upload. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.UploadHandler.Dispose">
      <summary>
        <para>Signals that this [UploadHandler] is no longer being used, and should clean up any resources it is using.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Networking.UploadHandlerRaw">
      <summary>
        <para>A general-purpose UploadHandler subclass, using a native-code memory buffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.UploadHandlerRaw.#ctor(System.Byte[])">
      <summary>
        <para>General constructor. Contents of the input argument are copied into a native buffer.</para>
      </summary>
      <param name="data">Raw data to transmit to the remote server.</param>
    </member>
    <member name="T:UnityEngine.Networking.Utility">
      <summary>
        <para>Networking Utility.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Networking.Utility.useRandomSourceID">
      <summary>
        <para>This property is deprecated and does not need to be set or referenced.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.Utility.GetAccessTokenForNetwork(UnityEngine.Networking.Types.NetworkID)">
      <summary>
        <para>Utility function to get this client's access token for a particular network, if it has been set.</para>
      </summary>
      <param name="netId"></param>
    </member>
    <member name="M:UnityEngine.Networking.Utility.GetAppID">
      <summary>
        <para>Utility function to fetch the program's ID for UNET Cloud interfacing.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.Utility.GetSourceID">
      <summary>
        <para>Utility function to get the client's SourceID for unique identification.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Networking.Utility.SetAccessTokenForNetwork(UnityEngine.Networking.Types.NetworkID,UnityEngine.Networking.Types.NetworkAccessToken)">
      <summary>
        <para>Utility function that accepts the access token for a network after it's received from the server.</para>
      </summary>
      <param name="netId"></param>
      <param name="accessToken"></param>
    </member>
    <member name="M:UnityEngine.Networking.Utility.SetAppID(UnityEngine.Networking.Types.AppID)">
      <summary>
        <para>Deprecated; Setting the AppID is no longer necessary. Please log in through the editor and set up the project there.</para>
      </summary>
      <param name="newAppID"></param>
    </member>
    <member name="T:UnityEngine.NetworkLogLevel">
      <summary>
        <para>Describes different levels of log information the network layer supports.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkLogLevel.Full">
      <summary>
        <para>Full debug level logging down to each individual message being reported.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkLogLevel.Informational">
      <summary>
        <para>Report informational messages like connectivity events.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkLogLevel.Off">
      <summary>
        <para>Only report errors, otherwise silent.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkMessageInfo">
      <summary>
        <para>This data structure contains information on a message just received from the network.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkMessageInfo.networkView">
      <summary>
        <para>The NetworkView who sent this message.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkMessageInfo.sender">
      <summary>
        <para>The player who sent this network message (owner).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkMessageInfo.timestamp">
      <summary>
        <para>The time stamp when the Message was sent in seconds.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkPeerType">
      <summary>
        <para>Describes the status of the network interface peer type as returned by Network.peerType.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkPeerType.Client">
      <summary>
        <para>Running as client.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkPeerType.Connecting">
      <summary>
        <para>Attempting to connect to a server.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkPeerType.Disconnected">
      <summary>
        <para>No client connection running. Server not initialized.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkPeerType.Server">
      <summary>
        <para>Running as server.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkPlayer">
      <summary>
        <para>The NetworkPlayer is a data structure with which you can locate another player over the network.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.externalIP">
      <summary>
        <para>Returns the external IP address of the network interface.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.externalPort">
      <summary>
        <para>Returns the external port of the network interface.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.guid">
      <summary>
        <para>The GUID for this player, used when connecting with NAT punchthrough.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.ipAddress">
      <summary>
        <para>The IP address of this player.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkPlayer.port">
      <summary>
        <para>The port of this player.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.NetworkPlayer.op_Equal(UnityEngine.NetworkPlayer,UnityEngine.NetworkPlayer)">
      <summary>
        <para>Returns true if two NetworkPlayers are the same player.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.NetworkPlayer.op_NotEqual(UnityEngine.NetworkPlayer,UnityEngine.NetworkPlayer)">
      <summary>
        <para>Returns true if two NetworkPlayers are not the same player.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.NetworkPlayer.ToString">
      <summary>
        <para>Returns the index number for this network player.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkReachability">
      <summary>
        <para>Describes network reachability options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkReachability.NotReachable">
      <summary>
        <para>Network is not reachable.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkReachability.ReachableViaCarrierDataNetwork">
      <summary>
        <para>Network is reachable via carrier data network.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkReachability.ReachableViaLocalAreaNetwork">
      <summary>
        <para>Network is reachable via WiFi or cable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkStateSynchronization">
      <summary>
        <para>Different types of synchronization for the NetworkView component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkStateSynchronization.Off">
      <summary>
        <para>No state data will be synchronized.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkStateSynchronization.ReliableDeltaCompressed">
      <summary>
        <para>All packets are sent reliable and ordered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NetworkStateSynchronization.Unreliable">
      <summary>
        <para>Brute force unreliable state sending.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NetworkView">
      <summary>
        <para>The network view is the binding material of multiplayer games.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkView.group">
      <summary>
        <para>The network group number of this network view.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkView.isMine">
      <summary>
        <para>Is the network view controlled by this object?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkView.observed">
      <summary>
        <para>The component the network view is observing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkView.owner">
      <summary>
        <para>The NetworkPlayer who owns this network view.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkView.stateSynchronization">
      <summary>
        <para>The type of NetworkStateSynchronization set for this network view.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkView.viewID">
      <summary>
        <para>The ViewID of this network view.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.NetworkView.Find(UnityEngine.NetworkViewID)">
      <summary>
        <para>Find a network view based on a NetworkViewID.</para>
      </summary>
      <param name="viewID"></param>
    </member>
    <member name="M:UnityEngine.NetworkView.RPC(System.String,UnityEngine.RPCMode,System.Object[])">
      <summary>
        <para>Call a RPC function on all connected peers.</para>
      </summary>
      <param name="name"></param>
      <param name="mode"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.NetworkView.RPC(System.String,UnityEngine.NetworkPlayer,System.Object[])">
      <summary>
        <para>Call a RPC function on a specific player.</para>
      </summary>
      <param name="name"></param>
      <param name="target"></param>
      <param name="args"></param>
    </member>
    <member name="M:UnityEngine.NetworkView.SetScope(UnityEngine.NetworkPlayer,System.Boolean)">
      <summary>
        <para>Set the scope of the network view in relation to a specific network player.</para>
      </summary>
      <param name="player"></param>
      <param name="relevancy"></param>
    </member>
    <member name="T:UnityEngine.NetworkViewID">
      <summary>
        <para>The NetworkViewID is a unique identifier for a network view instance in a multiplayer game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkViewID.isMine">
      <summary>
        <para>True if instantiated by me.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkViewID.owner">
      <summary>
        <para>The NetworkPlayer who owns the NetworkView. Could be the server.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.NetworkViewID.unassigned">
      <summary>
        <para>Represents an invalid network view ID.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.NetworkViewID.op_Equal(UnityEngine.NetworkViewID,UnityEngine.NetworkViewID)">
      <summary>
        <para>Returns true if two NetworkViewIDs are identical.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.NetworkViewID.op_NotEqual(UnityEngine.NetworkViewID,UnityEngine.NetworkViewID)">
      <summary>
        <para>Returns true if two NetworkViewIDs are not identical.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.NetworkViewID.ToString">
      <summary>
        <para>Returns a formatted string with details on this NetworkViewID.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.NPOTSupport">
      <summary>
        <para>NPOT Texture2D|textures support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NPOTSupport.Full">
      <summary>
        <para>Full NPOT support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NPOTSupport.None">
      <summary>
        <para>NPOT textures are not supported. Will be upscaled/padded at loading time.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.NPOTSupport.Restricted">
      <summary>
        <para>Limited NPOT support: no mip-maps and clamp TextureWrapMode|wrap mode will be forced.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Object">
      <summary>
        <para>Base class for all objects Unity can reference.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Object.hideFlags">
      <summary>
        <para>Should the object be hidden, saved with the scene or modifiable by the user?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Object.name">
      <summary>
        <para>The name of the object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Object.Destroy(UnityEngine.Object)">
      <summary>
        <para>Removes a gameobject, component or asset.</para>
      </summary>
      <param name="obj">The object to destroy.</param>
      <param name="t">The optional amount of time to delay before destroying the object.</param>
    </member>
    <member name="M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)">
      <summary>
        <para>Removes a gameobject, component or asset.</para>
      </summary>
      <param name="obj">The object to destroy.</param>
      <param name="t">The optional amount of time to delay before destroying the object.</param>
    </member>
    <member name="M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)">
      <summary>
        <para>Destroys the object obj immediately. You are strongly recommended to use Destroy instead.</para>
      </summary>
      <param name="obj">Object to be destroyed.</param>
      <param name="allowDestroyingAssets">Set to true to allow assets to be destoyed.</param>
    </member>
    <member name="M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Destroys the object obj immediately. You are strongly recommended to use Destroy instead.</para>
      </summary>
      <param name="obj">Object to be destroyed.</param>
      <param name="allowDestroyingAssets">Set to true to allow assets to be destoyed.</param>
    </member>
    <member name="M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)">
      <summary>
        <para>Makes the object target not be destroyed automatically when loading a new scene.</para>
      </summary>
      <param name="target"></param>
    </member>
    <member name="M:UnityEngine.Object.FindObjectOfType(System.Type)">
      <summary>
        <para>Returns the first active loaded object of Type type.</para>
      </summary>
      <param name="type">The type of object to find.</param>
      <returns>
        <para>An array of objects which matched the specified type, cast as Object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.FindObjectsOfType(System.Type)">
      <summary>
        <para>Returns a list of all active loaded objects of Type type.</para>
      </summary>
      <param name="type">The type of object to find.</param>
      <returns>
        <para>The array of objects found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)">
      <summary>
        <para>Returns a list of all active and inactive loaded objects of Type type.</para>
      </summary>
      <param name="type">The type of object to find.</param>
      <returns>
        <para>The array of objects found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)">
      <summary>
        <para>Returns a list of all active and inactive loaded objects of Type type, including assets.</para>
      </summary>
      <param name="type">The type of object or asset to find.</param>
      <returns>
        <para>The array of objects and assets found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.GetInstanceID">
      <summary>
        <para>Returns the instance id of the object.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Object.implop_bool(Object)(UnityEngine.Object)">
      <summary>
        <para>Does the object exist?</para>
      </summary>
      <param name="exists"></param>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(UnityEngine.Object)">
      <summary>
        <para>Clones the object original and returns the clone.</para>
      </summary>
      <param name="original">An existing object that you want to make a copy of.</param>
      <param name="position">Position for the new object.</param>
      <param name="rotation">Orientation of the new object.</param>
      <param name="parent">Parent that will be assigned to the new object.</param>
      <param name="instantiateInWorldSpace">Pass true when assigning a parent Object to maintain the world position of the Object, instead of setting its position relative to the new parent. Pass false to set the Object's position relative to its new parent.</param>
      <returns>
        <para>The instantiated clone.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)">
      <summary>
        <para>Clones the object original and returns the clone.</para>
      </summary>
      <param name="original">An existing object that you want to make a copy of.</param>
      <param name="position">Position for the new object.</param>
      <param name="rotation">Orientation of the new object.</param>
      <param name="parent">Parent that will be assigned to the new object.</param>
      <param name="instantiateInWorldSpace">Pass true when assigning a parent Object to maintain the world position of the Object, instead of setting its position relative to the new parent. Pass false to set the Object's position relative to its new parent.</param>
      <returns>
        <para>The instantiated clone.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Clones the object original and returns the clone.</para>
      </summary>
      <param name="original">An existing object that you want to make a copy of.</param>
      <param name="position">Position for the new object.</param>
      <param name="rotation">Orientation of the new object.</param>
      <param name="parent">Parent that will be assigned to the new object.</param>
      <param name="instantiateInWorldSpace">Pass true when assigning a parent Object to maintain the world position of the Object, instead of setting its position relative to the new parent. Pass false to set the Object's position relative to its new parent.</param>
      <returns>
        <para>The instantiated clone.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Clones the object original and returns the clone.</para>
      </summary>
      <param name="original">An existing object that you want to make a copy of.</param>
      <param name="position">Position for the new object.</param>
      <param name="rotation">Orientation of the new object.</param>
      <param name="parent">Parent that will be assigned to the new object.</param>
      <param name="instantiateInWorldSpace">Pass true when assigning a parent Object to maintain the world position of the Object, instead of setting its position relative to the new parent. Pass false to set the Object's position relative to its new parent.</param>
      <returns>
        <para>The instantiated clone.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)">
      <summary>
        <para>Clones the object original and returns the clone.</para>
      </summary>
      <param name="original">An existing object that you want to make a copy of.</param>
      <param name="position">Position for the new object.</param>
      <param name="rotation">Orientation of the new object.</param>
      <param name="parent">Parent that will be assigned to the new object.</param>
      <param name="instantiateInWorldSpace">Pass true when assigning a parent Object to maintain the world position of the Object, instead of setting its position relative to the new parent. Pass false to set the Object's position relative to its new parent.</param>
      <returns>
        <para>The instantiated clone.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(T)">
      <summary>
        <para>You can also use Generics to instantiate objects. See the page for more details.</para>
      </summary>
      <param name="original">Object of type T that you want to make a clone of.</param>
      <param name="parent"></param>
      <param name="worldPositionStays"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <returns>
        <para>Object of type T.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(T,UnityEngine.Transform)">
      <summary>
        <para>You can also use Generics to instantiate objects. See the page for more details.</para>
      </summary>
      <param name="original">Object of type T that you want to make a clone of.</param>
      <param name="parent"></param>
      <param name="worldPositionStays"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <returns>
        <para>Object of type T.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(T,UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>You can also use Generics to instantiate objects. See the page for more details.</para>
      </summary>
      <param name="original">Object of type T that you want to make a clone of.</param>
      <param name="parent"></param>
      <param name="worldPositionStays"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <returns>
        <para>Object of type T.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(T,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>You can also use Generics to instantiate objects. See the page for more details.</para>
      </summary>
      <param name="original">Object of type T that you want to make a clone of.</param>
      <param name="parent"></param>
      <param name="worldPositionStays"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <returns>
        <para>Object of type T.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Object.Instantiate(T,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)">
      <summary>
        <para>You can also use Generics to instantiate objects. See the page for more details.</para>
      </summary>
      <param name="original">Object of type T that you want to make a clone of.</param>
      <param name="parent"></param>
      <param name="worldPositionStays"></param>
      <param name="position"></param>
      <param name="rotation"></param>
      <returns>
        <para>Object of type T.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.Object.op_Equal(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Compares two object references to see if they refer to the same object.</para>
      </summary>
      <param name="x">The first Object.</param>
      <param name="y">The Object to compare against the first.</param>
    </member>
    <member name="?:UnityEngine.Object.op_NotEqual(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Compares if two objects refer to a different object.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.Object.ToString">
      <summary>
        <para>Returns the name of the game object.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.OcclusionArea">
      <summary>
        <para>OcclusionArea is an area in which occlusion culling is performed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.OcclusionArea.center">
      <summary>
        <para>Center of the occlusion area relative to the transform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.OcclusionArea.size">
      <summary>
        <para>Size that the occlusion area will have.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.OcclusionPortal">
      <summary>
        <para>The portal for dynamically changing occlusion at runtime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.OcclusionPortal.open">
      <summary>
        <para>Gets / sets the portal's open state.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.OperatingSystemFamily">
      <summary>
        <para>Enumeration for SystemInfo.operatingSystemFamily.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.OperatingSystemFamily.Linux">
      <summary>
        <para>Linux operating system family.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.OperatingSystemFamily.MacOSX">
      <summary>
        <para>macOS operating system family.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.OperatingSystemFamily.Other">
      <summary>
        <para>Returned for operating systems that do not fall into any other category.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.OperatingSystemFamily.Windows">
      <summary>
        <para>Windows operating system family.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Particle">
      <summary>
        <para>(Legacy Particle system).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.angularVelocity">
      <summary>
        <para>The angular velocity of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.color">
      <summary>
        <para>The color of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.energy">
      <summary>
        <para>The energy of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.position">
      <summary>
        <para>The position of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.rotation">
      <summary>
        <para>The rotation of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.size">
      <summary>
        <para>The size of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.startEnergy">
      <summary>
        <para>The starting energy of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Particle.velocity">
      <summary>
        <para>The velocity of the particle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleAnimator">
      <summary>
        <para>(Legacy Particles) Particle animators move your particles over time, you use them to apply wind, drag &amp; color cycling to your particle emitters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.autodestruct">
      <summary>
        <para>Does the GameObject of this particle animator auto destructs?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.colorAnimation">
      <summary>
        <para>Colors the particles will cycle through over their lifetime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.damping">
      <summary>
        <para>How much particles are slowed down every frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.doesAnimateColor">
      <summary>
        <para>Do particles cycle their color over their lifetime?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.force">
      <summary>
        <para>The force being applied to particles every frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.localRotationAxis">
      <summary>
        <para>Local space axis the particles rotate around.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.rndForce">
      <summary>
        <para>A random force added to particles every frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.sizeGrow">
      <summary>
        <para>How the particle sizes grow over their lifetime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleAnimator.worldRotationAxis">
      <summary>
        <para>World space axis the particles rotate around.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleCollisionEvent">
      <summary>
        <para>Information about a particle collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleCollisionEvent.collider">
      <summary>
        <para>The Collider for the GameObject struck by the particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleCollisionEvent.colliderComponent">
      <summary>
        <para>The Collider or Collider2D for the GameObject struck by the particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleCollisionEvent.intersection">
      <summary>
        <para>Intersection point of the collision in world coordinates.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleCollisionEvent.normal">
      <summary>
        <para>Geometry normal at the intersection point of the collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleCollisionEvent.velocity">
      <summary>
        <para>Incident velocity at the intersection point of the collision.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleEmitter">
      <summary>
        <para>(Legacy Particles) Script interface for particle emitters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.angularVelocity">
      <summary>
        <para>The angular velocity of new particles in degrees per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.emit">
      <summary>
        <para>Should particles be automatically emitted each frame?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.emitterVelocityScale">
      <summary>
        <para>The amount of the emitter's speed that the particles inherit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.enabled">
      <summary>
        <para>Turns the ParticleEmitter on or off.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.localVelocity">
      <summary>
        <para>The starting speed of particles along X, Y, and Z, measured in the object's orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.maxEmission">
      <summary>
        <para>The maximum number of particles that will be spawned every second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.maxEnergy">
      <summary>
        <para>The maximum lifetime of each particle, measured in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.maxSize">
      <summary>
        <para>The maximum size each particle can be at the time when it is spawned.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.minEmission">
      <summary>
        <para>The minimum number of particles that will be spawned every second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.minEnergy">
      <summary>
        <para>The minimum lifetime of each particle, measured in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.minSize">
      <summary>
        <para>The minimum size each particle can be at the time when it is spawned.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.particleCount">
      <summary>
        <para>The current number of particles (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.particles">
      <summary>
        <para>Returns a copy of all particles and assigns an array of all particles to be the current particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.rndAngularVelocity">
      <summary>
        <para>A random angular velocity modifier for new particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.rndRotation">
      <summary>
        <para>If enabled, the particles will be spawned with random rotations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.rndVelocity">
      <summary>
        <para>A random speed along X, Y, and Z that is added to the velocity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.useWorldSpace">
      <summary>
        <para>If enabled, the particles don't move when the emitter moves. If false, when you move the emitter, the particles follow it around.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleEmitter.worldVelocity">
      <summary>
        <para>The starting speed of particles in world space, along X, Y, and Z.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.ClearParticles">
      <summary>
        <para>Removes all particles from the particle emitter.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit">
      <summary>
        <para>Emit a number of particles.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit(System.Int32)">
      <summary>
        <para>Emit count particles immediately.</para>
      </summary>
      <param name="count"></param>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color)">
      <summary>
        <para>Emit a single particle with given parameters.</para>
      </summary>
      <param name="pos">The position of the particle.</param>
      <param name="velocity">The velocity of the particle.</param>
      <param name="size">The size of the particle.</param>
      <param name="energy">The remaining lifetime of the particle.</param>
      <param name="color">The color of the particle.</param>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Emit(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Single,System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="rotation">The initial rotation of the particle in degrees.</param>
      <param name="angularVelocity">The angular velocity of the particle in degrees per second.</param>
      <param name="pos"></param>
      <param name="velocity"></param>
      <param name="size"></param>
      <param name="energy"></param>
      <param name="color"></param>
    </member>
    <member name="M:UnityEngine.ParticleEmitter.Simulate(System.Single)">
      <summary>
        <para>Advance particle simulation by given time.</para>
      </summary>
      <param name="deltaTime"></param>
    </member>
    <member name="T:UnityEngine.ParticlePhysicsExtensions">
      <summary>
        <para>Method extension for Physics in Particle System.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticlePhysicsExtensions.GetCollisionEvents(UnityEngine.ParticleSystem,UnityEngine.GameObject,UnityEngine.ParticleCollisionEvent[])">
      <summary>
        <para>Get the particle collision events for a GameObject. Returns the number of events written to the array.</para>
      </summary>
      <param name="go">The GameObject for which to retrieve collision events.</param>
      <param name="collisionEvents">Array to write collision events to.</param>
      <param name="ps"></param>
    </member>
    <member name="M:UnityEngine.ParticlePhysicsExtensions.GetSafeCollisionEventSize(UnityEngine.ParticleSystem)">
      <summary>
        <para>Safe array size for use with ParticleSystem.GetCollisionEvents.</para>
      </summary>
      <param name="ps"></param>
    </member>
    <member name="M:UnityEngine.ParticlePhysicsExtensions.GetSafeTriggerParticlesSize(UnityEngine.ParticleSystem,UnityEngine.ParticleSystemTriggerEventType)">
      <summary>
        <para>Safe array size for use with ParticleSystem.GetTriggerParticles.</para>
      </summary>
      <param name="ps">Particle system.</param>
      <param name="type">Type of trigger to return size for.</param>
      <returns>
        <para>Number of particles with this trigger event type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticlePhysicsExtensions.GetTriggerParticles">
      <summary>
        <para>Get the particles that met the condition in the particle trigger module. Returns the number of particles written to the array.</para>
      </summary>
      <param name="ps">Particle system.</param>
      <param name="type">Type of trigger to return particles for.</param>
      <param name="particles">The array of particles matching the trigger event type.</param>
      <returns>
        <para>Number of particles with this trigger event type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticlePhysicsExtensions.SetTriggerParticles">
      <summary>
        <para>Write modified particles back to the particle system, during a call to OnParticleTrigger.</para>
      </summary>
      <param name="ps">Particle system.</param>
      <param name="type">Type of trigger to set particles for.</param>
      <param name="particles">Particle array.</param>
      <param name="offset">Offset into the array, if you only want to write back a subset of the returned particles.</param>
      <param name="count">Number of particles to write, if you only want to write back a subset of the returned particles.</param>
    </member>
    <member name="M:UnityEngine.ParticlePhysicsExtensions.SetTriggerParticles">
      <summary>
        <para>Write modified particles back to the particle system, during a call to OnParticleTrigger.</para>
      </summary>
      <param name="ps">Particle system.</param>
      <param name="type">Type of trigger to set particles for.</param>
      <param name="particles">Particle array.</param>
      <param name="offset">Offset into the array, if you only want to write back a subset of the returned particles.</param>
      <param name="count">Number of particles to write, if you only want to write back a subset of the returned particles.</param>
    </member>
    <member name="T:UnityEngine.ParticleRenderer">
      <summary>
        <para>(Legacy Particles) Renders particles on to the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.cameraVelocityScale">
      <summary>
        <para>How much are the particles strected depending on the Camera's speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.lengthScale">
      <summary>
        <para>How much are the particles stretched in their direction of motion.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.maxParticleSize">
      <summary>
        <para>Clamp the maximum particle size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.particleRenderMode">
      <summary>
        <para>How particles are drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.uvAnimationCycles">
      <summary>
        <para>Set uv animation cycles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.uvAnimationXTile">
      <summary>
        <para>Set horizontal tiling count.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.uvAnimationYTile">
      <summary>
        <para>Set vertical tiling count.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleRenderer.velocityScale">
      <summary>
        <para>How much are the particles strectched depending on "how fast they move".</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleRenderMode">
      <summary>
        <para>The rendering mode for legacy particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleRenderMode.Billboard">
      <summary>
        <para>Render the particles as billboards facing the player. (Default)</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleRenderMode.HorizontalBillboard">
      <summary>
        <para>Render the particles as billboards always facing up along the y-Axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleRenderMode.SortedBillboard">
      <summary>
        <para>Sort the particles back-to-front and render as billboards.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleRenderMode.Stretch">
      <summary>
        <para>Stretch particles in the direction of motion.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleRenderMode.VerticalBillboard">
      <summary>
        <para>Render the particles as billboards always facing the player, but not pitching along the x-Axis.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem">
      <summary>
        <para>Script interface for particle systems (Shuriken).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.collision">
      <summary>
        <para>Access the particle system collision module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.colorBySpeed">
      <summary>
        <para>Access the particle system color by lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.colorOverLifetime">
      <summary>
        <para>Access the particle system color over lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.customData">
      <summary>
        <para>Access the particle system Custom Data module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.duration">
      <summary>
        <para>The duration of the particle system in seconds (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.emission">
      <summary>
        <para>Access the particle system emission module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.emissionRate">
      <summary>
        <para>The rate of emission.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.enableEmission">
      <summary>
        <para>When set to false, the particle system will not emit particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.externalForces">
      <summary>
        <para>Access the particle system external forces module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.forceOverLifetime">
      <summary>
        <para>Access the particle system force over lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.gravityModifier">
      <summary>
        <para>Scale being applied to the gravity defined by Physics.gravity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.inheritVelocity">
      <summary>
        <para>Access the particle system velocity inheritance module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isEmitting">
      <summary>
        <para>Is the particle system currently emitting particles? A particle system may stop emitting when its emission module has finished, it has been paused or if the system has been stopped using ParticleSystem.Stop|Stop with the ParticleSystemStopBehavior.StopEmitting|StopEmitting flag. Resume emitting by calling ParticleSystem.Play|Play.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isPaused">
      <summary>
        <para>Is the particle system paused right now ?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isPlaying">
      <summary>
        <para>Is the particle system playing right now ?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.isStopped">
      <summary>
        <para>Is the particle system stopped right now ?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.lights">
      <summary>
        <para>Access the particle system lights module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.limitVelocityOverLifetime">
      <summary>
        <para>Access the particle system limit velocity over lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.loop">
      <summary>
        <para>Is the particle system looping?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.main">
      <summary>
        <para>Access the main particle system settings.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.maxParticles">
      <summary>
        <para>The maximum number of particles to emit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.noise">
      <summary>
        <para>Access the particle system noise module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.particleCount">
      <summary>
        <para>The current number of particles (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.playbackSpeed">
      <summary>
        <para>The playback speed of the particle system. 1 is normal playback speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.playOnAwake">
      <summary>
        <para>If set to true, the particle system will automatically start playing on startup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.randomSeed">
      <summary>
        <para>Override the random seed used for the particle system emission.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.rotationBySpeed">
      <summary>
        <para>Access the particle system rotation by speed  module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.rotationOverLifetime">
      <summary>
        <para>Access the particle system rotation over lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.scalingMode">
      <summary>
        <para>The scaling mode applied to particle sizes and positions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.shape">
      <summary>
        <para>Access the particle system shape module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.simulationSpace">
      <summary>
        <para>This selects the space in which to simulate particles. It can be either world or local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.sizeBySpeed">
      <summary>
        <para>Access the particle system size by speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.sizeOverLifetime">
      <summary>
        <para>Access the particle system size over lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startColor">
      <summary>
        <para>The initial color of particles when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startDelay">
      <summary>
        <para>Start delay in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startLifetime">
      <summary>
        <para>The total lifetime in seconds that particles will have when emitted. When using curves, this values acts as a scale on the curve. This value is set in the particle when it is created by the particle system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startRotation">
      <summary>
        <para>The initial rotation of particles when emitted. When using curves, this values acts as a scale on the curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startRotation3D">
      <summary>
        <para>The initial 3D rotation of particles when emitted. When using curves, this values acts as a scale on the curves.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startSize">
      <summary>
        <para>The initial size of particles when emitted. When using curves, this values acts as a scale on the curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.startSpeed">
      <summary>
        <para>The initial speed of particles when emitted. When using curves, this values acts as a scale on the curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.subEmitters">
      <summary>
        <para>Access the particle system sub emitters module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.textureSheetAnimation">
      <summary>
        <para>Access the particle system texture sheet animation module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.time">
      <summary>
        <para>Playback position in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.trails">
      <summary>
        <para>Access the particle system trails module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.trigger">
      <summary>
        <para>Access the particle system trigger module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.useAutoRandomSeed">
      <summary>
        <para>Controls whether the Particle System uses an automatically-generated random number to seed the random number generator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.velocityOverLifetime">
      <summary>
        <para>Access the particle system velocity over lifetime module.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.Burst">
      <summary>
        <para>Script interface for a Burst.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Burst.cycleCount">
      <summary>
        <para>How many times to play the burst. (0 means infinitely).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Burst.maxCount">
      <summary>
        <para>Maximum number of bursts to be emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Burst.minCount">
      <summary>
        <para>Minimum number of bursts to be emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Burst.repeatInterval">
      <summary>
        <para>How often to repeat the burst, in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Burst.time">
      <summary>
        <para>The time that each burst occurs.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Burst.#ctor(System.Single,System.Int16)">
      <summary>
        <para>Construct a new Burst with a time and count.</para>
      </summary>
      <param name="_time">Time to emit the burst.</param>
      <param name="_minCount">Minimum number of particles to emit.</param>
      <param name="_maxCount">Maximum number of particles to emit.</param>
      <param name="_count">Number of particles to emit.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Burst.#ctor(System.Single,System.Int16,System.Int16)">
      <summary>
        <para>Construct a new Burst with a time and count.</para>
      </summary>
      <param name="_time">Time to emit the burst.</param>
      <param name="_minCount">Minimum number of particles to emit.</param>
      <param name="_maxCount">Maximum number of particles to emit.</param>
      <param name="_count">Number of particles to emit.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Clear(System.Boolean)">
      <summary>
        <para>Remove all particles in the particle system.</para>
      </summary>
      <param name="withChildren">Clear all child particle systems as well.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.CollisionModule">
      <summary>
        <para>Script interface for the Collision module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.bounce">
      <summary>
        <para>How much force is applied to each particle after a collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.bounceMultiplier">
      <summary>
        <para>Change the bounce multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.collidesWith">
      <summary>
        <para>Control which layers this particle system collides with.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.dampen">
      <summary>
        <para>How much speed is lost from each particle after a collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.dampenMultiplier">
      <summary>
        <para>Change the dampen multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.enabled">
      <summary>
        <para>Enable/disable the Collision module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.enableDynamicColliders">
      <summary>
        <para>Allow particles to collide with dynamic colliders when using world collision mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.enableInteriorCollisions">
      <summary>
        <para>Allow particles to collide when inside colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.lifetimeLoss">
      <summary>
        <para>How much a particle's lifetime is reduced after a collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.lifetimeLossMultiplier">
      <summary>
        <para>Change the lifetime loss multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.maxCollisionShapes">
      <summary>
        <para>The maximum number of collision shapes that will be considered for particle collisions. Excess shapes will be ignored. Terrains take priority.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.maxKillSpeed">
      <summary>
        <para>Kill particles whose speed goes above this threshold, after a collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.maxPlaneCount">
      <summary>
        <para>The maximum number of planes it is possible to set as colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.minKillSpeed">
      <summary>
        <para>Kill particles whose speed falls below this threshold, after a collision.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.mode">
      <summary>
        <para>Choose between 2D and 3D world collisions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.quality">
      <summary>
        <para>Specifies the accuracy of particle collisions against colliders in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.radiusScale">
      <summary>
        <para>A multiplier applied to the size of each particle before collisions are processed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.sendCollisionMessages">
      <summary>
        <para>Send collision callback messages.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.type">
      <summary>
        <para>The type of particle collision to perform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CollisionModule.voxelSize">
      <summary>
        <para>Size of voxels in the collision cache.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CollisionModule.GetPlane(System.Int32)">
      <summary>
        <para>Get a collision plane associated with this particle system.</para>
      </summary>
      <param name="index">Specifies which plane to access.</param>
      <returns>
        <para>The plane.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CollisionModule.SetPlane(System.Int32,UnityEngine.Transform)">
      <summary>
        <para>Set a collision plane to be used with this particle system.</para>
      </summary>
      <param name="index">Specifies which plane to set.</param>
      <param name="transform">The plane to set.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.ColorBySpeedModule">
      <summary>
        <para>Script interface for the Color By Speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ColorBySpeedModule.color">
      <summary>
        <para>The gradient controlling the particle colors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ColorBySpeedModule.enabled">
      <summary>
        <para>Enable/disable the Color By Speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ColorBySpeedModule.range">
      <summary>
        <para>Apply the color gradient between these minimum and maximum speeds.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.ColorOverLifetimeModule">
      <summary>
        <para>Script interface for the Color Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ColorOverLifetimeModule.color">
      <summary>
        <para>The gradient controlling the particle colors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ColorOverLifetimeModule.enabled">
      <summary>
        <para>Enable/disable the Color Over Lifetime module.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.CustomDataModule">
      <summary>
        <para>Script interface for the Custom Data module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.CustomDataModule.enabled">
      <summary>
        <para>Enable/disable the Custom Data module.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.GetColor(UnityEngine.ParticleSystemCustomData)">
      <summary>
        <para>Get a ParticleSystem.MinMaxGradient, that is being used to generate custom HDR color data.</para>
      </summary>
      <param name="stream">The name of the custom data stream to retrieve the gradient from.</param>
      <returns>
        <para>The color gradient being used to generate custom color data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.GetMode(UnityEngine.ParticleSystemCustomData)">
      <summary>
        <para>Find out the type of custom data that is being generated for the chosen data stream.</para>
      </summary>
      <param name="stream">The name of the custom data stream to query.</param>
      <returns>
        <para>The type of data being generated for the requested stream.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.GetVector(UnityEngine.ParticleSystemCustomData,System.Int32)">
      <summary>
        <para>Get a ParticleSystem.MinMaxCurve, that is being used to generate custom data.</para>
      </summary>
      <param name="stream">The name of the custom data stream to retrieve the curve from.</param>
      <param name="component">The component index to retrieve the curve for (0-3, mapping to the xyzw components of a Vector4 or float4).</param>
      <returns>
        <para>The curve being used to generate custom data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.GetVectorComponentCount(UnityEngine.ParticleSystemCustomData)">
      <summary>
        <para>Query how many ParticleSystem.MinMaxCurve elements are being used to generate this stream of custom data.</para>
      </summary>
      <param name="stream">The name of the custom data stream to retrieve the curve from.</param>
      <returns>
        <para>The number of curves.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.SetColor(UnityEngine.ParticleSystemCustomData,UnityEngine.ParticleSystem/MinMaxGradient)">
      <summary>
        <para>Set a ParticleSystem.MinMaxGradient, in order to generate custom HDR color data.</para>
      </summary>
      <param name="stream">The name of the custom data stream to apply the gradient to.</param>
      <param name="gradient">The gradient to be used for generating custom color data.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.SetMode(UnityEngine.ParticleSystemCustomData,UnityEngine.ParticleSystemCustomDataMode)">
      <summary>
        <para>Choose the type of custom data to generate for the chosen data stream.</para>
      </summary>
      <param name="stream">The name of the custom data stream to enable data generation on.</param>
      <param name="mode">The type of data to generate.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.SetVector(UnityEngine.ParticleSystemCustomData,System.Int32,UnityEngine.ParticleSystem/MinMaxCurve)">
      <summary>
        <para>Set a ParticleSystem.MinMaxCurve, in order to generate custom data.</para>
      </summary>
      <param name="stream">The name of the custom data stream to apply the curve to.</param>
      <param name="component">The component index to apply the curve to (0-3, mapping to the xyzw components of a Vector4 or float4).</param>
      <param name="curve">The curve to be used for generating custom data.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.CustomDataModule.SetVectorComponentCount(UnityEngine.ParticleSystemCustomData,System.Int32)">
      <summary>
        <para>Specify how many curves are used to generate custom data for this stream.</para>
      </summary>
      <param name="stream">The name of the custom data stream to apply the curve to.</param>
      <param name="curveCount">The number of curves to generate data for.</param>
      <param name="count"></param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.EmissionModule">
      <summary>
        <para>Script interface for the Emission module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.burstCount">
      <summary>
        <para>The current number of bursts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.enabled">
      <summary>
        <para>Enable/disable the Emission module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.rate">
      <summary>
        <para>The rate at which new particles are spawned.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.rateMultiplier">
      <summary>
        <para>Change the rate multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.rateOverDistance">
      <summary>
        <para>The rate at which new particles are spawned, over distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.rateOverDistanceMultiplier">
      <summary>
        <para>Change the rate over distance multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.rateOverTime">
      <summary>
        <para>The rate at which new particles are spawned, over time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.rateOverTimeMultiplier">
      <summary>
        <para>Change the rate over time multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmissionModule.type">
      <summary>
        <para>The emission type.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmissionModule.GetBursts(UnityEngine.ParticleSystem/Burst[])">
      <summary>
        <para>Get the burst array.</para>
      </summary>
      <param name="bursts">Array of bursts to be filled in.</param>
      <returns>
        <para>The number of bursts in the array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmissionModule.SetBursts(UnityEngine.ParticleSystem/Burst[])">
      <summary>
        <para>Set the burst array.</para>
      </summary>
      <param name="bursts">Array of bursts.</param>
      <param name="size">Optional array size, if burst count is less than array size.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmissionModule.SetBursts(UnityEngine.ParticleSystem/Burst[],System.Int32)">
      <summary>
        <para>Set the burst array.</para>
      </summary>
      <param name="bursts">Array of bursts.</param>
      <param name="size">Optional array size, if burst count is less than array size.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(System.Int32)">
      <summary>
        <para>Emit count particles immediately.</para>
      </summary>
      <param name="count">Number of particles to emit.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(UnityEngine.ParticleSystem/EmitParams,System.Int32)">
      <summary>
        <para>Emit a number of particles from script.</para>
      </summary>
      <param name="emitParams">Overidden particle properties.</param>
      <param name="count">Number of particles to emit.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color32)">
      <summary>
        <para></para>
      </summary>
      <param name="position"></param>
      <param name="velocity"></param>
      <param name="size"></param>
      <param name="lifetime"></param>
      <param name="color"></param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Emit(UnityEngine.ParticleSystem/Particle)">
      <summary>
        <para></para>
      </summary>
      <param name="particle"></param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.EmitParams">
      <summary>
        <para>Script interface for particle emission parameters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.angularVelocity">
      <summary>
        <para>Override the angular velocity of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.angularVelocity3D">
      <summary>
        <para>Override the 3D angular velocity of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.applyShapeToPosition">
      <summary>
        <para>When overriding the position of particles, setting this flag to true allows you to retain the influence of the shape module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.axisOfRotation">
      <summary>
        <para>Override the axis of rotation of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.position">
      <summary>
        <para>Override the position of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.randomSeed">
      <summary>
        <para>Override the random seed of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.rotation">
      <summary>
        <para>Override the rotation of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.rotation3D">
      <summary>
        <para>Override the 3D rotation of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.startColor">
      <summary>
        <para>Override the initial color of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.startLifetime">
      <summary>
        <para>Override the lifetime of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.startSize">
      <summary>
        <para>Override the initial size of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.startSize3D">
      <summary>
        <para>Override the initial 3D size of emitted particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.EmitParams.velocity">
      <summary>
        <para>Override the velocity of emitted particles.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetAngularVelocity">
      <summary>
        <para>Reverts angularVelocity and angularVelocity3D back to the values specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetAxisOfRotation">
      <summary>
        <para>Revert the axis of rotation back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetPosition">
      <summary>
        <para>Revert the position back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetRandomSeed">
      <summary>
        <para>Revert the random seed back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetRotation">
      <summary>
        <para>Reverts rotation and rotation3D back to the values specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetStartColor">
      <summary>
        <para>Revert the initial color back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetStartLifetime">
      <summary>
        <para>Revert the lifetime back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetStartSize">
      <summary>
        <para>Revert the initial size back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.EmitParams.ResetVelocity">
      <summary>
        <para>Revert the velocity back to the value specified in the inspector.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.ExternalForcesModule">
      <summary>
        <para>Script interface for the External Forces module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ExternalForcesModule.enabled">
      <summary>
        <para>Enable/disable the External Forces module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ExternalForcesModule.multiplier">
      <summary>
        <para>Multiplies the magnitude of applied external forces.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.ForceOverLifetimeModule">
      <summary>
        <para>Script interface for the Force Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.enabled">
      <summary>
        <para>Enable/disable the Force Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.randomized">
      <summary>
        <para>When randomly selecting values between two curves or constants, this flag will cause a new random force to be chosen on each frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.space">
      <summary>
        <para>Are the forces being applied in local or world space?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.x">
      <summary>
        <para>The curve defining particle forces in the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.xMultiplier">
      <summary>
        <para>Change the X axis mulutiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.y">
      <summary>
        <para>The curve defining particle forces in the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.yMultiplier">
      <summary>
        <para>Change the Y axis multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.z">
      <summary>
        <para>The curve defining particle forces in the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ForceOverLifetimeModule.zMultiplier">
      <summary>
        <para>Change the Z axis multiplier.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.GetCustomParticleData(System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;,UnityEngine.ParticleSystemCustomData)">
      <summary>
        <para>Get a stream of custom per-particle data.</para>
      </summary>
      <param name="customData">The array of per-particle data.</param>
      <param name="streamIndex">Which stream to retrieve the data from.</param>
      <returns>
        <para>The amount of valid per-particle data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.GetParticles(UnityEngine.ParticleSystem/Particle[])">
      <summary>
        <para>Get the particles of this particle system.</para>
      </summary>
      <param name="particles">Particle buffer that is used for writing particle state to. The return value is the number of particles written to this array.</param>
      <returns>
        <para>The number of particles written to the input particle array (the number of particles currently alive).</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ParticleSystem.InheritVelocityModule">
      <summary>
        <para>The Inherit Velocity Module controls how the velocity of the emitter is transferred to the particles as they are emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.InheritVelocityModule.curve">
      <summary>
        <para>Curve to define how much emitter velocity is applied during the lifetime of a particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.InheritVelocityModule.curveMultiplier">
      <summary>
        <para>Change the curve multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.InheritVelocityModule.enabled">
      <summary>
        <para>Enable/disable the InheritVelocity module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.InheritVelocityModule.mode">
      <summary>
        <para>How to apply emitter velocity to particles.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.IsAlive(System.Boolean)">
      <summary>
        <para>Does the system have any live particles (or will produce more)?</para>
      </summary>
      <param name="withChildren">Check all child particle systems as well.</param>
      <returns>
        <para>True if the particle system is still "alive", false if the particle system is done emitting particles and all particles are dead.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ParticleSystem.LightsModule">
      <summary>
        <para>Access the ParticleSystem Lights Module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.alphaAffectsIntensity">
      <summary>
        <para>Toggle whether the particle alpha gets multiplied by the light intensity, when computing the final light intensity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.enabled">
      <summary>
        <para>Enable/disable the Lights module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.intensity">
      <summary>
        <para>Define a curve to apply custom intensity scaling to particle lights.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.intensityMultiplier">
      <summary>
        <para>Intensity multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.light">
      <summary>
        <para>Select what Light prefab you want to base your particle lights on.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.maxLights">
      <summary>
        <para>Set a limit on how many lights this Module can create.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.range">
      <summary>
        <para>Define a curve to apply custom range scaling to particle lights.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.rangeMultiplier">
      <summary>
        <para>Range multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.ratio">
      <summary>
        <para>Choose what proportion of particles will receive a dynamic light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.sizeAffectsRange">
      <summary>
        <para>Toggle where the particle size will be multiplied by the light range, to determine the final light range.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.useParticleColor">
      <summary>
        <para>Toggle whether the particle lights will have their color multiplied by the particle color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LightsModule.useRandomDistribution">
      <summary>
        <para>Randomly assign lights to new particles based on ParticleSystem.LightsModule.ratio.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule">
      <summary>
        <para>Script interface for the Limit Velocity Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.dampen">
      <summary>
        <para>Controls how much the velocity that exceeds the velocity limit should be dampened.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.enabled">
      <summary>
        <para>Enable/disable the Limit Force Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limit">
      <summary>
        <para>Maximum velocity curve, when not using one curve per axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitMultiplier">
      <summary>
        <para>Change the limit multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitX">
      <summary>
        <para>Maximum velocity curve for the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitXMultiplier">
      <summary>
        <para>Change the limit multiplier on the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitY">
      <summary>
        <para>Maximum velocity curve for the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitYMultiplier">
      <summary>
        <para>Change the limit multiplier on the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitZ">
      <summary>
        <para>Maximum velocity curve for the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.limitZMultiplier">
      <summary>
        <para>Change the limit multiplier on the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.separateAxes">
      <summary>
        <para>Set the velocity limit on each axis separately.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule.space">
      <summary>
        <para>Specifies if the velocity limits are in local space (rotated with the transform) or world space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.MainModule">
      <summary>
        <para>Script interface for the main module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.customSimulationSpace">
      <summary>
        <para>Simulate particles relative to a custom transform component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.duration">
      <summary>
        <para>The duration of the particle system in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.gravityModifier">
      <summary>
        <para>Scale applied to the gravity, defined by Physics.gravity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.gravityModifierMultiplier">
      <summary>
        <para>Change the gravity mulutiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.loop">
      <summary>
        <para>Is the particle system looping?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.maxParticles">
      <summary>
        <para>The maximum number of particles to emit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.playOnAwake">
      <summary>
        <para>If set to true, the particle system will automatically start playing on startup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.prewarm">
      <summary>
        <para>When looping is enabled, this controls whether this particle system will look like it has already simulated for one loop when first becoming visible.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.randomizeRotationDirection">
      <summary>
        <para>Cause some particles to spin in  the opposite direction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.scalingMode">
      <summary>
        <para>Control how the particle system's Transform Component is applied to the particle system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.simulationSpace">
      <summary>
        <para>This selects the space in which to simulate particles. It can be either world or local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.simulationSpeed">
      <summary>
        <para>Override the default playback speed of the Particle System.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startColor">
      <summary>
        <para>The initial color of particles when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startDelay">
      <summary>
        <para>Start delay in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startDelayMultiplier">
      <summary>
        <para>Start delay multiplier in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startLifetime">
      <summary>
        <para>The total lifetime in seconds that each new particle will have.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startLifetimeMultiplier">
      <summary>
        <para>Start lifetime multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotation">
      <summary>
        <para>The initial rotation of particles when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotation3D">
      <summary>
        <para>A flag to enable 3D particle rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationMultiplier">
      <summary>
        <para>Start rotation multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationX">
      <summary>
        <para>The initial rotation of particles around the X axis when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationXMultiplier">
      <summary>
        <para>Start rotation multiplier around the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationY">
      <summary>
        <para>The initial rotation of particles around the Y axis when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationYMultiplier">
      <summary>
        <para>Start rotation multiplier around the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationZ">
      <summary>
        <para>The initial rotation of particles around the Z axis when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startRotationZMultiplier">
      <summary>
        <para>Start rotation multiplier around the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSize">
      <summary>
        <para>The initial size of particles when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSize3D">
      <summary>
        <para>A flag to enable specifying particle size individually for each axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeMultiplier">
      <summary>
        <para>Start size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeX">
      <summary>
        <para>The initial size of particles along the X axis when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeXMultiplier">
      <summary>
        <para>Start rotation multiplier along the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeY">
      <summary>
        <para>The initial size of particles along the Y axis when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeYMultiplier">
      <summary>
        <para>Start rotation multiplier along the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeZ">
      <summary>
        <para>The initial size of particles along the Z axis when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSizeZMultiplier">
      <summary>
        <para>Start rotation multiplier along the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSpeed">
      <summary>
        <para>The initial speed of particles when emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MainModule.startSpeedMultiplier">
      <summary>
        <para>A multiplier of the initial speed of particles when emitted.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.MinMaxCurve">
      <summary>
        <para>Script interface for a Min-Max Curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.constant">
      <summary>
        <para>Set the constant value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.constantMax">
      <summary>
        <para>Set a constant for the upper bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.constantMin">
      <summary>
        <para>Set a constant for the lower bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.curve">
      <summary>
        <para>Set the curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.curveMax">
      <summary>
        <para>Set a curve for the upper bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.curveMin">
      <summary>
        <para>Set a curve for the lower bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.curveMultiplier">
      <summary>
        <para>Set a multiplier to be applied to the curves.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxCurve.mode">
      <summary>
        <para>Set the mode that the min-max curve will use to evaluate values.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxCurve.#ctor(System.Single)">
      <summary>
        <para>A single constant value for the entire curve.</para>
      </summary>
      <param name="constant">Constant value.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxCurve.#ctor(System.Single,UnityEngine.AnimationCurve)">
      <summary>
        <para>Use one curve when evaluating numbers along this Min-Max curve.</para>
      </summary>
      <param name="scalar">A multiplier to be applied to the curve.</param>
      <param name="curve">A single curve for evaluating against.</param>
      <param name="multiplier"></param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxCurve.#ctor(System.Single,UnityEngine.AnimationCurve,UnityEngine.AnimationCurve)">
      <summary>
        <para>Randomly select values based on the interval between the minimum and maximum curves.</para>
      </summary>
      <param name="scalar">A multiplier to be applied to the curves.</param>
      <param name="min">The curve describing the minimum values to be evaluated.</param>
      <param name="max">The curve describing the maximum values to be evaluated.</param>
      <param name="multiplier"></param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxCurve.#ctor(System.Single,System.Single)">
      <summary>
        <para>Randomly select values based on the interval between the minimum and maximum constants.</para>
      </summary>
      <param name="min">The constant describing the minimum values to be evaluated.</param>
      <param name="max">The constant describing the maximum values to be evaluated.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxCurve.Evaluate(System.Single)">
      <summary>
        <para>Manually query the curve to calculate values based on what mode it is in.</para>
      </summary>
      <param name="time">Normalized time (in the range 0 - 1, where 1 represents 100%) at which to evaluate the curve. This is valid when ParticleSystem.MinMaxCurve.mode is set to ParticleSystemCurveMode.Curve or ParticleSystemCurveMode.TwoCurves.</param>
      <param name="lerpFactor">Blend between the 2 curves/constants (Valid when ParticleSystem.MinMaxCurve.mode is set to ParticleSystemCurveMode.TwoConstants or ParticleSystemCurveMode.TwoCurves).</param>
      <returns>
        <para>Calculated curve/constant value.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxCurve.Evaluate(System.Single,System.Single)">
      <summary>
        <para>Manually query the curve to calculate values based on what mode it is in.</para>
      </summary>
      <param name="time">Normalized time (in the range 0 - 1, where 1 represents 100%) at which to evaluate the curve. This is valid when ParticleSystem.MinMaxCurve.mode is set to ParticleSystemCurveMode.Curve or ParticleSystemCurveMode.TwoCurves.</param>
      <param name="lerpFactor">Blend between the 2 curves/constants (Valid when ParticleSystem.MinMaxCurve.mode is set to ParticleSystemCurveMode.TwoConstants or ParticleSystemCurveMode.TwoCurves).</param>
      <returns>
        <para>Calculated curve/constant value.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ParticleSystem.MinMaxGradient">
      <summary>
        <para>MinMaxGradient contains two Gradients, and returns a Color based on ParticleSystem.MinMaxGradient.mode. Depending on the mode, the Color returned may be randomized.
Gradients are edited via the ParticleSystem Inspector once a ParticleSystemGradientMode requiring them has been selected. Some modes do not require gradients, only colors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.color">
      <summary>
        <para>Set a constant color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.colorMax">
      <summary>
        <para>Set a constant color for the upper bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.colorMin">
      <summary>
        <para>Set a constant color for the lower bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.gradient">
      <summary>
        <para>Set the gradient.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.gradientMax">
      <summary>
        <para>Set a gradient for the upper bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.gradientMin">
      <summary>
        <para>Set a gradient for the lower bound.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.MinMaxGradient.mode">
      <summary>
        <para>Set the mode that the min-max gradient will use to evaluate colors.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxGradient.#ctor(UnityEngine.Color)">
      <summary>
        <para>A single constant color for the entire gradient.</para>
      </summary>
      <param name="color">Constant color.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxGradient.#ctor(UnityEngine.Gradient)">
      <summary>
        <para>Use one gradient when evaluating numbers along this Min-Max gradient.</para>
      </summary>
      <param name="gradient">A single gradient for evaluating against.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxGradient.#ctor(UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Randomly select colors based on the interval between the minimum and maximum constants.</para>
      </summary>
      <param name="min">The constant color describing the minimum colors to be evaluated.</param>
      <param name="max">The constant color describing the maximum colors to be evaluated.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxGradient.#ctor(UnityEngine.Gradient,UnityEngine.Gradient)">
      <summary>
        <para>Randomly select colors based on the interval between the minimum and maximum gradients.</para>
      </summary>
      <param name="min">The gradient describing the minimum colors to be evaluated.</param>
      <param name="max">The gradient describing the maximum colors to be evaluated.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxGradient.Evaluate(System.Single)">
      <summary>
        <para>Manually query the gradient to calculate colors based on what mode it is in.</para>
      </summary>
      <param name="time">Normalized time (in the range 0 - 1, where 1 represents 100%) at which to evaluate the gradient. This is valid when ParticleSystem.MinMaxGradient.mode is set to ParticleSystemGradientMode.Gradient or ParticleSystemGradientMode.TwoGradients.</param>
      <param name="lerpFactor">Blend between the 2 gradients/colors (Valid when ParticleSystem.MinMaxGradient.mode is set to ParticleSystemGradientMode.TwoColors or ParticleSystemGradientMode.TwoGradients).</param>
      <returns>
        <para>Calculated gradient/color value.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.MinMaxGradient.Evaluate(System.Single,System.Single)">
      <summary>
        <para>Manually query the gradient to calculate colors based on what mode it is in.</para>
      </summary>
      <param name="time">Normalized time (in the range 0 - 1, where 1 represents 100%) at which to evaluate the gradient. This is valid when ParticleSystem.MinMaxGradient.mode is set to ParticleSystemGradientMode.Gradient or ParticleSystemGradientMode.TwoGradients.</param>
      <param name="lerpFactor">Blend between the 2 gradients/colors (Valid when ParticleSystem.MinMaxGradient.mode is set to ParticleSystemGradientMode.TwoColors or ParticleSystemGradientMode.TwoGradients).</param>
      <returns>
        <para>Calculated gradient/color value.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ParticleSystem.NoiseModule">
      <summary>
        <para>Script interface for the Noise Module.

The Noise Module allows you to apply turbulence to the movement of your particles. Use the low quality settings to create computationally efficient Noise, or simulate smoother, richer Noise with the higher quality settings. You can also choose to define the behavior of the Noise individually for each axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.damping">
      <summary>
        <para>Higher frequency noise will reduce the strength by a proportional amount, if enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.enabled">
      <summary>
        <para>Enable/disable the Noise module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.frequency">
      <summary>
        <para>Low values create soft, smooth noise, and high values create rapidly changing noise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.octaveCount">
      <summary>
        <para>Layers of noise that combine to produce final noise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.octaveMultiplier">
      <summary>
        <para>When combining each octave, scale the intensity by this amount.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.octaveScale">
      <summary>
        <para>When combining each octave, zoom in by this amount.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.quality">
      <summary>
        <para>Generate 1D, 2D or 3D noise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remap">
      <summary>
        <para>Define how the noise values are remapped.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapEnabled">
      <summary>
        <para>Enable remapping of the final noise values, allowing for noise values to be translated into different values.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapMultiplier">
      <summary>
        <para>Remap multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapX">
      <summary>
        <para>Define how the noise values are remapped on the X axis, when using the ParticleSystem.NoiseModule.separateAxes option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapXMultiplier">
      <summary>
        <para>X axis remap multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapY">
      <summary>
        <para>Define how the noise values are remapped on the Y axis, when using the ParticleSystem.NoiseModule.separateAxes option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapYMultiplier">
      <summary>
        <para>Y axis remap multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapZ">
      <summary>
        <para>Define how the noise values are remapped on the Z axis, when using the ParticleSystem.NoiseModule.separateAxes option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.remapZMultiplier">
      <summary>
        <para>Z axis remap multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.scrollSpeed">
      <summary>
        <para>Scroll the noise map over the particle system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.scrollSpeedMultiplier">
      <summary>
        <para>Scroll speed multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.separateAxes">
      <summary>
        <para>Control the noise separately for each axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strength">
      <summary>
        <para>How strong the overall noise effect is.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthMultiplier">
      <summary>
        <para>Strength multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthX">
      <summary>
        <para>Define the strength of the effect on the X axis, when using the ParticleSystem.NoiseModule.separateAxes option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthXMultiplier">
      <summary>
        <para>X axis strength multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthY">
      <summary>
        <para>Define the strength of the effect on the Y axis, when using the ParticleSystem.NoiseModule.separateAxes option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthYMultiplier">
      <summary>
        <para>Y axis strength multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthZ">
      <summary>
        <para>Define the strength of the effect on the Z axis, when using the ParticleSystem.NoiseModule.separateAxes option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.NoiseModule.strengthZMultiplier">
      <summary>
        <para>Z axis strength multiplier.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.Particle">
      <summary>
        <para>Script interface for a Particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.angularVelocity">
      <summary>
        <para>The angular velocity of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.angularVelocity3D">
      <summary>
        <para>The 3D angular velocity of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.lifetime">
      <summary>
        <para>The lifetime of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.position">
      <summary>
        <para>The position of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.randomSeed">
      <summary>
        <para>The random seed of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.randomValue">
      <summary>
        <para>The random value of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.remainingLifetime">
      <summary>
        <para>The remaining lifetime of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.rotation">
      <summary>
        <para>The rotation of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.rotation3D">
      <summary>
        <para>The 3D rotation of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.startColor">
      <summary>
        <para>The initial color of the particle. The current color of the particle is calculated procedurally based on this value and the active color modules.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.startLifetime">
      <summary>
        <para>The starting lifetime of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.startSize">
      <summary>
        <para>The initial size of the particle. The current size of the particle is calculated procedurally based on this value and the active size modules.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.startSize3D">
      <summary>
        <para>The initial 3D size of the particle. The current size of the particle is calculated procedurally based on this value and the active size modules.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.Particle.velocity">
      <summary>
        <para>The velocity of the particle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Particle.GetCurrentColor(UnityEngine.ParticleSystem)">
      <summary>
        <para>Calculate the current color of the particle by applying the relevant curves to its startColor property.</para>
      </summary>
      <param name="system">The particle system from which this particle was emitted.</param>
      <returns>
        <para>Current color.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Particle.GetCurrentSize(UnityEngine.ParticleSystem)">
      <summary>
        <para>Calculate the current size of the particle by applying the relevant curves to its startSize property.</para>
      </summary>
      <param name="system">The particle system from which this particle was emitted.</param>
      <returns>
        <para>Current size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Particle.GetCurrentSize3D(UnityEngine.ParticleSystem)">
      <summary>
        <para>Calculate the current 3D size of the particle by applying the relevant curves to its startSize3D property.</para>
      </summary>
      <param name="system">The particle system from which this particle was emitted.</param>
      <returns>
        <para>Current size.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Pause(System.Boolean)">
      <summary>
        <para>Pauses the system so no new particles are emitted and the existing particles are not updated.</para>
      </summary>
      <param name="withChildren">Pause all child particle systems as well.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Play(System.Boolean)">
      <summary>
        <para>Starts the particle system.</para>
      </summary>
      <param name="withChildren">Play all child particle systems as well.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.RotationBySpeedModule">
      <summary>
        <para>Script interface for the Rotation By Speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.enabled">
      <summary>
        <para>Enable/disable the Rotation By Speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.range">
      <summary>
        <para>Apply the rotation curve between these minimum and maximum speeds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.separateAxes">
      <summary>
        <para>Set the rotation by speed on each axis separately.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.x">
      <summary>
        <para>Rotation by speed curve for the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.xMultiplier">
      <summary>
        <para>Speed multiplier along the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.y">
      <summary>
        <para>Rotation by speed curve for the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.yMultiplier">
      <summary>
        <para>Speed multiplier along the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.z">
      <summary>
        <para>Rotation by speed curve for the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationBySpeedModule.zMultiplier">
      <summary>
        <para>Speed multiplier along the Z axis.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.RotationOverLifetimeModule">
      <summary>
        <para>Script interface for the Rotation Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.enabled">
      <summary>
        <para>Enable/disable the Rotation Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.separateAxes">
      <summary>
        <para>Set the rotation over lifetime on each axis separately.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.x">
      <summary>
        <para>Rotation over lifetime curve for the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.xMultiplier">
      <summary>
        <para>Rotation multiplier around the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.y">
      <summary>
        <para>Rotation over lifetime curve for the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.yMultiplier">
      <summary>
        <para>Rotation multiplier around the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.z">
      <summary>
        <para>Rotation over lifetime curve for the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.RotationOverLifetimeModule.zMultiplier">
      <summary>
        <para>Rotation multiplier around the Z axis.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SetCustomParticleData(System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;,UnityEngine.ParticleSystemCustomData)">
      <summary>
        <para>Set a stream of custom per-particle data.</para>
      </summary>
      <param name="customData">The array of per-particle data.</param>
      <param name="streamIndex">Which stream to assign the data to.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SetParticles(UnityEngine.ParticleSystem/Particle[],System.Int32)">
      <summary>
        <para>Set the particles of this particle system. size is the number of particles that is set.</para>
      </summary>
      <param name="particles"></param>
      <param name="size"></param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.ShapeModule">
      <summary>
        <para>Script interface for the Shape module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.alignToDirection">
      <summary>
        <para>Align particles based on their initial direction of travel.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.angle">
      <summary>
        <para>Angle of the cone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.arc">
      <summary>
        <para>Circle arc angle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.arcMode">
      <summary>
        <para>The mode used for generating particles around the arc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.arcSpeed">
      <summary>
        <para>When using one of the animated modes, how quickly to move the emission position around the arc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.arcSpeedMultiplier">
      <summary>
        <para>A multiplier of the arc speed of the emission shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.arcSpread">
      <summary>
        <para>Control the gap between emission points around the arc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.box">
      <summary>
        <para>Scale of the box.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.enabled">
      <summary>
        <para>Enable/disable the Shape module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.length">
      <summary>
        <para>Length of the cone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.mesh">
      <summary>
        <para>Mesh to emit particles from.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.meshMaterialIndex">
      <summary>
        <para>Emit particles from a single material of a mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.meshRenderer">
      <summary>
        <para>MeshRenderer to emit particles from.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.meshScale">
      <summary>
        <para>Apply a scaling factor to the mesh used for generating source positions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.meshShapeType">
      <summary>
        <para>Where on the mesh to emit particles from.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.normalOffset">
      <summary>
        <para>Move particles away from the surface of the source mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.radius">
      <summary>
        <para>Radius of the shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.radiusMode">
      <summary>
        <para>The mode used for generating particles along the radius.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.radiusSpeed">
      <summary>
        <para>When using one of the animated modes, how quickly to move the emission position along the radius.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.radiusSpeedMultiplier">
      <summary>
        <para>A multiplier of the radius speed of the emission shape.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.radiusSpread">
      <summary>
        <para>Control the gap between emission points along the radius.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.randomDirection">
      <summary>
        <para>Randomizes the starting direction of particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.randomDirectionAmount">
      <summary>
        <para>Randomizes the starting direction of particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.shapeType">
      <summary>
        <para>Type of shape to emit particles from.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.skinnedMeshRenderer">
      <summary>
        <para>SkinnedMeshRenderer to emit particles from.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.sphericalDirectionAmount">
      <summary>
        <para>Spherizes the starting direction of particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.useMeshColors">
      <summary>
        <para>Modulate the particle colors with the vertex colors, or the material color if no vertex colors exist.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.ShapeModule.useMeshMaterialIndex">
      <summary>
        <para>Emit from a single material, or the whole mesh.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Simulate(System.Single,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Fastforwards the particle system by simulating particles over given period of time, then pauses it.</para>
      </summary>
      <param name="t">Time period in seconds to advance the ParticleSystem simulation by. If restart is true, the ParticleSystem will be reset to 0 time, and then advanced by this value. If restart is false, the ParticleSystem simulation will be advanced in time from its current state by this value.</param>
      <param name="withChildren">Fastforward all child particle systems as well.</param>
      <param name="restart">Restart and start from the beginning.</param>
      <param name="fixedTimeStep">Only update the system at fixed intervals, based on the value in "Fixed Time" in the Time options.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.SizeBySpeedModule">
      <summary>
        <para>Script interface for the Size By Speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.enabled">
      <summary>
        <para>Enable/disable the Size By Speed module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.range">
      <summary>
        <para>Apply the size curve between these minimum and maximum speeds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.separateAxes">
      <summary>
        <para>Set the size by speed on each axis separately.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.size">
      <summary>
        <para>Curve to control particle size based on speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.sizeMultiplier">
      <summary>
        <para>Size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.x">
      <summary>
        <para>Size by speed curve for the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.xMultiplier">
      <summary>
        <para>X axis size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.y">
      <summary>
        <para>Size by speed curve for the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.yMultiplier">
      <summary>
        <para>Y axis size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.z">
      <summary>
        <para>Size by speed curve for the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeBySpeedModule.zMultiplier">
      <summary>
        <para>Z axis size multiplier.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.SizeOverLifetimeModule">
      <summary>
        <para>Script interface for the Size Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.enabled">
      <summary>
        <para>Enable/disable the Size Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.separateAxes">
      <summary>
        <para>Set the size over lifetime on each axis separately.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.size">
      <summary>
        <para>Curve to control particle size based on lifetime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.sizeMultiplier">
      <summary>
        <para>Size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.x">
      <summary>
        <para>Size over lifetime curve for the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.xMultiplier">
      <summary>
        <para>X axis size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.y">
      <summary>
        <para>Size over lifetime curve for the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.yMultiplier">
      <summary>
        <para>Y axis size multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.z">
      <summary>
        <para>Size over lifetime curve for the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SizeOverLifetimeModule.zMultiplier">
      <summary>
        <para>Z axis size multiplier.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Stop(System.Boolean,UnityEngine.ParticleSystemStopBehavior)">
      <summary>
        <para>Stops playing the particle system using the supplied stop behaviour.</para>
      </summary>
      <param name="withChildren">Stop all child particle systems as well.</param>
      <param name="stopBehavior">Stop emitting or stop emitting and clear the system.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.Stop(System.Boolean)">
      <summary>
        <para>Stops playing the particle system using the supplied stop behaviour.</para>
      </summary>
      <param name="withChildren">Stop all child particle systems as well.</param>
      <param name="stopBehavior">Stop emitting or stop emitting and clear the system.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.SubEmittersModule">
      <summary>
        <para>Script interface for the Sub Emitters module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.birth0">
      <summary>
        <para>Sub particle system which spawns at the locations of the birth of the particles from the parent system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.birth1">
      <summary>
        <para>Sub particle system which spawns at the locations of the birth of the particles from the parent system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.collision0">
      <summary>
        <para>Sub particle system which spawns at the locations of the collision of the particles from the parent system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.collision1">
      <summary>
        <para>Sub particle system which spawns at the locations of the collision of the particles from the parent system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.death0">
      <summary>
        <para>Sub particle system which spawns at the locations of the death of the particles from the parent system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.death1">
      <summary>
        <para>Sub particle system to spawn on death of the parent system's particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.enabled">
      <summary>
        <para>Enable/disable the Sub Emitters module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.SubEmittersModule.subEmittersCount">
      <summary>
        <para>The total number of sub-emitters.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.AddSubEmitter(UnityEngine.ParticleSystem,UnityEngine.ParticleSystemSubEmitterType,UnityEngine.ParticleSystemSubEmitterProperties)">
      <summary>
        <para>Add a new sub-emitter.</para>
      </summary>
      <param name="subEmitter">The sub-emitter to be added.</param>
      <param name="type">The event that creates new particles.</param>
      <param name="properties">The properties of the new particles.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.GetSubEmitterProperties(System.Int32)">
      <summary>
        <para>Get the properties of the sub-emitter at the given index.</para>
      </summary>
      <param name="index">The index of the desired sub-emitter.</param>
      <returns>
        <para>The properties of the requested sub-emitter.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.GetSubEmitterSystem(System.Int32)">
      <summary>
        <para>Get the sub-emitter Particle System at the given index.</para>
      </summary>
      <param name="index">The index of the desired sub-emitter.</param>
      <returns>
        <para>The sub-emitter being requested.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.GetSubEmitterType(System.Int32)">
      <summary>
        <para>Get the type of the sub-emitter at the given index.</para>
      </summary>
      <param name="index">The index of the desired sub-emitter.</param>
      <returns>
        <para>The type of the requested sub-emitter.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.RemoveSubEmitter(System.Int32)">
      <summary>
        <para>Remove a sub-emitter from the given index in the array.</para>
      </summary>
      <param name="index">The index from which to remove a sub-emitter.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.SetSubEmitterProperties(System.Int32,UnityEngine.ParticleSystemSubEmitterProperties)">
      <summary>
        <para>Set the properties of the sub-emitter at the given index.</para>
      </summary>
      <param name="index">The index of the sub-emitter being modified.</param>
      <param name="properties">The new properties to assign to this sub-emitter.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.SetSubEmitterSystem(System.Int32,UnityEngine.ParticleSystem)">
      <summary>
        <para>Set the Particle System to use as the sub-emitter at the given index.</para>
      </summary>
      <param name="index">The index of the sub-emitter being modified.</param>
      <param name="subEmitter">The Particle System being used as this sub-emitter.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystem.SubEmittersModule.SetSubEmitterType(System.Int32,UnityEngine.ParticleSystemSubEmitterType)">
      <summary>
        <para>Set the type of the sub-emitter at the given index.</para>
      </summary>
      <param name="index">The index of the sub-emitter being modified.</param>
      <param name="type">The new spawning type to assign to this sub-emitter.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.TextureSheetAnimationModule">
      <summary>
        <para>Script interface for the Texture Sheet Animation module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.animation">
      <summary>
        <para>Specifies the animation type.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.cycleCount">
      <summary>
        <para>Specifies how many times the animation will loop during the lifetime of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.enabled">
      <summary>
        <para>Enable/disable the Texture Sheet Animation module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.flipU">
      <summary>
        <para>Flip the U coordinate on particles, causing them to appear mirrored horizontally.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.flipV">
      <summary>
        <para>Flip the V coordinate on particles, causing them to appear mirrored vertically.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.frameOverTime">
      <summary>
        <para>Curve to control which frame of the texture sheet animation to play.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.frameOverTimeMultiplier">
      <summary>
        <para>Frame over time mutiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.numTilesX">
      <summary>
        <para>Defines the tiling of the texture in the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.numTilesY">
      <summary>
        <para>Defines the tiling of the texture in the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.rowIndex">
      <summary>
        <para>Explicitly select which row of the texture sheet is used, when ParticleSystem.TextureSheetAnimationModule.useRandomRow is set to false.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.startFrame">
      <summary>
        <para>Define a random starting frame for the texture sheet animation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.startFrameMultiplier">
      <summary>
        <para>Starting frame multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.useRandomRow">
      <summary>
        <para>Use a random row of the texture sheet for each particle emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TextureSheetAnimationModule.uvChannelMask">
      <summary>
        <para>Choose which UV channels will receive texture animation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.TrailModule">
      <summary>
        <para>Access the particle system trails module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.colorOverLifetime">
      <summary>
        <para>The gradient controlling the trail colors during the lifetime of the attached particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.colorOverTrail">
      <summary>
        <para>The gradient controlling the trail colors over the length of the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.dieWithParticles">
      <summary>
        <para>If enabled, Trails will disappear immediately when their owning particle dies. Otherwise, the trail will persist until all its points have naturally expired, based on its lifetime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.enabled">
      <summary>
        <para>Enable/disable the Trail module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.inheritParticleColor">
      <summary>
        <para>Toggle whether the trail will inherit the particle color as its starting color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.lifetime">
      <summary>
        <para>The curve describing the trail lifetime, throughout the lifetime of the particle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.lifetimeMultiplier">
      <summary>
        <para>Change the lifetime multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.minVertexDistance">
      <summary>
        <para>Set the minimum distance each trail can travel before a new vertex is added to it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.ratio">
      <summary>
        <para>Choose what proportion of particles will receive a trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.sizeAffectsLifetime">
      <summary>
        <para>Set whether the particle size will act as a multiplier on top of the trail lifetime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.sizeAffectsWidth">
      <summary>
        <para>Set whether the particle size will act as a multiplier on top of the trail width.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.textureMode">
      <summary>
        <para>Choose whether the U coordinate of the trail texture is tiled or stretched.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.widthOverTrail">
      <summary>
        <para>The curve describing the width, of each trail point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.widthOverTrailMultiplier">
      <summary>
        <para>Change the width multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TrailModule.worldSpace">
      <summary>
        <para>Drop new trail points in world space, regardless of Particle System Simulation Space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystem.TriggerModule">
      <summary>
        <para>Script interface for the Trigger module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.enabled">
      <summary>
        <para>Enable/disable the Trigger module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.enter">
      <summary>
        <para>Choose what action to perform when particles enter the trigger volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.exit">
      <summary>
        <para>Choose what action to perform when particles leave the trigger volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.inside">
      <summary>
        <para>Choose what action to perform when particles are inside the trigger volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.maxColliderCount">
      <summary>
        <para>The maximum number of collision shapes that can be attached to this particle system trigger.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.outside">
      <summary>
        <para>Choose what action to perform when particles are outside the trigger volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.TriggerModule.radiusScale">
      <summary>
        <para>A multiplier applied to the size of each particle before overlaps are processed.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystem.TriggerModule.GetCollider(System.Int32)">
      <summary>
        <para>Get a collision shape associated with this particle system trigger.</para>
      </summary>
      <param name="index">Which collider to return.</param>
      <returns>
        <para>The collider at the given index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystem.TriggerModule.SetCollider(System.Int32,UnityEngine.Component)">
      <summary>
        <para>Set a collision shape associated with this particle system trigger.</para>
      </summary>
      <param name="index">Which collider to set.</param>
      <param name="collider">The collider to associate with this trigger.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystem.VelocityOverLifetimeModule">
      <summary>
        <para>Script interface for the Velocity Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.enabled">
      <summary>
        <para>Enable/disable the Velocity Over Lifetime module.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.space">
      <summary>
        <para>Specifies if the velocities are in local space (rotated with the transform) or world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.x">
      <summary>
        <para>Curve to control particle speed based on lifetime, on the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.xMultiplier">
      <summary>
        <para>X axis speed multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.y">
      <summary>
        <para>Curve to control particle speed based on lifetime, on the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.yMultiplier">
      <summary>
        <para>Y axis speed multiplier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.z">
      <summary>
        <para>Curve to control particle speed based on lifetime, on the Z axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystem.VelocityOverLifetimeModule.zMultiplier">
      <summary>
        <para>Z axis speed multiplier.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemAnimationType">
      <summary>
        <para>The animation type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemAnimationType.SingleRow">
      <summary>
        <para>Animate a single row in the sheet from left to right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemAnimationType.WholeSheet">
      <summary>
        <para>Animate over the whole texture sheet from left to right, top to bottom.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemCollisionMode">
      <summary>
        <para>Whether to use 2D or 3D colliders for particle collisions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionMode.Collision2D">
      <summary>
        <para>Use 2D colliders to collide particles against.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionMode.Collision3D">
      <summary>
        <para>Use 3D colliders to collide particles against.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemCollisionQuality">
      <summary>
        <para>Quality of world collisions. Medium and low quality are approximate and may leak particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionQuality.High">
      <summary>
        <para>The most accurate world collisions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionQuality.Low">
      <summary>
        <para>Fastest and most approximate world collisions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionQuality.Medium">
      <summary>
        <para>Approximate world collisions.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemCollisionType">
      <summary>
        <para>The type of collisions to use for a given particle system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionType.Planes">
      <summary>
        <para>Collide with a list of planes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCollisionType.World">
      <summary>
        <para>Collide with the world geometry.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemCurveMode">
      <summary>
        <para>The particle curve mode (Shuriken).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCurveMode.Constant">
      <summary>
        <para>Use a single constant for the ParticleSystem.MinMaxCurve.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCurveMode.Curve">
      <summary>
        <para>Use a single curve for the ParticleSystem.MinMaxCurve.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCurveMode.TwoConstants">
      <summary>
        <para>Use a random value between 2 constants for the ParticleSystem.MinMaxCurve.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCurveMode.TwoCurves">
      <summary>
        <para>Use a random value between 2 curves for the ParticleSystem.MinMaxCurve.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemCustomData">
      <summary>
        <para>Which stream of custom particle data to set.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCustomData.Custom1">
      <summary>
        <para>The first stream of custom per-particle data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCustomData.Custom2">
      <summary>
        <para>The second stream of custom per-particle data.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemCustomDataMode">
      <summary>
        <para>Which mode the Custom Data module uses to generate its data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCustomDataMode.Color">
      <summary>
        <para>Generate data using ParticleSystem.MinMaxGradient.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCustomDataMode.Disabled">
      <summary>
        <para>Don't generate any data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemCustomDataMode.Vector">
      <summary>
        <para>Generate data using ParticleSystem.MinMaxCurve.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemEmissionType">
      <summary>
        <para>The mode in which particles are emitted.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemEmissionType.Distance">
      <summary>
        <para>Emit when emitter moves.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemEmissionType.Time">
      <summary>
        <para>Emit over time.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemGradientMode">
      <summary>
        <para>The particle gradient mode (Shuriken).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemGradientMode.Color">
      <summary>
        <para>Use a single color for the ParticleSystem.MinMaxGradient.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemGradientMode.Gradient">
      <summary>
        <para>Use a single color gradient for the ParticleSystem.MinMaxGradient.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemGradientMode.RandomColor">
      <summary>
        <para>Define a list of colors in the ParticleSystem.MinMaxGradient, to be chosen from at random.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemGradientMode.TwoColors">
      <summary>
        <para>Use a random value between 2 colors for the ParticleSystem.MinMaxGradient.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemGradientMode.TwoGradients">
      <summary>
        <para>Use a random value between 2 color gradients for the ParticleSystem.MinMaxGradient.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemInheritVelocityMode">
      <summary>
        <para>How to apply emitter velocity to particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemInheritVelocityMode.Current">
      <summary>
        <para>Each particle's velocity is set to the emitter's current velocity value, every frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemInheritVelocityMode.Initial">
      <summary>
        <para>Each particle inherits the emitter's velocity on the frame when it was initially emitted.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemMeshShapeType">
      <summary>
        <para>The mesh emission type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemMeshShapeType.Edge">
      <summary>
        <para>Emit from the edges of the mesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemMeshShapeType.Triangle">
      <summary>
        <para>Emit from the surface of the mesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemMeshShapeType.Vertex">
      <summary>
        <para>Emit from the vertices of the mesh.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemNoiseQuality">
      <summary>
        <para>The quality of the generated noise.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemNoiseQuality.High">
      <summary>
        <para>High quality 3D noise.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemNoiseQuality.Low">
      <summary>
        <para>Low quality 1D noise.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemNoiseQuality.Medium">
      <summary>
        <para>Medium quality 2D noise.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemOverlapAction">
      <summary>
        <para>What action to perform when the particle trigger module passes a test.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemOverlapAction.Callback">
      <summary>
        <para>Send the OnParticleTrigger command to the particle system's script.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemOverlapAction.Ignore">
      <summary>
        <para>Do nothing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemOverlapAction.Kill">
      <summary>
        <para>Kill all particles that pass this test.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemRenderer">
      <summary>
        <para>Renders particles on to the screen (Shuriken).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.activeVertexStreamsCount">
      <summary>
        <para>The number of currently active custom vertex streams.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.alignment">
      <summary>
        <para>Control the direction that particles face.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.cameraVelocityScale">
      <summary>
        <para>How much are the particles stretched depending on the Camera's speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.lengthScale">
      <summary>
        <para>How much are the particles stretched in their direction of motion.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.maxParticleSize">
      <summary>
        <para>Clamp the maximum particle size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.mesh">
      <summary>
        <para>Mesh used as particle instead of billboarded texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.meshCount">
      <summary>
        <para>The number of meshes being used for particle rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.minParticleSize">
      <summary>
        <para>Clamp the minimum particle size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.normalDirection">
      <summary>
        <para>How much are billboard particle normals oriented towards the camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.pivot">
      <summary>
        <para>Modify the pivot point used for rotating particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.renderMode">
      <summary>
        <para>How particles are drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.sortingFudge">
      <summary>
        <para>Biases particle system sorting amongst other transparencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.sortMode">
      <summary>
        <para>Sort particles within a system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.trailMaterial">
      <summary>
        <para>Set the material used by the Trail module for attaching trails to particles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ParticleSystemRenderer.velocityScale">
      <summary>
        <para>How much are the particles stretched depending on "how fast they move".</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.AreVertexStreamsEnabled(UnityEngine.ParticleSystemVertexStreams)">
      <summary>
        <para>Query whether the particle system renderer uses a particular set of vertex streams.</para>
      </summary>
      <param name="streams">Streams to query.</param>
      <returns>
        <para>Whether all the queried streams are enabled or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.DisableVertexStreams(UnityEngine.ParticleSystemVertexStreams)">
      <summary>
        <para>Disable a set of vertex shader streams on the particle system renderer.
The position stream is always enabled, and any attempts to remove it will be ignored.</para>
      </summary>
      <param name="streams">Streams to disable.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.EnableVertexStreams(UnityEngine.ParticleSystemVertexStreams)">
      <summary>
        <para>Enable a set of vertex shader streams on the particle system renderer.</para>
      </summary>
      <param name="streams">Streams to enable.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.GetActiveVertexStreams(System.Collections.Generic.List`1&lt;UnityEngine.ParticleSystemVertexStream&gt;)">
      <summary>
        <para>Query which vertex shader streams are enabled on the ParticleSystemRenderer.</para>
      </summary>
      <param name="streams">The array of streams to be populated.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.GetEnabledVertexStreams(UnityEngine.ParticleSystemVertexStreams)">
      <summary>
        <para>Query whether the particle system renderer uses a particular set of vertex streams.</para>
      </summary>
      <param name="streams">Streams to query.</param>
      <returns>
        <para>Returns the subset of the queried streams that are actually enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.GetMeshes(UnityEngine.Mesh[])">
      <summary>
        <para>Set the array of meshes used as particles.</para>
      </summary>
      <param name="meshes">This array will be populated with the list of meshes being used for particle rendering.</param>
      <returns>
        <para>The number of meshes actually written to the destination array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.SetActiveVertexStreams(System.Collections.Generic.List`1&lt;UnityEngine.ParticleSystemVertexStream&gt;)">
      <summary>
        <para>Enable a set of vertex shader streams on the ParticleSystemRenderer.</para>
      </summary>
      <param name="streams">The new array of enabled vertex streams.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.SetMeshes(UnityEngine.Mesh[])">
      <summary>
        <para>Set an array of meshes used as particles instead of a billboarded texture.</para>
      </summary>
      <param name="meshes">Array of meshes to be used.</param>
      <param name="size">Number of elements from the mesh array to be applied.</param>
    </member>
    <member name="M:UnityEngine.ParticleSystemRenderer.SetMeshes(UnityEngine.Mesh[],System.Int32)">
      <summary>
        <para>Set an array of meshes used as particles instead of a billboarded texture.</para>
      </summary>
      <param name="meshes">Array of meshes to be used.</param>
      <param name="size">Number of elements from the mesh array to be applied.</param>
    </member>
    <member name="T:UnityEngine.ParticleSystemRenderMode">
      <summary>
        <para>The rendering mode for particle systems (Shuriken).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderMode.Billboard">
      <summary>
        <para>Render particles as billboards facing the active camera. (Default)</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderMode.HorizontalBillboard">
      <summary>
        <para>Render particles as billboards always facing up along the y-Axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderMode.Mesh">
      <summary>
        <para>Render particles as meshes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderMode.None">
      <summary>
        <para>Do not render particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderMode.Stretch">
      <summary>
        <para>Stretch particles in the direction of motion.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderMode.VerticalBillboard">
      <summary>
        <para>Render particles as billboards always facing the player, but not pitching along the x-Axis.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemRenderSpace">
      <summary>
        <para>How particles are aligned when rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderSpace.Facing">
      <summary>
        <para>Particles face the eye position.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderSpace.Local">
      <summary>
        <para>Particles align with their local transform.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderSpace.View">
      <summary>
        <para>Particles face the camera plane.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemRenderSpace.World">
      <summary>
        <para>Particles align with the world.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemScalingMode">
      <summary>
        <para>Control how particle systems apply transform scale.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemScalingMode.Hierarchy">
      <summary>
        <para>Scale the particle system using the entire transform hierarchy.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemScalingMode.Local">
      <summary>
        <para>Scale the particle system using only its own transform scale. (Ignores parent scale).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemScalingMode.Shape">
      <summary>
        <para>Only apply transform scale to the shape component, which controls where
        particles are spawned, but does not affect their size or movement.
        </para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemShapeMultiModeValue">
      <summary>
        <para>The mode used to generate new points in a shape (Shuriken).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeMultiModeValue.BurstSpread">
      <summary>
        <para>Distribute new particles around the shape evenly.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeMultiModeValue.Loop">
      <summary>
        <para>Animate the emission point around the shape.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeMultiModeValue.PingPong">
      <summary>
        <para>Animate the emission point around the shape, alternating between clockwise and counter-clockwise directions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeMultiModeValue.Random">
      <summary>
        <para>Generate points randomly. (Default)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemShapeType">
      <summary>
        <para>The emission shape (Shuriken).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.Box">
      <summary>
        <para>Emit from the volume of a box.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.BoxEdge">
      <summary>
        <para>Emit from the surface of a box.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.BoxShell">
      <summary>
        <para>Emit from the edges of a box.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.Circle">
      <summary>
        <para>Emit from a circle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.CircleEdge">
      <summary>
        <para>Emit from the edge of a circle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.Cone">
      <summary>
        <para>Emit from the base surface of a cone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.ConeShell">
      <summary>
        <para>Emit from the base surface of a cone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.ConeVolume">
      <summary>
        <para>Emit from the volume of a cone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.ConeVolumeShell">
      <summary>
        <para>Emit from the surface of a cone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.Hemisphere">
      <summary>
        <para>Emit from the volume of a half-sphere.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.HemisphereShell">
      <summary>
        <para>Emit from the surface of a half-sphere.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.Mesh">
      <summary>
        <para>Emit from a mesh.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.MeshRenderer">
      <summary>
        <para>Emit from a mesh renderer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.SingleSidedEdge">
      <summary>
        <para>Emit from an edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.SkinnedMeshRenderer">
      <summary>
        <para>Emit from a skinned mesh renderer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.Sphere">
      <summary>
        <para>Emit from the volume of a sphere.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemShapeType.SphereShell">
      <summary>
        <para>Emit from the surface of a sphere.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemSimulationSpace">
      <summary>
        <para>The space to simulate particles in.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSimulationSpace.Custom">
      <summary>
        <para>Simulate particles relative to a custom transform component, defined by ParticleSystem.MainModule.customSimulationSpace.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSimulationSpace.Local">
      <summary>
        <para>Simulate particles in local space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSimulationSpace.World">
      <summary>
        <para>Simulate particles in world space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemSortMode">
      <summary>
        <para>The sorting mode for particle systems.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSortMode.Distance">
      <summary>
        <para>Sort based on distance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSortMode.None">
      <summary>
        <para>No sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSortMode.OldestInFront">
      <summary>
        <para>Sort the oldest particles to the front.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSortMode.YoungestInFront">
      <summary>
        <para>Sort the youngest particles to the front.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemStopBehavior">
      <summary>
        <para>The behavior to apply when calling ParticleSystem.Stop|Stop.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemStopBehavior.StopEmitting">
      <summary>
        <para>Stops particle system emitting any further particles. All existing particles will remain until they expire.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemStopBehavior.StopEmittingAndClear">
      <summary>
        <para>Stops particle system emitting and removes all existing emitted particles.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemSubEmitterProperties">
      <summary>
        <para>The properties of sub-emitter particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterProperties.InheritColor">
      <summary>
        <para>When spawning new particles, multiply the start color by the color of the parent particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterProperties.InheritEverything">
      <summary>
        <para>When spawning new particles, inherit all available properties from the parent particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterProperties.InheritNothing">
      <summary>
        <para>When spawning new particles, do not inherit any properties from the parent particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterProperties.InheritRotation">
      <summary>
        <para>When spawning new particles, add the start rotation to the rotation of the parent particles.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterProperties.InheritSize">
      <summary>
        <para>When spawning new particles, multiply the start size by the size of the parent particles.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemSubEmitterType">
      <summary>
        <para>The events that cause new particles to be spawned.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterType.Birth">
      <summary>
        <para>Spawn new particles when particles from the parent system are born.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterType.Collision">
      <summary>
        <para>Spawn new particles when particles from the parent system collide with something.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemSubEmitterType.Death">
      <summary>
        <para>Spawn new particles when particles from the parent system die.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemTrailTextureMode">
      <summary>
        <para>Choose how textures are applied to Particle Trails.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTrailTextureMode.DistributePerSegment">
      <summary>
        <para>Map the texture once along the entire length of the trail, assuming all vertices are evenly spaced.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTrailTextureMode.RepeatPerSegment">
      <summary>
        <para>Repeat the texture along the trail, repeating at a rate of once per trail segment. To adjust the tiling rate, use Material.SetTextureScale.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTrailTextureMode.Stretch">
      <summary>
        <para>Map the texture once along the entire length of the trail.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTrailTextureMode.Tile">
      <summary>
        <para>Repeat the texture along the trail. To set the tiling rate, use Material.SetTextureScale.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemTriggerEventType">
      <summary>
        <para>The different types of particle triggers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTriggerEventType.Enter">
      <summary>
        <para>Trigger when particles enter the collision volume.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTriggerEventType.Exit">
      <summary>
        <para>Trigger when particles leave the collision volume.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTriggerEventType.Inside">
      <summary>
        <para>Trigger when particles are inside the collision volume.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemTriggerEventType.Outside">
      <summary>
        <para>Trigger when particles are outside the collision volume.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemVertexStream">
      <summary>
        <para>All possible particle system vertex shader inputs.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.AgePercent">
      <summary>
        <para>The normalized age of each particle, from 0 to 1.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.AnimBlend">
      <summary>
        <para>The amount to blend between animated texture frames, from 0 to 1.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.AnimFrame">
      <summary>
        <para>The current animation frame index of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Center">
      <summary>
        <para>The center position of the entire particle, in world space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Color">
      <summary>
        <para>The color of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom1X">
      <summary>
        <para>One custom value for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom1XY">
      <summary>
        <para>Two custom values for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom1XYZ">
      <summary>
        <para>Three custom values for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom1XYZW">
      <summary>
        <para>Four custom values for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom2X">
      <summary>
        <para>One custom value for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom2XY">
      <summary>
        <para>Two custom values for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom2XYZ">
      <summary>
        <para>Three custom values for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Custom2XYZW">
      <summary>
        <para>Four custom values for each particle, defined by the Custom Data Module, or ParticleSystem.SetCustomParticleData.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.InvStartLifetime">
      <summary>
        <para>The reciprocal of the starting lifetime, in seconds (1.0f / startLifetime).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Normal">
      <summary>
        <para>The vertex normal of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Position">
      <summary>
        <para>The position of each particle vertex, in world space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Rotation">
      <summary>
        <para>The Z axis rotation of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Rotation3D">
      <summary>
        <para>The 3D rotation of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.RotationSpeed">
      <summary>
        <para>The Z axis rotational speed of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.RotationSpeed3D">
      <summary>
        <para>The 3D rotational speed of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.SizeX">
      <summary>
        <para>The X axis size of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.SizeXY">
      <summary>
        <para>The X and Y axis sizes of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.SizeXYZ">
      <summary>
        <para>The 3D size of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Speed">
      <summary>
        <para>The speed of each particle, calculated by taking the magnitude of the velocity.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.StableRandomX">
      <summary>
        <para>A random number for each particle, which remains constant during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.StableRandomXY">
      <summary>
        <para>Two random numbers for each particle, which remain constant during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.StableRandomXYZ">
      <summary>
        <para>Three random numbers for each particle, which remain constant during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.StableRandomXYZW">
      <summary>
        <para>Four random numbers for each particle, which remain constant during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Tangent">
      <summary>
        <para>The tangent vector for each particle (for normal mapping).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.UV">
      <summary>
        <para>The first UV stream of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.UV2">
      <summary>
        <para>The second UV stream of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.UV3">
      <summary>
        <para>The third UV stream of each particle (only for meshes).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.UV4">
      <summary>
        <para>The fourth UV stream of each particle (only for meshes).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.VaryingRandomX">
      <summary>
        <para>A random number for each particle, which changes during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.VaryingRandomXY">
      <summary>
        <para>Two random numbers for each particle, which change during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.VaryingRandomXYZ">
      <summary>
        <para>Three random numbers for each particle, which change during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.VaryingRandomXYZW">
      <summary>
        <para>Four random numbers for each particle, which change during their lifetime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.Velocity">
      <summary>
        <para>The velocity of each particle, in world space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStream.VertexID">
      <summary>
        <para>The vertex ID of each particle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ParticleSystemVertexStreams">
      <summary>
        <para>All possible particle system vertex shader inputs.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.All">
      <summary>
        <para>A mask with all vertex streams enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.CenterAndVertexID">
      <summary>
        <para>The center position of each particle, with the vertex ID of each particle, from 0-3, stored in the w component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Color">
      <summary>
        <para>The color of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Custom1">
      <summary>
        <para>The first stream of custom data, supplied from script.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Custom2">
      <summary>
        <para>The second stream of custom data, supplied from script.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Lifetime">
      <summary>
        <para>Alive time as a 0-1 value in the X component, and Total Lifetime in the Y component.
To get the current particle age, simply multiply X by Y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.None">
      <summary>
        <para>A mask with no vertex streams enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Normal">
      <summary>
        <para>The normal of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Position">
      <summary>
        <para>The world space position of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Random">
      <summary>
        <para>4 random numbers. The first 3 are deterministic and assigned once when each particle is born, but the 4th value will change during the lifetime of the particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Rotation">
      <summary>
        <para>The rotation of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Size">
      <summary>
        <para>The size of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Tangent">
      <summary>
        <para>Tangent vectors for normal mapping.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.UV">
      <summary>
        <para>The texture coordinates of each particle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.UV2BlendAndFrame">
      <summary>
        <para>With the Texture Sheet Animation module enabled, this contains the UVs for the second texture frame, the blend factor for each particle, and the raw frame, allowing for blending of frames.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ParticleSystemVertexStreams.Velocity">
      <summary>
        <para>The 3D velocity of each particle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicMaterial">
      <summary>
        <para>Physics material describes how to handle colliding objects (friction, bounciness).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.bounceCombine">
      <summary>
        <para>Determines how the bounciness is combined.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.bounciness">
      <summary>
        <para>How bouncy is the surface? A value of 0 will not bounce. A value of 1 will bounce without any loss of energy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.dynamicFriction">
      <summary>
        <para>The friction used when already moving.  This value has to be between 0 and 1.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.dynamicFriction2">
      <summary>
        <para>If anisotropic friction is enabled, dynamicFriction2 will be applied along frictionDirection2.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.frictionCombine">
      <summary>
        <para>Determines how the friction is combined.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.frictionDirection2">
      <summary>
        <para>The direction of anisotropy. Anisotropic friction is enabled if the vector is not zero.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.staticFriction">
      <summary>
        <para>The friction coefficient used when an object is lying on a surface.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicMaterial.staticFriction2">
      <summary>
        <para>If anisotropic friction is enabled, staticFriction2 will be applied along frictionDirection2.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PhysicMaterial.#ctor">
      <summary>
        <para>Creates a new material.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PhysicMaterial.#ctor(System.String)">
      <summary>
        <para>Creates a new material named name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="T:UnityEngine.PhysicMaterialCombine">
      <summary>
        <para>Describes how physic materials of colliding objects are combined.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicMaterialCombine.Average">
      <summary>
        <para>Averages the friction/bounce of the two colliding materials.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicMaterialCombine.Maximum">
      <summary>
        <para>Uses the larger friction/bounce of the two colliding materials.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicMaterialCombine.Minimum">
      <summary>
        <para>Uses the smaller friction/bounce of the two colliding materials.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicMaterialCombine.Multiply">
      <summary>
        <para>Multiplies the friction/bounce of the two colliding materials.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Physics">
      <summary>
        <para>Global physics properties and helper methods.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.bounceThreshold">
      <summary>
        <para>Two colliding objects with a relative velocity below this will not bounce (default 2). Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.defaultContactOffset">
      <summary>
        <para>The default contact offset of the newly created colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.defaultSolverIterations">
      <summary>
        <para>The defaultSolverIterations determines how accurately Rigidbody joints and collision contacts are resolved. (default 6). Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.defaultSolverVelocityIterations">
      <summary>
        <para>The defaultSolverVelocityIterations affects how accurately the Rigidbody joints and collision contacts are resolved. (default 1). Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.gravity">
      <summary>
        <para>The gravity applied to all rigid bodies in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.maxAngularVelocity">
      <summary>
        <para>The default maximum angular velocity permitted for any rigid bodies (default 7). Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.minPenetrationForPenalty">
      <summary>
        <para>The minimum contact penetration value in order to apply a penalty force (default 0.05). Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.queriesHitBackfaces">
      <summary>
        <para>Whether physics queries should hit back-face triangles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.queriesHitTriggers">
      <summary>
        <para>Specifies whether queries (raycasts, spherecasts, overlap tests, etc.) hit Triggers by default.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.sleepAngularVelocity">
      <summary>
        <para>The default angular velocity, below which objects start sleeping (default 0.14). Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.sleepThreshold">
      <summary>
        <para>The mass-normalized energy threshold, below which objects start going to sleep.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics.sleepVelocity">
      <summary>
        <para>The default linear velocity, below which objects start going to sleep (default 0.15). Must be positive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Physics.AllLayers">
      <summary>
        <para>Layer mask constant to select all layers.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics.BoxCast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts the box along a ray and returns detailed information on what was hit.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half the size of the box in each dimension.</param>
      <param name="direction">The direction in which to cast the box.</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True, if any intersections were found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.BoxCast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit&amp;,UnityEngine.Quaternion,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts the box along a ray and returns detailed information on what was hit.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half the size of the box in each dimension.</param>
      <param name="direction">The direction in which to cast the box.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True, if any intersections were found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.BoxCastAll(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Like Physics.BoxCast, but returns all hits.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half the size of the box in each dimension.</param>
      <param name="direction">The direction in which to cast the box.</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>All colliders that were hit.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.BoxCastNonAlloc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit[],UnityEngine.Quaternion,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Cast the box along the direction, and store hits in the provided buffer.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half the size of the box in each dimension.</param>
      <param name="direction">The direction in which to cast the box.</param>
      <param name="results">The buffer to store the results in.</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of hits stored to the results buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.CapsuleCast(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a capsule against all colliders in the scene and returns detailed information on what was hit.</para>
      </summary>
      <param name="point1">The center of the sphere at the start of the capsule.</param>
      <param name="point2">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="direction">The direction into which to sweep the capsule.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the capsule sweep intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.CapsuleCast(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.RaycastHit&amp;,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para></para>
      </summary>
      <param name="point1">The center of the sphere at the start of the capsule.</param>
      <param name="point2">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="direction">The direction into which to sweep the capsule.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.CapsuleCastAll(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Like Physics.CapsuleCast, but this function will return all hits the capsule sweep intersects.</para>
      </summary>
      <param name="point1">The center of the sphere at the start of the capsule.</param>
      <param name="point2">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="direction">The direction into which to sweep the capsule.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>An array of all colliders hit in the sweep.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.CapsuleCastNonAlloc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.RaycastHit[],System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a capsule against all colliders in the scene and returns detailed information on what was hit into the buffer.</para>
      </summary>
      <param name="point1">The center of the sphere at the start of the capsule.</param>
      <param name="point2">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="direction">The direction into which to sweep the capsule.</param>
      <param name="results">The buffer to store the hits into.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of hits stored into the buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.CheckBox(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Check whether the given box overlaps with other colliders or not.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half the size of the box in each dimension.</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True, if the box overlaps with any colliders.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.CheckCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Checks if any colliders overlap a capsule-shaped volume in world space.</para>
      </summary>
      <param name="start">The center of the sphere at the start of the capsule.</param>
      <param name="end">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.CheckSphere(UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Returns true if there are any colliders overlapping the sphere defined by position and radius in world coordinates.</para>
      </summary>
      <param name="position">Center of the sphere.</param>
      <param name="radius">Radius of the sphere.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.ClosestPoint(UnityEngine.Vector3,UnityEngine.Collider,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Returns a point on the given collider that is closest to the specified location.</para>
      </summary>
      <param name="point">Location you want to find the closest point to.</param>
      <param name="collider">The collider that you find the closest point on.</param>
      <param name="position">The position of the collider.</param>
      <param name="rotation">The rotation of the collider.</param>
      <returns>
        <para>The point on the collider that is closest to the specified location.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.ComputePenetration(UnityEngine.Collider,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Collider,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3&amp;,System.Single&amp;)">
      <summary>
        <para>Compute the minimal translation required to separate the given colliders apart at specified poses.</para>
      </summary>
      <param name="colliderA">The first collider.</param>
      <param name="positionA">Position of the first collider.</param>
      <param name="rotationA">Rotation of the first collider.</param>
      <param name="colliderB">The second collider.</param>
      <param name="positionB">Position of the second collider.</param>
      <param name="rotationB">Rotation of the second collider.</param>
      <param name="direction">Direction along which the translation required to separate the colliders apart is minimal.</param>
      <param name="distance">The distance along direction that is required to separate the colliders apart.</param>
      <returns>
        <para>True, if the colliders overlap at the given poses.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.Physics.DefaultRaycastLayers">
      <summary>
        <para>Layer mask constant to select default raycast layers.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics.GetIgnoreLayerCollision(System.Int32,System.Int32)">
      <summary>
        <para>Are collisions between layer1 and layer2 being ignored?</para>
      </summary>
      <param name="layer1"></param>
      <param name="layer2"></param>
    </member>
    <member name="M:UnityEngine.Physics.IgnoreCollision(UnityEngine.Collider,UnityEngine.Collider,System.Boolean)">
      <summary>
        <para>Makes the collision detection system ignore all collisions between collider1 and collider2.</para>
      </summary>
      <param name="collider1"></param>
      <param name="collider2"></param>
      <param name="ignore"></param>
    </member>
    <member name="M:UnityEngine.Physics.IgnoreLayerCollision(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Makes the collision detection system ignore all collisions between any collider in layer1 and any collider in layer2.

Note that IgnoreLayerCollision will reset the trigger state of affected colliders, so you might receive OnTriggerExit and OnTriggerEnter messages in response to calling this.</para>
      </summary>
      <param name="layer1"></param>
      <param name="layer2"></param>
      <param name="ignore"></param>
    </member>
    <member name="F:UnityEngine.Physics.IgnoreRaycastLayer">
      <summary>
        <para>Layer mask constant to select ignore raycast layer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics.Linecast(UnityEngine.Vector3,UnityEngine.Vector3,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Returns true if there is any collider intersecting the line between start and end.</para>
      </summary>
      <param name="start">Start point.</param>
      <param name="end">End point.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.Linecast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit&amp;,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Returns true if there is any collider intersecting the line between start and end.</para>
      </summary>
      <param name="start">Start point.</param>
      <param name="end">End point.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
    </member>
    <member name="M:UnityEngine.Physics.OverlapBox(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Find all colliders touching or inside of the given box.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half of the size of the box in each dimension.</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>Colliders that overlap with the given box.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.OverlapBoxNonAlloc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Collider[],UnityEngine.Quaternion,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Find all colliders touching or inside of the given box, and store them into the buffer.</para>
      </summary>
      <param name="center">Center of the box.</param>
      <param name="halfExtents">Half of the size of the box in each dimension.</param>
      <param name="results">The buffer to store the results in.</param>
      <param name="orientation">Rotation of the box.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of colliders stored in results.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.OverlapCapsule(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Check the given capsule against the physics world and return all overlapping colliders.</para>
      </summary>
      <param name="point0">The center of the sphere at the start of the capsule.</param>
      <param name="point1">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>Colliders touching or inside the capsule.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.OverlapCapsuleNonAlloc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Collider[],System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Check the given capsule against the physics world and return all overlapping colliders in the user-provided buffer.</para>
      </summary>
      <param name="point0">The center of the sphere at the start of the capsule.</param>
      <param name="point1">The center of the sphere at the end of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="results">The buffer to store the results into.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of entries written to the buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.OverlapSphere(UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Returns an array with all colliders touching or inside the sphere.</para>
      </summary>
      <param name="position">Center of the sphere.</param>
      <param name="radius">Radius of the sphere.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.OverlapSphereNonAlloc(UnityEngine.Vector3,System.Single,UnityEngine.Collider[],System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Computes and stores colliders touching or inside the sphere into the provided buffer.</para>
      </summary>
      <param name="position">Center of the sphere.</param>
      <param name="radius">Radius of the sphere.</param>
      <param name="results">The buffer to store the results into.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of colliders stored into the results buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a ray, from point origin, in direction direction, of length maxDistance, against all colliders in the scene.</para>
      </summary>
      <param name="origin">The starting point of the ray in world coordinates.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="maxDistance">The max distance the ray should check for collisions.</param>
      <param name="layerMask">A that is used to selectively ignore Colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True if the ray intersects with a Collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit&amp;,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a ray against all colliders in the scene and returns detailed information on what was hit.</para>
      </summary>
      <param name="origin">The starting point of the ray in world coordinates.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
      <param name="maxDistance">The max distance the ray should check for collisions.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the ray intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(UnityEngine.Ray,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Same as above using ray.origin and ray.direction instead of origin and direction.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="maxDistance">The max distance the ray should check for collisions.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the ray intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.Raycast(UnityEngine.Ray,UnityEngine.RaycastHit&amp;,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Same as above using ray.origin and ray.direction instead of origin and direction.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
      <param name="maxDistance">The max distance the ray should check for collisions.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the ray intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.RaycastAll(UnityEngine.Ray,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a ray through the scene and returns all hits. Note that order is not guaranteed.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="maxDistance">The max distance the rayhit is allowed to be from the start of the ray.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.RaycastAll(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>See Also: Raycast.</para>
      </summary>
      <param name="origin">The starting point of the ray in world coordinates.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="maxDistance">The max distance the rayhit is allowed to be from the start of the ray.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.RaycastNonAlloc(UnityEngine.Ray,UnityEngine.RaycastHit[],System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Cast a ray through the scene and store the hits into the buffer.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray.</param>
      <param name="results">The buffer to store the hits into.</param>
      <param name="maxDistance">The max distance the rayhit is allowed to be from the start of the ray.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of hits stored into the results buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.RaycastNonAlloc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.RaycastHit[],System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Cast a ray through the scene and store the hits into the buffer.</para>
      </summary>
      <param name="origin">The starting point and direction of the ray.</param>
      <param name="results">The buffer to store the hits into.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="maxDistance">The max distance the rayhit is allowed to be from the start of the ray.</param>
      <param name="layermask">A that is used to selectively ignore colliders when casting a ray.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of hits stored into the results buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.SphereCast(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.RaycastHit&amp;,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a sphere along a ray and returns detailed information on what was hit.</para>
      </summary>
      <param name="origin">The center of the sphere at the start of the sweep.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="direction">The direction into which to sweep the sphere.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the sphere sweep intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.SphereCast(UnityEngine.Ray,System.Single,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Casts a sphere along a ray and returns detailed information on what was hit.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray into which the sphere sweep is cast.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the sphere sweep intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.SphereCast(UnityEngine.Ray,System.Single,UnityEngine.RaycastHit&amp;,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para></para>
      </summary>
      <param name="ray">The starting point and direction of the ray into which the sphere sweep is cast.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit. (See Also: RaycastHit).</param>
      <param name="maxDistance">The max length of the cast.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a capsule.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.SphereCastAll(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Like Physics.SphereCast, but this function will return all hits the sphere sweep intersects.</para>
      </summary>
      <param name="origin">The center of the sphere at the start of the sweep.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="direction">The direction in which to sweep the sphere.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a sphere.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>An array of all colliders hit in the sweep.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.SphereCastAll(UnityEngine.Ray,System.Single,System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Like Physics.SphereCast, but this function will return all hits the sphere sweep intersects.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray into which the sphere sweep is cast.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a sphere.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
    </member>
    <member name="M:UnityEngine.Physics.SphereCastNonAlloc(UnityEngine.Vector3,System.Single,UnityEngine.Vector3,UnityEngine.RaycastHit[],System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Cast sphere along the direction and store the results into buffer.</para>
      </summary>
      <param name="origin">The center of the sphere at the start of the sweep.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="direction">The direction in which to sweep the sphere.</param>
      <param name="results">The buffer to save the hits into.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a sphere.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of hits stored into the results buffer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics.SphereCastNonAlloc(UnityEngine.Ray,System.Single,UnityEngine.RaycastHit[],System.Single,System.Int32,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Cast sphere along the direction and store the results into buffer.</para>
      </summary>
      <param name="ray">The starting point and direction of the ray into which the sphere sweep is cast.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="results">The buffer to save the results to.</param>
      <param name="maxDistance">The max length of the sweep.</param>
      <param name="layerMask">A that is used to selectively ignore colliders when casting a sphere.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>The amount of hits stored into the results buffer.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Physics2D">
      <summary>
        <para>Global settings and helpers for 2D physics.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.alwaysShowColliders">
      <summary>
        <para>Should the collider gizmos always be shown even when they are not selected?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.angularSleepTolerance">
      <summary>
        <para>A rigid-body cannot sleep if its angular velocity is above this tolerance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.baumgarteScale">
      <summary>
        <para>The scale factor that controls how fast overlaps are resolved.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.baumgarteTOIScale">
      <summary>
        <para>The scale factor that controls how fast TOI overlaps are resolved.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.callbacksOnDisable">
      <summary>
        <para>Use this to control whether or not the appropriate OnCollisionExit2D or OnTriggerExit2D callbacks should be called when a Collider2D is disabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.changeStopsCallbacks">
      <summary>
        <para>Whether or not to stop reporting collision callbacks immediately if any of the objects involved in the collision are deleted/moved. </para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderAABBColor">
      <summary>
        <para>Sets the color used by the gizmos to show all Collider axis-aligned bounding boxes (AABBs).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderAsleepColor">
      <summary>
        <para>The color used by the gizmos to show all asleep colliders (collider is asleep when the body is asleep).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderAwakeColor">
      <summary>
        <para>The color used by the gizmos to show all awake colliders (collider is awake when the body is awake).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderContactColor">
      <summary>
        <para>The color used by the gizmos to show all collider contacts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.contactArrowScale">
      <summary>
        <para>The scale of the contact arrow used by the collider gizmos.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.defaultContactOffset">
      <summary>
        <para>The default contact offset of the newly created colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.deleteStopsCallbacks">
      <summary>
        <para>Ets the collision callbacks to stop or continue processing if any of the objects involved in the collision are deleted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.gravity">
      <summary>
        <para>Acceleration due to gravity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.linearSleepTolerance">
      <summary>
        <para>A rigid-body cannot sleep if its linear velocity is above this tolerance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxAngularCorrection">
      <summary>
        <para>The maximum angular position correction used when solving constraints.  This helps to prevent overshoot.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxLinearCorrection">
      <summary>
        <para>The maximum linear position correction used when solving constraints.  This helps to prevent overshoot.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxRotationSpeed">
      <summary>
        <para>The maximum angular speed of a rigid-body per physics update.  Increasing this can cause numerical problems.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxTranslationSpeed">
      <summary>
        <para>The maximum linear speed of a rigid-body per physics update.  Increasing this can cause numerical problems.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.minPenetrationForPenalty">
      <summary>
        <para>This property is obsolete.  You should use defaultContactOffset instead.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.positionIterations">
      <summary>
        <para>The number of iterations of the physics solver when considering objects' positions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.queriesHitTriggers">
      <summary>
        <para>Do raycasts detect Colliders configured as triggers?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.queriesStartInColliders">
      <summary>
        <para>Sets the raycasts or linecasts that start inside Colliders to detect or not detect those Colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.raycastsHitTriggers">
      <summary>
        <para>Sets the raycasts to either detect or not detect Triggers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.raycastsStartInColliders">
      <summary>
        <para>Do ray/line casts that start inside a collider(s) detect those collider(s)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.showColliderAABB">
      <summary>
        <para>Should the collider gizmos show the AABBs for each collider?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.showColliderContacts">
      <summary>
        <para>Should the collider gizmos show current contacts for each collider?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.showColliderSleep">
      <summary>
        <para>Should the collider gizmos show the sleep-state for each collider?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.timeToSleep">
      <summary>
        <para>The time in seconds that a rigid-body must be still before it will go to sleep.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.velocityIterations">
      <summary>
        <para>The number of iterations of the physics solver when considering objects' velocities.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.velocityThreshold">
      <summary>
        <para>Any collisions with a relative linear velocity below this threshold will be treated as inelastic.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Physics2D.AllLayers">
      <summary>
        <para>Layer mask constant that includes all layers.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a box against colliders in the scene, returning the first collider to contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the box originates.</param>
      <param name="size">The size of the box.</param>
      <param name="angle">The angle of the box (in degrees).</param>
      <param name="direction">Vector representing the direction of the box.</param>
      <param name="distance">Maximum distance over which to cast the box.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Casts a box against the colliders in the Scene and returns all colliders that are in contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the box originates.</param>
      <param name="size">The size of the box.</param>
      <param name="angle">The angle of the box (in degrees).</param>
      <param name="direction">Vector representing the direction of the box.</param>
      <param name="distance">Maximum distance over which to cast the box.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z or depth buffer, or normal angle.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCastAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a box against colliders in the scene, returning all colliders that contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the box originates.</param>
      <param name="size">The size of the box.</param>
      <param name="angle">The angle of the box (in degrees).</param>
      <param name="direction">Vector representing the direction of the box.</param>
      <param name="distance">Maximum distance over which to cast the box.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a box into the scene, returning colliders that contact with it into the provided results array.</para>
      </summary>
      <param name="origin">The point in 2D space where the box originates.</param>
      <param name="size">The size of the box.</param>
      <param name="angle">The angle of the box (in degrees).</param>
      <param name="direction">Vector representing the direction of the box.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the box.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a capsule against colliders in the scene, returning the first collider to contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the capsule originates.</param>
      <param name="size">The size of the capsule.</param>
      <param name="capsuleDirection">The direction of the capsule.</param>
      <param name="angle">The angle of the capsule (in degrees).</param>
      <param name="direction">Vector representing the direction to cast the capsule.</param>
      <param name="distance">Maximum distance over which to cast the capsule.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Casts a capsule against the colliders in the Scene and returns all colliders that are in contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the capsule originates.</param>
      <param name="size">The size of the capsule.</param>
      <param name="capsuleDirection">The direction of the capsule.</param>
      <param name="angle">The angle of the capsule (in degrees).</param>
      <param name="direction">Vector representing the direction to cast the capsule.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z or depth buffer, or normal angle.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <param name="distance">Maximum distance over which to cast the capsule.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCastAll(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a capsule against colliders in the scene, returning all colliders that contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the capsule originates.</param>
      <param name="size">The size of the capsule.</param>
      <param name="capsuleDirection">The direction of the capsule.</param>
      <param name="angle">The angle of the capsule (in degrees).</param>
      <param name="direction">Vector representing the direction to cast the capsule.</param>
      <param name="distance">Maximum distance over which to cast the capsule.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a capsule into the scene, returning colliders that contact with it into the provided results array.</para>
      </summary>
      <param name="origin">The point in 2D space where the capsule originates.</param>
      <param name="size">The size of the capsule.</param>
      <param name="capsuleDirection">The direction of the capsule.</param>
      <param name="angle">The angle of the capsule (in degrees).</param>
      <param name="direction">Vector representing the direction to cast the capsule.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the capsule.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a circle against colliders in the scene, returning the first collider to contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the circle originates.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="direction">Vector representing the direction of the circle.</param>
      <param name="distance">Maximum distance over which to cast the circle.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Casts a circle against colliders in the Scene, returning all colliders that contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the circle originates.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="direction">Vector representing the direction of the circle.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z or depth buffer, or normal angle.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <param name="distance">Maximum distance over which to cast the circle.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCastAll(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a circle against colliders in the scene, returning all colliders that contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the circle originates.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="direction">Vector representing the direction of the circle.</param>
      <param name="distance">Maximum distance over which to cast the circle.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCastNonAlloc(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a circle into the scene, returning colliders that contact with it into the provided results array.</para>
      </summary>
      <param name="origin">The point in 2D space where the circle originates.</param>
      <param name="radius">The radius of the circle.</param>
      <param name="direction">Vector representing the direction of the circle.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the circle.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.Physics2D.DefaultRaycastLayers">
      <summary>
        <para>Layer mask constant that includes all layers participating in raycasts by default.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.Distance(UnityEngine.Collider2D,UnityEngine.Collider2D)">
      <summary>
        <para>Calculates the minimum distance between two colliders.</para>
      </summary>
      <param name="colliderA">A collider used to calculate the minimum distance against colliderB.</param>
      <param name="colliderB">A collider used to calculate the minimum distance against colliderA.</param>
      <returns>
        <para>The minimum distance between colliderA and colliderB.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with the collider.</para>
      </summary>
      <param name="collider">The collider to retrieve contacts for.</param>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of colliders placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points in contact with the collider.</para>
      </summary>
      <param name="collider">The collider to retrieve contacts for.</param>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points in contact with the collider, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="collider">The collider to retrieve contacts for.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with the collider, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="collider">The collider to retrieve contacts for.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of colliders placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points in contact with any of the collider(s) attached to this rigidbody.</para>
      </summary>
      <param name="rigidbody">The rigidbody to retrieve contacts for.  All colliders attached to this rigidbody will be checked.</param>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with any of the collider(s) attached to this rigidbody.</para>
      </summary>
      <param name="rigidbody">The rigidbody to retrieve contacts for.  All colliders attached to this rigidbody will be checked.</param>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of colliders placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points in contact with any of the collider(s) attached to this rigidbody, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="rigidbody">The rigidbody to retrieve contacts for.  All colliders attached to this rigidbody will be checked.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with any of the collider(s) attached to this rigidbody, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="rigidbody">The rigidbody to retrieve contacts for.  All colliders attached to this rigidbody will be checked.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of colliders placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetIgnoreCollision(UnityEngine.Collider2D,UnityEngine.Collider2D)">
      <summary>
        <para>Checks whether the collision detection system will ignore all collisionstriggers between collider1 and collider2/ or not.</para>
      </summary>
      <param name="collider1">The first collider to compare to collider2.</param>
      <param name="collider2">The second collider to compare to collider1.</param>
      <returns>
        <para>Whether the collision detection system will ignore all collisionstriggers between collider1 and collider2/ or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetIgnoreLayerCollision(System.Int32,System.Int32)">
      <summary>
        <para>Checks whether collisions between the specified layers be ignored or not.</para>
      </summary>
      <param name="layer1">ID of first layer.</param>
      <param name="layer2">ID of second layer.</param>
      <returns>
        <para>Whether collisions between the specified layers be ignored or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetLayerCollisionMask(System.Int32)">
      <summary>
        <para>Get the collision layer mask that indicates which layer(s) the specified layer can collide with.</para>
      </summary>
      <param name="layer">The layer to retrieve the collision layer mask for.</param>
      <returns>
        <para>A mask where each bit indicates a layer and whether it can collide with layer or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersection(UnityEngine.Ray,System.Single,System.Int32)">
      <summary>
        <para>Cast a 3D ray against the colliders in the scene returning the first collider along the ray.</para>
      </summary>
      <param name="ray">The 3D ray defining origin and direction to test.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect colliders only on certain layers.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersectionAll(UnityEngine.Ray,System.Single,System.Int32)">
      <summary>
        <para>Cast a 3D ray against the colliders in the scene returning all the colliders along the ray.</para>
      </summary>
      <param name="ray">The 3D ray defining origin and direction to test.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect colliders only on certain layers.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersectionNonAlloc(UnityEngine.Ray,UnityEngine.RaycastHit2D[],System.Single,System.Int32)">
      <summary>
        <para>Cast a 3D ray against the colliders in the scene returning the colliders along the ray.</para>
      </summary>
      <param name="ray">The 3D ray defining origin and direction to test.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect colliders only on certain layers.</param>
      <param name="results">Array to receive results.</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IgnoreCollision(UnityEngine.Collider2D,UnityEngine.Collider2D,System.Boolean)">
      <summary>
        <para>Makes the collision detection system ignore all collisionstriggers between collider1 and collider2/.</para>
      </summary>
      <param name="collider1">The first collider to compare to collider2.</param>
      <param name="collider2">The second collider to compare to collider1.</param>
      <param name="ignore">Whether collisionstriggers between collider1 and collider2/ should be ignored or not.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.IgnoreLayerCollision(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Choose whether to detect or ignore collisions between a specified pair of layers.</para>
      </summary>
      <param name="layer1">ID of the first layer.</param>
      <param name="layer2">ID of the second layer.</param>
      <param name="ignore">Should collisions between these layers be ignored?</param>
    </member>
    <member name="F:UnityEngine.Physics2D.IgnoreRaycastLayer">
      <summary>
        <para>Layer mask constant for the default layer that ignores raycasts.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouching(UnityEngine.Collider2D,UnityEngine.Collider2D)">
      <summary>
        <para>Checks whether the passed colliders are in contact or not.</para>
      </summary>
      <param name="collider1">The collider to check if it is touching collider2.</param>
      <param name="collider2">The collider to check if it is touching collider1.</param>
      <returns>
        <para>Whether collider1 is touching collider2 or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouching(UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Checks whether the passed colliders are in contact or not.</para>
      </summary>
      <param name="collider">The collider to check if it is touching any other collider filtered by the contactFilter.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <returns>
        <para>Whether the collider is touching any other collider filtered by the contactFilter or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouching(UnityEngine.Collider2D,UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Checks whether the passed colliders are in contact or not.</para>
      </summary>
      <param name="collider1">The collider to check if it is touching collider2.</param>
      <param name="collider2">The collider to check if it is touching collider1.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <returns>
        <para>Whether collider1 is touching collider2 or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouchingLayers(UnityEngine.Collider2D,System.Int32)">
      <summary>
        <para>Checks whether the collider is touching any colliders on the specified layerMask or not.</para>
      </summary>
      <param name="collider">The collider to check if it is touching colliders on the layerMask.</param>
      <param name="layerMask">Any colliders on any of these layers count as touching.</param>
      <returns>
        <para>Whether the collider is touching any colliders on the specified layerMask or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a line segment against colliders in the Scene.</para>
      </summary>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Casts a line segment against colliders in the Scene with results filtered by ContactFilter2D.</para>
      </summary>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z or depth buffer, or normal angle.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.LinecastAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a line against colliders in the scene.</para>
      </summary>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.LinecastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a line against colliders in the scene.</para>
      </summary>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <param name="start">The start point of the line in world space.</param>
      <param name="end">The end point of the line in world space.</param>
      <param name="results">Returned array of objects that intersect the line.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Checks if a collider falls within a rectangular area.</para>
      </summary>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite the point A corner of the rectangle.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The collider overlapping the area.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Checks if a collider falls within a rectangular area.</para>
      </summary>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite the point A corner of the rectangle.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, and Z or depth buffer. Note that normal angle is not used for overlap testing.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapAreaAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a rectangular area.</para>
      </summary>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite the point A corner of the rectangle.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapAreaNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a specified area.</para>
      </summary>
      <param name="pointA">One corner of the rectangle.</param>
      <param name="pointB">Diagonally opposite the point A corner of the rectangle.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specified layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Checks if a collider falls within a box area.</para>
      </summary>
      <param name="point">Center of the box.</param>
      <param name="size">Size of the box.</param>
      <param name="angle">Angle of the box.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>The collider overlapping the box.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Checks if a collider falls within a box area.</para>
      </summary>
      <param name="point">Center of the box.</param>
      <param name="size">Size of the box.</param>
      <param name="angle">Angle of the box.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, and Z or depth buffer. Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBoxAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a box area.</para>
      </summary>
      <param name="point">Center of the box.</param>
      <param name="size">Size of the box.</param>
      <param name="angle">Angle of the box.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBoxNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a box area.</para>
      </summary>
      <param name="point">Center of the box.</param>
      <param name="size">Size of the box.</param>
      <param name="angle">Angle of the box.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Checks if a collider falls within a capsule area.</para>
      </summary>
      <param name="point">Center of the capsule.</param>
      <param name="size">Size of the capsule.</param>
      <param name="direction">The direction of the capsule.</param>
      <param name="angle">Angle of the capsule.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>The collider overlapping the capsule.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Checks if a collider falls within a capsule area.</para>
      </summary>
      <param name="point">Center of the capsule.</param>
      <param name="size">Size of the capsule.</param>
      <param name="direction">The direction of the capsule.</param>
      <param name="angle">Angle of the capsule.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, and Z or depth buffer. Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsuleAll(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a capsule area.</para>
      </summary>
      <param name="point">Center of the capsule.</param>
      <param name="size">Size of the capsule.</param>
      <param name="direction">The direction of the capsule.</param>
      <param name="angle">Angle of the capsule.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsuleNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a capsule area.</para>
      </summary>
      <param name="point">Center of the capsule.</param>
      <param name="size">Size of the capsule.</param>
      <param name="direction">The direction of the capsule.</param>
      <param name="angle">Angle of the capsule.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircle(UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Checks if a collider falls within a circular area.</para>
      </summary>
      <param name="point">Centre of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The collider overlapping the circle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Checks if a collider is within a circular area.</para>
      </summary>
      <param name="point">Centre of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, and Z or depth buffer. Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircleAll(UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a circular area.</para>
      </summary>
      <param name="point">Center of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="layerMask">Filter to check objects only on specified layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircleNonAlloc(UnityEngine.Vector2,System.Single,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that fall within a circular area.</para>
      </summary>
      <param name="point">Center of the circle.</param>
      <param name="radius">Radius of the circle.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCollider(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Get a list of all colliders that overlap collider.</para>
      </summary>
      <param name="collider">The collider that defines the area used to query for other collider overlaps.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth.  Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPoint(UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Checks if a collider overlaps a point in space.</para>
      </summary>
      <param name="point">A point in world space.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The collider overlapping the point.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Checks if a collider overlaps a point in world space.</para>
      </summary>
      <param name="point">A point in world space.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, and Z or depth buffer. Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPointAll(UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that overlap a point in space.</para>
      </summary>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <param name="point">A point in space.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPointNonAlloc(UnityEngine.Vector2,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Get a list of all colliders that overlap a point in space.</para>
      </summary>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <param name="point">A point in space.</param>
      <param name="results">Array to receive results.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a ray against colliders in the scene.</para>
      </summary>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">The vector representing the direction of the ray.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Casts a ray against colliders in the Scene.</para>
      </summary>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">The vector representing the direction of the ray.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z or depth buffer, or normal angle.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.RaycastAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a ray against colliders in the scene, returning all colliders that contact with it.</para>
      </summary>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">The vector representing the direction of the ray.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to detect Colliders only on certain layers.</param>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <returns>
        <para>The cast results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.RaycastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Casts a ray into the scene.</para>
      </summary>
      <param name="minDepth">Only include objects with a Z coordinate (depth) greater than or equal to this value.</param>
      <param name="maxDepth">Only include objects with a Z coordinate (depth) less than or equal to this value.</param>
      <param name="origin">The point in 2D space where the ray originates.</param>
      <param name="direction">The vector representing the direction of the ray.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the ray.</param>
      <param name="layerMask">Filter to check objects only on specific layers.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.SetLayerCollisionMask(System.Int32,System.Int32)">
      <summary>
        <para>Set the collision layer mask that indicates which layer(s) the specified layer can collide with.</para>
      </summary>
      <param name="layer">The layer to set the collision layer mask for.</param>
      <param name="layerMask">A mask where each bit indicates a layer and whether it can collide with layer or not.</param>
    </member>
    <member name="T:UnityEngine.PhysicsMaterial2D">
      <summary>
        <para>Asset type that defines the surface properties of a Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsMaterial2D.bounciness">
      <summary>
        <para>The degree of elasticity during collisions.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsMaterial2D.friction">
      <summary>
        <para>Coefficient of friction.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicsUpdateBehaviour2D">
      <summary>
        <para>A base type for 2D physics components that required a callback during FixedUpdate.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Ping">
      <summary>
        <para>Ping any given IP address (given in dot notation).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ping.ip">
      <summary>
        <para>The IP target of the ping.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ping.isDone">
      <summary>
        <para>Has the ping function completed?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ping.time">
      <summary>
        <para>This property contains the ping time result after isDone returns true.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Ping.#ctor(System.String)">
      <summary>
        <para>Perform a ping to the supplied target IP address.</para>
      </summary>
      <param name="address"></param>
    </member>
    <member name="T:UnityEngine.Plane">
      <summary>
        <para>Representation of a plane in 3D space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Plane.distance">
      <summary>
        <para>Distance from the origin to the plane.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Plane.normal">
      <summary>
        <para>Normal vector of the plane.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Plane.#ctor(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a plane.</para>
      </summary>
      <param name="inNormal"></param>
      <param name="inPoint"></param>
    </member>
    <member name="M:UnityEngine.Plane.#ctor(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Creates a plane.</para>
      </summary>
      <param name="inNormal"></param>
      <param name="d"></param>
    </member>
    <member name="M:UnityEngine.Plane.#ctor(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a plane.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="c"></param>
    </member>
    <member name="M:UnityEngine.Plane.GetDistanceToPoint(UnityEngine.Vector3)">
      <summary>
        <para>Returns a signed distance from plane to point.</para>
      </summary>
      <param name="inPt"></param>
    </member>
    <member name="M:UnityEngine.Plane.GetSide(UnityEngine.Vector3)">
      <summary>
        <para>Is a point on the positive side of the plane?</para>
      </summary>
      <param name="inPt"></param>
    </member>
    <member name="M:UnityEngine.Plane.Raycast(UnityEngine.Ray,System.Single&amp;)">
      <summary>
        <para>Intersects a ray with the plane.</para>
      </summary>
      <param name="ray"></param>
      <param name="enter"></param>
    </member>
    <member name="M:UnityEngine.Plane.SameSide(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Are two points on the same side of the plane?</para>
      </summary>
      <param name="inPt0"></param>
      <param name="inPt1"></param>
    </member>
    <member name="M:UnityEngine.Plane.Set3Points(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Sets a plane using three points that lie within it.  The points go around clockwise as you look down on the top surface of the plane.</para>
      </summary>
      <param name="a">First point in clockwise order.</param>
      <param name="b">Second point in clockwise order.</param>
      <param name="c">Third point in clockwise order.</param>
    </member>
    <member name="M:UnityEngine.Plane.SetNormalAndPosition(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Sets a plane using a point that lies within it along with a normal to orient it.</para>
      </summary>
      <param name="inNormal">The plane's normal vector.</param>
      <param name="inPoint">A point that lies on the plane.</param>
    </member>
    <member name="T:UnityEngine.PlatformEffector2D">
      <summary>
        <para>Applies "platform" behaviour such as one-way collisions etc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.oneWay">
      <summary>
        <para>Whether to use one-way collision behaviour or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.rotationalOffset">
      <summary>
        <para>The rotational offset angle from the local 'up'.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideAngleVariance">
      <summary>
        <para>The angle variance centered on the sides of the platform.  Zero angle only matches sides 90-degree to the platform "top".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideArc">
      <summary>
        <para>The angle of an arc that defines the sides of the platform centered on the local 'left' and 'right' of the effector. Any collision normals within this arc are considered for the 'side' behaviours.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideBounce">
      <summary>
        <para>Whether bounce should be used on the platform sides or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideFriction">
      <summary>
        <para>Whether friction should be used on the platform sides or not.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.surfaceArc">
      <summary>
        <para>The angle of an arc that defines the surface of the platform centered of the local 'up' of the effector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useOneWay">
      <summary>
        <para>Should the one-way collision behaviour be used?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useOneWayGrouping">
      <summary>
        <para>Ensures that all contacts controlled by the one-way behaviour act the same.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useSideBounce">
      <summary>
        <para>Should bounce be used on the platform sides?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useSideFriction">
      <summary>
        <para>Should friction be used on the platform sides?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PlayerPrefs">
      <summary>
        <para>Stores and accesses player preferences between game sessions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.DeleteAll">
      <summary>
        <para>Removes all keys and values from the preferences. Use with caution.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.DeleteKey(System.String)">
      <summary>
        <para>Removes key and its corresponding value from the preferences.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetFloat(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetFloat(System.String,System.Single)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetInt(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetInt(System.String,System.Int32)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetString(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.GetString(System.String,System.String)">
      <summary>
        <para>Returns the value corresponding to key in the preference file if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.HasKey(System.String)">
      <summary>
        <para>Returns true if key exists in the preferences.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.Save">
      <summary>
        <para>Writes all modified preferences to disk.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.SetFloat(System.String,System.Single)">
      <summary>
        <para>Sets the value of the preference identified by key.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.SetInt(System.String,System.Int32)">
      <summary>
        <para>Sets the value of the preference identified by key.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.PlayerPrefs.SetString(System.String,System.String)">
      <summary>
        <para>Sets the value of the preference identified by key.</para>
      </summary>
      <param name="key"></param>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.PlayerPrefsException">
      <summary>
        <para>An exception thrown by the PlayerPrefs class in a  web player build.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PlayMode">
      <summary>
        <para>Used by Animation.Play function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PlayMode.StopAll">
      <summary>
        <para>Will stop all animations that were started with this component before playing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PlayMode.StopSameLayer">
      <summary>
        <para>Will stop all animations that were started in the same layer. This is the default when playing animations.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PointEffector2D">
      <summary>
        <para>Applies forces to attract/repulse against a point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.angularDrag">
      <summary>
        <para>The angular drag to apply to rigid-bodies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.distanceScale">
      <summary>
        <para>The scale applied to the calculated distance between source and target.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.drag">
      <summary>
        <para>The linear drag to apply to rigid-bodies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceMagnitude">
      <summary>
        <para>The magnitude of the force to be applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceMode">
      <summary>
        <para>The mode used to apply the effector force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceSource">
      <summary>
        <para>The source which is used to calculate the centroid point of the effector.  The distance from the target is defined from this point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceTarget">
      <summary>
        <para>The target for where the effector applies any force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceVariation">
      <summary>
        <para>The variation of the magnitude of the force to be applied.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PolygonCollider2D">
      <summary>
        <para>Collider for 2D physics representing an arbitrary polygon defined by its vertices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.autoTiling">
      <summary>
        <para>Determines whether the PolygonCollider2D's shape is automatically updated based on a SpriteRenderer's tiling properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.pathCount">
      <summary>
        <para>The number of paths in the polygon.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.points">
      <summary>
        <para>Corner points that define the collider's shape in local space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.CreatePrimitive(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Creates as regular primitive polygon with the specified number of sides.</para>
      </summary>
      <param name="sides">The number of sides in the polygon.  This must be greater than two.</param>
      <param name="scale">The X/Y scale of the polygon.  These must be greater than zero.</param>
      <param name="offset">The X/Y offset of the polygon.</param>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetPath(System.Int32)">
      <summary>
        <para>Gets a path from the Collider by its index.</para>
      </summary>
      <param name="index">The index of the path to retrieve.</param>
      <returns>
        <para>An ordered array of the vertices or points in the selected path.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetTotalPointCount">
      <summary>
        <para>Return the total number of points in the polygon in all paths.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.SetPath(System.Int32,UnityEngine.Vector2[])">
      <summary>
        <para>Define a path by its constituent points.</para>
      </summary>
      <param name="index">Index of the path to set.</param>
      <param name="points">Points that define the path.</param>
    </member>
    <member name="T:UnityEngine.PreferBinarySerialization">
      <summary>
        <para>Prefer ScriptableObject derived type to use binary serialization regardless of project's asset serialization mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PrimitiveType">
      <summary>
        <para>The various primitives that can be created using the GameObject.CreatePrimitive function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PrimitiveType.Capsule">
      <summary>
        <para>A capsule primitive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PrimitiveType.Cube">
      <summary>
        <para>A cube primitive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PrimitiveType.Cylinder">
      <summary>
        <para>A cylinder primitive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PrimitiveType.Plane">
      <summary>
        <para>A plane primitive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PrimitiveType.Quad">
      <summary>
        <para>A Quad primitive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PrimitiveType.Sphere">
      <summary>
        <para>A sphere primitive.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralCacheSize">
      <summary>
        <para>Substance memory budget.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralCacheSize.Heavy">
      <summary>
        <para>A limit of 512MB for the cache or the working memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralCacheSize.Medium">
      <summary>
        <para>A limit of 256MB for the cache or the working memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralCacheSize.NoLimit">
      <summary>
        <para>No limit for the cache or the working memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralCacheSize.None">
      <summary>
        <para>A limit of 1B (one byte) for the cache or the working memory.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralCacheSize.Tiny">
      <summary>
        <para>A limit of 128MB for the cache or the working memory.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralLoadingBehavior">
      <summary>
        <para>ProceduralMaterial loading behavior.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralLoadingBehavior.BakeAndDiscard">
      <summary>
        <para>Bake the textures to speed up loading and discard the ProceduralMaterial data (default on unsupported platform).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralLoadingBehavior.BakeAndKeep">
      <summary>
        <para>Bake the textures to speed up loading and keep the ProceduralMaterial data so that it can still be tweaked and regenerated later on.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralLoadingBehavior.Cache">
      <summary>
        <para>Generate the textures when loading and cache them to diskflash to speed up subsequent gameapplication startups.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralLoadingBehavior.DoNothing">
      <summary>
        <para>Does not generate the textures automatically when the scene is loaded as it is set to "DoNothing". RebuildTextures() or RebuildTexturesImmediately() must be called to generate the textures.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralLoadingBehavior.DoNothingAndCache">
      <summary>
        <para>Does not generate the textures automatically when the scene is loaded as it is set to "DoNothing". RebuildTextures() or RebuildTexturesImmediately() must be called to generate the textures. After the textures have been generrated for the first time, they are cached to diskflash to speed up subsequent gameapplication startups. This setting will not load the cached textures automatically when the scene is loaded as it is still set to "DoNothing".  RebuildTextures() or RebuildTexturesImmediately() must be called again to load the previously cached textures.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralLoadingBehavior.Generate">
      <summary>
        <para>Generate the textures when loading to favor application's size (default on supported platform).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralMaterial">
      <summary>
        <para>Class for ProceduralMaterial handling.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.animationUpdateRate">
      <summary>
        <para>Set or get the update rate in millisecond of the animated substance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.cacheSize">
      <summary>
        <para>Set or get the Procedural cache budget.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isCachedDataAvailable">
      <summary>
        <para>Indicates whether cached data is available for this ProceduralMaterial's textures (only relevant for Cache and DoNothingAndCache loading behaviors).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isFrozen">
      <summary>
        <para>Returns true if FreezeAndReleaseSourceData was called on this ProceduralMaterial.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isLoadTimeGenerated">
      <summary>
        <para>Should the ProceduralMaterial be generated at load time?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isProcessing">
      <summary>
        <para>Check if the ProceduralTextures from this ProceduralMaterial are currently being rebuilt.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isReadable">
      <summary>
        <para>Set or get the "Readable" flag for a ProceduralMaterial.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.isSupported">
      <summary>
        <para>Check if ProceduralMaterials are supported on the current platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.loadingBehavior">
      <summary>
        <para>Get ProceduralMaterial loading behavior.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.preset">
      <summary>
        <para>Set or get an XML string of "input/value" pairs (setting the preset rebuilds the textures).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralMaterial.substanceProcessorUsage">
      <summary>
        <para>Used to specify the Substance engine CPU usage.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.CacheProceduralProperty(System.String,System.Boolean)">
      <summary>
        <para>Specifies if a named ProceduralProperty should be cached for efficient runtime tweaking.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.ClearCache">
      <summary>
        <para>Clear the Procedural cache.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.FreezeAndReleaseSourceData">
      <summary>
        <para>Render a ProceduralMaterial immutable and release the underlying data to decrease the memory footprint.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetGeneratedTexture(System.String)">
      <summary>
        <para>This allows to get a reference to a ProceduralTexture generated by a ProceduralMaterial using its name.</para>
      </summary>
      <param name="textureName">The name of the ProceduralTexture to get.</param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetGeneratedTextures">
      <summary>
        <para>Get generated textures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralBoolean(System.String)">
      <summary>
        <para>Get a named Procedural boolean property.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralColor(System.String)">
      <summary>
        <para>Get a named Procedural color property.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralEnum(System.String)">
      <summary>
        <para>Get a named Procedural enum property.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralFloat(System.String)">
      <summary>
        <para>Get a named Procedural float property.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralPropertyDescriptions">
      <summary>
        <para>Get an array of descriptions of all the ProceduralProperties this ProceduralMaterial has.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralTexture(System.String)">
      <summary>
        <para>Get a named Procedural texture property.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.GetProceduralVector(System.String)">
      <summary>
        <para>Get a named Procedural vector property.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.HasProceduralProperty(System.String)">
      <summary>
        <para>Checks if the ProceduralMaterial has a ProceduralProperty of a given name.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.IsProceduralPropertyCached(System.String)">
      <summary>
        <para>Checks if a named ProceduralProperty is cached for efficient runtime tweaking.</para>
      </summary>
      <param name="inputName"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.IsProceduralPropertyVisible(System.String)">
      <summary>
        <para>Checks if a given ProceduralProperty is visible according to the values of this ProceduralMaterial's other ProceduralProperties and to the ProceduralProperty's visibleIf expression.</para>
      </summary>
      <param name="inputName">The name of the ProceduralProperty whose visibility is evaluated.</param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.RebuildTextures">
      <summary>
        <para>Triggers an asynchronous rebuild of this ProceduralMaterial's dirty textures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.RebuildTexturesImmediately">
      <summary>
        <para>Triggers an immediate (synchronous) rebuild of this ProceduralMaterial's dirty textures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralBoolean(System.String,System.Boolean)">
      <summary>
        <para>Set a named Procedural boolean property.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralColor(System.String,UnityEngine.Color)">
      <summary>
        <para>Set a named Procedural color property.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralEnum(System.String,System.Int32)">
      <summary>
        <para>Set a named Procedural enum property.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralFloat(System.String,System.Single)">
      <summary>
        <para>Set a named Procedural float property.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralTexture(System.String,UnityEngine.Texture2D)">
      <summary>
        <para>Set a named Procedural texture property.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.SetProceduralVector(System.String,UnityEngine.Vector4)">
      <summary>
        <para>Set a named Procedural vector property.</para>
      </summary>
      <param name="inputName"></param>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.ProceduralMaterial.StopRebuilds">
      <summary>
        <para>Discard all the queued ProceduralMaterial rendering operations that have not started yet.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralOutputType">
      <summary>
        <para>The type of generated image in a ProceduralMaterial.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.AmbientOcclusion">
      <summary>
        <para>Ambient occlusion map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.DetailMask">
      <summary>
        <para>Detail mask map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Diffuse">
      <summary>
        <para>Diffuse map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Emissive">
      <summary>
        <para>Emissive map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Height">
      <summary>
        <para>Height map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Metallic">
      <summary>
        <para>Metalness map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Normal">
      <summary>
        <para>Normal (Bump) map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Opacity">
      <summary>
        <para>Opacity (Tranparency) map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Roughness">
      <summary>
        <para>Roughness map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Smoothness">
      <summary>
        <para>Smoothness map (formerly referred to as Glossiness).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Specular">
      <summary>
        <para>Specular map.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralOutputType.Unknown">
      <summary>
        <para>Undefined type.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralProcessorUsage">
      <summary>
        <para>The global Substance engine processor usage (as used for the ProceduralMaterial.substanceProcessorUsage property).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralProcessorUsage.All">
      <summary>
        <para>All physical processor cores are used for ProceduralMaterial generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralProcessorUsage.Half">
      <summary>
        <para>Half of all physical processor cores are used for ProceduralMaterial generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralProcessorUsage.One">
      <summary>
        <para>A single physical processor core is used for ProceduralMaterial generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralProcessorUsage.Unsupported">
      <summary>
        <para>Exact control of processor usage is not available.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralPropertyDescription">
      <summary>
        <para>Describes a ProceduralProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.componentLabels">
      <summary>
        <para>The names of the individual components of a Vector234 ProceduralProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.enumOptions">
      <summary>
        <para>The available options for a ProceduralProperty of type Enum.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.group">
      <summary>
        <para>The name of the GUI group. Used to display ProceduralProperties in groups.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.hasRange">
      <summary>
        <para>If true, the Float or Vector property is constrained to values within a specified range.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.label">
      <summary>
        <para>The label of the ProceduralProperty. Can contain space and be overall more user-friendly than the 'name' member.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.maximum">
      <summary>
        <para>If hasRange is true, maximum specifies the maximum allowed value for this Float or Vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.minimum">
      <summary>
        <para>If hasRange is true, minimum specifies the minimum allowed value for this Float or Vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.name">
      <summary>
        <para>The name of the ProceduralProperty. Used to get and set the values.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.step">
      <summary>
        <para>Specifies the step size of this Float or Vector property. Zero is no step.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyDescription.type">
      <summary>
        <para>The ProceduralPropertyType describes what type of property this is.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralPropertyType">
      <summary>
        <para>The type of a ProceduralProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Boolean">
      <summary>
        <para>Procedural boolean property. Use with ProceduralMaterial.GetProceduralBoolean.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Color3">
      <summary>
        <para>Procedural Color property without alpha. Use with ProceduralMaterial.GetProceduralColor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Color4">
      <summary>
        <para>Procedural Color property with alpha. Use with ProceduralMaterial.GetProceduralColor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Enum">
      <summary>
        <para>Procedural Enum property. Use with ProceduralMaterial.GetProceduralEnum.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Float">
      <summary>
        <para>Procedural float property. Use with ProceduralMaterial.GetProceduralFloat.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Texture">
      <summary>
        <para>Procedural Texture property. Use with ProceduralMaterial.GetProceduralTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Vector2">
      <summary>
        <para>Procedural Vector2 property. Use with ProceduralMaterial.GetProceduralVector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Vector3">
      <summary>
        <para>Procedural Vector3 property. Use with ProceduralMaterial.GetProceduralVector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ProceduralPropertyType.Vector4">
      <summary>
        <para>Procedural Vector4 property. Use with ProceduralMaterial.GetProceduralVector.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ProceduralTexture">
      <summary>
        <para>Class for ProceduralTexture handling.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralTexture.format">
      <summary>
        <para>The format of the pixel data in the texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ProceduralTexture.hasAlpha">
      <summary>
        <para>Check whether the ProceduralMaterial that generates this ProceduralTexture is set to an output format with an alpha channel.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ProceduralTexture.GetPixels32(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Grab pixel values from a ProceduralTexture.
</para>
      </summary>
      <param name="x">X-coord of the top-left corner of the rectangle to grab.</param>
      <param name="y">Y-coord of the top-left corner of the rectangle to grab.</param>
      <param name="blockWidth">Width of rectangle to grab.</param>
      <param name="blockHeight">Height of the rectangle to grab.
Get the pixel values from a rectangular area of a ProceduralTexture into an array.
The block is specified by its x,y offset in the texture and by its width and height. The block is "flattened" into the array by scanning the pixel values across rows one by one.</param>
    </member>
    <member name="M:UnityEngine.ProceduralTexture.GetProceduralOutputType">
      <summary>
        <para>The output type of this ProceduralTexture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Profiling.CustomSampler">
      <summary>
        <para>Custom CPU Profiler label used for profiling arbitrary code blocks.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.CustomSampler.Begin">
      <summary>
        <para>Begin profiling a piece of code with a custom label defined by this instance of CustomSampler.</para>
      </summary>
      <param name="targetObject"></param>
    </member>
    <member name="M:UnityEngine.Profiling.CustomSampler.Begin(UnityEngine.Object)">
      <summary>
        <para>Begin profiling a piece of code with a custom label defined by this instance of CustomSampler.</para>
      </summary>
      <param name="targetObject"></param>
    </member>
    <member name="M:UnityEngine.Profiling.CustomSampler.Create(System.String)">
      <summary>
        <para>Creates a new CustomSampler for profiling parts of your code.</para>
      </summary>
      <param name="name">Name of the Sampler.</param>
      <returns>
        <para>CustomSampler object or null if a built-in Sampler with the same name exists.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.CustomSampler.End">
      <summary>
        <para>End profiling a piece of code with a custom label.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Profiling.Profiler">
      <summary>
        <para>Controls the from script.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Profiler.enableBinaryLog">
      <summary>
        <para>Sets profiler output file in built players.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Profiler.enabled">
      <summary>
        <para>Enables the Profiler.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Profiler.logFile">
      <summary>
        <para>Sets profiler output file in built players.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Profiler.maxNumberOfSamplesPerFrame">
      <summary>
        <para>Resize the profiler sample buffers to allow the desired amount of samples per thread.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Profiler.usedHeapSize">
      <summary>
        <para>Heap size used by the program.</para>
      </summary>
      <returns>
        <para>Size of the used heap in bytes, (or 0 if the profiler is disabled).</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Profiling.Profiler.usedHeapSizeLong">
      <summary>
        <para>Returns the number of bytes that Unity has allocated. This does not include bytes allocated by external libraries or drivers.</para>
      </summary>
      <returns>
        <para>Size of the memory allocated by Unity (or 0 if the profiler is disabled).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.AddFramesFromFile(System.String)">
      <summary>
        <para>Displays the recorded profiledata in the profiler.</para>
      </summary>
      <param name="file"></param>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.BeginSample(System.String)">
      <summary>
        <para>Begin profiling a piece of code with a custom label.</para>
      </summary>
      <param name="name"></param>
      <param name="targetObject"></param>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.BeginSample(System.String,UnityEngine.Object)">
      <summary>
        <para>Begin profiling a piece of code with a custom label.</para>
      </summary>
      <param name="name"></param>
      <param name="targetObject"></param>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.EndSample">
      <summary>
        <para>End profiling a piece of code with a custom label.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetMonoHeapSize">
      <summary>
        <para>Returns the size of the mono heap.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetMonoHeapSizeLong">
      <summary>
        <para>Returns the size of the reserved space for managed-memory.</para>
      </summary>
      <returns>
        <para>The size of the managed heap. This returns 0 if the Profiler is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetMonoUsedSize">
      <summary>
        <para>Returns the used size from mono.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetMonoUsedSizeLong">
      <summary>
        <para>The allocated managed-memory for live objects and non-collected objects.</para>
      </summary>
      <returns>
        <para>A long integer value of the memory in use. This returns 0 if the Profiler is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetRuntimeMemorySize(UnityEngine.Object)">
      <summary>
        <para>Returns the runtime memory usage of the resource.</para>
      </summary>
      <param name="o"></param>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetRuntimeMemorySizeLong(UnityEngine.Object)">
      <summary>
        <para>Gathers the native-memory used by a Unity object.</para>
      </summary>
      <param name="o">The target Unity object.</param>
      <returns>
        <para>The amount of native-memory used by a Unity object. This returns 0 if the Profiler is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTempAllocatorSize">
      <summary>
        <para>Returns the size of the temp allocator.</para>
      </summary>
      <returns>
        <para>Size in bytes.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTotalAllocatedMemory">
      <summary>
        <para>Returns the amount of allocated and used system memory.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTotalAllocatedMemoryLong">
      <summary>
        <para>The total memory allocated by the internal allocators in Unity. Unity reserves large pools of memory from the system. This function returns the amount of used memory in those pools.</para>
      </summary>
      <returns>
        <para>The amount of memory allocated by Unity. This returns 0 if the Profiler is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTotalReservedMemory">
      <summary>
        <para>Returns the amount of reserved system memory.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTotalReservedMemoryLong">
      <summary>
        <para>The total memory Unity has reserved.</para>
      </summary>
      <returns>
        <para>Memory reserved by Unity in bytes. This returns 0 if the Profiler is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTotalUnusedReservedMemory">
      <summary>
        <para>Returns the amount of reserved but not used system memory.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.GetTotalUnusedReservedMemoryLong">
      <summary>
        <para>Unity allocates memory in pools for usage when unity needs to allocate memory. This function returns the amount of unused memory in these pools.</para>
      </summary>
      <returns>
        <para>The amount of unused memory in the reserved pools. This returns 0 if the Profiler is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Profiler.SetTempAllocatorRequestedSize(System.UInt32)">
      <summary>
        <para>Sets the size of the temp allocator.</para>
      </summary>
      <param name="size">Size in bytes.</param>
      <returns>
        <para>Returns true if requested size was successfully set. Will return false if value is disallowed (too small).</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Profiling.Recorder">
      <summary>
        <para>Records profiling data produced by a specific Sampler.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Recorder.elapsedNanoseconds">
      <summary>
        <para>Accumulated time of Begin/End pairs for the previous frame in nanoseconds. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Recorder.enabled">
      <summary>
        <para>Enables recording.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Recorder.isValid">
      <summary>
        <para>Returns true if Recorder is valid and can collect data. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Recorder.sampleBlockCount">
      <summary>
        <para>Number of time Begin/End pairs was called during the previous frame. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Recorder.Get(System.String)">
      <summary>
        <para>Use this function to get a Recorder for the specific Profiler label.</para>
      </summary>
      <param name="samplerName">Sampler name.</param>
      <returns>
        <para>Recorder object for the specified Sampler.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Profiling.Sampler">
      <summary>
        <para>Provides control over a CPU Profiler label.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Sampler.isValid">
      <summary>
        <para>Returns true if Sampler is valid. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Profiling.Sampler.name">
      <summary>
        <para>Sampler name. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Profiling.Sampler.Get(System.String)">
      <summary>
        <para>Returns Sampler object for the specific CPU Profiler label.</para>
      </summary>
      <param name="name">Profiler Sampler name.</param>
      <returns>
        <para>Sampler object which represents specific profiler label.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Sampler.GetNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Returns number and names of all registered Profiler labels.</para>
      </summary>
      <param name="names">Preallocated list the Sampler names are written to. Or null if you want to get number of Samplers only.</param>
      <returns>
        <para>Number of active Samplers.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Profiling.Sampler.GetRecorder">
      <summary>
        <para>Returns Recorder associated with the Sampler.</para>
      </summary>
      <returns>
        <para>Recorder object associated with the Sampler.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Projector">
      <summary>
        <para>A script interface for a.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.aspectRatio">
      <summary>
        <para>The aspect ratio of the projection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.farClipPlane">
      <summary>
        <para>The far clipping plane distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.fieldOfView">
      <summary>
        <para>The field of view of the projection in degrees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.ignoreLayers">
      <summary>
        <para>Which object layers are ignored by the projector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.material">
      <summary>
        <para>The material that will be projected onto every object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.nearClipPlane">
      <summary>
        <para>The near clipping plane distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.orthographic">
      <summary>
        <para>Is the projection orthographic (true) or perspective (false)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Projector.orthographicSize">
      <summary>
        <para>Projection's half-size when in orthographic mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PropertyAttribute">
      <summary>
        <para>Base class to derive custom property attributes from. Use this to create custom attributes for script variables.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PropertyAttribute.order">
      <summary>
        <para>Optional field to specify the order that multiple DecorationDrawers should be drawn in.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PropertyName">
      <summary>
        <para>Represents a string as an int for efficient lookup and comparison. Use this for common PropertyNames.

Internally stores just an int to represent the string. A PropertyName can be created from a string but can not be converted back to a string. The same string always results in the same int representing that string. Thus this is a very efficient string representation in both memory and speed when all you need is comparison.

PropertyName is serializable.

ToString() is only implemented for debugging purposes in the editor it returns "theName:3737" in the player it returns "Unknown:3737".</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PropertyName.#ctor(System.String)">
      <summary>
        <para>Initializes the PropertyName using a string.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.PropertyName.Equals(System.Object)">
      <summary>
        <para>Determines whether this instance and a specified object, which must also be a PropertyName object, have the same value.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="M:UnityEngine.PropertyName.GetHashCode">
      <summary>
        <para>Returns the hash code for this PropertyName.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.PropertyName.implop_PropertyName(string)(System.String)">
      <summary>
        <para>Converts the string passed into a PropertyName. See Also: PropertyName.ctor(System.String).</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.PropertyName.IsNullOrEmpty(UnityEngine.PropertyName)">
      <summary>
        <para>Indicates whether the specified PropertyName is an Empty string.</para>
      </summary>
      <param name="prop"></param>
    </member>
    <member name="?:UnityEngine.PropertyName.op_Equal(UnityEngine.PropertyName,UnityEngine.PropertyName)">
      <summary>
        <para>Determines whether two specified PropertyName have the same string value. Because two PropertyNames initialized with the same string value always have the same name index, we can simply perform a comparison of two ints to find out if the string value equals.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.PropertyName.op_NotEqual(UnityEngine.PropertyName,UnityEngine.PropertyName)">
      <summary>
        <para>Determines whether two specified PropertyName have a different string value.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.PropertyName.ToString">
      <summary>
        <para>For debugging purposes only. Returns the string value representing the string in the Editor.
Returns "UnityEngine.PropertyName" in the player.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.QualitySettings">
      <summary>
        <para>Script interface for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.activeColorSpace">
      <summary>
        <para>Active color space (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.anisotropicFiltering">
      <summary>
        <para>Global anisotropic filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.antiAliasing">
      <summary>
        <para>Set The AA Filtering option.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.asyncUploadBufferSize">
      <summary>
        <para>Async texture upload provides timesliced async texture upload on the render thread with tight control over memory and timeslicing. There are no allocations except for the ones which driver has to do. To read data and upload texture data a ringbuffer whose size can be controlled is re-used.

Use asyncUploadBufferSize to set the buffer size for asynchronous texture uploads. The size is in megabytes. Minimum value is 2 and maximum is 512. Although the buffer will resize automatically to fit the largest texture currently loading, it is recommended to set the value approximately to the size of biggest texture used in the scene to avoid re-sizing of the buffer which can incur performance cost.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.asyncUploadTimeSlice">
      <summary>
        <para>Async texture upload provides timesliced async texture upload on the render thread with tight control over memory and timeslicing. There are no allocations except for the ones which driver has to do. To read data and upload texture data a ringbuffer whose size can be controlled is re-used.

Use asyncUploadTimeSlice to set the time-slice in milliseconds for asynchronous texture uploads per
frame. Minimum value is 1 and maximum is 33.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.billboardsFaceCameraPosition">
      <summary>
        <para>If enabled, billboards will face towards camera position rather than camera orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.blendWeights">
      <summary>
        <para>Blend weights.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.desiredColorSpace">
      <summary>
        <para>Desired color space (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.lodBias">
      <summary>
        <para>Global multiplier for the LOD's switching distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.masterTextureLimit">
      <summary>
        <para>A texture size limit applied to all textures.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.maximumLODLevel">
      <summary>
        <para>A maximum LOD level. All LOD groups.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.maxQueuedFrames">
      <summary>
        <para>Maximum number of frames queued up by graphics driver.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.names">
      <summary>
        <para>The indexed list of available Quality Settings.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.particleRaycastBudget">
      <summary>
        <para>Budget for how many ray casts can be performed per frame for approximate collision testing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.pixelLightCount">
      <summary>
        <para>The maximum number of pixel lights that should affect any object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.realtimeReflectionProbes">
      <summary>
        <para>Enables realtime reflection probes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowCascade2Split">
      <summary>
        <para>The normalized cascade distribution for a 2 cascade setup. The value defines the position of the cascade with respect to Zero.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowCascade4Split">
      <summary>
        <para>The normalized cascade start position for a 4 cascade setup. Each member of the vector defines the normalized position of the coresponding cascade with respect to Zero.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowCascades">
      <summary>
        <para>Number of cascades to use for directional light shadows.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowDistance">
      <summary>
        <para>Shadow drawing distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowNearPlaneOffset">
      <summary>
        <para>Offset shadow frustum near plane.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowProjection">
      <summary>
        <para>Directional light shadow projection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadowResolution">
      <summary>
        <para>The default resolution of the shadow maps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.shadows">
      <summary>
        <para>Realtime Shadows type to be used.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.softParticles">
      <summary>
        <para>Should soft blending be used for particles?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.softVegetation">
      <summary>
        <para>Use a two-pass shader for the vegetation in the terrain engine.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.QualitySettings.vSyncCount">
      <summary>
        <para>The VSync Count.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.QualitySettings.DecreaseLevel(System.Boolean)">
      <summary>
        <para>Decrease the current quality level.</para>
      </summary>
      <param name="applyExpensiveChanges">Should expensive changes be applied (Anti-aliasing etc).</param>
    </member>
    <member name="M:UnityEngine.QualitySettings.GetQualityLevel">
      <summary>
        <para>Returns the current graphics quality level.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.QualitySettings.IncreaseLevel(System.Boolean)">
      <summary>
        <para>Increase the current quality level.</para>
      </summary>
      <param name="applyExpensiveChanges">Should expensive changes be applied (Anti-aliasing etc).</param>
    </member>
    <member name="M:UnityEngine.QualitySettings.SetQualityLevel(System.Int32,System.Boolean)">
      <summary>
        <para>Sets a new graphics quality level.</para>
      </summary>
      <param name="index">Quality index to set.</param>
      <param name="applyExpensiveChanges">Should expensive changes be applied (Anti-aliasing etc).</param>
    </member>
    <member name="T:UnityEngine.Quaternion">
      <summary>
        <para>Quaternions are used to represent rotations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Quaternion.eulerAngles">
      <summary>
        <para>Returns the euler angle representation of the rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Quaternion.identity">
      <summary>
        <para>The identity rotation (Read Only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Quaternion.w">
      <summary>
        <para>W component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Quaternion.x">
      <summary>
        <para>X component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Quaternion.y">
      <summary>
        <para>Y component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Quaternion.z">
      <summary>
        <para>Z component of the Quaternion. Don't modify this directly unless you know quaternions inside out.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Quaternion.Angle(UnityEngine.Quaternion,UnityEngine.Quaternion)">
      <summary>
        <para>Returns the angle in degrees between two rotations a and b.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.AngleAxis(System.Single,UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation which rotates angle degrees around axis.</para>
      </summary>
      <param name="angle"></param>
      <param name="axis"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Constructs new Quaternion with given x,y,z,w components.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="w"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.Dot(UnityEngine.Quaternion,UnityEngine.Quaternion)">
      <summary>
        <para>The dot product between two rotations.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.Euler(System.Single,System.Single,System.Single)">
      <summary>
        <para>Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.Euler(UnityEngine.Vector3)">
      <summary>
        <para>Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).</para>
      </summary>
      <param name="euler"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.FromToRotation(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation which rotates from fromDirection to toDirection.</para>
      </summary>
      <param name="fromDirection"></param>
      <param name="toDirection"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.Inverse(UnityEngine.Quaternion)">
      <summary>
        <para>Returns the Inverse of rotation.</para>
      </summary>
      <param name="rotation"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.Lerp(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Interpolates between a and b by t and normalizes the result afterwards. The parameter t is clamped to the range [0, 1].</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.LerpUnclamped(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Interpolates between a and b by t and normalizes the result afterwards. The parameter t is not clamped.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation with the specified forward and upwards directions.</para>
      </summary>
      <param name="forward">The direction to look in.</param>
      <param name="upwards">The vector that defines in which direction up is.</param>
    </member>
    <member name="M:UnityEngine.Quaternion.LookRotation(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation with the specified forward and upwards directions.</para>
      </summary>
      <param name="forward">The direction to look in.</param>
      <param name="upwards">The vector that defines in which direction up is.</param>
    </member>
    <member name="?:UnityEngine.Quaternion.op_Equal(UnityEngine.Quaternion,UnityEngine.Quaternion)">
      <summary>
        <para>Are two quaternions equal to each other?</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Quaternion.op_Multiply(UnityEngine.Quaternion,UnityEngine.Quaternion)">
      <summary>
        <para>Combines rotations lhs and rhs.</para>
      </summary>
      <param name="lhs">Left-hand side quaternion.</param>
      <param name="rhs">Right-hand side quaternion.</param>
    </member>
    <member name="?:UnityEngine.Quaternion.op_Multiply(UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Rotates the point point with rotation.</para>
      </summary>
      <param name="rotation"></param>
      <param name="point"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.RotateTowards(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Rotates a rotation from towards to.</para>
      </summary>
      <param name="from"></param>
      <param name="to"></param>
      <param name="maxDegreesDelta"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.Set(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Set x, y, z and w components of an existing Quaternion.</para>
      </summary>
      <param name="new_x"></param>
      <param name="new_y"></param>
      <param name="new_z"></param>
      <param name="new_w"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.SetFromToRotation(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation which rotates from fromDirection to toDirection.</para>
      </summary>
      <param name="fromDirection"></param>
      <param name="toDirection"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.SetLookRotation(UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation with the specified forward and upwards directions.</para>
      </summary>
      <param name="view">The direction to look in.</param>
      <param name="up">The vector that defines in which direction up is.</param>
    </member>
    <member name="M:UnityEngine.Quaternion.SetLookRotation(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a rotation with the specified forward and upwards directions.</para>
      </summary>
      <param name="view">The direction to look in.</param>
      <param name="up">The vector that defines in which direction up is.</param>
    </member>
    <member name="M:UnityEngine.Quaternion.Slerp(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Spherically interpolates between a and b by t. The parameter t is clamped to the range [0, 1].</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.SlerpUnclamped(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Spherically interpolates between a and b by t. The parameter t is not clamped.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="P:UnityEngine.Quaternion.this">
      <summary>
        <para>Access the x, y, z, w components using [0], [1], [2], [3] respectively.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Quaternion.ToAngleAxis(System.Single&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Converts a rotation to angle-axis representation (angles in degrees).</para>
      </summary>
      <param name="angle"></param>
      <param name="axis"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.ToString">
      <summary>
        <para>Returns a nicely formatted string of the Quaternion.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Quaternion.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string of the Quaternion.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.QueryTriggerInteraction">
      <summary>
        <para>Overrides the global Physics.queriesHitTriggers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueryTriggerInteraction.Collide">
      <summary>
        <para>Queries always report Trigger hits.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueryTriggerInteraction.Ignore">
      <summary>
        <para>Queries never report Trigger hits.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueryTriggerInteraction.UseGlobal">
      <summary>
        <para>Queries use the global Physics.queriesHitTriggers setting.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.QueueMode">
      <summary>
        <para>Used by Animation.Play function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueueMode.CompleteOthers">
      <summary>
        <para>Will start playing after all other animations have stopped playing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueueMode.PlayNow">
      <summary>
        <para>Starts playing immediately. This can be used if you just want to quickly create a duplicate animation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Random">
      <summary>
        <para>Class for generating random data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.insideUnitCircle">
      <summary>
        <para>Returns a random point inside a circle with radius 1 (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.insideUnitSphere">
      <summary>
        <para>Returns a random point inside a sphere with radius 1 (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.onUnitSphere">
      <summary>
        <para>Returns a random point on the surface of a sphere with radius 1 (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.rotation">
      <summary>
        <para>Returns a random rotation (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.rotationUniform">
      <summary>
        <para>Returns a random rotation with uniform distribution (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.state">
      <summary>
        <para>Gets/Sets the full internal state of the random number generator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Random.value">
      <summary>
        <para>Returns a random number between 0.0 [inclusive] and 1.0 [inclusive] (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Random.ColorHSV">
      <summary>
        <para>Generates a random color from HSV and alpha ranges.</para>
      </summary>
      <param name="hueMin">Minimum hue [0..1].</param>
      <param name="hueMax">Maximum hue [0..1].</param>
      <param name="saturationMin">Minimum saturation [0..1].</param>
      <param name="saturationMax">Maximum saturation[0..1].</param>
      <param name="valueMin">Minimum value [0..1].</param>
      <param name="valueMax">Maximum value [0..1].</param>
      <param name="alphaMin">Minimum alpha [0..1].</param>
      <param name="alphaMax">Maximum alpha [0..1].</param>
      <returns>
        <para>A random color with HSV and alpha values in the input ranges.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Random.ColorHSV(System.Single,System.Single)">
      <summary>
        <para>Generates a random color from HSV and alpha ranges.</para>
      </summary>
      <param name="hueMin">Minimum hue [0..1].</param>
      <param name="hueMax">Maximum hue [0..1].</param>
      <param name="saturationMin">Minimum saturation [0..1].</param>
      <param name="saturationMax">Maximum saturation[0..1].</param>
      <param name="valueMin">Minimum value [0..1].</param>
      <param name="valueMax">Maximum value [0..1].</param>
      <param name="alphaMin">Minimum alpha [0..1].</param>
      <param name="alphaMax">Maximum alpha [0..1].</param>
      <returns>
        <para>A random color with HSV and alpha values in the input ranges.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Random.ColorHSV(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Generates a random color from HSV and alpha ranges.</para>
      </summary>
      <param name="hueMin">Minimum hue [0..1].</param>
      <param name="hueMax">Maximum hue [0..1].</param>
      <param name="saturationMin">Minimum saturation [0..1].</param>
      <param name="saturationMax">Maximum saturation[0..1].</param>
      <param name="valueMin">Minimum value [0..1].</param>
      <param name="valueMax">Maximum value [0..1].</param>
      <param name="alphaMin">Minimum alpha [0..1].</param>
      <param name="alphaMax">Maximum alpha [0..1].</param>
      <returns>
        <para>A random color with HSV and alpha values in the input ranges.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Random.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Generates a random color from HSV and alpha ranges.</para>
      </summary>
      <param name="hueMin">Minimum hue [0..1].</param>
      <param name="hueMax">Maximum hue [0..1].</param>
      <param name="saturationMin">Minimum saturation [0..1].</param>
      <param name="saturationMax">Maximum saturation[0..1].</param>
      <param name="valueMin">Minimum value [0..1].</param>
      <param name="valueMax">Maximum value [0..1].</param>
      <param name="alphaMin">Minimum alpha [0..1].</param>
      <param name="alphaMax">Maximum alpha [0..1].</param>
      <returns>
        <para>A random color with HSV and alpha values in the input ranges.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Random.ColorHSV(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Generates a random color from HSV and alpha ranges.</para>
      </summary>
      <param name="hueMin">Minimum hue [0..1].</param>
      <param name="hueMax">Maximum hue [0..1].</param>
      <param name="saturationMin">Minimum saturation [0..1].</param>
      <param name="saturationMax">Maximum saturation[0..1].</param>
      <param name="valueMin">Minimum value [0..1].</param>
      <param name="valueMax">Maximum value [0..1].</param>
      <param name="alphaMin">Minimum alpha [0..1].</param>
      <param name="alphaMax">Maximum alpha [0..1].</param>
      <returns>
        <para>A random color with HSV and alpha values in the input ranges.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Random.InitState(System.Int32)">
      <summary>
        <para>Initializes the random number generator state with a seed.</para>
      </summary>
      <param name="seed">Seed used to initialize the random number generator.</param>
    </member>
    <member name="M:UnityEngine.Random.Range(System.Single,System.Single)">
      <summary>
        <para>Returns a random float number between and min [inclusive] and max [inclusive] (Read Only).</para>
      </summary>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="M:UnityEngine.Random.Range(System.Int32,System.Int32)">
      <summary>
        <para>Returns a random integer number between min [inclusive] and max [exclusive] (Read Only).</para>
      </summary>
      <param name="min"></param>
      <param name="max"></param>
    </member>
    <member name="T:UnityEngine.Random.State">
      <summary>
        <para>Serializable structure used to hold the full internal state of the random number generator. See Also: Random.state.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RangeAttribute">
      <summary>
        <para>Attribute used to make a float or int variable in a script be restricted to a specific range.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)">
      <summary>
        <para>Attribute used to make a float or int variable in a script be restricted to a specific range.</para>
      </summary>
      <param name="min">The minimum allowed value.</param>
      <param name="max">The maximum allowed value.</param>
    </member>
    <member name="T:UnityEngine.RangeInt">
      <summary>
        <para>Describes an integer range.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RangeInt.end">
      <summary>
        <para>The end index of the range (not inclusive).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RangeInt.length">
      <summary>
        <para>The length of the range.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RangeInt.start">
      <summary>
        <para>The starting index of the range, where 0 is the first position, 1 is the second, 2 is the third, and so on.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RangeInt.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Constructs a new RangeInt with given start, length values.</para>
      </summary>
      <param name="start">The starting index of the range.</param>
      <param name="length">The length of the range.</param>
    </member>
    <member name="T:UnityEngine.Ray">
      <summary>
        <para>Representation of rays.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ray.direction">
      <summary>
        <para>The direction of the ray.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ray.origin">
      <summary>
        <para>The origin point of the ray.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Ray.#ctor(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Creates a ray starting at origin along direction.</para>
      </summary>
      <param name="origin"></param>
      <param name="direction"></param>
    </member>
    <member name="M:UnityEngine.Ray.GetPoint(System.Single)">
      <summary>
        <para>Returns a point at distance units along the ray.</para>
      </summary>
      <param name="distance"></param>
    </member>
    <member name="M:UnityEngine.Ray.ToString">
      <summary>
        <para>Returns a nicely formatted string for this ray.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Ray.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for this ray.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.Ray2D">
      <summary>
        <para>A ray in 2D space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ray2D.direction">
      <summary>
        <para>The direction of the ray in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Ray2D.origin">
      <summary>
        <para>The starting point of the ray in world space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Ray2D.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Creates a 2D ray starting at origin along direction.</para>
      </summary>
      <param name="Vector2">origin</param>
      <param name="Vector2">direction</param>
      <param name="origin"></param>
      <param name="direction"></param>
    </member>
    <member name="M:UnityEngine.Ray2D.GetPoint(System.Single)">
      <summary>
        <para>Get a point that lies a given distance along a ray.</para>
      </summary>
      <param name="distance">Distance of the desired point along the path of the ray.</param>
    </member>
    <member name="T:UnityEngine.RaycastHit">
      <summary>
        <para>Structure used to get information back from a raycast.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.barycentricCoordinate">
      <summary>
        <para>The barycentric coordinate of the triangle we hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.collider">
      <summary>
        <para>The Collider that was hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.distance">
      <summary>
        <para>The distance from the ray's origin to the impact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.lightmapCoord">
      <summary>
        <para>The uv lightmap coordinate at the impact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.normal">
      <summary>
        <para>The normal of the surface the ray hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.point">
      <summary>
        <para>The impact point in world space where the ray hit the collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.rigidbody">
      <summary>
        <para>The Rigidbody of the collider that was hit. If the collider is not attached to a rigidbody then it is null.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.textureCoord">
      <summary>
        <para>The uv texture coordinate at the collision location.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.textureCoord2">
      <summary>
        <para>The secondary uv texture coordinate at the impact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.transform">
      <summary>
        <para>The Transform of the rigidbody or collider that was hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit.triangleIndex">
      <summary>
        <para>The index of the triangle that was hit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RaycastHit2D">
      <summary>
        <para>Information returned about an object detected by a raycast in 2D physics.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.centroid">
      <summary>
        <para>The centroid of the primitive used to perform the cast.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.collider">
      <summary>
        <para>The collider hit by the ray.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.distance">
      <summary>
        <para>The distance from the ray origin to the impact point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.fraction">
      <summary>
        <para>Fraction of the distance along the ray that the hit occurred.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.normal">
      <summary>
        <para>The normal vector of the surface hit by the ray.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.point">
      <summary>
        <para>The point in world space where the ray hit the collider's surface.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.rigidbody">
      <summary>
        <para>The Rigidbody2D attached to the object that was hit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.transform">
      <summary>
        <para>The Transform of the object that was hit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rect">
      <summary>
        <para>A 2D Rectangle defined by X and Y position, width and height.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.center">
      <summary>
        <para>The position of the center of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.height">
      <summary>
        <para>The height of the rectangle, measured from the Y position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.max">
      <summary>
        <para>The position of the maximum corner of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.min">
      <summary>
        <para>The position of the minimum corner of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.position">
      <summary>
        <para>The X and Y position of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.size">
      <summary>
        <para>The width and height of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.width">
      <summary>
        <para>The width of the rectangle, measured from the X position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.x">
      <summary>
        <para>The X coordinate of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.xMax">
      <summary>
        <para>The maximum X coordinate of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.xMin">
      <summary>
        <para>The minimum X coordinate of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.y">
      <summary>
        <para>The Y coordinate of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.yMax">
      <summary>
        <para>The maximum Y coordinate of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.yMin">
      <summary>
        <para>The minimum Y coordinate of the rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rect.zero">
      <summary>
        <para>Shorthand for writing new Rect(0,0,0,0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rect.Contains(UnityEngine.Vector2)">
      <summary>
        <para>Returns true if the x and y components of point is a point inside this rectangle. If allowInverse is present and true, the width and height of the Rect are allowed to take negative values (ie, the min value is greater than the max), and the test will still work.</para>
      </summary>
      <param name="point">Point to test.</param>
      <param name="allowInverse">Does the test allow the Rect's width and height to be negative?</param>
      <returns>
        <para>True if the point lies within the specified rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rect.Contains(UnityEngine.Vector3)">
      <summary>
        <para>Returns true if the x and y components of point is a point inside this rectangle. If allowInverse is present and true, the width and height of the Rect are allowed to take negative values (ie, the min value is greater than the max), and the test will still work.</para>
      </summary>
      <param name="point">Point to test.</param>
      <param name="allowInverse">Does the test allow the Rect's width and height to be negative?</param>
      <returns>
        <para>True if the point lies within the specified rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rect.Contains(UnityEngine.Vector3,System.Boolean)">
      <summary>
        <para>Returns true if the x and y components of point is a point inside this rectangle. If allowInverse is present and true, the width and height of the Rect are allowed to take negative values (ie, the min value is greater than the max), and the test will still work.</para>
      </summary>
      <param name="point">Point to test.</param>
      <param name="allowInverse">Does the test allow the Rect's width and height to be negative?</param>
      <returns>
        <para>True if the point lies within the specified rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rect.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a new rectangle.</para>
      </summary>
      <param name="x">The X value the rect is measured from.</param>
      <param name="y">The Y value the rect is measured from.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
    </member>
    <member name="M:UnityEngine.Rect.#ctor(UnityEngine.Rect)">
      <summary>
        <para></para>
      </summary>
      <param name="source"></param>
    </member>
    <member name="M:UnityEngine.Rect.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Creates a rectangle given a size and position.</para>
      </summary>
      <param name="position">The position of the minimum corner of the rect.</param>
      <param name="size">The width and height of the rect.</param>
    </member>
    <member name="M:UnityEngine.Rect.MinMaxRect(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a rectangle from min/max coordinate values.</para>
      </summary>
      <param name="xmin">The minimum X coordinate.</param>
      <param name="ymin">The minimum Y coordinate.</param>
      <param name="xmax">The maximum X coordinate.</param>
      <param name="ymax">The maximum Y coordinate.</param>
      <returns>
        <para>A rectangle matching the specified coordinates.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rect.NormalizedToPoint(UnityEngine.Rect,UnityEngine.Vector2)">
      <summary>
        <para>Returns a point inside a rectangle, given normalized coordinates.</para>
      </summary>
      <param name="rectangle">Rectangle to get a point inside.</param>
      <param name="normalizedRectCoordinates">Normalized coordinates to get a point for.</param>
    </member>
    <member name="?:UnityEngine.Rect.op_Equal(UnityEngine.Rect,UnityEngine.Rect)">
      <summary>
        <para>Returns true if the rectangles are the same.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Rect.Overlaps(UnityEngine.Rect)">
      <summary>
        <para>Returns true if the other rectangle overlaps this one. If allowInverse is present and true, the widths and heights of the Rects are allowed to take negative values (ie, the min value is greater than the max), and the test will still work.</para>
      </summary>
      <param name="other">Other rectangle to test overlapping with.</param>
      <param name="allowInverse">Does the test allow the widths and heights of the Rects to be negative?</param>
    </member>
    <member name="M:UnityEngine.Rect.Overlaps(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Returns true if the other rectangle overlaps this one. If allowInverse is present and true, the widths and heights of the Rects are allowed to take negative values (ie, the min value is greater than the max), and the test will still work.</para>
      </summary>
      <param name="other">Other rectangle to test overlapping with.</param>
      <param name="allowInverse">Does the test allow the widths and heights of the Rects to be negative?</param>
    </member>
    <member name="M:UnityEngine.Rect.PointToNormalized(UnityEngine.Rect,UnityEngine.Vector2)">
      <summary>
        <para>Returns the normalized coordinates cooresponding the the point.</para>
      </summary>
      <param name="rectangle">Rectangle to get normalized coordinates inside.</param>
      <param name="point">A point inside the rectangle to get normalized coordinates for.</param>
    </member>
    <member name="M:UnityEngine.Rect.Set(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Set components of an existing Rect.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="M:UnityEngine.Rect.ToString">
      <summary>
        <para>Returns a nicely formatted string for this Rect.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Rect.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for this Rect.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.RectOffset">
      <summary>
        <para>Offsets for rectangles, borders, etc.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectOffset.bottom">
      <summary>
        <para>Bottom edge size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectOffset.horizontal">
      <summary>
        <para>Shortcut for left + right. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectOffset.left">
      <summary>
        <para>Left edge size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectOffset.right">
      <summary>
        <para>Right edge size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectOffset.top">
      <summary>
        <para>Top edge size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectOffset.vertical">
      <summary>
        <para>Shortcut for top + bottom. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RectOffset.Add(UnityEngine.Rect)">
      <summary>
        <para>Add the border offsets to a rect.</para>
      </summary>
      <param name="rect"></param>
    </member>
    <member name="M:UnityEngine.RectOffset.#ctor">
      <summary>
        <para>Creates a new rectangle with offsets.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
      <param name="top"></param>
      <param name="bottom"></param>
    </member>
    <member name="M:UnityEngine.RectOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a new rectangle with offsets.</para>
      </summary>
      <param name="left"></param>
      <param name="right"></param>
      <param name="top"></param>
      <param name="bottom"></param>
    </member>
    <member name="M:UnityEngine.RectOffset.Remove(UnityEngine.Rect)">
      <summary>
        <para>Remove the border offsets from a rect.</para>
      </summary>
      <param name="rect"></param>
    </member>
    <member name="T:UnityEngine.RectTransform">
      <summary>
        <para>Position, size, anchor and pivot information for a rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.anchoredPosition">
      <summary>
        <para>The position of the pivot of this RectTransform relative to the anchor reference point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.anchoredPosition3D">
      <summary>
        <para>The 3D position of the pivot of this RectTransform relative to the anchor reference point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.anchorMax">
      <summary>
        <para>The normalized position in the parent RectTransform that the upper right corner is anchored to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.anchorMin">
      <summary>
        <para>The normalized position in the parent RectTransform that the lower left corner is anchored to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.offsetMax">
      <summary>
        <para>The offset of the upper right corner of the rectangle relative to the upper right anchor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.offsetMin">
      <summary>
        <para>The offset of the lower left corner of the rectangle relative to the lower left anchor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.pivot">
      <summary>
        <para>The normalized position in this RectTransform that it rotates around.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.RectTransform.reapplyDrivenProperties(UnityEngine.RectTransform/ReapplyDrivenProperties)">
      <summary>
        <para>Event that is invoked for RectTransforms that need to have their driven properties reapplied.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.RectTransform.rect">
      <summary>
        <para>The calculated rectangle in the local space of the Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RectTransform.sizeDelta">
      <summary>
        <para>The size of this RectTransform relative to the distances between the anchors.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RectTransform.Axis">
      <summary>
        <para>An axis that can be horizontal or vertical.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RectTransform.Axis.Horizontal">
      <summary>
        <para>Horizontal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RectTransform.Axis.Vertical">
      <summary>
        <para>Vertical.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RectTransform.Edge">
      <summary>
        <para>Enum used to specify one edge of a rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RectTransform.Edge.Bottom">
      <summary>
        <para>The bottom edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RectTransform.Edge.Left">
      <summary>
        <para>The left edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RectTransform.Edge.Right">
      <summary>
        <para>The right edge.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RectTransform.Edge.Top">
      <summary>
        <para>The top edge.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RectTransform.GetLocalCorners(UnityEngine.Vector3[])">
      <summary>
        <para>Get the corners of the calculated rectangle in the local space of its Transform.</para>
      </summary>
      <param name="fourCornersArray">The array that corners are filled into.</param>
    </member>
    <member name="M:UnityEngine.RectTransform.GetWorldCorners(UnityEngine.Vector3[])">
      <summary>
        <para>Get the corners of the calculated rectangle in world space.</para>
      </summary>
      <param name="fourCornersArray">The ray that corners are filled into.</param>
    </member>
    <member name="T:UnityEngine.RectTransform.ReapplyDrivenProperties">
      <summary>
        <para>Delegate used for the reapplyDrivenProperties event.</para>
      </summary>
      <param name="driven"></param>
    </member>
    <member name="M:UnityEngine.RectTransform.SetInsetAndSizeFromParentEdge(UnityEngine.RectTransform/Edge,System.Single,System.Single)">
      <summary>
        <para>Set the distance of this rectangle relative to a specified edge of the parent rectangle, while also setting its size.</para>
      </summary>
      <param name="edge">The edge of the parent rectangle to inset from.</param>
      <param name="inset">The inset distance.</param>
      <param name="size">The size of the rectangle along the same direction of the inset.</param>
    </member>
    <member name="M:UnityEngine.RectTransform.SetSizeWithCurrentAnchors(UnityEngine.RectTransform/Axis,System.Single)">
      <summary>
        <para>Makes the RectTransform calculated rect be a given size on the specified axis.</para>
      </summary>
      <param name="axis">The axis to specify the size along.</param>
      <param name="size">The desired size along the specified axis.</param>
    </member>
    <member name="T:UnityEngine.RectTransformUtility">
      <summary>
        <para>Utility class containing helper methods for working with  RectTransform.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.FlipLayoutAxes(UnityEngine.RectTransform,System.Boolean,System.Boolean)">
      <summary>
        <para>Flips the horizontal and vertical axes of the RectTransform size and alignment, and optionally its children as well.</para>
      </summary>
      <param name="rect">The RectTransform to flip.</param>
      <param name="keepPositioning">Flips around the pivot if true. Flips within the parent rect if false.</param>
      <param name="recursive">Flip the children as well?</param>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.FlipLayoutOnAxis(UnityEngine.RectTransform,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Flips the alignment of the RectTransform along the horizontal or vertical axis, and optionally its children as well.</para>
      </summary>
      <param name="rect">The RectTransform to flip.</param>
      <param name="keepPositioning">Flips around the pivot if true. Flips within the parent rect if false.</param>
      <param name="recursive">Flip the children as well?</param>
      <param name="axis">The axis to flip along. 0 is horizontal and 1 is vertical.</param>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.PixelAdjustPoint(UnityEngine.Vector2,UnityEngine.Transform,UnityEngine.Canvas)">
      <summary>
        <para>Convert a given point in screen space into a pixel correct point.</para>
      </summary>
      <param name="point"></param>
      <param name="elementTransform"></param>
      <param name="canvas"></param>
      <returns>
        <para>Pixel adjusted point.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.PixelAdjustRect(UnityEngine.RectTransform,UnityEngine.Canvas)">
      <summary>
        <para>Given a rect transform, return the corner points in pixel accurate coordinates.</para>
      </summary>
      <param name="rectTransform"></param>
      <param name="canvas"></param>
      <returns>
        <para>Pixel adjusted rect.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.RectangleContainsScreenPoint(UnityEngine.RectTransform,UnityEngine.Vector2,UnityEngine.Camera)">
      <summary>
        <para>Does the RectTransform contain the screen point as seen from the given camera?</para>
      </summary>
      <param name="rect">The RectTransform to test with.</param>
      <param name="screenPoint">The screen point to test.</param>
      <param name="cam">The camera from which the test is performed from. (Optional)</param>
      <returns>
        <para>True if the point is inside the rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.ScreenPointToLocalPointInRectangle(UnityEngine.RectTransform,UnityEngine.Vector2,UnityEngine.Camera,UnityEngine.Vector2&amp;)">
      <summary>
        <para>Transform a screen space point to a position in the local space of a RectTransform that is on the plane of its rectangle.</para>
      </summary>
      <param name="rect">The RectTransform to find a point inside.</param>
      <param name="cam">The camera associated with the screen space position.</param>
      <param name="screenPoint">Screen space position.</param>
      <param name="localPoint">Point in local space of the rect transform.</param>
      <returns>
        <para>Returns true if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.RectTransformUtility.ScreenPointToWorldPointInRectangle(UnityEngine.RectTransform,UnityEngine.Vector2,UnityEngine.Camera,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Transform a screen space point to a position in world space that is on the plane of the given RectTransform.</para>
      </summary>
      <param name="rect">The RectTransform to find a point inside.</param>
      <param name="cam">The camera associated with the screen space position.</param>
      <param name="screenPoint">Screen space position.</param>
      <param name="worldPoint">Point in world space.</param>
      <returns>
        <para>Returns true if the plane of the RectTransform is hit, regardless of whether the point is inside the rectangle.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ReflectionProbe">
      <summary>
        <para>The reflection probe is used to capture the surroundings into a texture which is passed to the shaders and used for reflections.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.backgroundColor">
      <summary>
        <para>The color with which the texture of reflection probe will be cleared.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.bakedTexture">
      <summary>
        <para>Reference to the baked texture of the reflection probe's surrounding.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.blendDistance">
      <summary>
        <para>Distance around probe used for blending (used in deferred probes).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.bounds">
      <summary>
        <para>The bounding volume of the reflection probe (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.boxProjection">
      <summary>
        <para>Should this reflection probe use box projection?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.center">
      <summary>
        <para>The center of the box area in which reflections will be applied to the objects. Measured in the probes's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.clearFlags">
      <summary>
        <para>How the reflection probe clears the background.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.cullingMask">
      <summary>
        <para>This is used to render parts of the reflecion probe's surrounding selectively.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.customBakedTexture">
      <summary>
        <para>Reference to the baked texture of the reflection probe's surrounding. Use this to assign custom reflection texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.defaultTexture">
      <summary>
        <para>Texture which is used outside of all reflection probes (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.defaultTextureHDRDecodeValues">
      <summary>
        <para>HDR decode values of the default reflection probe texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.farClipPlane">
      <summary>
        <para>The far clipping plane distance when rendering the probe.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.hdr">
      <summary>
        <para>Should this reflection probe use HDR rendering?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.importance">
      <summary>
        <para>Reflection probe importance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.intensity">
      <summary>
        <para>The intensity modifier that is applied to the texture of reflection probe in the shader.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.mode">
      <summary>
        <para>Should reflection probe texture be generated in the Editor (ReflectionProbeMode.Baked) or should probe use custom specified texure (ReflectionProbeMode.Custom)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.nearClipPlane">
      <summary>
        <para>The near clipping plane distance when rendering the probe.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.refreshMode">
      <summary>
        <para>Sets the way the probe will refresh.

See Also: ReflectionProbeRefreshMode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.resolution">
      <summary>
        <para>Resolution of the underlying reflection texture in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.shadowDistance">
      <summary>
        <para>Shadow drawing distance when rendering the probe.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.size">
      <summary>
        <para>The size of the box area in which reflections will be applied to the objects. Measured in the probes's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.texture">
      <summary>
        <para>Texture which is passed to the shader of the objects in the vicinity of the reflection probe (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.textureHDRDecodeValues">
      <summary>
        <para>HDR decode values of the reflection probe texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ReflectionProbe.timeSlicingMode">
      <summary>
        <para>Sets this probe time-slicing mode

See Also: ReflectionProbeTimeSlicingMode.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ReflectionProbe.BlendCubemap(UnityEngine.Texture,UnityEngine.Texture,System.Single,UnityEngine.RenderTexture)">
      <summary>
        <para>Utility method to blend 2 cubemaps into a target render texture.</para>
      </summary>
      <param name="src">Cubemap to blend from.</param>
      <param name="dst">Cubemap to blend to.</param>
      <param name="blend">Blend weight.</param>
      <param name="target">RenderTexture which will hold the result of the blend.</param>
      <returns>
        <para>Returns trues if cubemaps were blended, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ReflectionProbe.IsFinishedRendering(System.Int32)">
      <summary>
        <para>Checks if a probe has finished a time-sliced render.</para>
      </summary>
      <param name="renderId">An integer representing the RenderID as returned by the RenderProbe method.</param>
      <returns>
        <para>
          True if the render has finished, false otherwise.

          See Also: timeSlicingMode
        </para>
      </returns>
    </member>
    <member name="M:UnityEngine.ReflectionProbe.RenderProbe(UnityEngine.RenderTexture)">
      <summary>
        <para>Refreshes the probe's cubemap.</para>
      </summary>
      <param name="targetTexture">Target RendeTexture in which rendering should be done. Specifying null will update the probe's default texture.</param>
      <returns>
        <para>
          An integer representing a RenderID which can subsequently be used to check if the probe has finished rendering while rendering in time-slice mode.

          See Also: IsFinishedRendering
          See Also: timeSlicingMode
        </para>
      </returns>
    </member>
    <member name="T:UnityEngine.RelativeJoint2D">
      <summary>
        <para>Keeps two Rigidbody2D at their relative orientations.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.angularOffset">
      <summary>
        <para>The current angular offset between the Rigidbody2D that the joint connects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.autoConfigureOffset">
      <summary>
        <para>Should both the linearOffset and angularOffset be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.correctionScale">
      <summary>
        <para>Scales both the linear and angular forces used to correct the required relative orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.linearOffset">
      <summary>
        <para>The current linear offset between the Rigidbody2D that the joint connects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.maxForce">
      <summary>
        <para>The maximum force that can be generated when trying to maintain the relative joint constraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.maxTorque">
      <summary>
        <para>The maximum torque that can be generated when trying to maintain the relative joint constraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.target">
      <summary>
        <para>The world-space position that is currently trying to be maintained.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RemoteSettings">
      <summary>
        <para>Accesses remote settings (common for all game instances).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetBool(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetCount">
      <summary>
        <para>Returns number of keys in remote settings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetFloat(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetFloat(System.String,System.Single)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetInt(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetInt(System.String,System.Int32)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetKeys">
      <summary>
        <para>Returns all the keys in remote settings.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetString(System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.GetString(System.String,System.String)">
      <summary>
        <para>Returns the value corresponding to key in the remote settings if it exists.</para>
      </summary>
      <param name="key"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:UnityEngine.RemoteSettings.HasKey(System.String)">
      <summary>
        <para>Returns true if key exists in the remote settings.</para>
      </summary>
      <param name="key"></param>
    </member>
    <member name="?:UnityEngine.RemoteSettings.Updated(UnityEngine.RemoteSettings/UpdatedEventHandler)">
      <summary>
        <para>This event occurs when a new RemoteSettings is fetched and successfully parsed from the server.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.RemoteSettings.UpdatedEventHandler">
      <summary>
        <para>This event occurs when a new RemoteSettings is fetched and successfully parsed from the server.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RenderBuffer">
      <summary>
        <para>Color or depth buffer part of a RenderTexture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderBuffer.GetNativeRenderBufferPtr">
      <summary>
        <para>Returns native RenderBuffer. Be warned this is not native Texture, but rather pointer to unity struct that can be used with native unity API. Currently such API exists only on iOS.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Renderer">
      <summary>
        <para>General functionality for all renderers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.bounds">
      <summary>
        <para>The bounding volume of the renderer (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.enabled">
      <summary>
        <para>Makes the rendered 3D object visible if enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.isPartOfStaticBatch">
      <summary>
        <para>Has this renderer been statically batched with any other renderers?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.isVisible">
      <summary>
        <para>Is this renderer visible in any camera? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.lightmapIndex">
      <summary>
        <para>The index of the baked lightmap applied to this renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.lightmapScaleOffset">
      <summary>
        <para>The UV scale &amp; offset used for a lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.lightProbeProxyVolumeOverride">
      <summary>
        <para>If set, the Renderer will use the Light Probe Proxy Volume component attached to the source GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.lightProbeUsage">
      <summary>
        <para>The light probe interpolation type.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.localToWorldMatrix">
      <summary>
        <para>Matrix that transforms a point from local space into world space (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.material">
      <summary>
        <para>Returns the first instantiated Material assigned to the renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.materials">
      <summary>
        <para>Returns all the instantiated materials of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.motionVectorGenerationMode">
      <summary>
        <para>Specifies the mode for motion vector rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.motionVectors">
      <summary>
        <para>Specifies whether this renderer has a per-object motion vector pass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.probeAnchor">
      <summary>
        <para>If set, Renderer will use this Transform's position to find the light or reflection probe.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.realtimeLightmapIndex">
      <summary>
        <para>The index of the realtime lightmap applied to this renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.realtimeLightmapScaleOffset">
      <summary>
        <para>The UV scale &amp; offset used for a realtime lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.receiveShadows">
      <summary>
        <para>Does this object receive shadows?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.reflectionProbeUsage">
      <summary>
        <para>Should reflection probes be used for this Renderer?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.shadowCastingMode">
      <summary>
        <para>Does this object cast shadows?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.sharedMaterial">
      <summary>
        <para>The shared material of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.sharedMaterials">
      <summary>
        <para>All the shared materials of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.sortingLayerID">
      <summary>
        <para>Unique ID of the Renderer's sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.sortingLayerName">
      <summary>
        <para>Name of the Renderer's sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.sortingOrder">
      <summary>
        <para>Renderer's order within a sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.useLightProbes">
      <summary>
        <para>Should light probes be used for this Renderer?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Renderer.worldToLocalMatrix">
      <summary>
        <para>Matrix that transforms a point from world space into local space (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Renderer.GetClosestReflectionProbes(System.Collections.Generic.List`1&lt;UnityEngine.Rendering.ReflectionProbeBlendInfo&gt;)">
      <summary>
        <para>Returns an array of closest reflection probes with weights, weight shows how much influence the probe has on the renderer, this value is also used when blending between reflection probes occur.</para>
      </summary>
      <param name="result"></param>
    </member>
    <member name="M:UnityEngine.Renderer.GetPropertyBlock(UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Get per-renderer material property block.</para>
      </summary>
      <param name="dest"></param>
    </member>
    <member name="M:UnityEngine.Renderer.SetPropertyBlock(UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Lets you add per-renderer material parameters without duplicating a material.</para>
      </summary>
      <param name="properties"></param>
    </member>
    <member name="T:UnityEngine.RendererExtensions">
      <summary>
        <para>Extension methods to the Renderer class, used only for the UpdateGIMaterials method used by the Global Illumination System.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RendererExtensions.UpdateGIMaterials(UnityEngine.Renderer)">
      <summary>
        <para>Schedules an update of the albedo and emissive Textures of a system that contains the Renderer.</para>
      </summary>
      <param name="renderer"></param>
    </member>
    <member name="T:UnityEngine.Rendering.AmbientMode">
      <summary>
        <para>Ambient lighting mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.AmbientMode.Custom">
      <summary>
        <para>Ambient lighting is defined by a custom cubemap.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.AmbientMode.Flat">
      <summary>
        <para>Flat ambient lighting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.AmbientMode.Skybox">
      <summary>
        <para>Skybox-based or custom ambient lighting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.AmbientMode.Trilight">
      <summary>
        <para>Trilight ambient lighting.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.BlendMode">
      <summary>
        <para>Blend mode for controlling the blending.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.DstAlpha">
      <summary>
        <para>Blend factor is (Ad, Ad, Ad, Ad).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.DstColor">
      <summary>
        <para>Blend factor is (Rd, Gd, Bd, Ad).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.One">
      <summary>
        <para>Blend factor is (1, 1, 1, 1).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.OneMinusDstAlpha">
      <summary>
        <para>Blend factor is (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.OneMinusDstColor">
      <summary>
        <para>Blend factor is (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.OneMinusSrcAlpha">
      <summary>
        <para>Blend factor is (1 - As, 1 - As, 1 - As, 1 - As).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.OneMinusSrcColor">
      <summary>
        <para>Blend factor is (1 - Rs, 1 - Gs, 1 - Bs, 1 - As).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.SrcAlpha">
      <summary>
        <para>Blend factor is (As, As, As, As).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.SrcAlphaSaturate">
      <summary>
        <para>Blend factor is (f, f, f, 1); where f = min(As, 1 - Ad).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.SrcColor">
      <summary>
        <para>Blend factor is (Rs, Gs, Bs, As).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendMode.Zero">
      <summary>
        <para>Blend factor is  (0, 0, 0, 0).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.BlendOp">
      <summary>
        <para>Blend operation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Add">
      <summary>
        <para>Add (s + d).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.ColorBurn">
      <summary>
        <para>Color burn (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.ColorDodge">
      <summary>
        <para>Color dodge (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Darken">
      <summary>
        <para>Darken (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Difference">
      <summary>
        <para>Difference (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Exclusion">
      <summary>
        <para>Exclusion (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.HardLight">
      <summary>
        <para>Hard light (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.HSLColor">
      <summary>
        <para>HSL color (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.HSLHue">
      <summary>
        <para>HSL Hue (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.HSLLuminosity">
      <summary>
        <para>HSL luminosity (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.HSLSaturation">
      <summary>
        <para>HSL saturation (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Lighten">
      <summary>
        <para>Lighten (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalAnd">
      <summary>
        <para>Logical AND (s &amp; d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalAndInverted">
      <summary>
        <para>Logical inverted AND (!s &amp; d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalAndReverse">
      <summary>
        <para>Logical reverse AND (s &amp; !d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalClear">
      <summary>
        <para>Logical Clear (0).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalCopy">
      <summary>
        <para>Logical Copy (s) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalCopyInverted">
      <summary>
        <para>Logical inverted Copy (!s) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalEquivalence">
      <summary>
        <para>Logical Equivalence !(s XOR d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalInvert">
      <summary>
        <para>Logical Inverse (!d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalNand">
      <summary>
        <para>Logical NAND !(s &amp; d). D3D11.1 only.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalNoop">
      <summary>
        <para>Logical No-op (d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalNor">
      <summary>
        <para>Logical NOR !(s | d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalOr">
      <summary>
        <para>Logical OR (s | d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalOrInverted">
      <summary>
        <para>Logical inverted OR (!s | d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalOrReverse">
      <summary>
        <para>Logical reverse OR (s | !d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalSet">
      <summary>
        <para>Logical SET (1) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.LogicalXor">
      <summary>
        <para>Logical XOR (s XOR d) (D3D11.1 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Max">
      <summary>
        <para>Max.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Min">
      <summary>
        <para>Min.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Multiply">
      <summary>
        <para>Multiply (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Overlay">
      <summary>
        <para>Overlay (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.ReverseSubtract">
      <summary>
        <para>Reverse subtract.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Screen">
      <summary>
        <para>Screen (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.SoftLight">
      <summary>
        <para>Soft light (Advanced OpenGL blending).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BlendOp.Subtract">
      <summary>
        <para>Subtract.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.BuiltinRenderTextureType">
      <summary>
        <para>Built-in temporary render textures produced during camera's rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.CameraTarget">
      <summary>
        <para>Target texture of currently rendering camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.CurrentActive">
      <summary>
        <para>Currently active render target.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.Depth">
      <summary>
        <para>Camera's depth texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.DepthNormals">
      <summary>
        <para>Camera's depth+normals texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer0">
      <summary>
        <para>Deferred shading G-buffer #0 (typically diffuse color).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer1">
      <summary>
        <para>Deferred shading G-buffer #1 (typically specular + roughness).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer2">
      <summary>
        <para>Deferred shading G-buffer #2 (typically normals).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer3">
      <summary>
        <para>Deferred shading G-buffer #3 (typically emission/lighting).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer4">
      <summary>
        <para>Deferred shading G-buffer #4 (typically occlusion mask for static lights if any).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer5">
      <summary>
        <para>G-buffer #5 Available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer6">
      <summary>
        <para>G-buffer #6 Available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.GBuffer7">
      <summary>
        <para>G-buffer #7 Available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.MotionVectors">
      <summary>
        <para>Motion Vectors generated when the camera has motion vectors enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.PrepassLight">
      <summary>
        <para>Deferred lighting light buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.PrepassLightSpec">
      <summary>
        <para>Deferred lighting HDR specular light buffer (Xbox 360 only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.PrepassNormalsSpec">
      <summary>
        <para>Deferred lighting (normals+specular) G-buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.Reflections">
      <summary>
        <para>Reflections gathered from default reflection and reflections probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinRenderTextureType.ResolvedDepth">
      <summary>
        <para>Resolved depth buffer from deferred.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.BuiltinShaderMode">
      <summary>
        <para>Built-in shader modes used by Rendering.GraphicsSettings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderMode.Disabled">
      <summary>
        <para>Don't use any shader, effectively disabling the functionality.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderMode.UseBuiltin">
      <summary>
        <para>Use built-in shader (default).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderMode.UseCustom">
      <summary>
        <para>Use custom shader instead of built-in one.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.BuiltinShaderType">
      <summary>
        <para>Built-in shader types used by Rendering.GraphicsSettings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.DeferredReflections">
      <summary>
        <para>Shader used for deferred reflection probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.DeferredShading">
      <summary>
        <para>Shader used for deferred shading calculations.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.DepthNormals">
      <summary>
        <para>Shader used for depth and normals texture when enabled on a Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.LegacyDeferredLighting">
      <summary>
        <para>Shader used for legacy deferred lighting calculations.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.LensFlare">
      <summary>
        <para>Default shader used for lens flares.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.LightHalo">
      <summary>
        <para>Default shader used for light halos.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.MotionVectors">
      <summary>
        <para>Shader used for Motion Vectors when enabled on a Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.BuiltinShaderType.ScreenSpaceShadows">
      <summary>
        <para>Shader used for screen-space cascaded shadows.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.CameraEvent">
      <summary>
        <para>Defines a place in camera's rendering to attach Rendering.CommandBuffer objects to.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterDepthNormalsTexture">
      <summary>
        <para>After camera's depth+normals texture is generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterDepthTexture">
      <summary>
        <para>After camera's depth texture is generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterEverything">
      <summary>
        <para>After camera has done rendering everything.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterFinalPass">
      <summary>
        <para>After final geometry pass in deferred lighting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterForwardAlpha">
      <summary>
        <para>After transparent objects in forward rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterForwardOpaque">
      <summary>
        <para>After opaque objects in forward rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterGBuffer">
      <summary>
        <para>After deferred rendering G-buffer is rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterImageEffects">
      <summary>
        <para>After image effects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterImageEffectsOpaque">
      <summary>
        <para>After image effects that happen between opaque &amp; transparent objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterLighting">
      <summary>
        <para>After lighting pass in deferred rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterReflections">
      <summary>
        <para>After reflections pass in deferred rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.AfterSkybox">
      <summary>
        <para>After skybox is drawn.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeDepthNormalsTexture">
      <summary>
        <para>Before camera's depth+normals texture is generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeDepthTexture">
      <summary>
        <para>Before camera's depth texture is generated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeFinalPass">
      <summary>
        <para>Before final geometry pass in deferred lighting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeForwardAlpha">
      <summary>
        <para>Before transparent objects in forward rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeForwardOpaque">
      <summary>
        <para>Before opaque objects in forward rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeGBuffer">
      <summary>
        <para>Before deferred rendering G-buffer is rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeImageEffects">
      <summary>
        <para>Before image effects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeImageEffectsOpaque">
      <summary>
        <para>Before image effects that happen between opaque &amp; transparent objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeLighting">
      <summary>
        <para>Before lighting pass in deferred rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeReflections">
      <summary>
        <para>Before reflections pass in deferred rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraEvent.BeforeSkybox">
      <summary>
        <para>Before skybox is drawn.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.CameraHDRMode">
      <summary>
        <para>The HDR mode to use for rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraHDRMode.FP16">
      <summary>
        <para>Uses RenderTextureFormat.ARGBHalf.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CameraHDRMode.R11G11B10">
      <summary>
        <para>Uses RenderTextureFormat.RGB111110Float.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ColorWriteMask">
      <summary>
        <para>Specifies which color components will get written into the target framebuffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ColorWriteMask.All">
      <summary>
        <para>Write all components (R, G, B and Alpha).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ColorWriteMask.Alpha">
      <summary>
        <para>Write alpha component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ColorWriteMask.Blue">
      <summary>
        <para>Write blue component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ColorWriteMask.Green">
      <summary>
        <para>Write green component.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ColorWriteMask.Red">
      <summary>
        <para>Write red component.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.CommandBuffer">
      <summary>
        <para>List of graphics commands to execute.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.CommandBuffer.name">
      <summary>
        <para>Name of this command buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.CommandBuffer.sizeInBytes">
      <summary>
        <para>Size of this command buffer in bytes (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.BeginSample(System.String)">
      <summary>
        <para>Adds a command to begin profile sampling.</para>
      </summary>
      <param name="name">Name of the profile information used for sampling.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Blit(UnityEngine.Texture,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "blit into a render texture" command.</para>
      </summary>
      <param name="source">Source texture or render target to blit from.</param>
      <param name="dest">Destination to blit into.</param>
      <param name="mat">Material to use.</param>
      <param name="pass">Shader pass to use (default is -1, meaning "all passes").</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Blit(UnityEngine.Texture,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material)">
      <summary>
        <para>Add a "blit into a render texture" command.</para>
      </summary>
      <param name="source">Source texture or render target to blit from.</param>
      <param name="dest">Destination to blit into.</param>
      <param name="mat">Material to use.</param>
      <param name="pass">Shader pass to use (default is -1, meaning "all passes").</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Blit(UnityEngine.Texture,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Add a "blit into a render texture" command.</para>
      </summary>
      <param name="source">Source texture or render target to blit from.</param>
      <param name="dest">Destination to blit into.</param>
      <param name="mat">Material to use.</param>
      <param name="pass">Shader pass to use (default is -1, meaning "all passes").</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Blit(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "blit into a render texture" command.</para>
      </summary>
      <param name="source">Source texture or render target to blit from.</param>
      <param name="dest">Destination to blit into.</param>
      <param name="mat">Material to use.</param>
      <param name="pass">Shader pass to use (default is -1, meaning "all passes").</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Blit(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material)">
      <summary>
        <para>Add a "blit into a render texture" command.</para>
      </summary>
      <param name="source">Source texture or render target to blit from.</param>
      <param name="dest">Destination to blit into.</param>
      <param name="mat">Material to use.</param>
      <param name="pass">Shader pass to use (default is -1, meaning "all passes").</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Blit(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Material,System.Int32)">
      <summary>
        <para>Add a "blit into a render texture" command.</para>
      </summary>
      <param name="source">Source texture or render target to blit from.</param>
      <param name="dest">Destination to blit into.</param>
      <param name="mat">Material to use.</param>
      <param name="pass">Shader pass to use (default is -1, meaning "all passes").</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.Clear">
      <summary>
        <para>Clear all commands in the buffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.ClearRenderTarget(System.Boolean,System.Boolean,UnityEngine.Color,System.Single)">
      <summary>
        <para>Adds a "clear render target" command.</para>
      </summary>
      <param name="clearDepth">Should clear depth buffer?</param>
      <param name="clearColor">Should clear color buffer?</param>
      <param name="backgroundColor">Color to clear with.</param>
      <param name="depth">Depth to clear with (default is 1.0).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.CopyCounterValue(UnityEngine.ComputeBuffer,UnityEngine.ComputeBuffer,System.UInt32)">
      <summary>
        <para>Adds a command to copy ComputeBuffer counter value.</para>
      </summary>
      <param name="src">Append/consume buffer to copy the counter from.</param>
      <param name="dst">A buffer to copy the counter to.</param>
      <param name="dstOffset">Target byte offset in dst buffer.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.CopyTexture(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Adds a command to copy a texture into another texture.</para>
      </summary>
      <param name="src">Source texture or identifier, see RenderTargetIdentifier.</param>
      <param name="dst">Destination texture or identifier, see RenderTargetIdentifier.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.CopyTexture(UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,UnityEngine.Rendering.RenderTargetIdentifier,System.Int32)">
      <summary>
        <para>Adds a command to copy a texture into another texture.</para>
      </summary>
      <param name="src">Source texture or identifier, see RenderTargetIdentifier.</param>
      <param name="dst">Destination texture or identifier, see RenderTargetIdentifier.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.CopyTexture(UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,System.Int32,UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,System.Int32)">
      <summary>
        <para>Adds a command to copy a texture into another texture.</para>
      </summary>
      <param name="src">Source texture or identifier, see RenderTargetIdentifier.</param>
      <param name="dst">Destination texture or identifier, see RenderTargetIdentifier.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.CopyTexture(UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Adds a command to copy a texture into another texture.</para>
      </summary>
      <param name="src">Source texture or identifier, see RenderTargetIdentifier.</param>
      <param name="dst">Destination texture or identifier, see RenderTargetIdentifier.</param>
      <param name="srcElement">Source texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="srcMip">Source texture mipmap level.</param>
      <param name="dstElement">Destination texture element (cubemap face, texture array layer or 3D texture depth slice).</param>
      <param name="dstMip">Destination texture mipmap level.</param>
      <param name="srcX">X coordinate of source texture region to copy (left side is zero).</param>
      <param name="srcY">Y coordinate of source texture region to copy (bottom is zero).</param>
      <param name="srcWidth">Width of source texture region to copy.</param>
      <param name="srcHeight">Height of source texture region to copy.</param>
      <param name="dstX">X coordinate of where to copy region in destination texture (left side is zero).</param>
      <param name="dstY">Y coordinate of where to copy region in destination texture (bottom is zero).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.#ctor">
      <summary>
        <para>Create a new empty command buffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DisableShaderKeyword(System.String)">
      <summary>
        <para>Adds a command to disable global shader keyword.</para>
      </summary>
      <param name="keyword">Shader keyword to disable.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DispatchCompute(UnityEngine.ComputeShader,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Add a command to execute a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to execute.</param>
      <param name="kernelIndex">Kernel index to execute, see ComputeShader.FindKernel.</param>
      <param name="threadGroupsX">Number of work groups in the X dimension.</param>
      <param name="threadGroupsY">Number of work groups in the Y dimension.</param>
      <param name="threadGroupsZ">Number of work groups in the Z dimension.</param>
      <param name="indirectBuffer">ComputeBuffer with dispatch arguments.</param>
      <param name="argsOffset">Byte offset indicating the location of the dispatch arguments in the buffer.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DispatchCompute(UnityEngine.ComputeShader,System.Int32,UnityEngine.ComputeBuffer,System.UInt32)">
      <summary>
        <para>Add a command to execute a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to execute.</param>
      <param name="kernelIndex">Kernel index to execute, see ComputeShader.FindKernel.</param>
      <param name="threadGroupsX">Number of work groups in the X dimension.</param>
      <param name="threadGroupsY">Number of work groups in the Y dimension.</param>
      <param name="threadGroupsZ">Number of work groups in the Z dimension.</param>
      <param name="indirectBuffer">ComputeBuffer with dispatch arguments.</param>
      <param name="argsOffset">Byte offset indicating the location of the dispatch arguments in the buffer.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DrawMesh(UnityEngine.Mesh,UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,System.Int32,UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Add a "draw mesh" command.</para>
      </summary>
      <param name="mesh">Mesh to draw.</param>
      <param name="matrix">Transformation matrix to use.</param>
      <param name="material">Material to use.</param>
      <param name="submeshIndex">Which subset of the mesh to render.</param>
      <param name="shaderPass">Which pass of the shader to use (default is -1, which renders all passes).</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DrawMeshInstanced(UnityEngine.Mesh,System.Int32,UnityEngine.Material,System.Int32,UnityEngine.Matrix4x4[],System.Int32,UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Add a "draw mesh with instancing" command.

The command will not immediately fail and throw an exception if Material.enableInstancing is false, but it will log an error and skips rendering each time the command is being executed if such a condition is detected.

InvalidOperationException will be thrown if the current platform doesn't support this API (i.e. if GPU instancing is not available). See SystemInfo.supportsInstancing.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="material">Material to use.</param>
      <param name="shaderPass">Which pass of the shader to use, or -1 which renders all passes.</param>
      <param name="matrices">The array of object transformation matrices.</param>
      <param name="count">The number of instances to be drawn.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DrawMeshInstancedIndirect(UnityEngine.Mesh,System.Int32,UnityEngine.Material,System.Int32,UnityEngine.ComputeBuffer,System.Int32,UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Add a "draw mesh with indirect instancing" command.</para>
      </summary>
      <param name="mesh">The Mesh to draw.</param>
      <param name="submeshIndex">Which subset of the mesh to draw. This applies only to meshes that are composed of several materials.</param>
      <param name="material">Material to use.</param>
      <param name="shaderPass">Which pass of the shader to use, or -1 which renders all passes.</param>
      <param name="properties">Additional material properties to apply onto material just before this mesh will be drawn. See MaterialPropertyBlock.</param>
      <param name="bufferWithArgs">The GPU buffer containing the arguments for how many instances of this mesh to draw.</param>
      <param name="argsOffset">The byte offset into the buffer, where the draw arguments start.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DrawProcedural(UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,UnityEngine.MeshTopology,System.Int32,System.Int32,UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Add a "draw procedural geometry" command.</para>
      </summary>
      <param name="matrix">Transformation matrix to use.</param>
      <param name="material">Material to use.</param>
      <param name="shaderPass">Which pass of the shader to use (or -1 for all passes).</param>
      <param name="topology">Topology of the procedural geometry.</param>
      <param name="vertexCount">Vertex count to render.</param>
      <param name="instanceCount">Instance count to render.</param>
      <param name="properties">Additional material properties to apply just before rendering. See MaterialPropertyBlock.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DrawProceduralIndirect(UnityEngine.Matrix4x4,UnityEngine.Material,System.Int32,UnityEngine.MeshTopology,UnityEngine.ComputeBuffer,System.Int32,UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Add a "draw procedural geometry" command.</para>
      </summary>
      <param name="matrix">Transformation matrix to use.</param>
      <param name="material">Material to use.</param>
      <param name="shaderPass">Which pass of the shader to use (or -1 for all passes).</param>
      <param name="topology">Topology of the procedural geometry.</param>
      <param name="properties">Additional material properties to apply just before rendering. See MaterialPropertyBlock.</param>
      <param name="bufferWithArgs">Buffer with draw arguments.</param>
      <param name="argsOffset">Byte offset where in the buffer the draw arguments are.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.DrawRenderer(UnityEngine.Renderer,UnityEngine.Material,System.Int32,System.Int32)">
      <summary>
        <para>Add a "draw renderer" command.</para>
      </summary>
      <param name="renderer">Renderer to draw.</param>
      <param name="material">Material to use.</param>
      <param name="submeshIndex">Which subset of the mesh to render.</param>
      <param name="shaderPass">Which pass of the shader to use (default is -1, which renders all passes).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.EnableShaderKeyword(System.String)">
      <summary>
        <para>Adds a command to enable global shader keyword.</para>
      </summary>
      <param name="keyword">Shader keyword to enable.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.EndSample(System.String)">
      <summary>
        <para>Adds a command to begin profile sampling.</para>
      </summary>
      <param name="name">Name of the profile information used for sampling.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.GetTemporaryRT(System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.FilterMode,UnityEngine.RenderTextureFormat,UnityEngine.RenderTextureReadWrite,System.Int32,System.Boolean)">
      <summary>
        <para>Add a "get a temporary render texture" command.</para>
      </summary>
      <param name="nameID">Shader property name for this texture.</param>
      <param name="width">Width in pixels, or -1 for "camera pixel width".</param>
      <param name="height">Height in pixels, or -1 for "camera pixel height".</param>
      <param name="depthBuffer">Depth buffer bits (0, 16 or 24).</param>
      <param name="filter">Texture filtering mode (default is Point).</param>
      <param name="format">Format of the render texture (default is ARGB32).</param>
      <param name="readWrite">Color space conversion mode.</param>
      <param name="antiAliasing">Anti-aliasing (default is no anti-aliasing).</param>
      <param name="enableRandomWrite">Should random-write access into the texture be enabled (default is false).</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.IssuePluginEvent(System.IntPtr,System.Int32)">
      <summary>
        <para>Send a user-defined event to a native code plugin.</para>
      </summary>
      <param name="callback">Native code callback to queue for Unity's renderer to invoke.</param>
      <param name="eventID">User defined id to send to the callback.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.ReleaseTemporaryRT(System.Int32)">
      <summary>
        <para>Add a "release a temporary render texture" command.</para>
      </summary>
      <param name="nameID">Shader property name for this texture.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeBufferParam(UnityEngine.ComputeShader,System.Int32,System.String,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Adds a command to set an input or output buffer parameter on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="kernelIndex">Which kernel the buffer is being set for. See ComputeShader.FindKernel.</param>
      <param name="name">Name of the buffer variable in shader code.</param>
      <param name="buffer">Buffer to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeFloatParam(UnityEngine.ComputeShader,System.String,System.Single)">
      <summary>
        <para>Adds a command to set a float parameter on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="name">Name of the variable in shader code.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeFloatParams(UnityEngine.ComputeShader,System.String,System.Single[])">
      <summary>
        <para>Adds a command to set multiple consecutive float parameters on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="name">Name of the variable in shader code.</param>
      <param name="values">Values to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeIntParam(UnityEngine.ComputeShader,System.String,System.Int32)">
      <summary>
        <para>Adds a command to set an integer parameter on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="name">Name of the variable in shader code.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeIntParams(UnityEngine.ComputeShader,System.String,System.Int32[])">
      <summary>
        <para>Adds a command to set multiple consecutive integer parameters on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="name">Name of the variable in shader code.</param>
      <param name="values">Values to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeTextureParam(UnityEngine.ComputeShader,System.Int32,System.String,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Adds a command to set a texture parameter on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="kernelIndex">Which kernel the texture is being set for. See ComputeShader.FindKernel.</param>
      <param name="name">Name of the texture variable in shader code.</param>
      <param name="rt">Texture value or identifier to set, see RenderTargetIdentifier.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetComputeVectorParam(UnityEngine.ComputeShader,System.String,UnityEngine.Vector4)">
      <summary>
        <para>Adds a command to set a vector parameter on a ComputeShader.</para>
      </summary>
      <param name="computeShader">ComputeShader to set parameter for.</param>
      <param name="name">Name of the variable in shader code.</param>
      <param name="val">Value to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalBuffer(System.String,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Add a "set global shader buffer property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalBuffer(System.Int32,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Add a "set global shader buffer property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalColor(System.String,UnityEngine.Color)">
      <summary>
        <para>Add a "set global shader color property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalColor(System.Int32,UnityEngine.Color)">
      <summary>
        <para>Add a "set global shader color property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalDepthBias(System.Single,System.Single)">
      <summary>
        <para>Add a command to set global depth bias.</para>
      </summary>
      <param name="bias">Constant depth bias.</param>
      <param name="slopeBias">Slope-dependent depth bias.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalFloat(System.String,System.Single)">
      <summary>
        <para>Add a "set global shader float property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalFloat(System.Int32,System.Single)">
      <summary>
        <para>Add a "set global shader float property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalFloatArray(System.String,System.Single[])">
      <summary>
        <para>Add a "set global shader float array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalFloatArray(System.Int32,System.Single[])">
      <summary>
        <para>Add a "set global shader float array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Add a "set global shader float array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Add a "set global shader float array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalMatrix(System.String,UnityEngine.Matrix4x4)">
      <summary>
        <para>Add a "set global shader matrix property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalMatrix(System.Int32,UnityEngine.Matrix4x4)">
      <summary>
        <para>Add a "set global shader matrix property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalMatrixArray(System.String,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Add a "set global shader matrix array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalMatrixArray(System.Int32,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Add a "set global shader matrix array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Add a "set global shader matrix array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Add a "set global shader matrix array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalTexture(System.String,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "set global shader texture property" command, referencing a RenderTexture.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalTexture(System.Int32,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "set global shader texture property" command, referencing a RenderTexture.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalVector(System.String,UnityEngine.Vector4)">
      <summary>
        <para>Add a "set global shader vector property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalVector(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Add a "set global shader vector property" command.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalVectorArray(System.String,UnityEngine.Vector4[])">
      <summary>
        <para>Add a "set global shader vector array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalVectorArray(System.Int32,UnityEngine.Vector4[])">
      <summary>
        <para>Add a "set global shader vector array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Add a "set global shader vector array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetGlobalVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Add a "set global shader vector array property" command.</para>
      </summary>
      <param name="propertyName"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetProjectionMatrix(UnityEngine.Matrix4x4)">
      <summary>
        <para>Add a command to set the projection matrix.</para>
      </summary>
      <param name="proj">Projection (camera to clip space) matrix.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,System.Int32)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,UnityEngine.CubemapFace)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,UnityEngine.CubemapFace,System.Int32)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,System.Int32)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,UnityEngine.CubemapFace)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.RenderTargetIdentifier,System.Int32,UnityEngine.CubemapFace,System.Int32)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier[],UnityEngine.Rendering.RenderTargetIdentifier)">
      <summary>
        <para>Add a "set active render target" command.</para>
      </summary>
      <param name="rt">Render target to set for both color &amp; depth buffers.</param>
      <param name="color">Render target to set as a color buffer.</param>
      <param name="colors">Render targets to set as color buffers (MRT).</param>
      <param name="depth">Render target to set as a depth buffer.</param>
      <param name="mipLevel">The mip level of the render target to render into.</param>
      <param name="cubemapFace">The cubemap face of a cubemap render target to render into.</param>
      <param name="depthSlice">Slice of a 3D or array render target to set.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetShadowSamplingMode(UnityEngine.Rendering.RenderTargetIdentifier,UnityEngine.Rendering.ShadowSamplingMode)">
      <summary>
        <para>Add a "set shadow sampling mode" command.</para>
      </summary>
      <param name="shadowmap">Shadowmap render target to change the sampling mode on.</param>
      <param name="mode">New sampling mode.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetViewMatrix(UnityEngine.Matrix4x4)">
      <summary>
        <para>Add a command to set the view matrix.</para>
      </summary>
      <param name="view">View (world to camera space) matrix.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetViewport(UnityEngine.Rect)">
      <summary>
        <para>Add a command to set the rendering viewport.</para>
      </summary>
      <param name="pixelRect">Viewport rectangle in pixel coordinates.</param>
    </member>
    <member name="M:UnityEngine.Rendering.CommandBuffer.SetViewProjectionMatrices(UnityEngine.Matrix4x4,UnityEngine.Matrix4x4)">
      <summary>
        <para>Add a command to set the view and projection matrices.</para>
      </summary>
      <param name="view">View (world to camera space) matrix.</param>
      <param name="proj">Projection (camera to clip space) matrix.</param>
    </member>
    <member name="T:UnityEngine.Rendering.CompareFunction">
      <summary>
        <para>Depth or stencil comparison function.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.Always">
      <summary>
        <para>Always pass depth or stencil test.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.Disabled">
      <summary>
        <para>Depth or stencil test is disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.Equal">
      <summary>
        <para>Pass depth or stencil test when values are equal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.Greater">
      <summary>
        <para>Pass depth or stencil test when new value is greater than old one.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.GreaterEqual">
      <summary>
        <para>Pass depth or stencil test when new value is greater or equal than old one.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.Less">
      <summary>
        <para>Pass depth or stencil test when new value is less than old one.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.LessEqual">
      <summary>
        <para>Pass depth or stencil test when new value is less or equal than old one.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.Never">
      <summary>
        <para>Never pass depth or stencil test.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CompareFunction.NotEqual">
      <summary>
        <para>Pass depth or stencil test when values are different.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.CopyTextureSupport">
      <summary>
        <para>Support for various Graphics.CopyTexture cases.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CopyTextureSupport.Basic">
      <summary>
        <para>Basic Graphics.CopyTexture support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CopyTextureSupport.Copy3D">
      <summary>
        <para>Support for Texture3D in Graphics.CopyTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CopyTextureSupport.DifferentTypes">
      <summary>
        <para>Support for Graphics.CopyTexture between different texture types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CopyTextureSupport.None">
      <summary>
        <para>No support for Graphics.CopyTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CopyTextureSupport.RTToTexture">
      <summary>
        <para>Support for RenderTexture to Texture copies in Graphics.CopyTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CopyTextureSupport.TextureToRT">
      <summary>
        <para>Support for Texture to RenderTexture copies in Graphics.CopyTexture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.CullMode">
      <summary>
        <para>Backface culling mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CullMode.Back">
      <summary>
        <para>Cull back-facing geometry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CullMode.Front">
      <summary>
        <para>Cull front-facing geometry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.CullMode.Off">
      <summary>
        <para>Disable culling.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.DefaultReflectionMode">
      <summary>
        <para>Default reflection mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.DefaultReflectionMode.Custom">
      <summary>
        <para>Custom default reflection.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.DefaultReflectionMode.Skybox">
      <summary>
        <para>Skybox-based default reflection.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.GraphicsDeviceType">
      <summary>
        <para>Graphics device API type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.Direct3D11">
      <summary>
        <para>Direct3D 11 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.Direct3D12">
      <summary>
        <para>Direct3D 12 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.Direct3D9">
      <summary>
        <para>Direct3D 9 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.Metal">
      <summary>
        <para>iOS Metal graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.N3DS">
      <summary>
        <para>Nintendo 3DS graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.Null">
      <summary>
        <para>No graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.OpenGL2">
      <summary>
        <para>OpenGL 2.x graphics API. (deprecated, only available on Linux and MacOSX)</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.OpenGLCore">
      <summary>
        <para>OpenGL (Core profile - GL3 or later) graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.OpenGLES2">
      <summary>
        <para>OpenGL ES 2.0 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.OpenGLES3">
      <summary>
        <para>OpenGL ES 3.0 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.PlayStation3">
      <summary>
        <para>PlayStation 3 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.PlayStation4">
      <summary>
        <para>PlayStation 4 graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.PlayStationMobile">
      <summary>
        <para>PlayStation Mobile (PSM) graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.PlayStationVita">
      <summary>
        <para>PlayStation Vita graphics API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.Vulkan">
      <summary>
        <para>Vulkan (EXPERIMENTAL).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsDeviceType.XboxOne">
      <summary>
        <para>Xbox One graphics API.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.GraphicsSettings">
      <summary>
        <para>Script interface for.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.GraphicsSettings.lightsUseColorTemperature">
      <summary>
        <para>Whether to use a Light's color temperature when calculating the final color of that Light."</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.GraphicsSettings.lightsUseLinearIntensity">
      <summary>
        <para>If this is true, Light intensity is multiplied against linear color values. If it is false, gamma color values are used.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.GraphicsSettings.renderPipelineAsset">
      <summary>
        <para>The RenderPipelineAsset that describes how the Scene should be rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.GraphicsSettings.transparencySortAxis">
      <summary>
        <para>An axis that describes the direction along which the distances of objects are measured for the purpose of sorting.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.GraphicsSettings.transparencySortMode">
      <summary>
        <para>Transparent object sorting mode.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.GraphicsSettings.GetCustomShader(UnityEngine.Rendering.BuiltinShaderType)">
      <summary>
        <para>Get custom shader used instead of a built-in shader.</para>
      </summary>
      <param name="type">Built-in shader type to query custom shader for.</param>
      <returns>
        <para>The shader used.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rendering.GraphicsSettings.GetShaderMode(UnityEngine.Rendering.BuiltinShaderType)">
      <summary>
        <para>Get built-in shader mode.</para>
      </summary>
      <param name="type">Built-in shader type to query.</param>
      <returns>
        <para>Mode used for built-in shader.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rendering.GraphicsSettings.SetCustomShader(UnityEngine.Rendering.BuiltinShaderType,UnityEngine.Shader)">
      <summary>
        <para>Set custom shader to use instead of a built-in shader.</para>
      </summary>
      <param name="type">Built-in shader type to set custom shader to.</param>
      <param name="shader">The shader to use.</param>
    </member>
    <member name="M:UnityEngine.Rendering.GraphicsSettings.SetShaderMode(UnityEngine.Rendering.BuiltinShaderType,UnityEngine.Rendering.BuiltinShaderMode)">
      <summary>
        <para>Set built-in shader mode.</para>
      </summary>
      <param name="type">Built-in shader type to change.</param>
      <param name="mode">Mode to use for built-in shader.</param>
    </member>
    <member name="T:UnityEngine.Rendering.GraphicsTier">
      <summary>
        <para>Graphics Tier.
See Also: Graphics.activeTier.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsTier.Tier1">
      <summary>
        <para>The first graphics tier (Low) - corresponds to shader define UNITY_HARDWARE_TIER1.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsTier.Tier2">
      <summary>
        <para>The second graphics tier (Medium) - corresponds to shader define UNITY_HARDWARE_TIER2.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.GraphicsTier.Tier3">
      <summary>
        <para>The third graphics tier (High) - corresponds to shader define UNITY_HARDWARE_TIER3.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.LightEvent">
      <summary>
        <para>Defines a place in light's rendering to attach Rendering.CommandBuffer objects to.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightEvent.AfterScreenspaceMask">
      <summary>
        <para>After directional light screenspace shadow mask is computed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightEvent.AfterShadowMap">
      <summary>
        <para>After shadowmap is rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightEvent.AfterShadowMapPass">
      <summary>
        <para>After shadowmap pass is rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightEvent.BeforeScreenspaceMask">
      <summary>
        <para>Before directional light screenspace shadow mask is computed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightEvent.BeforeShadowMap">
      <summary>
        <para>Before shadowmap is rendered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightEvent.BeforeShadowMapPass">
      <summary>
        <para>Before shadowmap pass is rendered.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.LightProbeUsage">
      <summary>
        <para>Light probe interpolation type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightProbeUsage.BlendProbes">
      <summary>
        <para>Simple light probe interpolation is used.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightProbeUsage.Off">
      <summary>
        <para>Light Probes are not used.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightProbeUsage.UseProxyVolume">
      <summary>
        <para>Uses a 3D grid of interpolated light probes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.LightShadowResolution">
      <summary>
        <para>Shadow resolution options for a Light.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightShadowResolution.FromQualitySettings">
      <summary>
        <para>Use resolution from QualitySettings (default).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightShadowResolution.High">
      <summary>
        <para>High shadow map resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightShadowResolution.Low">
      <summary>
        <para>Low shadow map resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightShadowResolution.Medium">
      <summary>
        <para>Medium shadow map resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.LightShadowResolution.VeryHigh">
      <summary>
        <para>Very high shadow map resolution.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.OpaqueSortMode">
      <summary>
        <para>Opaque object sorting mode of a Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.OpaqueSortMode.Default">
      <summary>
        <para>Default opaque sorting mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.OpaqueSortMode.FrontToBack">
      <summary>
        <para>Do rough front-to-back sorting of opaque objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.OpaqueSortMode.NoDistanceSort">
      <summary>
        <para>Do not sort opaque objects by distance.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.PassType">
      <summary>
        <para>Shader pass type for Unity's lighting pipeline.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.Deferred">
      <summary>
        <para>Deferred Shading shader pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.ForwardAdd">
      <summary>
        <para>Forward rendering additive pixel light pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.ForwardBase">
      <summary>
        <para>Forward rendering base pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.LightPrePassBase">
      <summary>
        <para>Legacy deferred lighting (light pre-pass) base pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.LightPrePassFinal">
      <summary>
        <para>Legacy deferred lighting (light pre-pass) final pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.Meta">
      <summary>
        <para>Shader pass used to generate the albedo and emissive values used as input to lightmapping.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.MotionVectors">
      <summary>
        <para>Motion vector render pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.Normal">
      <summary>
        <para>Regular shader pass that does not interact with lighting.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.ShadowCaster">
      <summary>
        <para>Shadow caster &amp; depth texure shader pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.Vertex">
      <summary>
        <para>Legacy vertex-lit shader pass.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.VertexLM">
      <summary>
        <para>Legacy vertex-lit shader pass, with mobile lightmaps.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.PassType.VertexLMRGBM">
      <summary>
        <para>Legacy vertex-lit shader pass, with desktop (RGBM) lightmaps.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.RealtimeGICPUUsage">
      <summary>
        <para>How much CPU usage to assign to the final lighting calculations at runtime.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RealtimeGICPUUsage.High">
      <summary>
        <para>75% of the allowed CPU threads are used as worker threads.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RealtimeGICPUUsage.Low">
      <summary>
        <para>25% of the allowed CPU threads are used as worker threads.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RealtimeGICPUUsage.Medium">
      <summary>
        <para>50% of the allowed CPU threads are used as worker threads.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RealtimeGICPUUsage.Unlimited">
      <summary>
        <para>100% of the allowed CPU threads are used as worker threads.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionCubemapCompression">
      <summary>
        <para>Determines how Unity will compress baked reflection cubemap.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionCubemapCompression.Auto">
      <summary>
        <para>Baked Reflection cubemap will be compressed if compression format is suitable.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionCubemapCompression.Compressed">
      <summary>
        <para>Baked Reflection cubemap will be compressed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionCubemapCompression.Uncompressed">
      <summary>
        <para>Baked Reflection cubemap will be left uncompressed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionProbeBlendInfo">
      <summary>
        <para>ReflectionProbeBlendInfo contains information required for blending probes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeBlendInfo.probe">
      <summary>
        <para>Reflection Probe used in blending.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeBlendInfo.weight">
      <summary>
        <para>Specifies the weight used in the interpolation between two probes, value varies from 0.0 to 1.0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionProbeClearFlags">
      <summary>
        <para>Values for ReflectionProbe.clearFlags, determining what to clear when rendering a ReflectionProbe.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeClearFlags.Skybox">
      <summary>
        <para>Clear with the skybox.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeClearFlags.SolidColor">
      <summary>
        <para>Clear with a background color.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionProbeMode">
      <summary>
        <para>Reflection probe's update mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeMode.Baked">
      <summary>
        <para>Reflection probe is baked in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeMode.Custom">
      <summary>
        <para>Reflection probe uses a custom texture specified by the user.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeMode.Realtime">
      <summary>
        <para>Reflection probe is updating in realtime.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionProbeRefreshMode">
      <summary>
        <para>An enum describing the way a realtime reflection probe refreshes in the Player.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeRefreshMode.EveryFrame">
      <summary>
        <para>Causes Unity to update the probe's cubemap every frame.
Note that updating a probe is very costly. Setting this option on too many probes could have a significant negative effect on frame rate. Use time-slicing to help improve performance.

See Also: ReflectionProbeTimeSlicingMode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeRefreshMode.OnAwake">
      <summary>
        <para>Causes the probe to update only on the first frame it becomes visible. The probe will no longer update automatically, however you may subsequently use RenderProbe to refresh the probe

See Also: ReflectionProbe.RenderProbe.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeRefreshMode.ViaScripting">
      <summary>
        <para>Sets the probe to never be automatically updated by Unity while your game is running. Use this to completely control the probe refresh behavior by script.

See Also: ReflectionProbe.RenderProbe.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionProbeTimeSlicingMode">
      <summary>
        <para>When a probe's ReflectionProbe.refreshMode is set to ReflectionProbeRefreshMode.EveryFrame, this enum specify whether or not Unity should update the probe's cubemap over several frames or update the whole cubemap in one frame.
Updating a probe's cubemap is a costly operation. Unity needs to render the entire scene for each face of the cubemap, as well as perform special blurring in order to get glossy reflections. The impact on frame rate can be significant. Time-slicing helps maintaning a more constant frame rate during these updates by performing the rendering over several frames.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeTimeSlicingMode.AllFacesAtOnce">
      <summary>
        <para>Instructs Unity to use time-slicing by first rendering all faces at once, then spreading the remaining work over the next 8 frames. Using this option, updating the probe will take 9 frames.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeTimeSlicingMode.IndividualFaces">
      <summary>
        <para>Instructs Unity to spread the rendering of each face over several frames. Using this option, updating the cubemap will take 14 frames. This option greatly reduces the impact on frame rate, however it may produce incorrect results, especially in scenes where lighting conditions change over these 14 frames.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeTimeSlicingMode.NoTimeSlicing">
      <summary>
        <para>Unity will render the probe entirely in one frame.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ReflectionProbeUsage">
      <summary>
        <para>Reflection Probe usage.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeUsage.BlendProbes">
      <summary>
        <para>Reflection probes are enabled. Blending occurs only between probes, useful in indoor environments. The renderer will use default reflection if there are no reflection probes nearby, but no blending between default reflection and probe will occur.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeUsage.BlendProbesAndSkybox">
      <summary>
        <para>Reflection probes are enabled. Blending occurs between probes or probes and default reflection, useful for outdoor environments.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeUsage.Off">
      <summary>
        <para>Reflection probes are disabled, skybox will be used for reflection.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ReflectionProbeUsage.Simple">
      <summary>
        <para>Reflection probes are enabled, but no blending will occur between probes when there are two overlapping volumes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.RenderBufferLoadAction">
      <summary>
        <para>Handling of loading RenderBuffer contents on setting as active RenderTarget.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderBufferLoadAction.DontCare">
      <summary>
        <para>RenderBuffer will try to skip loading its contents on setting as Render Target.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderBufferLoadAction.Load">
      <summary>
        <para>Make RenderBuffer to Load its contents when setting as RenderTarget.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.RenderBufferStoreAction">
      <summary>
        <para>Handling of storing RenderBuffer contents after it was an active RenderTarget and another RenderTarget was set.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderBufferStoreAction.DontCare">
      <summary>
        <para>RenderBuffer will try to skip storing its contents.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderBufferStoreAction.Store">
      <summary>
        <para>Make RenderBuffer to Store its contents.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.RenderQueue">
      <summary>
        <para>Determine in which order objects are renderered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderQueue.AlphaTest">
      <summary>
        <para>Alpha tested geometry uses this queue.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderQueue.Background">
      <summary>
        <para>This render queue is rendered before any others.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderQueue.Geometry">
      <summary>
        <para>Opaque geometry uses this queue.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderQueue.GeometryLast">
      <summary>
        <para>Last render queue that is considered "opaque".</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderQueue.Overlay">
      <summary>
        <para>This render queue is meant for overlay effects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.RenderQueue.Transparent">
      <summary>
        <para>This render queue is rendered after Geometry and AlphaTest, in back-to-front order.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.RenderTargetIdentifier">
      <summary>
        <para>Identifies a RenderTexture for a Rendering.CommandBuffer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.RenderTargetIdentifier.#ctor(UnityEngine.Rendering.BuiltinRenderTextureType)">
      <summary>
        <para>Creates a render target identifier.</para>
      </summary>
      <param name="type">Built-in temporary render texture type.</param>
      <param name="name">Temporary render texture name.</param>
      <param name="nameID">Temporary render texture name (as integer, see Shader.PropertyToID).</param>
      <param name="tex">RenderTexture or Texture object to use.</param>
    </member>
    <member name="M:UnityEngine.Rendering.RenderTargetIdentifier.#ctor(System.String)">
      <summary>
        <para>Creates a render target identifier.</para>
      </summary>
      <param name="type">Built-in temporary render texture type.</param>
      <param name="name">Temporary render texture name.</param>
      <param name="nameID">Temporary render texture name (as integer, see Shader.PropertyToID).</param>
      <param name="tex">RenderTexture or Texture object to use.</param>
    </member>
    <member name="M:UnityEngine.Rendering.RenderTargetIdentifier.#ctor(System.Int32)">
      <summary>
        <para>Creates a render target identifier.</para>
      </summary>
      <param name="type">Built-in temporary render texture type.</param>
      <param name="name">Temporary render texture name.</param>
      <param name="nameID">Temporary render texture name (as integer, see Shader.PropertyToID).</param>
      <param name="tex">RenderTexture or Texture object to use.</param>
    </member>
    <member name="M:UnityEngine.Rendering.RenderTargetIdentifier.#ctor(UnityEngine.Texture)">
      <summary>
        <para>Creates a render target identifier.</para>
      </summary>
      <param name="type">Built-in temporary render texture type.</param>
      <param name="name">Temporary render texture name.</param>
      <param name="nameID">Temporary render texture name (as integer, see Shader.PropertyToID).</param>
      <param name="tex">RenderTexture or Texture object to use.</param>
    </member>
    <member name="T:UnityEngine.Rendering.ShadowCastingMode">
      <summary>
        <para>How shadows are cast from this object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowCastingMode.Off">
      <summary>
        <para>No shadows are cast from this object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowCastingMode.On">
      <summary>
        <para>Shadows are cast from this object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowCastingMode.ShadowsOnly">
      <summary>
        <para>Object casts shadows, but is otherwise invisible in the scene.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowCastingMode.TwoSided">
      <summary>
        <para>Shadows are cast from this object, treating it as two-sided.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ShadowMapPass">
      <summary>
        <para>Allows precise control over which shadow map passes to execute Rendering.CommandBuffer objects attached using Light.AddCommandBuffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.All">
      <summary>
        <para>All shadow map passes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.Directional">
      <summary>
        <para>All directional shadow map passes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.DirectionalCascade0">
      <summary>
        <para>First directional shadow map cascade.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.DirectionalCascade1">
      <summary>
        <para>Second directional shadow map cascade.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.DirectionalCascade2">
      <summary>
        <para>Third directional shadow map cascade.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.DirectionalCascade3">
      <summary>
        <para>Fourth directional shadow map cascade.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.Pointlight">
      <summary>
        <para>All point light shadow passes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.PointlightNegativeX">
      <summary>
        <para>-X point light shadow cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.PointlightNegativeY">
      <summary>
        <para>-Y point light shadow cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.PointlightNegativeZ">
      <summary>
        <para>-Z point light shadow cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.PointlightPositiveX">
      <summary>
        <para>+X point light shadow cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.PointlightPositiveY">
      <summary>
        <para>+Y point light shadow cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.PointlightPositiveZ">
      <summary>
        <para>+Z point light shadow cubemap face.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowMapPass.Spotlight">
      <summary>
        <para>Spotlight shadow pass.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.ShadowSamplingMode">
      <summary>
        <para>Used by CommandBuffer.SetShadowSamplingMode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowSamplingMode.CompareDepths">
      <summary>
        <para>Default shadow sampling mode: sampling with a comparison filter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.ShadowSamplingMode.RawDepth">
      <summary>
        <para>Shadow sampling mode for sampling the depth value.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.SortingGroup">
      <summary>
        <para>Adding a SortingGroup component to a GameObject will ensure that all Renderers within the GameObject's descendants will be sorted and rendered together.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.SortingGroup.sortingLayerID">
      <summary>
        <para>Unique ID of the Renderer's sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.SortingGroup.sortingLayerName">
      <summary>
        <para>Name of the Renderer's sorting layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.SortingGroup.sortingOrder">
      <summary>
        <para>Renderer's order within a sorting layer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.SphericalHarmonicsL2">
      <summary>
        <para>Spherical harmonics up to the second order (3 bands, 9 coefficients).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.SphericalHarmonicsL2.AddAmbientLight(UnityEngine.Color)">
      <summary>
        <para>Add ambient lighting to probe data.</para>
      </summary>
      <param name="color"></param>
    </member>
    <member name="M:UnityEngine.Rendering.SphericalHarmonicsL2.AddDirectionalLight(UnityEngine.Vector3,UnityEngine.Color,System.Single)">
      <summary>
        <para>Add directional light to probe data.</para>
      </summary>
      <param name="direction"></param>
      <param name="color"></param>
      <param name="intensity"></param>
    </member>
    <member name="M:UnityEngine.Rendering.SphericalHarmonicsL2.Clear">
      <summary>
        <para>Clears SH probe to zero.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.SphericalHarmonicsL2.Evaluate(UnityEngine.Vector3[],UnityEngine.Color[])">
      <summary>
        <para>Evaluates the Spherical Harmonics for each of the given directions. The result from the first direction is written into the first element of results, the result from the second direction is written into the second element of results, and so on. The array size of directions and results must match and directions must be normalized.</para>
      </summary>
      <param name="directions">Normalized directions for which the spherical harmonics are to be evaluated.</param>
      <param name="results">Output array for the evaluated values of the corresponding directions.</param>
    </member>
    <member name="?:UnityEngine.Rendering.SphericalHarmonicsL2.op_Equal(UnityEngine.Rendering.SphericalHarmonicsL2,UnityEngine.Rendering.SphericalHarmonicsL2)">
      <summary>
        <para>Returns true if SH probes are equal.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Rendering.SphericalHarmonicsL2.op_Multiply(UnityEngine.Rendering.SphericalHarmonicsL2,System.Single)">
      <summary>
        <para>Scales SH by a given factor.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Rendering.SphericalHarmonicsL2.op_Multiply(System.Single,UnityEngine.Rendering.SphericalHarmonicsL2)">
      <summary>
        <para>Scales SH by a given factor.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Rendering.SphericalHarmonicsL2.op_NotEqual(UnityEngine.Rendering.SphericalHarmonicsL2,UnityEngine.Rendering.SphericalHarmonicsL2)">
      <summary>
        <para>Returns true if SH probes are different.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Rendering.SphericalHarmonicsL2.op_Plus(UnityEngine.Rendering.SphericalHarmonicsL2,UnityEngine.Rendering.SphericalHarmonicsL2)">
      <summary>
        <para>Adds two SH probes.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="P:UnityEngine.Rendering.SphericalHarmonicsL2.this">
      <summary>
        <para>Access individual SH coefficients.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.SplashScreen">
      <summary>
        <para>Provides an interface to the Unity splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rendering.SplashScreen.isFinished">
      <summary>
        <para>Returns true once the splash screen as finished. This is once all logos have been shown for their specified duration.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.SplashScreen.Begin">
      <summary>
        <para>Initializes the splash screen so it is ready to begin drawing. Call this before you start calling Rendering.SplashScreen.Draw. Internally this function resets the timer and prepares the logos for drawing.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rendering.SplashScreen.Draw">
      <summary>
        <para>Immediately draws the splash screen. Ensure you have called Rendering.SplashScreen.Begin before you start calling this.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.StencilOp">
      <summary>
        <para>Specifies the operation that's performed on the stencil buffer when rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.DecrementSaturate">
      <summary>
        <para>Decrements the current stencil buffer value. Clamps to 0.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.DecrementWrap">
      <summary>
        <para>Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of zero.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.IncrementSaturate">
      <summary>
        <para>Increments the current stencil buffer value. Clamps to the maximum representable unsigned value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.IncrementWrap">
      <summary>
        <para>Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.Invert">
      <summary>
        <para>Bitwise inverts the current stencil buffer value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.Keep">
      <summary>
        <para>Keeps the current stencil value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.Replace">
      <summary>
        <para>Replace the stencil buffer value with reference value (specified in the shader).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.StencilOp.Zero">
      <summary>
        <para>Sets the stencil buffer value to zero.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.TextureDimension">
      <summary>
        <para>Texture "dimension" (type).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.Any">
      <summary>
        <para>Any texture type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.Cube">
      <summary>
        <para>Cubemap texture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.CubeArray">
      <summary>
        <para>Cubemap array texture (CubemapArray).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.None">
      <summary>
        <para>No texture is assigned.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.Tex2D">
      <summary>
        <para>2D texture (Texture2D).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.Tex2DArray">
      <summary>
        <para>2D array texture (Texture2DArray).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.Tex3D">
      <summary>
        <para>3D volume texture (Texture3D).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.TextureDimension.Unknown">
      <summary>
        <para>Texture type is not initialized or unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rendering.UVChannelFlags">
      <summary>
        <para>A flag representing each UV channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.UVChannelFlags.UV0">
      <summary>
        <para>First UV channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.UVChannelFlags.UV1">
      <summary>
        <para>Second UV channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.UVChannelFlags.UV2">
      <summary>
        <para>Third UV channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Rendering.UVChannelFlags.UV3">
      <summary>
        <para>Fourth UV channel.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RenderingPath">
      <summary>
        <para>Rendering path of a Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderingPath.DeferredLighting">
      <summary>
        <para>Deferred Lighting (Legacy).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderingPath.DeferredShading">
      <summary>
        <para>Deferred Shading.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderingPath.Forward">
      <summary>
        <para>Forward Rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderingPath.UsePlayerSettings">
      <summary>
        <para>Use Player Settings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderingPath.VertexLit">
      <summary>
        <para>Vertex Lit.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RenderMode">
      <summary>
        <para>RenderMode for the Canvas.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderMode.ScreenSpaceCamera">
      <summary>
        <para>Render using the Camera configured on the Canvas.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderMode.ScreenSpaceOverlay">
      <summary>
        <para>Render at the end of the scene using a 2D Canvas.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderMode.WorldSpace">
      <summary>
        <para>Render using any Camera in the scene that can render the layer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RenderSettings">
      <summary>
        <para>The Render Settings contain values for a range of visual elements in your scene, like fog and ambient light.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientEquatorColor">
      <summary>
        <para>Ambient lighting coming from the sides.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientGroundColor">
      <summary>
        <para>Ambient lighting coming from below.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientIntensity">
      <summary>
        <para>How much the light from the Ambient Source affects the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientLight">
      <summary>
        <para>Flat ambient lighting color.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientMode">
      <summary>
        <para>Ambient lighting mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientProbe">
      <summary>
        <para>Custom or skybox ambient lighting data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.ambientSkyColor">
      <summary>
        <para>Ambient lighting coming from above.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.customReflection">
      <summary>
        <para>Custom specular reflection cubemap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.defaultReflectionMode">
      <summary>
        <para>Default reflection mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.defaultReflectionResolution">
      <summary>
        <para>Cubemap resolution for default reflection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.flareFadeSpeed">
      <summary>
        <para>The fade speed of all flares in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.flareStrength">
      <summary>
        <para>The intensity of all flares in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.fog">
      <summary>
        <para>Is fog enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.fogColor">
      <summary>
        <para>The color of the fog.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.fogDensity">
      <summary>
        <para>The density of the exponential fog.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.fogEndDistance">
      <summary>
        <para>The ending distance of linear fog.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.fogMode">
      <summary>
        <para>Fog mode to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.fogStartDistance">
      <summary>
        <para>The starting distance of linear fog.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.haloStrength">
      <summary>
        <para>Size of the Light halos.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.reflectionBounces">
      <summary>
        <para>The number of times a reflection includes other reflections.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.reflectionIntensity">
      <summary>
        <para>How much the skybox / custom cubemap reflection affects the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.skybox">
      <summary>
        <para>The global skybox to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.subtractiveShadowColor">
      <summary>
        <para>The color used for the sun shadows in the Subtractive lightmode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderSettings.sun">
      <summary>
        <para>The light used by the procedural skybox.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RenderTargetSetup">
      <summary>
        <para>Fully describes setup of RenderTarget.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.color">
      <summary>
        <para>Color Buffers to set.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.colorLoad">
      <summary>
        <para>Load Actions for Color Buffers. It will override any actions set on RenderBuffers themselves.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.colorStore">
      <summary>
        <para>Store Actions for Color Buffers. It will override any actions set on RenderBuffers themselves.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.cubemapFace">
      <summary>
        <para>Cubemap face to render to.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.depth">
      <summary>
        <para>Depth Buffer to set.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.depthLoad">
      <summary>
        <para>Load Action for Depth Buffer. It will override any actions set on RenderBuffer itself.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.depthSlice">
      <summary>
        <para>Slice of a Texture3D or Texture2DArray to set as a render target.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.depthStore">
      <summary>
        <para>Store Actions for Depth Buffer. It will override any actions set on RenderBuffer itself.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTargetSetup.mipLevel">
      <summary>
        <para>Mip Level to render to.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTargetSetup.#ctor(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer)">
      <summary>
        <para>Constructs RenderTargetSetup.</para>
      </summary>
      <param name="color">Color Buffer(s) to set.</param>
      <param name="depth">Depth Buffer to set.</param>
      <param name="mipLevel">Mip Level to render to.</param>
      <param name="face">Cubemap face to render to.</param>
      <param name="mip"></param>
    </member>
    <member name="M:UnityEngine.RenderTargetSetup.#ctor(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer,System.Int32)">
      <summary>
        <para>Constructs RenderTargetSetup.</para>
      </summary>
      <param name="color">Color Buffer(s) to set.</param>
      <param name="depth">Depth Buffer to set.</param>
      <param name="mipLevel">Mip Level to render to.</param>
      <param name="face">Cubemap face to render to.</param>
      <param name="mip"></param>
    </member>
    <member name="M:UnityEngine.RenderTargetSetup.#ctor(UnityEngine.RenderBuffer,UnityEngine.RenderBuffer,System.Int32,UnityEngine.CubemapFace)">
      <summary>
        <para>Constructs RenderTargetSetup.</para>
      </summary>
      <param name="color">Color Buffer(s) to set.</param>
      <param name="depth">Depth Buffer to set.</param>
      <param name="mipLevel">Mip Level to render to.</param>
      <param name="face">Cubemap face to render to.</param>
      <param name="mip"></param>
    </member>
    <member name="M:UnityEngine.RenderTargetSetup.#ctor(UnityEngine.RenderBuffer[],UnityEngine.RenderBuffer)">
      <summary>
        <para>Constructs RenderTargetSetup.</para>
      </summary>
      <param name="color">Color Buffer(s) to set.</param>
      <param name="depth">Depth Buffer to set.</param>
      <param name="mipLevel">Mip Level to render to.</param>
      <param name="face">Cubemap face to render to.</param>
      <param name="mip"></param>
    </member>
    <member name="M:UnityEngine.RenderTargetSetup.#ctor(UnityEngine.RenderBuffer[],UnityEngine.RenderBuffer,System.Int32)">
      <summary>
        <para>Constructs RenderTargetSetup.</para>
      </summary>
      <param name="color">Color Buffer(s) to set.</param>
      <param name="depth">Depth Buffer to set.</param>
      <param name="mipLevel">Mip Level to render to.</param>
      <param name="face">Cubemap face to render to.</param>
      <param name="mip"></param>
    </member>
    <member name="M:UnityEngine.RenderTargetSetup.#ctor(UnityEngine.RenderBuffer[],UnityEngine.RenderBuffer,System.Int32,UnityEngine.CubemapFace)">
      <summary>
        <para>Constructs RenderTargetSetup.</para>
      </summary>
      <param name="color">Color Buffer(s) to set.</param>
      <param name="depth">Depth Buffer to set.</param>
      <param name="mipLevel">Mip Level to render to.</param>
      <param name="face">Cubemap face to render to.</param>
      <param name="mip"></param>
    </member>
    <member name="T:UnityEngine.RenderTexture">
      <summary>
        <para>Render textures are textures that can be rendered to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.active">
      <summary>
        <para>Currently active render texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.antiAliasing">
      <summary>
        <para>The antialiasing level for the RenderTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.autoGenerateMips">
      <summary>
        <para>Mipmap levels are generated automatically when this flag is set.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.colorBuffer">
      <summary>
        <para>Color buffer of the render texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.depth">
      <summary>
        <para>The precision of the render texture's depth buffer in bits (0, 16, 24/32 are supported).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.depthBuffer">
      <summary>
        <para>Depth/stencil buffer of the render texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.dimension">
      <summary>
        <para>Dimensionality (type) of the render texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.enableRandomWrite">
      <summary>
        <para>Enable random access write into this render texture on Shader Model 5.0 level shaders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.format">
      <summary>
        <para>The color format of the render texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.height">
      <summary>
        <para>The height of the render texture in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.isVolume">
      <summary>
        <para>If enabled, this Render Texture will be used as a Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.sRGB">
      <summary>
        <para>Does this render texture use sRGB read/write conversions (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.useMipMap">
      <summary>
        <para>Render texture has mipmaps when this flag is set.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.volumeDepth">
      <summary>
        <para>Volume extent of a 3D render texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RenderTexture.width">
      <summary>
        <para>The width of the render texture in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTexture.Create">
      <summary>
        <para>Actually creates the RenderTexture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTexture.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Creates a new RenderTexture object.</para>
      </summary>
      <param name="width">Texture width in pixels.</param>
      <param name="height">Texture height in pixels.</param>
      <param name="depth">Number of bits in depth buffer (0, 16 or 24). Note that only 24 bit depth has stencil buffer.</param>
      <param name="format">Texture color format.</param>
      <param name="readWrite">How or if color space conversions should be done on texture read/write.</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.#ctor(System.Int32,System.Int32,System.Int32,UnityEngine.RenderTextureFormat)">
      <summary>
        <para>Creates a new RenderTexture object.</para>
      </summary>
      <param name="width">Texture width in pixels.</param>
      <param name="height">Texture height in pixels.</param>
      <param name="depth">Number of bits in depth buffer (0, 16 or 24). Note that only 24 bit depth has stencil buffer.</param>
      <param name="format">Texture color format.</param>
      <param name="readWrite">How or if color space conversions should be done on texture read/write.</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.#ctor(System.Int32,System.Int32,System.Int32,UnityEngine.RenderTextureFormat,UnityEngine.RenderTextureReadWrite)">
      <summary>
        <para>Creates a new RenderTexture object.</para>
      </summary>
      <param name="width">Texture width in pixels.</param>
      <param name="height">Texture height in pixels.</param>
      <param name="depth">Number of bits in depth buffer (0, 16 or 24). Note that only 24 bit depth has stencil buffer.</param>
      <param name="format">Texture color format.</param>
      <param name="readWrite">How or if color space conversions should be done on texture read/write.</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.DiscardContents">
      <summary>
        <para>Hint the GPU driver that the contents of the RenderTexture will not be used.</para>
      </summary>
      <param name="discardColor">Should the colour buffer be discarded?</param>
      <param name="discardDepth">Should the depth buffer be discarded?</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.DiscardContents(System.Boolean,System.Boolean)">
      <summary>
        <para>Hint the GPU driver that the contents of the RenderTexture will not be used.</para>
      </summary>
      <param name="discardColor">Should the colour buffer be discarded?</param>
      <param name="discardDepth">Should the depth buffer be discarded?</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.GenerateMips">
      <summary>
        <para>Generate mipmap levels of a render texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTexture.GetNativeDepthBufferPtr">
      <summary>
        <para>Retrieve a native (underlying graphics API) pointer to the depth buffer resource.</para>
      </summary>
      <returns>
        <para>Pointer to an underlying graphics API depth buffer resource.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.RenderTexture.GetTemporary(System.Int32,System.Int32,System.Int32,UnityEngine.RenderTextureFormat,UnityEngine.RenderTextureReadWrite,System.Int32)">
      <summary>
        <para>Allocate a temporary render texture.</para>
      </summary>
      <param name="width">Width in pixels.</param>
      <param name="height">Height in pixels.</param>
      <param name="depthBuffer">Depth buffer bits (0, 16 or 24). Note that only 24 bit depth has stencil buffer.</param>
      <param name="format">Render texture format.</param>
      <param name="readWrite">Color space conversion mode.</param>
      <param name="antiAliasing">Anti-aliasing (1,2,4,8).</param>
    </member>
    <member name="M:UnityEngine.RenderTexture.IsCreated">
      <summary>
        <para>Is the render texture actually created?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTexture.MarkRestoreExpected">
      <summary>
        <para>Indicate that there's a RenderTexture restore operation expected.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTexture.Release">
      <summary>
        <para>Releases the RenderTexture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RenderTexture.ReleaseTemporary(UnityEngine.RenderTexture)">
      <summary>
        <para>Release a temporary texture allocated with GetTemporary.</para>
      </summary>
      <param name="temp"></param>
    </member>
    <member name="M:UnityEngine.RenderTexture.SetGlobalShaderProperty(System.String)">
      <summary>
        <para>Assigns this RenderTexture as a global shader property named propertyName.</para>
      </summary>
      <param name="propertyName"></param>
    </member>
    <member name="M:UnityEngine.RenderTexture.SupportsStencil(UnityEngine.RenderTexture)">
      <summary>
        <para>Does a RenderTexture have stencil buffer?</para>
      </summary>
      <param name="rt">Render texture, or null for main screen.</param>
    </member>
    <member name="T:UnityEngine.RenderTextureFormat">
      <summary>
        <para>Format of a RenderTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGB1555">
      <summary>
        <para>Color render texture format, 1 bit for Alpha channel, 5 bits for Red, Green and Blue channels.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGB2101010">
      <summary>
        <para>Color render texture format. 10 bits for colors, 2 bits for alpha.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGB32">
      <summary>
        <para>Color render texture format, 8 bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGB4444">
      <summary>
        <para>Color render texture format, 4 bit per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGB64">
      <summary>
        <para>Four color render texture format, 16 bits per channel, fixed point, unsigned normalized.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGBFloat">
      <summary>
        <para>Color render texture format, 32 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGBHalf">
      <summary>
        <para>Color render texture format, 16 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.ARGBInt">
      <summary>
        <para>Four channel (ARGB) render texture format, 32 bit signed integer per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.BGRA32">
      <summary>
        <para>Color render texture format, 8 bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.Default">
      <summary>
        <para>Default color render texture format: will be chosen accordingly to Frame Buffer format and Platform.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.DefaultHDR">
      <summary>
        <para>Default HDR color render texture format: will be chosen accordingly to Frame Buffer format and Platform.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.Depth">
      <summary>
        <para>A depth render texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.R8">
      <summary>
        <para>Scalar (R) render texture format, 8 bit fixed point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RFloat">
      <summary>
        <para>Scalar (R) render texture format, 32 bit floating point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RG16">
      <summary>
        <para>Two channel (RG) render texture format, 8 bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RG32">
      <summary>
        <para>Two color (RG) render texture format, 16 bits per channel, fixed point, unsigned normalized.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RGB111110Float">
      <summary>
        <para>Color render texture format. R and G channels are 11 bit floating point, B channel is 10 bit floating point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RGB565">
      <summary>
        <para>Color render texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RGBAUShort">
      <summary>
        <para>Four channel (RGBA) render texture format, 16 bit unsigned integer per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RGFloat">
      <summary>
        <para>Two color (RG) render texture format, 32 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RGHalf">
      <summary>
        <para>Two color (RG) render texture format, 16 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RGInt">
      <summary>
        <para>Two channel (RG) render texture format, 32 bit signed integer per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RHalf">
      <summary>
        <para>Scalar (R) render texture format, 16 bit floating point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.RInt">
      <summary>
        <para>Scalar (R) render texture format, 32 bit signed integer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureFormat.Shadowmap">
      <summary>
        <para>A native shadowmap render texture format.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RenderTextureReadWrite">
      <summary>
        <para>Color space conversion mode of a RenderTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureReadWrite.sRGB">
      <summary>
        <para>Render texture contains sRGB (color) data, perform Linear&lt;-&gt;sRGB conversions on it.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureReadWrite.Default">
      <summary>
        <para>Default color space conversion based on project settings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RenderTextureReadWrite.Linear">
      <summary>
        <para>Render texture contains linear (non-color) data; don't perform color conversions on it.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RequireComponent">
      <summary>
        <para>The RequireComponent attribute automatically adds required components as dependencies.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RequireComponent.#ctor(System.Type)">
      <summary>
        <para>Require a single component.</para>
      </summary>
      <param name="requiredComponent"></param>
    </member>
    <member name="M:UnityEngine.RequireComponent.#ctor(System.Type,System.Type)">
      <summary>
        <para>Require two components.</para>
      </summary>
      <param name="requiredComponent"></param>
      <param name="requiredComponent2"></param>
    </member>
    <member name="M:UnityEngine.RequireComponent.#ctor(System.Type,System.Type,System.Type)">
      <summary>
        <para>Require three components.</para>
      </summary>
      <param name="requiredComponent"></param>
      <param name="requiredComponent2"></param>
      <param name="requiredComponent3"></param>
    </member>
    <member name="T:UnityEngine.Resolution">
      <summary>
        <para>Represents a display resolution.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Resolution.height">
      <summary>
        <para>Resolution height in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Resolution.refreshRate">
      <summary>
        <para>Resolution's vertical refresh rate in Hz.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Resolution.width">
      <summary>
        <para>Resolution width in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Resolution.ToString">
      <summary>
        <para>Returns a nicely formatted string of the resolution.</para>
      </summary>
      <returns>
        <para>A string with the format "width x height @ refreshRateHz".</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ResourceRequest">
      <summary>
        <para>Asynchronous load request from the Resources bundle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ResourceRequest.asset">
      <summary>
        <para>Asset object being loaded (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Resources">
      <summary>
        <para>The Resources class allows you to find and access Objects including assets.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Resources.FindObjectsOfTypeAll(System.Type)">
      <summary>
        <para>Returns a list of all objects of Type type.</para>
      </summary>
      <param name="type">Type of the class to match while searching.</param>
      <returns>
        <para>An array of objects whose class is type or is derived from type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Resources.FindObjectsOfTypeAll">
      <summary>
        <para>Returns a list of all objects of Type T.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Resources.Load(System.String)">
      <summary>
        <para>Loads an asset stored at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.Load(System.String,System.Type)">
      <summary>
        <para>Loads an asset stored at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.Load(System.String)">
      <summary>
        <para>Loads an asset stored at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAll(System.String)">
      <summary>
        <para>Loads all assets in a folder or file at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAll(System.String,System.Type)">
      <summary>
        <para>Loads all assets in a folder or file at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAll(System.String)">
      <summary>
        <para>Loads all assets in a folder or file at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAssetAtPath(System.String,System.Type)">
      <summary>
        <para>Returns a resource at an asset path (Editor Only).</para>
      </summary>
      <param name="assetPath">Pathname of the target asset.</param>
      <param name="type">Type filter for objects returned.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAssetAtPath(System.String)">
      <summary>
        <para>Returns a resource at an asset path (Editor Only).</para>
      </summary>
      <param name="assetPath">Pathname of the target asset.</param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAsync(System.String)">
      <summary>
        <para>Asynchronously loads an asset stored at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAsync(System.String,System.Type)">
      <summary>
        <para>Asynchronously loads an asset stored at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="systemTypeInstance">Type filter for objects returned.</param>
      <param name="type"></param>
    </member>
    <member name="M:UnityEngine.Resources.LoadAsync(System.String)">
      <summary>
        <para>Asynchronously loads an asset stored at path in a Resources folder.</para>
      </summary>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
    </member>
    <member name="M:UnityEngine.Resources.UnloadAsset(UnityEngine.Object)">
      <summary>
        <para>Unloads assetToUnload from memory.</para>
      </summary>
      <param name="assetToUnload"></param>
    </member>
    <member name="M:UnityEngine.Resources.UnloadUnusedAssets">
      <summary>
        <para>Unloads assets that are not used.</para>
      </summary>
      <returns>
        <para>Object on which you can yield to wait until the operation completes.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Rigidbody">
      <summary>
        <para>Control of an object's position through physics simulation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.angularDrag">
      <summary>
        <para>The angular drag of the object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.angularVelocity">
      <summary>
        <para>The angular velocity vector of the rigidbody measured in radians per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.centerOfMass">
      <summary>
        <para>The center of mass relative to the transform's origin.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.collisionDetectionMode">
      <summary>
        <para>The Rigidbody's collision detection mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.constraints">
      <summary>
        <para>Controls which degrees of freedom are allowed for the simulation of this Rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.detectCollisions">
      <summary>
        <para>Should collision detection be enabled? (By default always enabled).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.drag">
      <summary>
        <para>The drag of the object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.freezeRotation">
      <summary>
        <para>Controls whether physics will change the rotation of the object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.inertiaTensor">
      <summary>
        <para>The diagonal inertia tensor of mass relative to the center of mass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.inertiaTensorRotation">
      <summary>
        <para>The rotation of the inertia tensor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.interpolation">
      <summary>
        <para>Interpolation allows you to smooth out the effect of running physics at a fixed frame rate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.isKinematic">
      <summary>
        <para>Controls whether physics affects the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.mass">
      <summary>
        <para>The mass of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.maxAngularVelocity">
      <summary>
        <para>The maximimum angular velocity of the rigidbody. (Default 7) range { 0, infinity }.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.maxDepenetrationVelocity">
      <summary>
        <para>Maximum velocity of a rigidbody when moving out of penetrating state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.position">
      <summary>
        <para>The position of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.rotation">
      <summary>
        <para>The rotation of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.sleepAngularVelocity">
      <summary>
        <para>The angular velocity below which objects start going to sleep.  (Default 0.14) range { 0, infinity }.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.sleepThreshold">
      <summary>
        <para>The mass-normalized energy threshold, below which objects start going to sleep.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.sleepVelocity">
      <summary>
        <para>The linear velocity below which objects start going to sleep. (Default 0.14) range { 0, infinity }.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.solverIterations">
      <summary>
        <para>The solverIterations determines how accurately Rigidbody joints and collision contacts are resolved. Overrides Physics.defaultSolverIterations. Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.solverVelocityIterations">
      <summary>
        <para>The solverVelocityIterations affects how how accurately Rigidbody joints and collision contacts are resolved. Overrides Physics.defaultSolverVelocityIterations. Must be positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.useConeFriction">
      <summary>
        <para>Force cone friction to be used for this rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.useGravity">
      <summary>
        <para>Controls whether gravity affects this rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.velocity">
      <summary>
        <para>The velocity vector of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody.worldCenterOfMass">
      <summary>
        <para>The center of mass of the rigidbody in world space (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddExplosionForce(System.Single,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Applies a force to a rigidbody that simulates explosion effects.</para>
      </summary>
      <param name="explosionForce">The force of the explosion (which may be modified by distance).</param>
      <param name="explosionPosition">The centre of the sphere within which the explosion has its effect.</param>
      <param name="explosionRadius">The radius of the sphere within which the explosion has its effect.</param>
      <param name="upwardsModifier">Adjustment to the apparent position of the explosion to make it seem to lift objects.</param>
      <param name="mode">The method used to apply the force to its targets.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddExplosionForce(System.Single,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Applies a force to a rigidbody that simulates explosion effects.</para>
      </summary>
      <param name="explosionForce">The force of the explosion (which may be modified by distance).</param>
      <param name="explosionPosition">The centre of the sphere within which the explosion has its effect.</param>
      <param name="explosionRadius">The radius of the sphere within which the explosion has its effect.</param>
      <param name="upwardsModifier">Adjustment to the apparent position of the explosion to make it seem to lift objects.</param>
      <param name="mode">The method used to apply the force to its targets.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddExplosionForce(System.Single,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.ForceMode)">
      <summary>
        <para>Applies a force to a rigidbody that simulates explosion effects.</para>
      </summary>
      <param name="explosionForce">The force of the explosion (which may be modified by distance).</param>
      <param name="explosionPosition">The centre of the sphere within which the explosion has its effect.</param>
      <param name="explosionRadius">The radius of the sphere within which the explosion has its effect.</param>
      <param name="upwardsModifier">Adjustment to the apparent position of the explosion to make it seem to lift objects.</param>
      <param name="mode">The method used to apply the force to its targets.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3)">
      <summary>
        <para>Adds a force to the Rigidbody.</para>
      </summary>
      <param name="force">Force vector in world coordinates.</param>
      <param name="mode">Type of force to apply.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForce(UnityEngine.Vector3,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a force to the Rigidbody.</para>
      </summary>
      <param name="force">Force vector in world coordinates.</param>
      <param name="mode">Type of force to apply.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForce(System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds a force to the Rigidbody.</para>
      </summary>
      <param name="x">Size of force along the world x-axis.</param>
      <param name="y">Size of force along the world y-axis.</param>
      <param name="z">Size of force along the world z-axis.</param>
      <param name="mode">Type of force to apply.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForce(System.Single,System.Single,System.Single,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a force to the Rigidbody.</para>
      </summary>
      <param name="x">Size of force along the world x-axis.</param>
      <param name="y">Size of force along the world y-axis.</param>
      <param name="z">Size of force along the world z-axis.</param>
      <param name="mode">Type of force to apply.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForceAtPosition(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Applies force at position. As a result this will apply a torque and force on the object.</para>
      </summary>
      <param name="force">Force vector in world coordinates.</param>
      <param name="position">Position in world coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddForceAtPosition(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.ForceMode)">
      <summary>
        <para>Applies force at position. As a result this will apply a torque and force on the object.</para>
      </summary>
      <param name="force">Force vector in world coordinates.</param>
      <param name="position">Position in world coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeForce(UnityEngine.Vector3)">
      <summary>
        <para>Adds a force to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="force">Force vector in local coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeForce(UnityEngine.Vector3,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a force to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="force">Force vector in local coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeForce(System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds a force to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="x">Size of force along the local x-axis.</param>
      <param name="y">Size of force along the local y-axis.</param>
      <param name="z">Size of force along the local z-axis.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeForce(System.Single,System.Single,System.Single,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a force to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="x">Size of force along the local x-axis.</param>
      <param name="y">Size of force along the local y-axis.</param>
      <param name="z">Size of force along the local z-axis.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeTorque(UnityEngine.Vector3)">
      <summary>
        <para>Adds a torque to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="torque">Torque vector in local coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeTorque(UnityEngine.Vector3,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a torque to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="torque">Torque vector in local coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeTorque(System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds a torque to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="x">Size of torque along the local x-axis.</param>
      <param name="y">Size of torque along the local y-axis.</param>
      <param name="z">Size of torque along the local z-axis.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddRelativeTorque(System.Single,System.Single,System.Single,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a torque to the rigidbody relative to its coordinate system.</para>
      </summary>
      <param name="x">Size of torque along the local x-axis.</param>
      <param name="y">Size of torque along the local y-axis.</param>
      <param name="z">Size of torque along the local z-axis.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddTorque(UnityEngine.Vector3)">
      <summary>
        <para>Adds a torque to the rigidbody.</para>
      </summary>
      <param name="torque">Torque vector in world coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddTorque(UnityEngine.Vector3,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a torque to the rigidbody.</para>
      </summary>
      <param name="torque">Torque vector in world coordinates.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddTorque(System.Single,System.Single,System.Single)">
      <summary>
        <para>Adds a torque to the rigidbody.</para>
      </summary>
      <param name="x">Size of torque along the world x-axis.</param>
      <param name="y">Size of torque along the world y-axis.</param>
      <param name="z">Size of torque along the world z-axis.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.AddTorque(System.Single,System.Single,System.Single,UnityEngine.ForceMode)">
      <summary>
        <para>Adds a torque to the rigidbody.</para>
      </summary>
      <param name="x">Size of torque along the world x-axis.</param>
      <param name="y">Size of torque along the world y-axis.</param>
      <param name="z">Size of torque along the world z-axis.</param>
      <param name="mode"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.ClosestPointOnBounds(UnityEngine.Vector3)">
      <summary>
        <para>The closest point to the bounding box of the attached colliders.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.GetPointVelocity(UnityEngine.Vector3)">
      <summary>
        <para>The velocity of the rigidbody at the point worldPoint in global space.</para>
      </summary>
      <param name="worldPoint"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.GetRelativePointVelocity(UnityEngine.Vector3)">
      <summary>
        <para>The velocity relative to the rigidbody at the point relativePoint.</para>
      </summary>
      <param name="relativePoint"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.IsSleeping">
      <summary>
        <para>Is the rigidbody sleeping?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody.MovePosition(UnityEngine.Vector3)">
      <summary>
        <para>Moves the rigidbody to position.</para>
      </summary>
      <param name="position">The new position for the Rigidbody object.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.MoveRotation(UnityEngine.Quaternion)">
      <summary>
        <para>Rotates the rigidbody to rotation.</para>
      </summary>
      <param name="rot">The new rotation for the Rigidbody.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody.ResetCenterOfMass">
      <summary>
        <para>Reset the center of mass of the rigidbody.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody.ResetInertiaTensor">
      <summary>
        <para>Reset the inertia tensor value and rotation.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody.SetDensity(System.Single)">
      <summary>
        <para>Sets the mass based on the attached colliders assuming a constant density.</para>
      </summary>
      <param name="density"></param>
    </member>
    <member name="M:UnityEngine.Rigidbody.Sleep">
      <summary>
        <para>Forces a rigidbody to sleep at least one frame.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody.SweepTest(UnityEngine.Vector3,UnityEngine.RaycastHit&amp;,System.Single,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Tests if a rigidbody would collide with anything, if it was moved through the scene.</para>
      </summary>
      <param name="direction">The direction into which to sweep the rigidbody.</param>
      <param name="hitInfo">If true is returned, hitInfo will contain more information about where the collider was hit (See Also: RaycastHit).</param>
      <param name="maxDistance">The length of the sweep.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>True when the rigidbody sweep intersects any collider, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody.SweepTestAll(UnityEngine.Vector3,System.Single,UnityEngine.QueryTriggerInteraction)">
      <summary>
        <para>Like Rigidbody.SweepTest, but returns all hits.</para>
      </summary>
      <param name="direction">The direction into which to sweep the rigidbody.</param>
      <param name="maxDistance">The length of the sweep.</param>
      <param name="queryTriggerInteraction">Specifies whether this query should hit Triggers.</param>
      <returns>
        <para>An array of all colliders hit in the sweep.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody.WakeUp">
      <summary>
        <para>Forces a rigidbody to wake up.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rigidbody2D">
      <summary>
        <para>Rigidbody physics component for 2D sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.angularDrag">
      <summary>
        <para>Coefficient of angular drag.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.angularVelocity">
      <summary>
        <para>Angular velocity in degrees per second.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.attachedColliderCount">
      <summary>
        <para>Returns the number of Collider2D attached to this Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.bodyType">
      <summary>
        <para>The physical behaviour type of the Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.centerOfMass">
      <summary>
        <para>The center of mass of the rigidBody in local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.collisionDetectionMode">
      <summary>
        <para>The method used by the physics engine to check if two objects have collided.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.constraints">
      <summary>
        <para>Controls which degrees of freedom are allowed for the simulation of this Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.drag">
      <summary>
        <para>Coefficient of drag.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.fixedAngle">
      <summary>
        <para>Should the rigidbody be prevented from rotating?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.freezeRotation">
      <summary>
        <para>Controls whether physics will change the rotation of the object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.gravityScale">
      <summary>
        <para>The degree to which this object is affected by gravity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.inertia">
      <summary>
        <para>The rigidBody rotational inertia.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.interpolation">
      <summary>
        <para>Physics interpolation used between updates.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.isKinematic">
      <summary>
        <para>Should this rigidbody be taken out of physics control?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.mass">
      <summary>
        <para>Mass of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.position">
      <summary>
        <para>The position of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.rotation">
      <summary>
        <para>The rotation of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.sharedMaterial">
      <summary>
        <para>The PhysicsMaterial2D that is applied to all Collider2D attached to this Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.simulated">
      <summary>
        <para>Indicates whether the rigid body should be simulated or not by the physics system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.sleepMode">
      <summary>
        <para>The sleep state that the rigidbody will initially be in.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.useAutoMass">
      <summary>
        <para>Should the total rigid-body mass be automatically calculated from the Collider2D.density of attached colliders?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.useFullKinematicContacts">
      <summary>
        <para>Should kinematickinematic and kinematicstatic collisions be allowed?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.velocity">
      <summary>
        <para>Linear velocity of the rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.worldCenterOfMass">
      <summary>
        <para>Gets the center of mass of the rigidBody in global space.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddForce(UnityEngine.Vector2,UnityEngine.ForceMode2D)">
      <summary>
        <para>Apply a force to the rigidbody.</para>
      </summary>
      <param name="force">Components of the force in the X and Y axes.</param>
      <param name="mode">The method used to apply the specified force.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddForceAtPosition(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ForceMode2D)">
      <summary>
        <para>Apply a force at a given position in space.</para>
      </summary>
      <param name="force">Components of the force in the X and Y axes.</param>
      <param name="position">Position in world space to apply the force.</param>
      <param name="mode">The method used to apply the specified force.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddRelativeForce(UnityEngine.Vector2,UnityEngine.ForceMode2D)">
      <summary>
        <para>Adds a force to the rigidbody2D relative to its coordinate system.</para>
      </summary>
      <param name="relativeForce">Components of the force in the X and Y axes.</param>
      <param name="mode">The method used to apply the specified force.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddTorque(System.Single,UnityEngine.ForceMode2D)">
      <summary>
        <para>Apply a torque at the rigidbody's centre of mass.</para>
      </summary>
      <param name="torque">Torque to apply.</param>
      <param name="mode">The force mode to use.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Cast(UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>All the Collider2D shapes attached to the Rigidbody2D are cast into the scene starting at each collider position ignoring the colliders attached to the same Rigidbody2D.</para>
      </summary>
      <param name="direction">Vector representing the direction to cast each Collider2D shape.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the shape(s).</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Cast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>All the Collider2D shapes attached to the Rigidbody2D are cast into the scene starting at each collider position ignoring the colliders attached to the same Rigidbody2D.</para>
      </summary>
      <param name="direction">Vector representing the direction to cast each Collider2D shape.</param>
      <param name="contactFilter">Filter results defined by the contact filter.</param>
      <param name="results">Array to receive results.</param>
      <param name="distance">Maximum distance over which to cast the shape(s).</param>
      <returns>
        <para>The number of results returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Distance(UnityEngine.Collider2D)">
      <summary>
        <para>Calculates the minimum distance of this collider against all Collider2D attached to this Rigidbody2D.</para>
      </summary>
      <param name="collider">A collider used to calculate the minimum distance against all colliders attached to this Rigidbody2D.</param>
      <returns>
        <para>The minimum distance of collider against all colliders attached to this Rigidbody2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetAttachedColliders(UnityEngine.Collider2D[])">
      <summary>
        <para>Returns all Collider2D that are attached to this Rigidbody2D.</para>
      </summary>
      <param name="results">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of Collider2D placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points for all of the collider(s) attached to this rigidbody.</para>
      </summary>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with any of the collider(s) attached to this rigidbody.</para>
      </summary>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of colliders placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Retrieves all contact points for all of the collider(s) attached to this rigidbody, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="contacts">An array of ContactPoint2D used to receive the results.</param>
      <returns>
        <para>Returns the number of contacts placed in the contacts array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Retrieves all colliders in contact with any of the collider(s) attached to this rigidbody, with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <param name="colliders">An array of Collider2D used to receive the results.</param>
      <returns>
        <para>Returns the number of colliders placed in the colliders array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetPoint(UnityEngine.Vector2)">
      <summary>
        <para>Get a local space point given the point point in rigidBody global space.</para>
      </summary>
      <param name="point">The global space point to transform into local space.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetPointVelocity(UnityEngine.Vector2)">
      <summary>
        <para>The velocity of the rigidbody at the point Point in global space.</para>
      </summary>
      <param name="point">The global space point to calculate velocity for.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetRelativePoint(UnityEngine.Vector2)">
      <summary>
        <para>Get a global space point given the point relativePoint in rigidBody local space.</para>
      </summary>
      <param name="relativePoint">The local space point to transform into global space.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetRelativePointVelocity(UnityEngine.Vector2)">
      <summary>
        <para>The velocity of the rigidbody at the point Point in local space.</para>
      </summary>
      <param name="relativePoint">The local space point to calculate velocity for.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetRelativeVector(UnityEngine.Vector2)">
      <summary>
        <para>Get a global space vector given the vector relativeVector in rigidBody local space.</para>
      </summary>
      <param name="relativeVector">The local space vector to transform into a global space vector.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetVector(UnityEngine.Vector2)">
      <summary>
        <para>Get a local space vector given the vector vector in rigidBody global space.</para>
      </summary>
      <param name="vector">The global space vector to transform into a local space vector.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsAwake">
      <summary>
        <para>Is the rigidbody "awake"?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsSleeping">
      <summary>
        <para>Is the rigidbody "sleeping"?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouching(UnityEngine.Collider2D)">
      <summary>
        <para>Checks whether the collider  is touching any of the collider(s) attached to this rigidbody or not.</para>
      </summary>
      <param name="collider">The collider to check if it is touching any of the collider(s) attached to this rigidbody.</param>
      <returns>
        <para>Whether the collider is touching any of the collider(s) attached to this rigidbody or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouching(UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Checks whether the collider  is touching any of the collider(s) attached to this rigidbody or not with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="collider">The collider to check if it is touching any of the collider(s) attached to this rigidbody.</param>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <returns>
        <para>Whether the collider is touching any of the collider(s) attached to this rigidbody or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouching(UnityEngine.ContactFilter2D)">
      <summary>
        <para>Checks whether any collider is touching any of the collider(s) attached to this rigidbody or not with the results filtered by the ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth, or normal angle.</param>
      <returns>
        <para>Whether any collider is touching any of the collider(s) attached to this rigidbody or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouchingLayers(System.Int32)">
      <summary>
        <para>Checks whether any of the collider(s) attached to this rigidbody are touching any colliders on the specified layerMask or not.</para>
      </summary>
      <param name="layerMask">Any colliders on any of these layers count as touching.</param>
      <returns>
        <para>Whether any of the collider(s) attached to this rigidbody are touching any colliders on the specified layerMask or not.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.MovePosition(UnityEngine.Vector2)">
      <summary>
        <para>Moves the rigidbody to position.</para>
      </summary>
      <param name="position">The new position for the Rigidbody object.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.MoveRotation(System.Single)">
      <summary>
        <para>Rotates the rigidbody to angle (given in degrees).</para>
      </summary>
      <param name="angle">The new rotation angle for the Rigidbody object.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.OverlapCollider(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Get a list of all colliders that overlap all colliders attached to this Rigidbody2D.</para>
      </summary>
      <param name="contactFilter">The contact filter used to filter the results differently, such as by layer mask, Z depth.  Note that normal angle is not used for overlap testing.</param>
      <param name="results">The array to receive results.  The size of the array determines the maximum number of results that can be returned.</param>
      <returns>
        <para>Returns the number of results placed in the results array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.OverlapPoint(UnityEngine.Vector2)">
      <summary>
        <para>Check if any of the Rigidbody2D colliders overlap a point in space.</para>
      </summary>
      <param name="point">A point in world space.</param>
      <returns>
        <para>Whether the point overlapped any of the Rigidbody2D colliders.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Sleep">
      <summary>
        <para>Make the rigidbody "sleep".</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.WakeUp">
      <summary>
        <para>Disables the "sleeping" state of a rigidbody.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyConstraints">
      <summary>
        <para>Use these flags to constrain motion of Rigidbodies.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezeAll">
      <summary>
        <para>Freeze rotation and motion along all axes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezePosition">
      <summary>
        <para>Freeze motion along all axes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezePositionX">
      <summary>
        <para>Freeze motion along the X-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezePositionY">
      <summary>
        <para>Freeze motion along the Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezePositionZ">
      <summary>
        <para>Freeze motion along the Z-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezeRotation">
      <summary>
        <para>Freeze rotation along all axes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezeRotationX">
      <summary>
        <para>Freeze rotation along the X-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezeRotationY">
      <summary>
        <para>Freeze rotation along the Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.FreezeRotationZ">
      <summary>
        <para>Freeze rotation along the Z-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints.None">
      <summary>
        <para>No constraints.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyConstraints2D">
      <summary>
        <para>Use these flags to constrain motion of the Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezeAll">
      <summary>
        <para>Freeze rotation and motion along all axes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezePosition">
      <summary>
        <para>Freeze motion along the X-axis and Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezePositionX">
      <summary>
        <para>Freeze motion along the X-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezePositionY">
      <summary>
        <para>Freeze motion along the Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezeRotation">
      <summary>
        <para>Freeze rotation along the Z-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.None">
      <summary>
        <para>No constraints.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyInterpolation">
      <summary>
        <para>Rigidbody interpolation mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation.Extrapolate">
      <summary>
        <para>Extrapolation will predict the position of the rigidbody based on the current velocity.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation.Interpolate">
      <summary>
        <para>Interpolation will always lag a little bit behind but can be smoother than extrapolation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation.None">
      <summary>
        <para>No Interpolation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyInterpolation2D">
      <summary>
        <para>Interpolation mode for Rigidbody2D objects.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation2D.Extrapolate">
      <summary>
        <para>Smooth an object's movement based on an estimate of its position in the next frame.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation2D.Interpolate">
      <summary>
        <para>Smooth movement based on the object's positions in previous frames.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation2D.None">
      <summary>
        <para>Do not apply any smoothing to the object's movement.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodySleepMode2D">
      <summary>
        <para>Settings for a Rigidbody2D's initial sleep state.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodySleepMode2D.NeverSleep">
      <summary>
        <para>Rigidbody2D never automatically sleeps.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodySleepMode2D.StartAsleep">
      <summary>
        <para>Rigidbody2D is initially asleep.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodySleepMode2D.StartAwake">
      <summary>
        <para>Rigidbody2D is initially awake.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyType2D">
      <summary>
        <para>The physical behaviour type of the Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyType2D.Dynamic">
      <summary>
        <para>Sets the Rigidbody2D to have dynamic behaviour.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyType2D.Kinematic">
      <summary>
        <para>Sets the Rigidbody2D to have kinematic behaviour.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyType2D.Static">
      <summary>
        <para>Sets the Rigidbody2D to have static behaviour.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RotationDriveMode">
      <summary>
        <para>Control ConfigurableJoint's rotation with either X &amp; YZ or Slerp Drive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RotationDriveMode.Slerp">
      <summary>
        <para>Use Slerp drive.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RotationDriveMode.XYAndZ">
      <summary>
        <para>Use XY &amp; Z Drive.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RPC">
      <summary>
        <para>Attribute for setting up RPC functions.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RPCMode">
      <summary>
        <para>Option for who will receive an RPC, used by NetworkView.RPC.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RPCMode.All">
      <summary>
        <para>Sends to everyone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RPCMode.AllBuffered">
      <summary>
        <para>Sends to everyone and adds to the buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RPCMode.Others">
      <summary>
        <para>Sends to everyone except the sender.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RPCMode.OthersBuffered">
      <summary>
        <para>Sends to everyone except the sender and adds to the buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RPCMode.Server">
      <summary>
        <para>Sends to the server only.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RuntimeAnimatorController">
      <summary>
        <para>Runtime representation of the AnimatorController. It can be used to change the Animator's controller during runtime.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RuntimeAnimatorController.animationClips">
      <summary>
        <para>Retrieves all AnimationClip used by the controller.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RuntimeInitializeLoadType">
      <summary>
        <para>Set RuntimeInitializeOnLoadMethod type.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimeInitializeLoadType.AfterSceneLoad">
      <summary>
        <para>After scene is loaded.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimeInitializeLoadType.BeforeSceneLoad">
      <summary>
        <para>Before scene is loaded.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RuntimeInitializeOnLoadMethodAttribute">
      <summary>
        <para>Allow a runtime class method to be initialized when a game is loaded at runtime
      without action from the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RuntimeInitializeOnLoadMethodAttribute.loadType">
      <summary>
        <para>Set RuntimeInitializeOnLoadMethod type.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.RuntimeInitializeOnLoadMethodAttribute.#ctor">
      <summary>
        <para>Creation of the runtime class used when scenes are loaded.</para>
      </summary>
      <param name="loadType">Determine whether methods are called before or after the
        scene is loaded.</param>
    </member>
    <member name="M:UnityEngine.RuntimeInitializeOnLoadMethodAttribute.#ctor(UnityEngine.RuntimeInitializeLoadType)">
      <summary>
        <para>Creation of the runtime class used when scenes are loaded.</para>
      </summary>
      <param name="loadType">Determine whether methods are called before or after the
        scene is loaded.</param>
    </member>
    <member name="T:UnityEngine.RuntimePlatform">
      <summary>
        <para>The platform application is running. Returned by Application.platform.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.tvOS">
      <summary>
        <para>In the player on the Apple's tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.Android">
      <summary>
        <para>In the player on Android devices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.IPhonePlayer">
      <summary>
        <para>In the player on the iPhone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.LinuxEditor">
      <summary>
        <para>In the Unity editor on Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.LinuxPlayer">
      <summary>
        <para>In the player on Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.OSXDashboardPlayer">
      <summary>
        <para>In the Dashboard widget on macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.OSXEditor">
      <summary>
        <para>In the Unity editor on macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.OSXPlayer">
      <summary>
        <para>In the player on macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.OSXWebPlayer">
      <summary>
        <para>In the web player on macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.PS4">
      <summary>
        <para>In the player on the Playstation 4.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.PSP2">
      <summary>
        <para>In the player on the PS Vita.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.SamsungTVPlayer">
      <summary>
        <para>In the player on Samsung Smart TV.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.Switch">
      <summary>
        <para>In the player on Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.TizenPlayer">
      <summary>
        <para>In the player on Tizen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WebGLPlayer">
      <summary>
        <para>In the player on WebGL?</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WiiU">
      <summary>
        <para>In the player on Wii U.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WindowsEditor">
      <summary>
        <para>In the Unity editor on Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WindowsPlayer">
      <summary>
        <para>In the player on Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WindowsWebPlayer">
      <summary>
        <para>In the web player on Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WSAPlayerARM">
      <summary>
        <para>In the player on Windows Store Apps when CPU architecture is ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WSAPlayerX64">
      <summary>
        <para>In the player on Windows Store Apps when CPU architecture is X64.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.WSAPlayerX86">
      <summary>
        <para>In the player on Windows Store Apps when CPU architecture is X86.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RuntimePlatform.XboxOne">
      <summary>
        <para>In the player on Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SamsungTV">
      <summary>
        <para>Interface into SamsungTV specific functionality.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.airMouseConnected">
      <summary>
        <para>Returns true if there is an air mouse available.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.gamePadMode">
      <summary>
        <para>Changes the type of input the gamepad produces.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.gestureMode">
      <summary>
        <para>Changes the type of input the gesture camera produces.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.gestureWorking">
      <summary>
        <para>Returns true if the camera sees a hand.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.touchPadMode">
      <summary>
        <para>The type of input the remote's touch pad produces.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SamsungTV.GamePadMode">
      <summary>
        <para>Types of input the gamepad can produce.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.GamePadMode.Default">
      <summary>
        <para>Joystick style input.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.GamePadMode.Mouse">
      <summary>
        <para>Mouse style input.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SamsungTV.GestureMode">
      <summary>
        <para>Types of input the gesture camera can produce.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.GestureMode.Joystick">
      <summary>
        <para>Two hands control two joystick axes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.GestureMode.Mouse">
      <summary>
        <para>Hands control the mouse pointer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.GestureMode.Off">
      <summary>
        <para>No gesture input from the camera.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SamsungTV.OpenAPI">
      <summary>
        <para>Access to TV specific information.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.OpenAPI.serverType">
      <summary>
        <para>The server type. Possible values:
Developing, Development, Invalid, Operating.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.OpenAPI.timeOnTV">
      <summary>
        <para>Get local time on TV.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SamsungTV.OpenAPI.uid">
      <summary>
        <para>Get UID from TV.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SamsungTV.SetSystemLanguage(UnityEngine.SystemLanguage)">
      <summary>
        <para>Set the system language that is returned by Application.SystemLanguage.</para>
      </summary>
      <param name="language"></param>
    </member>
    <member name="T:UnityEngine.SamsungTV.TouchPadMode">
      <summary>
        <para>Types of input the remote's touchpad can produce.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.TouchPadMode.Dpad">
      <summary>
        <para>Remote dependent. On 2013 TVs dpad directions are determined by swiping in the correlating direction. On 2014 and 2015 TVs the remote has dpad buttons.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.TouchPadMode.Joystick">
      <summary>
        <para>Touchpad works like an analog joystick. Not supported on the 2015 TV as there is no touchpad.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SamsungTV.TouchPadMode.Mouse">
      <summary>
        <para>Touchpad controls a remote curosr like a laptop's touchpad. This can be replaced by airmouse functionality which is available on 2014 and 2015 TVs.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ScaleMode">
      <summary>
        <para>Scaling mode to draw textures with.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScaleMode.ScaleAndCrop">
      <summary>
        <para>Scales the texture, maintaining aspect ratio, so it completely covers the position rectangle passed to GUI.DrawTexture. If the texture is being draw to a rectangle with a different aspect ratio than the original, the image is cropped.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScaleMode.ScaleToFit">
      <summary>
        <para>Scales the texture, maintaining aspect ratio, so it completely fits withing the position rectangle passed to GUI.DrawTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScaleMode.StretchToFill">
      <summary>
        <para>Stretches the texture to fill the complete rectangle passed in to GUI.DrawTexture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SceneManagement.LoadSceneMode">
      <summary>
        <para>Used when loading a scene in a player.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SceneManagement.LoadSceneMode.Additive">
      <summary>
        <para>Adds the scene to the current loaded scenes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SceneManagement.LoadSceneMode.Single">
      <summary>
        <para>Closes all current loaded scenes and loads a scene.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SceneManagement.Scene">
      <summary>
        <para>Run-time data structure for *.unity file.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.Scene.buildIndex">
      <summary>
        <para>Returns the index of the scene in the Build Settings. Always returns -1 if the scene was loaded through an AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.Scene.isDirty">
      <summary>
        <para>Returns true if the scene is modifed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.Scene.isLoaded">
      <summary>
        <para>Returns true if the scene is loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.Scene.name">
      <summary>
        <para>Returns the name of the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.Scene.path">
      <summary>
        <para>Returns the relative path of the scene. Like: "AssetsMyScenesMyScene.unity".</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.Scene.rootCount">
      <summary>
        <para>The number of root transforms of this scene.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SceneManagement.Scene.GetRootGameObjects">
      <summary>
        <para>Returns all the root game objects in the scene.</para>
      </summary>
      <returns>
        <para>An array of game objects.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.Scene.GetRootGameObjects(System.Collections.Generic.List`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Returns all the root game objects in the scene.</para>
      </summary>
      <param name="rootGameObjects">A list which is used to return the root game objects.</param>
    </member>
    <member name="M:UnityEngine.SceneManagement.Scene.IsValid">
      <summary>
        <para>Whether this is a valid scene.
A scene may be invalid if, for example, you tried to open a scene that does not exist. In this case, the scene returned from EditorSceneManager.OpenScene would return False for IsValid.</para>
      </summary>
      <returns>
        <para>Whether this is a valid scene.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.SceneManagement.Scene.op_Equal(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Returns true if the Scenes are equal.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.SceneManagement.Scene.op_NotEqual(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Returns true if the Scenes are different.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="T:UnityEngine.SceneManagement.SceneManager">
      <summary>
        <para>Scene management at run-time.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.SceneManagement.SceneManager.activeSceneChanged(UnityEngine.Events.UnityAction`2&lt;UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene&gt;)">
      <summary>
        <para>Add a delegate to this to get notifications when the active scene has changed</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.SceneManagement.SceneManager.sceneCount">
      <summary>
        <para>The total number of currently loaded scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SceneManagement.SceneManager.sceneCountInBuildSettings">
      <summary>
        <para>Number of scenes in Build Settings.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.SceneManagement.SceneManager.sceneLoaded(UnityEngine.Events.UnityAction`2&lt;UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode&gt;)">
      <summary>
        <para>Add a delegate to this to get notifications when a scene has loaded</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.SceneManagement.SceneManager.sceneUnloaded(UnityEngine.Events.UnityAction`1&lt;UnityEngine.SceneManagement.Scene&gt;)">
      <summary>
        <para>Add a delegate to this to get notifications when a scene has unloaded</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.CreateScene(System.String)">
      <summary>
        <para>Create an empty new scene at runtime with the given name.</para>
      </summary>
      <param name="sceneName">The name of the new scene. It cannot be empty or null, or same as the name of the existing scenes.</param>
      <returns>
        <para>A reference to the new scene that was created, or an invalid scene if creation failed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.GetActiveScene">
      <summary>
        <para>Gets the currently active scene.</para>
      </summary>
      <returns>
        <para>The active scene.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.GetAllScenes">
      <summary>
        <para>Returns an array of all the scenes currently open in the hierarchy.</para>
      </summary>
      <returns>
        <para>Array of Scenes in the Hierarchy.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.GetSceneAt(System.Int32)">
      <summary>
        <para>Get the scene at index in the SceneManager's list of added scenes.</para>
      </summary>
      <param name="index">Index of the scene to get. Index must be greater than or equal to 0 and less than SceneManager.sceneCount.</param>
      <returns>
        <para>A reference to the scene at the index specified.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.GetSceneByBuildIndex(System.Int32)">
      <summary>
        <para>Get a scene struct from a build index.</para>
      </summary>
      <param name="buildIndex">Build index as shown in the Build Settings window.</param>
      <returns>
        <para>A reference to the scene, if valid. If not, an invalid scene is returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.GetSceneByName(System.String)">
      <summary>
        <para>Searches through the scenes added to the SceneManager for a scene with the given name.</para>
      </summary>
      <param name="name">Name of scene to find.</param>
      <returns>
        <para>A reference to the scene, if valid. If not, an invalid scene is returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.GetSceneByPath(System.String)">
      <summary>
        <para>Searches all scenes added to the SceneManager for a scene that has the given asset path.</para>
      </summary>
      <param name="scenePath">Path of the scene. Should be relative to the project folder. Like: "AssetsMyScenesMyScene.unity".</param>
      <returns>
        <para>A reference to the scene, if valid. If not, an invalid scene is returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.LoadScene(System.Int32,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
        <para>Loads the scene by its name or index in Build Settings.</para>
      </summary>
      <param name="sceneName">Name or path of the scene to load.</param>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to load.</param>
      <param name="mode">Allows you to specify whether or not to load the scene additively.
        See SceneManagement.LoadSceneMode for more information about the options.</param>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.LoadScene(System.String,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
        <para>Loads the scene by its name or index in Build Settings.</para>
      </summary>
      <param name="sceneName">Name or path of the scene to load.</param>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to load.</param>
      <param name="mode">Allows you to specify whether or not to load the scene additively.
        See SceneManagement.LoadSceneMode for more information about the options.</param>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.LoadSceneAsync(System.String,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
        <para>Loads the scene asynchronously in the background.</para>
      </summary>
      <param name="sceneName">Name or path of the scene to load.</param>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to load.</param>
      <param name="mode">If LoadSceneMode.Single then all current scenes will be unloaded before loading.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.LoadSceneAsync(System.Int32,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
        <para>Loads the scene asynchronously in the background.</para>
      </summary>
      <param name="sceneName">Name or path of the scene to load.</param>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to load.</param>
      <param name="mode">If LoadSceneMode.Single then all current scenes will be unloaded before loading.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.MergeScenes(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>This will merge the source scene into the destinationScene.</para>
      </summary>
      <param name="sourceScene">The scene that will be merged into the destination scene.</param>
      <param name="destinationScene">Existing scene to merge the source scene into.</param>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.MoveGameObjectToScene(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Move a GameObject from its current scene to a new Scene.</para>
      </summary>
      <param name="go">GameObject to move.</param>
      <param name="scene">Scene to move into.</param>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.SetActiveScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Set the scene to be active.</para>
      </summary>
      <param name="scene">The scene to be set.</param>
      <returns>
        <para>Returns false if the scene is not loaded yet.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.UnloadScene(System.Int32)">
      <summary>
        <para>Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.</para>
      </summary>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to unload.</param>
      <param name="sceneName">Name or path of the scene to unload.</param>
      <param name="scene">Scene to unload.</param>
      <returns>
        <para>Returns true if the scene is unloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.UnloadScene(System.String)">
      <summary>
        <para>Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.</para>
      </summary>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to unload.</param>
      <param name="sceneName">Name or path of the scene to unload.</param>
      <param name="scene">Scene to unload.</param>
      <returns>
        <para>Returns true if the scene is unloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.UnloadScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.</para>
      </summary>
      <param name="sceneBuildIndex">Index of the scene in the Build Settings to unload.</param>
      <param name="sceneName">Name or path of the scene to unload.</param>
      <param name="scene">Scene to unload.</param>
      <returns>
        <para>Returns true if the scene is unloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync(System.Int32)">
      <summary>
        <para>Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.</para>
      </summary>
      <param name="sceneBuildIndex">Index of the scene in BuildSettings.</param>
      <param name="sceneName">Name or path of the scene to unload.</param>
      <param name="scene">Scene to unload.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync(System.String)">
      <summary>
        <para>Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.</para>
      </summary>
      <param name="sceneBuildIndex">Index of the scene in BuildSettings.</param>
      <param name="sceneName">Name or path of the scene to unload.</param>
      <param name="scene">Scene to unload.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Destroys all GameObjects associated with the given scene and removes the scene from the SceneManager.</para>
      </summary>
      <param name="sceneBuildIndex">Index of the scene in BuildSettings.</param>
      <param name="sceneName">Name or path of the scene to unload.</param>
      <param name="scene">Scene to unload.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.SceneManagement.SceneUtility">
      <summary>
        <para>Scene and Build Settings related utilities.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneUtility.GetBuildIndexByScenePath(System.String)">
      <summary>
        <para>Get the build index from a scene path.</para>
      </summary>
      <param name="scenePath">Scene path (e.g: "AssetsScenesScene1.unity").</param>
      <returns>
        <para>Build index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SceneManagement.SceneUtility.GetScenePathByBuildIndex(System.Int32)">
      <summary>
        <para>Get the scene path from a build index.</para>
      </summary>
      <param name="buildIndex"></param>
      <returns>
        <para>Scene path (e.g "AssetsScenesScene1.unity").</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Screen">
      <summary>
        <para>Access to display information.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.autorotateToLandscapeLeft">
      <summary>
        <para>Allow auto-rotation to landscape left?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.autorotateToLandscapeRight">
      <summary>
        <para>Allow auto-rotation to landscape right?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.autorotateToPortrait">
      <summary>
        <para>Allow auto-rotation to portrait?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.autorotateToPortraitUpsideDown">
      <summary>
        <para>Allow auto-rotation to portrait, upside down?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.currentResolution">
      <summary>
        <para>The current screen resolution (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.dpi">
      <summary>
        <para>The current DPI of the screen / device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.fullScreen">
      <summary>
        <para>Is the game running fullscreen?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.height">
      <summary>
        <para>The current height of the screen window in pixels (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.lockCursor">
      <summary>
        <para>Should the cursor be locked?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.orientation">
      <summary>
        <para>Specifies logical orientation of the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.resolutions">
      <summary>
        <para>All fullscreen resolutions supported by the monitor (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.showCursor">
      <summary>
        <para>Should the cursor be visible?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.sleepTimeout">
      <summary>
        <para>A power saving setting, allowing the screen to dim some time after the last active user interaction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Screen.width">
      <summary>
        <para>The current width of the screen window in pixels (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Screen.SetResolution(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Switches the screen resolution.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
      <param name="fullscreen"></param>
      <param name="preferredRefreshRate"></param>
    </member>
    <member name="M:UnityEngine.Screen.SetResolution(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>
        <para>Switches the screen resolution.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
      <param name="fullscreen"></param>
      <param name="preferredRefreshRate"></param>
    </member>
    <member name="T:UnityEngine.ScreenOrientation">
      <summary>
        <para>Describes screen orientation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScreenOrientation.AutoRotation">
      <summary>
        <para>Auto-rotates the screen as necessary toward any of the enabled orientations.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScreenOrientation.LandscapeLeft">
      <summary>
        <para>Landscape orientation, counter-clockwise from the portrait orientation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScreenOrientation.LandscapeRight">
      <summary>
        <para>Landscape orientation, clockwise from the portrait orientation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScreenOrientation.Portrait">
      <summary>
        <para>Portrait orientation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScreenOrientation.PortraitUpsideDown">
      <summary>
        <para>Portrait orientation, upside down.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ScriptableObject">
      <summary>
        <para>A class you can derive from if you want to create objects that don't need to be attached to game objects.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ScriptableObject.CreateInstance(System.String)">
      <summary>
        <para>Creates an instance of a scriptable object.</para>
      </summary>
      <param name="className">The type of the ScriptableObject to create, as the name of the type.</param>
      <param name="type">The type of the ScriptableObject to create, as a System.Type instance.</param>
      <returns>
        <para>The created ScriptableObject.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ScriptableObject.CreateInstance(System.Type)">
      <summary>
        <para>Creates an instance of a scriptable object.</para>
      </summary>
      <param name="className">The type of the ScriptableObject to create, as the name of the type.</param>
      <param name="type">The type of the ScriptableObject to create, as a System.Type instance.</param>
      <returns>
        <para>The created ScriptableObject.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ScriptableObject.CreateInstance">
      <summary>
        <para>Creates an instance of a scriptable object.</para>
      </summary>
      <returns>
        <para>The created ScriptableObject.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Scripting.PreserveAttribute">
      <summary>
        <para>PreserveAttribute prevents byte code stripping from removing a class, method, field, or property.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Security">
      <summary>
        <para>Webplayer security related class. Not supported from 5.4.0 onwards.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Security.LoadAndVerifyAssembly(System.Byte[],System.String)">
      <summary>
        <para>Loads an assembly and checks that it is allowed to be used in the webplayer. (Web Player is no Longer Supported).</para>
      </summary>
      <param name="assemblyData">Assembly to verify.</param>
      <param name="authorizationKey">Public key used to verify assembly.</param>
      <returns>
        <para>Loaded, verified, assembly, or null if the assembly cannot be verfied.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Security.LoadAndVerifyAssembly(System.Byte[])">
      <summary>
        <para>Loads an assembly and checks that it is allowed to be used in the webplayer. (Web Player is no Longer Supported).</para>
      </summary>
      <param name="assemblyData">Assembly to verify.</param>
      <param name="authorizationKey">Public key used to verify assembly.</param>
      <returns>
        <para>Loaded, verified, assembly, or null if the assembly cannot be verfied.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Security.PrefetchSocketPolicy(System.String,System.Int32)">
      <summary>
        <para>Prefetch the webplayer socket security policy from a non-default port number.</para>
      </summary>
      <param name="ip">IP address of server.</param>
      <param name="atPort">Port from where socket policy is read.</param>
      <param name="timeout">Time to wait for response.</param>
    </member>
    <member name="M:UnityEngine.Security.PrefetchSocketPolicy(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Prefetch the webplayer socket security policy from a non-default port number.</para>
      </summary>
      <param name="ip">IP address of server.</param>
      <param name="atPort">Port from where socket policy is read.</param>
      <param name="timeout">Time to wait for response.</param>
    </member>
    <member name="T:UnityEngine.SelectionBaseAttribute">
      <summary>
        <para>Add this attribute to a script class to mark its GameObject as a selection base object for Scene View picking.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SendMessageOptions">
      <summary>
        <para>Options for how to send a message.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SendMessageOptions.DontRequireReceiver">
      <summary>
        <para>No receiver is required for SendMessage.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SendMessageOptions.RequireReceiver">
      <summary>
        <para>A receiver is required for SendMessage.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Serialization.FormerlySerializedAsAttribute">
      <summary>
        <para>Use this attribute to rename a field without losing its serialized value.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Serialization.FormerlySerializedAsAttribute.oldName">
      <summary>
        <para>The name of the field before the rename.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Serialization.FormerlySerializedAsAttribute.#ctor(System.String)">
      <summary>
        <para></para>
      </summary>
      <param name="oldName">The name of the field before renaming.</param>
    </member>
    <member name="T:UnityEngine.SerializeField">
      <summary>
        <para>Force Unity to serialize a private field.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Shader">
      <summary>
        <para>Shader scripts used for all rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Shader.globalMaximumLOD">
      <summary>
        <para>Shader LOD level for all shaders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Shader.globalRenderPipeline">
      <summary>
        <para>Render pipeline currently in use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Shader.globalShaderHardwareTier">
      <summary>
        <para>Shader hardware tier classification for current device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Shader.isSupported">
      <summary>
        <para>Can this shader run on the end-users graphics card? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Shader.maximumLOD">
      <summary>
        <para>Shader LOD level for this shader.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Shader.renderQueue">
      <summary>
        <para>Render queue of this shader. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Shader.DisableKeyword(System.String)">
      <summary>
        <para>Unset a global shader keyword.</para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="M:UnityEngine.Shader.EnableKeyword(System.String)">
      <summary>
        <para>Set a global shader keyword.</para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="M:UnityEngine.Shader.Find(System.String)">
      <summary>
        <para>Finds a shader with the given name.</para>
      </summary>
      <param name="name"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalColor(System.String)">
      <summary>
        <para>Gets a global color property for all shaders previously set using SetGlobalColor.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalColor(System.Int32)">
      <summary>
        <para>Gets a global color property for all shaders previously set using SetGlobalColor.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalFloat(System.String)">
      <summary>
        <para>Gets a global float property for all shaders previously set using SetGlobalFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalFloat(System.Int32)">
      <summary>
        <para>Gets a global float property for all shaders previously set using SetGlobalFloat.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalFloatArray(System.String)">
      <summary>
        <para>Gets a global float array for all shaders previously set using SetGlobalFloatArray.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalFloatArray(System.Int32)">
      <summary>
        <para>Gets a global float array for all shaders previously set using SetGlobalFloatArray.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Fetches a global float array into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Fetches a global float array into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalInt(System.String)">
      <summary>
        <para>Gets a global int property for all shaders previously set using SetGlobalInt.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalInt(System.Int32)">
      <summary>
        <para>Gets a global int property for all shaders previously set using SetGlobalInt.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalMatrix(System.String)">
      <summary>
        <para>Gets a global matrix property for all shaders previously set using SetGlobalMatrix.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalMatrix(System.Int32)">
      <summary>
        <para>Gets a global matrix property for all shaders previously set using SetGlobalMatrix.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalMatrixArray(System.String)">
      <summary>
        <para>Gets a global matrix array for all shaders previously set using SetGlobalMatrixArray.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalMatrixArray(System.Int32)">
      <summary>
        <para>Gets a global matrix array for all shaders previously set using SetGlobalMatrixArray.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Fetches a global matrix array into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Fetches a global matrix array into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalTexture(System.String)">
      <summary>
        <para>Gets a global texture property for all shaders previously set using SetGlobalTexture.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalTexture(System.Int32)">
      <summary>
        <para>Gets a global texture property for all shaders previously set using SetGlobalTexture.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalVector(System.String)">
      <summary>
        <para>Gets a global vector property for all shaders previously set using SetGlobalVector.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalVector(System.Int32)">
      <summary>
        <para>Gets a global vector property for all shaders previously set using SetGlobalVector.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalVectorArray(System.String)">
      <summary>
        <para>Gets a global vector array for all shaders previously set using SetGlobalVectorArray.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalVectorArray(System.Int32)">
      <summary>
        <para>Gets a global vector array for all shaders previously set using SetGlobalVectorArray.</para>
      </summary>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Fetches a global vector array into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.GetGlobalVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Fetches a global vector array into a list.</para>
      </summary>
      <param name="values">The list to hold the returned array.</param>
      <param name="name"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.IsKeywordEnabled(System.String)">
      <summary>
        <para>Is global shader keyword enabled?</para>
      </summary>
      <param name="keyword"></param>
    </member>
    <member name="M:UnityEngine.Shader.PropertyToID(System.String)">
      <summary>
        <para>Gets unique identifier for a shader property name.</para>
      </summary>
      <param name="name">Shader property name.</param>
      <returns>
        <para>Unique integer for the name.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalBuffer(System.String,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Sets a global compute buffer property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="buffer"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalBuffer(System.Int32,UnityEngine.ComputeBuffer)">
      <summary>
        <para>Sets a global compute buffer property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="buffer"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalColor(System.String,UnityEngine.Color)">
      <summary>
        <para>Sets a global color property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalColor(System.Int32,UnityEngine.Color)">
      <summary>
        <para>Sets a global color property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloat(System.String,System.Single)">
      <summary>
        <para>Sets a global float property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloat(System.Int32,System.Single)">
      <summary>
        <para>Sets a global float property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloatArray(System.String,System.Single[])">
      <summary>
        <para>Sets a global float array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloatArray(System.Int32,System.Single[])">
      <summary>
        <para>Sets a global float array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloatArray(System.String,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Sets a global float array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalFloatArray(System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Sets a global float array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalInt(System.String,System.Int32)">
      <summary>
        <para>Sets a global int property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalInt(System.Int32,System.Int32)">
      <summary>
        <para>Sets a global int property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrix(System.String,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets a global matrix property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrix(System.Int32,UnityEngine.Matrix4x4)">
      <summary>
        <para>Sets a global matrix property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrixArray(System.String,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Sets a global matrix array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrixArray(System.Int32,UnityEngine.Matrix4x4[])">
      <summary>
        <para>Sets a global matrix array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrixArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Sets a global matrix array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalMatrixArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Matrix4x4&gt;)">
      <summary>
        <para>Sets a global matrix array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalTexture(System.String,UnityEngine.Texture)">
      <summary>
        <para>Sets a global texture property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalTexture(System.Int32,UnityEngine.Texture)">
      <summary>
        <para>Sets a global texture property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVector(System.String,UnityEngine.Vector4)">
      <summary>
        <para>Sets a global vector property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVector(System.Int32,UnityEngine.Vector4)">
      <summary>
        <para>Sets a global vector property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="value"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVectorArray(System.String,UnityEngine.Vector4[])">
      <summary>
        <para>Sets a global vector array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVectorArray(System.Int32,UnityEngine.Vector4[])">
      <summary>
        <para>Sets a global vector array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVectorArray(System.String,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Sets a global vector array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.SetGlobalVectorArray(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector4&gt;)">
      <summary>
        <para>Sets a global vector array property for all shaders.</para>
      </summary>
      <param name="name"></param>
      <param name="values"></param>
      <param name="nameID"></param>
    </member>
    <member name="M:UnityEngine.Shader.WarmupAllShaders">
      <summary>
        <para>Fully load all shaders to prevent future performance hiccups.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ShaderVariantCollection">
      <summary>
        <para>ShaderVariantCollection records which shader variants are actually used in each shader.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ShaderVariantCollection.isWarmedUp">
      <summary>
        <para>Is this ShaderVariantCollection already warmed up? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ShaderVariantCollection.shaderCount">
      <summary>
        <para>Number of shaders in this collection (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ShaderVariantCollection.variantCount">
      <summary>
        <para>Number of total varians in this collection (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.Add(UnityEngine.ShaderVariantCollection/ShaderVariant)">
      <summary>
        <para>Adds a new shader variant to the collection.</para>
      </summary>
      <param name="variant">Shader variant to add.</param>
      <returns>
        <para>False if already in the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.Clear">
      <summary>
        <para>Remove all shader variants from the collection.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.Contains(UnityEngine.ShaderVariantCollection/ShaderVariant)">
      <summary>
        <para>Checks if a shader variant is in the collection.</para>
      </summary>
      <param name="variant">Shader variant to check.</param>
      <returns>
        <para>True if the variant is in the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.#ctor">
      <summary>
        <para>Create a new empty shader variant collection.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.Remove(UnityEngine.ShaderVariantCollection/ShaderVariant)">
      <summary>
        <para>Adds shader variant from the collection.</para>
      </summary>
      <param name="variant">Shader variant to add.</param>
      <returns>
        <para>False if was not in the collection.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ShaderVariantCollection.ShaderVariant">
      <summary>
        <para>Identifies a specific variant of a shader.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShaderVariantCollection.ShaderVariant.keywords">
      <summary>
        <para>Array of shader keywords to use in this variant.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShaderVariantCollection.ShaderVariant.passType">
      <summary>
        <para>Pass type to use in this variant.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShaderVariantCollection.ShaderVariant.shader">
      <summary>
        <para>Shader to use in this variant.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.ShaderVariant.#ctor(UnityEngine.Shader,UnityEngine.Rendering.PassType,System.String[])">
      <summary>
        <para>Creates a ShaderVariant structure.</para>
      </summary>
      <param name="shader"></param>
      <param name="passType"></param>
      <param name="keywords"></param>
    </member>
    <member name="M:UnityEngine.ShaderVariantCollection.WarmUp">
      <summary>
        <para>Fully load shaders in ShaderVariantCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ShadowProjection">
      <summary>
        <para>Shadow projection type for.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowProjection.CloseFit">
      <summary>
        <para>Close fit shadow maps with linear fadeout.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowProjection.StableFit">
      <summary>
        <para>Stable shadow maps with spherical fadeout.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ShadowQuality">
      <summary>
        <para>Determines which type of shadows should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowQuality.All">
      <summary>
        <para>Hard and Soft Shadows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowQuality.Disable">
      <summary>
        <para>Disable Shadows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowQuality.HardOnly">
      <summary>
        <para>Hard Shadows Only.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ShadowResolution">
      <summary>
        <para>Default shadow resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowResolution.High">
      <summary>
        <para>High shadow map resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowResolution.Low">
      <summary>
        <para>Low shadow map resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowResolution.Medium">
      <summary>
        <para>Medium shadow map resolution.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ShadowResolution.VeryHigh">
      <summary>
        <para>Very high shadow map resolution.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SharedBetweenAnimatorsAttribute">
      <summary>
        <para>SharedBetweenAnimatorsAttribute is an attribute that specify that this StateMachineBehaviour should be instantiate only once and shared among all Animator instance. This attribute reduce the memory footprint for each controller instance.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SkeletonBone">
      <summary>
        <para>Details of the Transform name mapped to a model's skeleton bone and its default position and rotation in the T-pose.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.name">
      <summary>
        <para>The name of the Transform mapped to the bone.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.position">
      <summary>
        <para>The T-pose position of the bone in local space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.rotation">
      <summary>
        <para>The T-pose rotation of the bone in local space.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.scale">
      <summary>
        <para>The T-pose scaling of the bone in local space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SkinnedMeshRenderer">
      <summary>
        <para>The Skinned Mesh filter.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.bones">
      <summary>
        <para>The bones used to skin the mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.localBounds">
      <summary>
        <para>AABB of this Skinned Mesh in its local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.quality">
      <summary>
        <para>The maximum number of bones affecting a single vertex.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.sharedMesh">
      <summary>
        <para>The mesh used for skinning.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.skinnedMotionVectors">
      <summary>
        <para>Specifies whether skinned motion vectors should be used for this renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SkinnedMeshRenderer.updateWhenOffscreen">
      <summary>
        <para>If enabled, the Skinned Mesh will be updated when offscreen. If disabled, this also disables updating animations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SkinnedMeshRenderer.BakeMesh(UnityEngine.Mesh)">
      <summary>
        <para>Creates a snapshot of SkinnedMeshRenderer and stores it in mesh.</para>
      </summary>
      <param name="mesh">A static mesh that will receive the snapshot of the skinned mesh.</param>
    </member>
    <member name="M:UnityEngine.SkinnedMeshRenderer.GetBlendShapeWeight(System.Int32)">
      <summary>
        <para>Returns weight of BlendShape on this renderer.</para>
      </summary>
      <param name="index"></param>
    </member>
    <member name="M:UnityEngine.SkinnedMeshRenderer.SetBlendShapeWeight(System.Int32,System.Single)">
      <summary>
        <para>Sets the weight in percent of a BlendShape on this Renderer.</para>
      </summary>
      <param name="index">The index of the BlendShape to modify.</param>
      <param name="value">The weight in percent for this BlendShape.</param>
    </member>
    <member name="T:UnityEngine.SkinQuality">
      <summary>
        <para>The maximum number of bones affecting a single vertex.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkinQuality.Auto">
      <summary>
        <para>Chooses the number of bones from the number current QualitySettings. (Default)</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkinQuality.Bone1">
      <summary>
        <para>Use only 1 bone to deform a single vertex. (The most important bone will be used).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkinQuality.Bone2">
      <summary>
        <para>Use 2 bones to deform a single vertex. (The most important bones will be used).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkinQuality.Bone4">
      <summary>
        <para>Use 4 bones to deform a single vertex.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Skybox">
      <summary>
        <para>A script interface for the.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Skybox.material">
      <summary>
        <para>The material used by the skybox.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SleepTimeout">
      <summary>
        <para>Constants for special values of Screen.sleepTimeout.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SleepTimeout.NeverSleep">
      <summary>
        <para>Prevent screen dimming.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SleepTimeout.SystemSetting">
      <summary>
        <para>Set the sleep timeout to whatever the user has specified in the system settings.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SliderJoint2D">
      <summary>
        <para>Joint that restricts the motion of a Rigidbody2D object to a single line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.angle">
      <summary>
        <para>The angle of the line in space (in degrees).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.autoConfigureAngle">
      <summary>
        <para>Should the angle be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.jointSpeed">
      <summary>
        <para>The current joint speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.jointTranslation">
      <summary>
        <para>The current joint translation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.limits">
      <summary>
        <para>Restrictions on how far the joint can slide in each direction along the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.limitState">
      <summary>
        <para>Gets the state of the joint limit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.motor">
      <summary>
        <para>Parameters for a motor force that is applied automatically to the Rigibody2D along the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.referenceAngle">
      <summary>
        <para>The angle (in degrees) referenced between the two bodies used as the constraint for the joint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.useLimits">
      <summary>
        <para>Should motion limits be used?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.useMotor">
      <summary>
        <para>Should a motor force be applied automatically to the Rigidbody2D?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SliderJoint2D.GetMotorForce(System.Single)">
      <summary>
        <para>Gets the motor force of the joint given the specified timestep.</para>
      </summary>
      <param name="timeStep">The time to calculate the motor force for.</param>
    </member>
    <member name="T:UnityEngine.Social">
      <summary>
        <para>Generic access to the Social API.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Social.localUser">
      <summary>
        <para>The local user (potentially not logged in).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Social.Active">
      <summary>
        <para>This is the currently active social platform. </para>
      </summary>
    </member>
    <member name="M:UnityEngine.Social.CreateAchievement">
      <summary>
        <para>Create an IAchievement instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Social.CreateLeaderboard">
      <summary>
        <para>Create an ILeaderboard instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Social.LoadAchievementDescriptions(System.Action`1&lt;UnityEngine.SocialPlatforms.IAchievementDescription[]&gt;)">
      <summary>
        <para>Loads the achievement descriptions accociated with this application.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.Social.LoadAchievements(System.Action`1&lt;UnityEngine.SocialPlatforms.IAchievement[]&gt;)">
      <summary>
        <para>Load the achievements the logged in user has already achieved or reported progress on.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.Social.LoadScores(System.String,System.Action`1&lt;UnityEngine.SocialPlatforms.IScore[]&gt;)">
      <summary>
        <para>Load a default set of scores from the given leaderboard.</para>
      </summary>
      <param name="leaderboardID"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.Social.LoadUsers(System.String[],System.Action`1&lt;UnityEngine.SocialPlatforms.IUserProfile[]&gt;)">
      <summary>
        <para>Load the user profiles accociated with the given array of user IDs.</para>
      </summary>
      <param name="userIDs"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.Social.ReportProgress(System.String,System.Double,System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Reports the progress of an achievement.</para>
      </summary>
      <param name="achievementID"></param>
      <param name="progress"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.Social.ReportScore(System.Int64,System.String,System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Report a score to a specific leaderboard.</para>
      </summary>
      <param name="score"></param>
      <param name="board"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.Social.ShowAchievementsUI">
      <summary>
        <para>Show a default/system view of the games achievements.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Social.ShowLeaderboardUI">
      <summary>
        <para>Show a default/system view of the games leaderboards.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform">
      <summary>
        <para>iOS GameCenter implementation for network services.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform.ResetAllAchievements(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Reset all the achievements for the local user.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform.ShowDefaultAchievementCompletionBanner(System.Boolean)">
      <summary>
        <para>Show the default iOS banner when achievements are completed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.GameCenter.GameCenterPlatform.ShowLeaderboardUI(System.String,UnityEngine.SocialPlatforms.TimeScope)">
      <summary>
        <para>Show the leaderboard UI with a specific leaderboard shown initially with a specific time scope selected.</para>
      </summary>
      <param name="leaderboardID"></param>
      <param name="timeScope"></param>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.IAchievement">
      <summary>
        <para>Information for a user's achievement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievement.completed">
      <summary>
        <para>Set to true when percentCompleted is 100.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievement.hidden">
      <summary>
        <para>This achievement is currently hidden from the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievement.id">
      <summary>
        <para>The unique identifier of this achievement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievement.lastReportedDate">
      <summary>
        <para>Set by server when percentCompleted is updated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievement.percentCompleted">
      <summary>
        <para>Progress for this achievement.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.IAchievement.ReportProgress(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Send notification about progress on this achievement.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.IAchievementDescription">
      <summary>
        <para>Static data describing an achievement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.achievedDescription">
      <summary>
        <para>Description when the achivement is completed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.hidden">
      <summary>
        <para>Hidden achievement are not shown in the list until the percentCompleted has been touched (even if it's 0.0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.id">
      <summary>
        <para>Unique identifier for this achievement description.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.image">
      <summary>
        <para>Image representation of the achievement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.points">
      <summary>
        <para>Point value of this achievement.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.title">
      <summary>
        <para>Human readable title.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IAchievementDescription.unachievedDescription">
      <summary>
        <para>Description when the achivement has not been completed.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.ILeaderboard">
      <summary>
        <para>The leaderboard contains the scores of all players for a particular game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.id">
      <summary>
        <para>Unique identifier for this leaderboard.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.loading">
      <summary>
        <para>The leaderboad is in the process of loading scores.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.localUserScore">
      <summary>
        <para>The leaderboard score of the logged in user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.maxRange">
      <summary>
        <para>The total amount of scores the leaderboard contains.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.range">
      <summary>
        <para>The rank range this leaderboard returns.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.scores">
      <summary>
        <para>The leaderboard scores returned by a query.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.timeScope">
      <summary>
        <para>The time period/scope searched by this leaderboard.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.title">
      <summary>
        <para>The human readable title of this leaderboard.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILeaderboard.userScope">
      <summary>
        <para>The users scope searched by this leaderboard.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILeaderboard.LoadScores(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Load scores according to the filters set on this leaderboard.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILeaderboard.SetUserFilter(System.String[])">
      <summary>
        <para>Only search for these user IDs.</para>
      </summary>
      <param name="userIDs">List of user ids.</param>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.ILocalUser">
      <summary>
        <para>Represents the local or currently logged in user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILocalUser.authenticated">
      <summary>
        <para>Checks if the current user has been authenticated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILocalUser.friends">
      <summary>
        <para>The users friends list.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ILocalUser.underage">
      <summary>
        <para>Is the user underage?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILocalUser.Authenticate(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Authenticate the local user to the current active Social API implementation and fetch his profile data.</para>
      </summary>
      <param name="callback">Callback that is called whenever the authentication operation is finished. The first parameter is a Boolean identifying whether the authentication operation was successful. The optional second argument contains a string identifying any errors (if available) if the operation was unsuccessful.</param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILocalUser.Authenticate(System.Action`2&lt;System.Boolean,System.String&gt;)">
      <summary>
        <para>Authenticate the local user to the current active Social API implementation and fetch his profile data.</para>
      </summary>
      <param name="callback">Callback that is called whenever the authentication operation is finished. The first parameter is a Boolean identifying whether the authentication operation was successful. The optional second argument contains a string identifying any errors (if available) if the operation was unsuccessful.</param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ILocalUser.LoadFriends(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Fetches the friends list of the logged in user. The friends list on the ISocialPlatform.localUser|Social.localUser instance is populated if this call succeeds.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.IScore">
      <summary>
        <para>A game score.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IScore.date">
      <summary>
        <para>The date the score was achieved.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IScore.formattedValue">
      <summary>
        <para>The correctly formatted value of the score, like X points or X kills.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IScore.leaderboardID">
      <summary>
        <para>The ID of the leaderboard this score belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IScore.rank">
      <summary>
        <para>The rank or position of the score in the leaderboard. </para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IScore.userID">
      <summary>
        <para>The user who owns this score.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IScore.value">
      <summary>
        <para>The score value achieved.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.IScore.ReportScore(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Report this score instance.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.ISocialPlatform">
      <summary>
        <para>The generic Social API interface which implementations must inherit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.ISocialPlatform.localUser">
      <summary>
        <para>See Social.localUser.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.CreateAchievement">
      <summary>
        <para>See Social.CreateAchievement..</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.CreateLeaderboard">
      <summary>
        <para>See Social.CreateLeaderboard.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadAchievementDescriptions(System.Action`1&lt;UnityEngine.SocialPlatforms.IAchievementDescription[]&gt;)">
      <summary>
        <para>See Social.LoadAchievementDescriptions.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadAchievements(System.Action`1&lt;UnityEngine.SocialPlatforms.IAchievement[]&gt;)">
      <summary>
        <para>See Social.LoadAchievements.</para>
      </summary>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadScores(System.String,System.Action`1&lt;UnityEngine.SocialPlatforms.IScore[]&gt;)">
      <summary>
        <para>See Social.LoadScores.</para>
      </summary>
      <param name="leaderboardID"></param>
      <param name="callback"></param>
      <param name="board"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadScores(UnityEngine.SocialPlatforms.ILeaderboard,System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>See Social.LoadScores.</para>
      </summary>
      <param name="leaderboardID"></param>
      <param name="callback"></param>
      <param name="board"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.LoadUsers(System.String[],System.Action`1&lt;UnityEngine.SocialPlatforms.IUserProfile[]&gt;)">
      <summary>
        <para>See Social.LoadUsers.</para>
      </summary>
      <param name="userIDs"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ReportProgress(System.String,System.Double,System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>See Social.ReportProgress.</para>
      </summary>
      <param name="achievementID"></param>
      <param name="progress"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ReportScore(System.Int64,System.String,System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>See Social.ReportScore.</para>
      </summary>
      <param name="score"></param>
      <param name="board"></param>
      <param name="callback"></param>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ShowAchievementsUI">
      <summary>
        <para>See Social.ShowAchievementsUI.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.ISocialPlatform.ShowLeaderboardUI">
      <summary>
        <para>See Social.ShowLeaderboardUI.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.SocialPlatforms.IUserProfile">
      <summary>
        <para>Represents generic user instances, like friends of the local user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IUserProfile.id">
      <summary>
        <para>This users unique identifier.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IUserProfile.image">
      <summary>
        <para>Avatar image of the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IUserProfile.isFriend">
      <summary>
        <para>Is this user a friend of the current logged in user?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IUserProfile.state">
      <summary>
        <para>Presence state of the user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SocialPlatforms.IUserProfile.userName">
      <summary>
        <para>This user's username or alias.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SocialPlatforms.Range">
      <summary>
        <para>The score range a leaderboard query should include.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.Range.count">
      <summary>
        <para>The total amount of scores retreived.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.Range.from">
      <summary>
        <para>The rank of the first score which is returned.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SocialPlatforms.Range.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Constructor for a score range, the range starts from a specific value and contains a maxium score count.</para>
      </summary>
      <param name="fromValue">The minimum allowed value.</param>
      <param name="valueCount">The number of possible values.</param>
    </member>
    <member name="T:UnityEngine.SocialPlatforms.TimeScope">
      <summary>
        <para>The scope of time searched through when querying the leaderboard.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SocialPlatforms.UserScope">
      <summary>
        <para>The scope of the users searched through when querying the leaderboard.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SocialPlatforms.UserState">
      <summary>
        <para>User presence state.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.UserState.Offline">
      <summary>
        <para>The user is offline.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.UserState.Online">
      <summary>
        <para>The user is online.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.UserState.OnlineAndAway">
      <summary>
        <para>The user is online but away from their computer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.UserState.OnlineAndBusy">
      <summary>
        <para>The user is online but set their status to busy.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SocialPlatforms.UserState.Playing">
      <summary>
        <para>The user is playing a game.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SoftJointLimit">
      <summary>
        <para>The limits defined by the CharacterJoint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.bounciness">
      <summary>
        <para>When the joint hits the limit, it can be made to bounce off it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.contactDistance">
      <summary>
        <para>Determines how far ahead in space the solver can "see" the joint limit.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.damper">
      <summary>
        <para>If spring is greater than zero, the limit is soft.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.limit">
      <summary>
        <para>The limit position/angle of the joint (in degrees).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimit.spring">
      <summary>
        <para>If greater than zero, the limit is soft. The spring will pull the joint back.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SoftJointLimitSpring">
      <summary>
        <para>The configuration of the spring attached to the joint's limits: linear and angular. Used by CharacterJoint and ConfigurableJoint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimitSpring.damper">
      <summary>
        <para>The damping of the spring limit. In effect when the stiffness of the sprint limit is not zero.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SoftJointLimitSpring.spring">
      <summary>
        <para>The stiffness of the spring limit. When stiffness is zero the limit is hard, otherwise soft.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SortingLayer">
      <summary>
        <para>SortingLayer allows you to set the render order of multiple sprites easily. There is always a default SortingLayer named "Default" which all sprites are added to initially. Added more SortingLayers to easily control the order of rendering of groups of sprites. Layers can be ordered before or after the default layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SortingLayer.id">
      <summary>
        <para>This is the unique id assigned to the layer. It is not an ordered running value and it should not be used to compare with other layers to determine the sorting order.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SortingLayer.layers">
      <summary>
        <para>Returns all the layers defined in this project.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SortingLayer.name">
      <summary>
        <para>Returns the name of the layer as defined in the TagManager.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SortingLayer.value">
      <summary>
        <para>This is the relative value that indicates the sort order of this layer relative to the other layers.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SortingLayer.GetLayerValueFromID(System.Int32)">
      <summary>
        <para>Returns the final sorting layer value. To determine the sorting order between the various sorting layers, use this method to retrieve the final sorting value and use CompareTo to determine the order.</para>
      </summary>
      <param name="id">The unique value of the sorting layer as returned by any renderer's sortingLayerID property.</param>
      <returns>
        <para>The final sorting value of the layer relative to other layers.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SortingLayer.GetLayerValueFromName(System.String)">
      <summary>
        <para>Returns the final sorting layer value. See Also: GetLayerValueFromID.</para>
      </summary>
      <param name="name">The unique value of the sorting layer as returned by any renderer's sortingLayerID property.</param>
      <returns>
        <para>The final sorting value of the layer relative to other layers.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SortingLayer.IDToName(System.Int32)">
      <summary>
        <para>Returns the unique id of the layer. Will return "&lt;unknown layer&gt;" if an invalid id is given.</para>
      </summary>
      <param name="id">The unique id of the layer.</param>
      <returns>
        <para>The name of the layer with id or "&lt;unknown layer&gt;" for invalid id.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SortingLayer.IsValid(System.Int32)">
      <summary>
        <para>Returns true if the id provided is a valid layer id.</para>
      </summary>
      <param name="id">The unique id of a layer.</param>
      <returns>
        <para>True if the id provided is valid and assigned to a layer.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SortingLayer.NameToID(System.String)">
      <summary>
        <para>Returns the id given the name. Will return 0 if an invalid name was given.</para>
      </summary>
      <param name="name">The name of the layer.</param>
      <returns>
        <para>The unique id of the layer with name.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Space">
      <summary>
        <para>The coordinate space in which to operate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Space.Self">
      <summary>
        <para>Applies transformation relative to the local coordinate system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Space.World">
      <summary>
        <para>Applies transformation relative to the world coordinate system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpaceAttribute">
      <summary>
        <para>Use this PropertyAttribute to add some spacing in the Inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpaceAttribute.height">
      <summary>
        <para>The spacing in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SpaceAttribute.#ctor(System.Single)">
      <summary>
        <para>Use this DecoratorDrawer to add some spacing in the Inspector.</para>
      </summary>
      <param name="height">The spacing in pixels.</param>
    </member>
    <member name="T:UnityEngine.SparseTexture">
      <summary>
        <para>Class for handling Sparse Textures.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SparseTexture.isCreated">
      <summary>
        <para>Is the sparse texture actually created? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SparseTexture.tileHeight">
      <summary>
        <para>Get sparse texture tile height (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SparseTexture.tileWidth">
      <summary>
        <para>Get sparse texture tile width (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SparseTexture.#ctor(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Create a sparse texture.</para>
      </summary>
      <param name="width">Texture width in pixels.</param>
      <param name="height">Texture height in pixels.</param>
      <param name="format">Texture format.</param>
      <param name="mipCount">Mipmap count. Pass -1 to create full mipmap chain.</param>
      <param name="linear">Whether texture data will be in linear or sRGB color space (default is sRGB).</param>
    </member>
    <member name="M:UnityEngine.SparseTexture.#ctor(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Int32,System.Boolean)">
      <summary>
        <para>Create a sparse texture.</para>
      </summary>
      <param name="width">Texture width in pixels.</param>
      <param name="height">Texture height in pixels.</param>
      <param name="format">Texture format.</param>
      <param name="mipCount">Mipmap count. Pass -1 to create full mipmap chain.</param>
      <param name="linear">Whether texture data will be in linear or sRGB color space (default is sRGB).</param>
    </member>
    <member name="M:UnityEngine.SparseTexture.UnloadTile(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Unload sparse texture tile.</para>
      </summary>
      <param name="tileX">Tile X coordinate.</param>
      <param name="tileY">Tile Y coordinate.</param>
      <param name="miplevel">Mipmap level of the texture.</param>
    </member>
    <member name="M:UnityEngine.SparseTexture.UpdateTile(System.Int32,System.Int32,System.Int32,UnityEngine.Color32[])">
      <summary>
        <para>Update sparse texture tile with color values.</para>
      </summary>
      <param name="tileX">Tile X coordinate.</param>
      <param name="tileY">Tile Y coordinate.</param>
      <param name="miplevel">Mipmap level of the texture.</param>
      <param name="data">Tile color data.</param>
    </member>
    <member name="M:UnityEngine.SparseTexture.UpdateTileRaw(System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>
        <para>Update sparse texture tile with raw pixel values.</para>
      </summary>
      <param name="tileX">Tile X coordinate.</param>
      <param name="tileY">Tile Y coordinate.</param>
      <param name="miplevel">Mipmap level of the texture.</param>
      <param name="data">Tile raw pixel data.</param>
    </member>
    <member name="T:UnityEngine.SphereCollider">
      <summary>
        <para>A sphere-shaped primitive collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SphereCollider.center">
      <summary>
        <para>The center of the sphere in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SphereCollider.radius">
      <summary>
        <para>The radius of the sphere measured in the object's local space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SplatPrototype">
      <summary>
        <para>A Splat prototype is just a texture that is used by the TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.metallic">
      <summary>
        <para>The metallic value of the splat layer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.normalMap">
      <summary>
        <para>Normal map of the splat applied to the Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.smoothness">
      <summary>
        <para>The smoothness value of the splat layer when the main texture has no alpha channel.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.texture">
      <summary>
        <para>Texture of the splat applied to the Terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.tileOffset">
      <summary>
        <para>Offset of the tile texture of the SplatPrototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SplatPrototype.tileSize">
      <summary>
        <para>Size of the tile used in the texture of the SplatPrototype.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpringJoint">
      <summary>
        <para>The spring joint ties together 2 rigid bodies, spring forces will be automatically applied to keep the object at the given distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint.damper">
      <summary>
        <para>The damper force used to dampen the spring force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint.maxDistance">
      <summary>
        <para>The maximum distance between the bodies relative to their initial distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint.minDistance">
      <summary>
        <para>The minimum distance between the bodies relative to their initial distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint.spring">
      <summary>
        <para>The spring force used to keep the two objects together.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint.tolerance">
      <summary>
        <para>The maximum allowed error between the current spring length and the length defined by minDistance and maxDistance.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpringJoint2D">
      <summary>
        <para>Joint that attempts to keep two Rigidbody2D objects a set distance apart by applying a force between them.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.autoConfigureDistance">
      <summary>
        <para>Should the distance be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.dampingRatio">
      <summary>
        <para>The amount by which the spring force is reduced in proportion to the movement speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.distance">
      <summary>
        <para>The distance the spring will try to keep between the two objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.frequency">
      <summary>
        <para>The frequency at which the spring oscillates around the distance distance between the objects.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Sprite">
      <summary>
        <para>Represents a Sprite object for use in 2D gameplay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.associatedAlphaSplitTexture">
      <summary>
        <para>Returns the texture that contains the alpha channel from the source texture. Unity generates this texture under the hood for sprites that have alpha in the source, and need to be compressed using techniques like ETC1.

Returns NULL if there is no associated alpha texture for the source sprite. This is the case if the sprite has not been setup to use ETC1 compression.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.border">
      <summary>
        <para>Returns the border sizes of the sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.bounds">
      <summary>
        <para>Bounds of the Sprite, specified by its center and extents in world space units.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.packed">
      <summary>
        <para>Returns true if this Sprite is packed in an atlas.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.packingMode">
      <summary>
        <para>If Sprite is packed (see Sprite.packed), returns its SpritePackingMode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.packingRotation">
      <summary>
        <para>If Sprite is packed (see Sprite.packed), returns its SpritePackingRotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.pivot">
      <summary>
        <para>Location of the Sprite's center point in the Rect on the original Texture, specified in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.pixelsPerUnit">
      <summary>
        <para>The number of pixels in the sprite that correspond to one unit in world space. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.rect">
      <summary>
        <para>Location of the Sprite on the original Texture, specified in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.texture">
      <summary>
        <para>Get the reference to the used texture. If packed this will point to the atlas, if not packed will point to the source sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.textureRect">
      <summary>
        <para>Get the rectangle this sprite uses on its texture. Raises an exception if this sprite is tightly packed in an atlas.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.textureRectOffset">
      <summary>
        <para>Gets the offset of the rectangle this sprite uses on its texture to the original sprite bounds. If sprite mesh type is FullRect, offset is zero.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.triangles">
      <summary>
        <para>Returns a copy of the array containing sprite mesh triangles.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.uv">
      <summary>
        <para>The base texture coordinates of the sprite mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Sprite.vertices">
      <summary>
        <para>Returns a copy of the array containing sprite mesh vertex positions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Sprite.Create(UnityEngine.Texture2D,UnityEngine.Rect,UnityEngine.Vector2,System.Single,System.UInt32,UnityEngine.SpriteMeshType,UnityEngine.Vector4)">
      <summary>
        <para>Create a new Sprite object.</para>
      </summary>
      <param name="texture">Texture from which to obtain the sprite graphic.</param>
      <param name="rect">Rectangular section of the texture to use for the sprite.</param>
      <param name="pivot">Sprite's pivot point relative to its graphic rectangle.</param>
      <param name="pixelsPerUnit">The number of pixels in the sprite that correspond to one unit in world space.</param>
      <param name="extrude">Amount by which the sprite mesh should be expanded outwards.</param>
      <param name="meshType">Controls the type of mesh generated for the sprite.</param>
      <param name="border">The border sizes of the sprite (X=left, Y=bottom, Z=right, W=top).</param>
    </member>
    <member name="M:UnityEngine.Sprite.OverrideGeometry(UnityEngine.Vector2[],System.UInt16[])">
      <summary>
        <para>Sets up new Sprite geometry.</para>
      </summary>
      <param name="vertices">Array of vertex positions in Sprite Rect space.</param>
      <param name="triangles">Array of sprite mesh triangle indices.</param>
    </member>
    <member name="T:UnityEngine.SpriteAlignment">
      <summary>
        <para>How a Sprite's graphic rectangle is aligned with its pivot point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.BottomCenter">
      <summary>
        <para>Pivot is at the center of the bottom edge of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.BottomLeft">
      <summary>
        <para>Pivot is at the bottom left corner of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.BottomRight">
      <summary>
        <para>Pivot is at the bottom right corner of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.Center">
      <summary>
        <para>Pivot is at the center of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.Custom">
      <summary>
        <para>Pivot is at a custom position within the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.LeftCenter">
      <summary>
        <para>Pivot is at the center of the left edge of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.RightCenter">
      <summary>
        <para>Pivot is at the center of the right edge of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.TopCenter">
      <summary>
        <para>Pivot is at the center of the top edge of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.TopLeft">
      <summary>
        <para>Pivot is at the top left corner of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteAlignment.TopRight">
      <summary>
        <para>Pivot is at the top right corner of the graphic rectangle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpriteDrawMode">
      <summary>
        <para>SpriteRenderer draw mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteDrawMode.Simple">
      <summary>
        <para>Displays the full sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteDrawMode.Sliced">
      <summary>
        <para>The SpriteRenderer will render the sprite as a 9-slice image where the corners will remain constant and the other sections will scale.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteDrawMode.Tiled">
      <summary>
        <para>The SpriteRenderer will render the sprite as a 9-slice image where the corners will remain constant and the other sections will tile.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpriteMeshType">
      <summary>
        <para>Defines the type of mesh generated for a sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteMeshType.FullRect">
      <summary>
        <para>Rectangle mesh equal to the user specified sprite size.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteMeshType.Tight">
      <summary>
        <para>Tight mesh based on pixel alpha values. As many excess pixels are cropped as possible.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpritePackingMode">
      <summary>
        <para>Sprite packing modes for the Sprite Packer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpritePackingMode.Rectangle">
      <summary>
        <para>Alpha-cropped ractangle packing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpritePackingMode.Tight">
      <summary>
        <para>Tight mesh based packing.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpritePackingRotation">
      <summary>
        <para>Sprite rotation modes for the Sprite Packer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpritePackingRotation.Any">
      <summary>
        <para>Any rotation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpritePackingRotation.None">
      <summary>
        <para>No rotation.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SpriteRenderer">
      <summary>
        <para>Renders a Sprite for 2D graphics.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.adaptiveModeThreshold">
      <summary>
        <para>The current threshold for Sprite Renderer tiling.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.color">
      <summary>
        <para>Rendering color for the Sprite graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.drawMode">
      <summary>
        <para>The current draw mode of the Sprite Renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.flipX">
      <summary>
        <para>Flips the sprite on the X axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.flipY">
      <summary>
        <para>Flips the sprite on the Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.size">
      <summary>
        <para>Property to set/get the size to render when the SpriteRenderer.drawMode is set to SpriteDrawMode.NineSlice.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.sprite">
      <summary>
        <para>The Sprite to render.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpriteRenderer.tileMode">
      <summary>
        <para>The current tile mode of the Sprite Renderer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Sprites.DataUtility">
      <summary>
        <para>Helper utilities for accessing Sprite data.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Sprites.DataUtility.GetInnerUV(UnityEngine.Sprite)">
      <summary>
        <para>Inner UV's of the Sprite.</para>
      </summary>
      <param name="sprite"></param>
    </member>
    <member name="M:UnityEngine.Sprites.DataUtility.GetMinSize(UnityEngine.Sprite)">
      <summary>
        <para>Minimum width and height of the Sprite.</para>
      </summary>
      <param name="sprite"></param>
    </member>
    <member name="M:UnityEngine.Sprites.DataUtility.GetOuterUV(UnityEngine.Sprite)">
      <summary>
        <para>Outer UV's of the Sprite.</para>
      </summary>
      <param name="sprite"></param>
    </member>
    <member name="M:UnityEngine.Sprites.DataUtility.GetPadding(UnityEngine.Sprite)">
      <summary>
        <para>Return the padding on the sprite.</para>
      </summary>
      <param name="sprite"></param>
    </member>
    <member name="T:UnityEngine.SpriteTileMode">
      <summary>
        <para>Tiling mode for SpriteRenderer.tileMode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteTileMode.Adaptive">
      <summary>
        <para>Sprite Renderer tiles the sprite once the Sprite Renderer size is above SpriteRenderer.adaptiveModeThreshold.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SpriteTileMode.Continuous">
      <summary>
        <para>Sprite Renderer tiles the sprite continuously when is set to SpriteRenderer.tileMode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.StackTraceLogType">
      <summary>
        <para>Stack trace logging options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StackTraceLogType.Full">
      <summary>
        <para>Native and managed stack trace will be logged.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StackTraceLogType.None">
      <summary>
        <para>No stack trace will be outputed to log.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StackTraceLogType.ScriptOnly">
      <summary>
        <para>Only managed stack trace will be outputed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.StateMachineBehaviour">
      <summary>
        <para>StateMachineBehaviour is a component that can be added to a state machine state. It's the base class every script on a state derives from.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateEnter">
      <summary>
        <para>Called on the first Update frame when a statemachine evaluate this state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateExit">
      <summary>
        <para>Called on the last update frame when a statemachine evaluate this state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateIK">
      <summary>
        <para>Called right after MonoBehaviour.OnAnimatorIK.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateMachineEnter(UnityEngine.Animator,System.Int32)">
      <summary>
        <para>Called on the first Update frame when making a transition to a StateMachine. This is not called when making a transition into a StateMachine sub-state.</para>
      </summary>
      <param name="animator">The Animator playing this state machine.</param>
      <param name="stateMachinePathHash">The full path hash for this state machine.</param>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateMachineExit(UnityEngine.Animator,System.Int32)">
      <summary>
        <para>Called on the last Update frame when making a transition out of a StateMachine. This is not called when making a transition into a StateMachine sub-state.</para>
      </summary>
      <param name="animator">The Animator playing this state machine.</param>
      <param name="stateMachinePathHash">The full path hash for this state machine.</param>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateMove">
      <summary>
        <para>Called right after MonoBehaviour.OnAnimatorMove.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateUpdate">
      <summary>
        <para>Called at each Update frame except for the first and last frame.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.StaticBatchingUtility">
      <summary>
        <para>StaticBatchingUtility can prepare your objects to take advantage of Unity's static batching.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StaticBatchingUtility.Combine(UnityEngine.GameObject)">
      <summary>
        <para>StaticBatchingUtility.Combine prepares all children of the staticBatchRoot for static batching.</para>
      </summary>
      <param name="staticBatchRoot"></param>
    </member>
    <member name="M:UnityEngine.StaticBatchingUtility.Combine(UnityEngine.GameObject[],UnityEngine.GameObject)">
      <summary>
        <para>StaticBatchingUtility.Combine prepares all gos for static batching. staticBatchRoot is treated as their parent.</para>
      </summary>
      <param name="gos"></param>
      <param name="staticBatchRoot"></param>
    </member>
    <member name="T:UnityEngine.StereoTargetEyeMask">
      <summary>
        <para>Enum values for the Camera's targetEye property.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StereoTargetEyeMask.Both">
      <summary>
        <para>Render both eyes to the HMD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StereoTargetEyeMask.Left">
      <summary>
        <para>Render only the Left eye to the HMD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StereoTargetEyeMask.None">
      <summary>
        <para>Do not render either eye to the HMD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.StereoTargetEyeMask.Right">
      <summary>
        <para>Render only the right eye to the HMD.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SurfaceEffector2D">
      <summary>
        <para>Applies tangent forces along the surfaces of colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.forceScale">
      <summary>
        <para>The scale of the impulse force applied while attempting to reach the surface speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.speed">
      <summary>
        <para>The speed to be maintained along the surface.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.speedVariation">
      <summary>
        <para>The speed variation (from zero to the variation) added to base speed to be applied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.useBounce">
      <summary>
        <para>Should bounce be used for any contact with the surface?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.useContactForce">
      <summary>
        <para>Should the impulse force but applied to the contact point?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.useFriction">
      <summary>
        <para>Should friction be used for any contact with the surface?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SystemInfo">
      <summary>
        <para>Access system and hardware information.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.batteryLevel">
      <summary>
        <para>The current battery level (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.batteryStatus">
      <summary>
        <para>Returns the current status of the device's battery (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.copyTextureSupport">
      <summary>
        <para>Support for various Graphics.CopyTexture cases (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.deviceModel">
      <summary>
        <para>The model of the device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.deviceName">
      <summary>
        <para>The user defined name of the device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.deviceType">
      <summary>
        <para>Returns the kind of device the application is running on (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.deviceUniqueIdentifier">
      <summary>
        <para>A unique device identifier. It is guaranteed to be unique for every device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsDeviceID">
      <summary>
        <para>The identifier code of the graphics device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsDeviceName">
      <summary>
        <para>The name of the graphics device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsDeviceType">
      <summary>
        <para>The graphics API type used by the graphics device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsDeviceVendor">
      <summary>
        <para>The vendor of the graphics device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsDeviceVendorID">
      <summary>
        <para>The identifier code of the graphics device vendor (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsDeviceVersion">
      <summary>
        <para>The graphics API type and driver version used by the graphics device (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsMemorySize">
      <summary>
        <para>Amount of video memory present (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsMultiThreaded">
      <summary>
        <para>Is graphics device using multi-threaded rendering (Read Only)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsShaderLevel">
      <summary>
        <para>Graphics device shader capability level (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.graphicsUVStartsAtTop">
      <summary>
        <para>Returns true if the texture UV coordinate convention for this platform has Y starting at the top of the image.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.maxCubemapSize">
      <summary>
        <para>Maximum Cubemap texture size (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.maxTextureSize">
      <summary>
        <para>Maximum texture size (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.npotSupport">
      <summary>
        <para>What NPOT (non-power of two size) texture support does the GPU provide? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.operatingSystem">
      <summary>
        <para>Operating system name with version (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.operatingSystemFamily">
      <summary>
        <para>Returns the operating system family the game is running on (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.processorCount">
      <summary>
        <para>Number of processors present (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.processorFrequency">
      <summary>
        <para>Processor frequency in MHz (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.processorType">
      <summary>
        <para>Processor name (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportedRenderTargetCount">
      <summary>
        <para>How many simultaneous render targets (MRTs) are supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supports2DArrayTextures">
      <summary>
        <para>Are 2D Array textures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supports3DRenderTextures">
      <summary>
        <para>Are 3D (volume) RenderTextures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supports3DTextures">
      <summary>
        <para>Are 3D (volume) textures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsAccelerometer">
      <summary>
        <para>Is an accelerometer available on the device?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsAudio">
      <summary>
        <para>Is there an Audio device available for playback?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsComputeShaders">
      <summary>
        <para>Are compute shaders supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsCubemapArrayTextures">
      <summary>
        <para>Are Cubemap Array textures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsGyroscope">
      <summary>
        <para>Is a gyroscope available on the device?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsImageEffects">
      <summary>
        <para>Are image effects supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsInstancing">
      <summary>
        <para>Is GPU draw call instancing supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsLocationService">
      <summary>
        <para>Is the device capable of reporting its location?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsMotionVectors">
      <summary>
        <para>Whether motion vectors are supported on this platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsRawShadowDepthSampling">
      <summary>
        <para>Is sampling raw depth from shadowmaps supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsRenderTextures">
      <summary>
        <para>Are render textures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsRenderToCubemap">
      <summary>
        <para>Are cubemap render textures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsShadows">
      <summary>
        <para>Are built-in shadows supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsSparseTextures">
      <summary>
        <para>Are sparse textures supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsStencil">
      <summary>
        <para>Is the stencil buffer supported? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.supportsVibration">
      <summary>
        <para>Is the device capable of providing the user haptic feedback by vibration?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.systemMemorySize">
      <summary>
        <para>Amount of system memory present (Read Only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemInfo.unsupportedIdentifier">
      <summary>
        <para>Value returned by SystemInfo string properties which are not supported on the current platform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SystemInfo.usesReversedZBuffer">
      <summary>
        <para>This property is true if the current platform uses a reversed depth buffer (where values range from 1 at the near plane and 0 at far plane), and false if the depth buffer is normal (0 is near, 1 is far). (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SystemInfo.SupportsRenderTextureFormat(UnityEngine.RenderTextureFormat)">
      <summary>
        <para>Is render texture format supported?</para>
      </summary>
      <param name="format">The format to look up.</param>
      <returns>
        <para>True if the format is supported.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.SystemInfo.SupportsTextureFormat(UnityEngine.TextureFormat)">
      <summary>
        <para>Is texture format supported on this device?</para>
      </summary>
      <param name="format">The TextureFormat format to look up.</param>
      <returns>
        <para>True if the format is supported.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.SystemLanguage">
      <summary>
        <para>The language the user's operating system is running in. Returned by Application.systemLanguage.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Afrikaans">
      <summary>
        <para>Afrikaans.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Arabic">
      <summary>
        <para>Arabic.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Basque">
      <summary>
        <para>Basque.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Belarusian">
      <summary>
        <para>Belarusian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Bulgarian">
      <summary>
        <para>Bulgarian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Catalan">
      <summary>
        <para>Catalan.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Chinese">
      <summary>
        <para>Chinese.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.ChineseSimplified">
      <summary>
        <para>ChineseSimplified.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.ChineseTraditional">
      <summary>
        <para>ChineseTraditional.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Czech">
      <summary>
        <para>Czech.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Danish">
      <summary>
        <para>Danish.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Dutch">
      <summary>
        <para>Dutch.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.English">
      <summary>
        <para>English.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Estonian">
      <summary>
        <para>Estonian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Faroese">
      <summary>
        <para>Faroese.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Finnish">
      <summary>
        <para>Finnish.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.French">
      <summary>
        <para>French.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.German">
      <summary>
        <para>German.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Greek">
      <summary>
        <para>Greek.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Hebrew">
      <summary>
        <para>Hebrew.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Hungarian">
      <summary>
        <para>Hungarian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Icelandic">
      <summary>
        <para>Icelandic.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Indonesian">
      <summary>
        <para>Indonesian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Italian">
      <summary>
        <para>Italian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Japanese">
      <summary>
        <para>Japanese.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Korean">
      <summary>
        <para>Korean.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Latvian">
      <summary>
        <para>Latvian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Lithuanian">
      <summary>
        <para>Lithuanian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Norwegian">
      <summary>
        <para>Norwegian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Polish">
      <summary>
        <para>Polish.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Portuguese">
      <summary>
        <para>Portuguese.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Romanian">
      <summary>
        <para>Romanian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Russian">
      <summary>
        <para>Russian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.SerboCroatian">
      <summary>
        <para>Serbo-Croatian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Slovak">
      <summary>
        <para>Slovak.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Slovenian">
      <summary>
        <para>Slovenian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Spanish">
      <summary>
        <para>Spanish.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Swedish">
      <summary>
        <para>Swedish.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Thai">
      <summary>
        <para>Thai.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Turkish">
      <summary>
        <para>Turkish.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Ukrainian">
      <summary>
        <para>Ukrainian.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Unknown">
      <summary>
        <para>Unknown.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SystemLanguage.Vietnamese">
      <summary>
        <para>Vietnamese.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TargetJoint2D">
      <summary>
        <para>The joint attempts to move a Rigidbody2D to a specific target position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.anchor">
      <summary>
        <para>The local-space anchor on the rigid-body the joint is attached to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.autoConfigureTarget">
      <summary>
        <para>Should the target be calculated automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.dampingRatio">
      <summary>
        <para>The amount by which the target spring force is reduced in proportion to the movement speed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.frequency">
      <summary>
        <para>The frequency at which the target spring oscillates around the target position.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.maxForce">
      <summary>
        <para>The maximum force that can be generated when trying to maintain the target joint constraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.target">
      <summary>
        <para>The world-space position that the joint will attempt to move the body to.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Terrain">
      <summary>
        <para>The Terrain component renders the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.activeTerrain">
      <summary>
        <para>The active terrain. This is a convenience function to get to the main terrain in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.activeTerrains">
      <summary>
        <para>The active terrains in the scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.bakeLightProbesForTrees">
      <summary>
        <para>Specifies if an array of internal light probes should be baked for terrain trees. Available only in editor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.basemapDistance">
      <summary>
        <para>Heightmap patches beyond basemap distance will use a precomputed low res basemap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.castShadows">
      <summary>
        <para>Should terrain cast shadows?.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.collectDetailPatches">
      <summary>
        <para>Collect detail patches from memory.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.detailObjectDensity">
      <summary>
        <para>Density of detail objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.detailObjectDistance">
      <summary>
        <para>Detail objects will be displayed up to this distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.drawHeightmap">
      <summary>
        <para>Specify if terrain heightmap should be drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.drawTreesAndFoliage">
      <summary>
        <para>Specify if terrain trees and details should be drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.editorRenderFlags">
      <summary>
        <para>Controls what part of the terrain should be rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapMaximumLOD">
      <summary>
        <para>Lets you essentially lower the heightmap resolution used for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.heightmapPixelError">
      <summary>
        <para>An approximation of how many pixels the terrain will pop in the worst case when switching lod.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.legacyShininess">
      <summary>
        <para>The shininess value of the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.legacySpecular">
      <summary>
        <para>The specular color of the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.lightmapIndex">
      <summary>
        <para>The index of the baked lightmap applied to this terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.lightmapScaleOffset">
      <summary>
        <para>The UV scale &amp; offset used for a baked lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.materialTemplate">
      <summary>
        <para>The custom material used to render the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.materialType">
      <summary>
        <para>The type of the material used to render the terrain. Could be one of the built-in types or custom. See Terrain.MaterialType.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.realtimeLightmapIndex">
      <summary>
        <para>The index of the realtime lightmap applied to this terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.realtimeLightmapScaleOffset">
      <summary>
        <para>The UV scale &amp; offset used for a realtime lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.reflectionProbeUsage">
      <summary>
        <para>How reflection probes are used for terrain. See Rendering.ReflectionProbeUsage.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.terrainData">
      <summary>
        <para>The Terrain Data that stores heightmaps, terrain textures, detail meshes and trees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeBillboardDistance">
      <summary>
        <para>Distance from the camera where trees will be rendered as billboards only.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeCrossFadeLength">
      <summary>
        <para>Total distance delta that trees will use to transition from billboard orientation to mesh orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeDistance">
      <summary>
        <para>The maximum distance at which trees are rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeLODBiasMultiplier">
      <summary>
        <para>The multiplier to the current LOD bias used for rendering LOD trees (i.e. SpeedTree trees).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Terrain.treeMaximumFullLODCount">
      <summary>
        <para>Maximum number of trees rendered at full LOD.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.AddTreeInstance(UnityEngine.TreeInstance)">
      <summary>
        <para>Adds a tree instance to the terrain.</para>
      </summary>
      <param name="instance"></param>
    </member>
    <member name="M:UnityEngine.Terrain.ApplyDelayedHeightmapModification">
      <summary>
        <para>Update the terrain's LOD and vegetation information after making changes with TerrainData.SetHeightsDelayLOD.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.CreateTerrainGameObject(UnityEngine.TerrainData)">
      <summary>
        <para>Creates a Terrain including collider from TerrainData.</para>
      </summary>
      <param name="assignTerrain"></param>
    </member>
    <member name="M:UnityEngine.Terrain.Flush">
      <summary>
        <para>Flushes any change done in the terrain so it takes effect.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.GetClosestReflectionProbes(System.Collections.Generic.List`1&lt;UnityEngine.Rendering.ReflectionProbeBlendInfo&gt;)">
      <summary>
        <para>Fills the list with reflection probes whose AABB intersects with terrain's AABB. Their weights are also provided. Weight shows how much influence the probe has on the terrain, and is used when the blending between multiple reflection probes occurs.</para>
      </summary>
      <param name="result">[in / out] A list to hold the returned reflection probes and their weights. See ReflectionProbeBlendInfo.</param>
    </member>
    <member name="M:UnityEngine.Terrain.GetPosition">
      <summary>
        <para>Get the position of the terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.GetSplatMaterialPropertyBlock(UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Get the previously set splat material properties by copying to the dest MaterialPropertyBlock object.</para>
      </summary>
      <param name="dest"></param>
    </member>
    <member name="T:UnityEngine.Terrain.MaterialType">
      <summary>
        <para>The type of the material used to render a terrain object. Could be one of the built-in types or custom.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.BuiltInLegacyDiffuse">
      <summary>
        <para>A built-in material that uses the legacy Lambert (diffuse) lighting model and has optional normal map support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.BuiltInLegacySpecular">
      <summary>
        <para>A built-in material that uses the legacy BlinnPhong (specular) lighting model and has optional normal map support.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.BuiltInStandard">
      <summary>
        <para>A built-in material that uses the standard physically-based lighting model. Inputs supported: smoothness, metallic / specular, normal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Terrain.MaterialType.Custom">
      <summary>
        <para>Use a custom material given by Terrain.materialTemplate.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Terrain.SampleHeight(UnityEngine.Vector3)">
      <summary>
        <para>Samples the height at the given position defined in world space, relative to the terrain space.</para>
      </summary>
      <param name="worldPosition"></param>
    </member>
    <member name="M:UnityEngine.Terrain.SetNeighbors(UnityEngine.Terrain,UnityEngine.Terrain,UnityEngine.Terrain,UnityEngine.Terrain)">
      <summary>
        <para>Lets you setup the connection between neighboring Terrains.</para>
      </summary>
      <param name="left"></param>
      <param name="top"></param>
      <param name="right"></param>
      <param name="bottom"></param>
    </member>
    <member name="M:UnityEngine.Terrain.SetSplatMaterialPropertyBlock(UnityEngine.MaterialPropertyBlock)">
      <summary>
        <para>Set the additional material properties when rendering the terrain heightmap using the splat material.</para>
      </summary>
      <param name="properties"></param>
    </member>
    <member name="T:UnityEngine.TerrainChangedFlags">
      <summary>
        <para>Indicate the types of changes to the terrain in OnTerrainChanged callback.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.DelayedHeightmapUpdate">
      <summary>
        <para>Indicates a change to the heightmap data without computing LOD.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.FlushEverythingImmediately">
      <summary>
        <para>Indicates that a change was made to the terrain that was so significant that the internal rendering data need to be flushed and recreated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.Heightmap">
      <summary>
        <para>Indicates a change to the heightmap data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.RemoveDirtyDetailsImmediately">
      <summary>
        <para>Indicates a change to the detail data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.TreeInstances">
      <summary>
        <para>Indicates a change to the tree data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainChangedFlags.WillBeDestroyed">
      <summary>
        <para>Indicates that the TerrainData object is about to be destroyed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainCollider">
      <summary>
        <para>A heightmap based collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainCollider.terrainData">
      <summary>
        <para>The terrain that stores the heightmap.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TerrainData">
      <summary>
        <para>The TerrainData class stores heightmaps, detail mesh positions, tree instances, and terrain texture alpha maps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapHeight">
      <summary>
        <para>Height of the alpha map.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapLayers">
      <summary>
        <para>Number of alpha map layers.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapResolution">
      <summary>
        <para>Resolution of the alpha map.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapTextures">
      <summary>
        <para>Alpha map textures used by the Terrain. Used by Terrain Inspector for undo.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.alphamapWidth">
      <summary>
        <para>Width of the alpha map.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.baseMapResolution">
      <summary>
        <para>Resolution of the base map used for rendering far patches on the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.bounds">
      <summary>
        <para>The local bounding box of the TerrainData object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailHeight">
      <summary>
        <para>Detail height of the TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailPrototypes">
      <summary>
        <para>Contains the detail texture/meshes that the terrain has.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailResolution">
      <summary>
        <para>Detail Resolution of the TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.detailWidth">
      <summary>
        <para>Detail width of the TerrainData.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapHeight">
      <summary>
        <para>Height of the terrain in samples (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapResolution">
      <summary>
        <para>Resolution of the heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapScale">
      <summary>
        <para>The size of each heightmap sample.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.heightmapWidth">
      <summary>
        <para>Width of the terrain in samples (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.size">
      <summary>
        <para>The total size in world units of the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.splatPrototypes">
      <summary>
        <para>Splat texture used by the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.thickness">
      <summary>
        <para>The thickness of the terrain used for collision detection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.treeInstanceCount">
      <summary>
        <para>Returns the number of tree instances.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.treeInstances">
      <summary>
        <para>Contains the current trees placed in the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.treePrototypes">
      <summary>
        <para>The list of tree prototypes this are the ones available in the inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassAmount">
      <summary>
        <para>Amount of waving grass in the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassSpeed">
      <summary>
        <para>Speed of the waving grass.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassStrength">
      <summary>
        <para>Strength of the waving grass in the terrain.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TerrainData.wavingGrassTint">
      <summary>
        <para>Color of the waving grass that the terrain has.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.GetAlphamaps(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns the alpha map at a position x, y given a width and height.</para>
      </summary>
      <param name="x">The x offset to read from.</param>
      <param name="y">The y offset to read from.</param>
      <param name="width">The width of the alpha map area to read.</param>
      <param name="height">The height of the alpha map area to read.</param>
      <returns>
        <para>A 3D array of floats, where the 3rd dimension represents the mixing weight of each splatmap at each x,y coordinate.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TerrainData.GetDetailLayer(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns a 2D array of the detail object density in the specific location.</para>
      </summary>
      <param name="xBase"></param>
      <param name="yBase"></param>
      <param name="width"></param>
      <param name="height"></param>
      <param name="layer"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHeight(System.Int32,System.Int32)">
      <summary>
        <para>Gets the height at a certain point x,y.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetHeights(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Get an array of heightmap samples.</para>
      </summary>
      <param name="xBase">First x index of heightmap samples to retrieve.</param>
      <param name="yBase">First y index of heightmap samples to retrieve.</param>
      <param name="width">Number of samples to retrieve along the heightmap's x axis.</param>
      <param name="height">Number of samples to retrieve along the heightmap's y axis.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedHeight(System.Single,System.Single)">
      <summary>
        <para>Gets an interpolated height at a point x,y.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetInterpolatedNormal(System.Single,System.Single)">
      <summary>
        <para>Get an interpolated normal at a given location.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetSteepness(System.Single,System.Single)">
      <summary>
        <para>Gets the gradient of the terrain at point (x,y).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetSupportedLayers(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns an array of all supported detail layer indices in the area.</para>
      </summary>
      <param name="xBase"></param>
      <param name="yBase"></param>
      <param name="totalWidth"></param>
      <param name="totalHeight"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.GetTreeInstance(System.Int32)">
      <summary>
        <para>Get the tree instance at the specified index. It is used as a faster version of treeInstances[index] as this function doesn't create the entire tree instances array.</para>
      </summary>
      <param name="index">The index of the tree instance.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.RefreshPrototypes">
      <summary>
        <para>Reloads all the values of the available prototypes (ie, detail mesh assets) in the TerrainData Object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainData.SetAlphamaps(System.Int32,System.Int32,System.Single[,,])">
      <summary>
        <para>Assign all splat values in the given map area.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="map"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetDetailLayer(System.Int32,System.Int32,System.Int32,System.Int32[,])">
      <summary>
        <para>Sets the detail layer density map.</para>
      </summary>
      <param name="xBase"></param>
      <param name="yBase"></param>
      <param name="layer"></param>
      <param name="details"></param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetDetailResolution(System.Int32,System.Int32)">
      <summary>
        <para>Set the resolution of the detail map.</para>
      </summary>
      <param name="detailResolution">Specifies the number of pixels in the detail resolution map. A larger detailResolution, leads to more accurate detail object painting.</param>
      <param name="resolutionPerPatch">Specifies the size in pixels of each individually rendered detail patch. A larger number reduces draw calls, but might increase triangle count since detail patches are culled on a per batch basis. A recommended value is 16. If you use a very large detail object distance and your grass is very sparse, it makes sense to increase the value.</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHeights(System.Int32,System.Int32,System.Single[,])">
      <summary>
        <para>Set an array of heightmap samples.</para>
      </summary>
      <param name="xBase">First x index of heightmap samples to set.</param>
      <param name="yBase">First y index of heightmap samples to set.</param>
      <param name="heights">Array of heightmap samples to set (values range from 0 to 1, array indexed as [y,x]).</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetHeightsDelayLOD(System.Int32,System.Int32,System.Single[,])">
      <summary>
        <para>Set an array of heightmap samples.</para>
      </summary>
      <param name="xBase">First x index of heightmap samples to set.</param>
      <param name="yBase">First y index of heightmap samples to set.</param>
      <param name="heights">Array of heightmap samples to set (values range from 0 to 1, array indexed as [y,x]).</param>
    </member>
    <member name="M:UnityEngine.TerrainData.SetTreeInstance(System.Int32,UnityEngine.TreeInstance)">
      <summary>
        <para>Set the tree instance with new parameters at the specified index. However, TreeInstance.prototypeIndex and TreeInstance.position can not be changed otherwise an ArgumentException will be thrown.</para>
      </summary>
      <param name="index">The index of the tree instance.</param>
      <param name="instance">The new TreeInstance value.</param>
    </member>
    <member name="T:UnityEngine.TerrainExtensions">
      <summary>
        <para>Extension methods to the Terrain class, used only for the UpdateGIMaterials method used by the Global Illumination System.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TerrainExtensions.UpdateGIMaterials(UnityEngine.Terrain)">
      <summary>
        <para>Schedules an update of the albedo and emissive Textures of a system that contains the Terrain.</para>
      </summary>
      <param name="terrain"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="M:UnityEngine.TerrainExtensions.UpdateGIMaterials(UnityEngine.Terrain,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Schedules an update of the albedo and emissive Textures of a system that contains the Terrain.</para>
      </summary>
      <param name="terrain"></param>
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="T:UnityEngine.TerrainRenderFlags">
      <summary>
        <para>Enum provding terrain rendering options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.all">
      <summary>
        <para>Render all options.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.details">
      <summary>
        <para>Render terrain details.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.heightmap">
      <summary>
        <para>Render heightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TerrainRenderFlags.trees">
      <summary>
        <para>Render trees.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextAlignment">
      <summary>
        <para>How multiline text should be aligned.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAlignment.Center">
      <summary>
        <para>Text lines are centered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAlignment.Left">
      <summary>
        <para>Text lines are aligned on the left side.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAlignment.Right">
      <summary>
        <para>Text lines are aligned on the right side.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextAnchor">
      <summary>
        <para>Where the anchor of the text is placed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.LowerCenter">
      <summary>
        <para>Text is anchored in lower side, centered horizontally.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.LowerLeft">
      <summary>
        <para>Text is anchored in lower left corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.LowerRight">
      <summary>
        <para>Text is anchored in lower right corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.MiddleCenter">
      <summary>
        <para>Text is centered both horizontally and vertically.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.MiddleLeft">
      <summary>
        <para>Text is anchored in left side, centered vertically.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.MiddleRight">
      <summary>
        <para>Text is anchored in right side, centered vertically.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.UpperCenter">
      <summary>
        <para>Text is anchored in upper side, centered horizontally.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.UpperLeft">
      <summary>
        <para>Text is anchored in upper left corner.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAnchor.UpperRight">
      <summary>
        <para>Text is anchored in upper right corner.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextAreaAttribute">
      <summary>
        <para>Attribute to make a string be edited with a height-flexible and scrollable text area.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAreaAttribute.maxLines">
      <summary>
        <para>The maximum amount of lines the text area can show before it starts using a scrollbar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextAreaAttribute.minLines">
      <summary>
        <para>The minimum amount of lines the text area will use.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TextAreaAttribute.#ctor">
      <summary>
        <para>Attribute to make a string be edited with a height-flexible and scrollable text area.</para>
      </summary>
      <param name="minLines">The minimum amount of lines the text area will use.</param>
      <param name="maxLines">The maximum amount of lines the text area can show before it starts using a scrollbar.</param>
    </member>
    <member name="M:UnityEngine.TextAreaAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Attribute to make a string be edited with a height-flexible and scrollable text area.</para>
      </summary>
      <param name="minLines">The minimum amount of lines the text area will use.</param>
      <param name="maxLines">The maximum amount of lines the text area can show before it starts using a scrollbar.</param>
    </member>
    <member name="T:UnityEngine.TextAsset">
      <summary>
        <para>Text file assets.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextAsset.bytes">
      <summary>
        <para>The raw bytes of the text asset. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextAsset.text">
      <summary>
        <para>The text contents of the .txt file as a string. (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextClipping">
      <summary>
        <para>Different methods for how the GUI system handles text being too large to fit the rectangle allocated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextClipping.Clip">
      <summary>
        <para>Text gets clipped to be inside the element.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextClipping.Overflow">
      <summary>
        <para>Text flows freely outside the element.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextGenerationSettings">
      <summary>
        <para>A struct that stores the settings for TextGeneration.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.alignByGeometry">
      <summary>
        <para>Use the extents of glyph geometry to perform horizontal alignment rather than glyph metrics.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.color">
      <summary>
        <para>The base color for the text generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.font">
      <summary>
        <para>Font to use for generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.fontSize">
      <summary>
        <para>Font size.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.fontStyle">
      <summary>
        <para>Font style.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.generateOutOfBounds">
      <summary>
        <para>Continue to generate characters even if the text runs out of bounds.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.generationExtents">
      <summary>
        <para>Extents that the generator will attempt to fit the text in.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.horizontalOverflow">
      <summary>
        <para>What happens to text when it reaches the horizontal generation bounds.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.lineSpacing">
      <summary>
        <para>The line spacing multiplier.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.pivot">
      <summary>
        <para>Generated vertices are offset by the pivot.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.resizeTextForBestFit">
      <summary>
        <para>Should the text be resized to fit the configured bounds?</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.resizeTextMaxSize">
      <summary>
        <para>Maximum size for resized text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.resizeTextMinSize">
      <summary>
        <para>Minimum size for resized text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.richText">
      <summary>
        <para>Allow rich text markup in generation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.scaleFactor">
      <summary>
        <para>A scale factor for the text. This is useful if the Text is on a Canvas and the canvas is scaled.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.textAnchor">
      <summary>
        <para>How is the generated text anchored.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.updateBounds">
      <summary>
        <para>Should the text generator update the bounds from the generated text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextGenerationSettings.verticalOverflow">
      <summary>
        <para>What happens to text when it reaches the bottom generation bounds.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextGenerator">
      <summary>
        <para>Class that can be used to generate text for rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.characterCount">
      <summary>
        <para>The number of characters that have been generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.characterCountVisible">
      <summary>
        <para>The number of characters that have been generated and are included in the visible lines.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.characters">
      <summary>
        <para>Array of generated characters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.fontSizeUsedForBestFit">
      <summary>
        <para>The size of the font that was found if using best fit mode.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.lineCount">
      <summary>
        <para>Number of text lines generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.lines">
      <summary>
        <para>Information about each generated text line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.rectExtents">
      <summary>
        <para>Extents of the generated text in rect format.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.vertexCount">
      <summary>
        <para>Number of vertices generated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextGenerator.verts">
      <summary>
        <para>Array of generated vertices.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TextGenerator.#ctor">
      <summary>
        <para>Create a TextGenerator.</para>
      </summary>
      <param name="initialCapacity"></param>
    </member>
    <member name="M:UnityEngine.TextGenerator.#ctor(System.Int32)">
      <summary>
        <para>Create a TextGenerator.</para>
      </summary>
      <param name="initialCapacity"></param>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetCharacters(System.Collections.Generic.List`1&lt;UnityEngine.UICharInfo&gt;)">
      <summary>
        <para>Populate the given List with UICharInfo.</para>
      </summary>
      <param name="characters">List to populate.</param>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetCharactersArray">
      <summary>
        <para>Returns the current UICharInfo.</para>
      </summary>
      <returns>
        <para>Character information.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetLines(System.Collections.Generic.List`1&lt;UnityEngine.UILineInfo&gt;)">
      <summary>
        <para>Populate the given list with UILineInfo.</para>
      </summary>
      <param name="lines">List to populate.</param>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetLinesArray">
      <summary>
        <para>Returns the current UILineInfo.</para>
      </summary>
      <returns>
        <para>Line information.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetPreferredHeight(System.String,UnityEngine.TextGenerationSettings)">
      <summary>
        <para>Given a string and settings, returns the preferred height for a container that would hold this text.</para>
      </summary>
      <param name="str">Generation text.</param>
      <param name="settings">Settings for generation.</param>
      <returns>
        <para>Preferred height.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetPreferredWidth(System.String,UnityEngine.TextGenerationSettings)">
      <summary>
        <para>Given a string and settings, returns the preferred width for a container that would hold this text.</para>
      </summary>
      <param name="str">Generation text.</param>
      <param name="settings">Settings for generation.</param>
      <returns>
        <para>Preferred width.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetVertices(System.Collections.Generic.List`1&lt;UnityEngine.UIVertex&gt;)">
      <summary>
        <para>Populate the given list with generated Vertices.</para>
      </summary>
      <param name="vertices">List to populate.</param>
    </member>
    <member name="M:UnityEngine.TextGenerator.GetVerticesArray">
      <summary>
        <para>Returns the current UILineInfo.</para>
      </summary>
      <returns>
        <para>Vertices.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TextGenerator.Invalidate">
      <summary>
        <para>Mark the text generator as invalid. This will force a full text generation the next time Populate is called.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TextGenerator.Populate(System.String,UnityEngine.TextGenerationSettings)">
      <summary>
        <para>Will generate the vertices and other data for the given string with the given settings.</para>
      </summary>
      <param name="str">String to generate.</param>
      <param name="settings">Settings.</param>
    </member>
    <member name="M:UnityEngine.TextGenerator.PopulateWithErrors(System.String,UnityEngine.TextGenerationSettings,UnityEngine.GameObject)">
      <summary>
        <para>Will generate the vertices and other data for the given string with the given settings.</para>
      </summary>
      <param name="str">String to generate.</param>
      <param name="settings">Generation settings.</param>
      <param name="context">The object used as context of the error log message, if necessary.</param>
      <returns>
        <para>True if the generation is a success, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.TextMesh">
      <summary>
        <para>A script interface for the.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.alignment">
      <summary>
        <para>How lines of text are aligned (Left, Right, Center).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.anchor">
      <summary>
        <para>Which point of the text shares the position of the Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.characterSize">
      <summary>
        <para>The size of each character (This scales the whole text).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.color">
      <summary>
        <para>The color used to render the text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.font">
      <summary>
        <para>The Font used.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.fontSize">
      <summary>
        <para>The font size to use (for dynamic fonts).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.fontStyle">
      <summary>
        <para>The font style to use (for dynamic fonts).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.lineSpacing">
      <summary>
        <para>How much space will be in-between lines of text.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.offsetZ">
      <summary>
        <para>How far should the text be offset from the transform.position.z when drawing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.richText">
      <summary>
        <para>Enable HTML-style tags for Text Formatting Markup.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.tabSize">
      <summary>
        <para>How much space will be inserted for a tab '\t' character. This is a multiplum of the 'spacebar' character offset.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TextMesh.text">
      <summary>
        <para>The text that is displayed.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Texture">
      <summary>
        <para>Base class for texture handling. Contains functionality that is common to both Texture2D and RenderTexture classes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.anisoLevel">
      <summary>
        <para>Anisotropic filtering level of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.dimension">
      <summary>
        <para>Dimensionality (type) of the texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.height">
      <summary>
        <para>Height of the texture in pixels. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.mipMapBias">
      <summary>
        <para>Mip map bias of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.width">
      <summary>
        <para>Width of the texture in pixels. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture.wrapMode">
      <summary>
        <para>Wrap mode (Repeat or Clamp) of the texture.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Texture.GetNativeTexturePtr">
      <summary>
        <para>Retrieve a native (underlying graphics API) pointer to the texture resource.</para>
      </summary>
      <returns>
        <para>Pointer to an underlying graphics API texture resource.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture.SetGlobalAnisotropicFilteringLimits(System.Int32,System.Int32)">
      <summary>
        <para>Sets Anisotropic limits.</para>
      </summary>
      <param name="forcedMin"></param>
      <param name="globalMax"></param>
    </member>
    <member name="T:UnityEngine.Texture2D">
      <summary>
        <para>Class for texture handling.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture2D.blackTexture">
      <summary>
        <para>Get a small texture with all black pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture2D.format">
      <summary>
        <para>The format of the pixel data in the texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture2D.mipmapCount">
      <summary>
        <para>How many mipmap levels are in this texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture2D.whiteTexture">
      <summary>
        <para>Get a small texture with all white pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Texture2D.Apply(System.Boolean,System.Boolean)">
      <summary>
        <para>Actually apply all previous SetPixel and SetPixels changes.</para>
      </summary>
      <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
      <param name="makeNoLongerReadable">When set to true, system memory copy of a texture is released.</param>
    </member>
    <member name="M:UnityEngine.Texture2D.Compress(System.Boolean)">
      <summary>
        <para>Compress texture into DXT format.</para>
      </summary>
      <param name="highQuality"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.CreateExternalTexture(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean,System.Boolean,System.IntPtr)">
      <summary>
        <para>Creates Unity Texture out of externally created native texture object.</para>
      </summary>
      <param name="nativeTex">Native 2D texture object.</param>
      <param name="width">Width of texture in pixels.</param>
      <param name="height">Height of texture in pixels.</param>
      <param name="format">Format of underlying texture object.</param>
      <param name="mipmap">Does the texture have mipmaps?</param>
      <param name="linear">Is texture using linear color space?</param>
    </member>
    <member name="M:UnityEngine.Texture2D.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Create a new empty texture.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.#ctor(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean)">
      <summary>
        <para>Create a new empty texture.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
      <param name="format"></param>
      <param name="mipmap"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.#ctor(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean,System.Boolean)">
      <summary>
        <para>See Also: SetPixel, SetPixels, Apply functions.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
      <param name="format"></param>
      <param name="mipmap"></param>
      <param name="linear"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.EncodeToEXR(UnityEngine.Texture2D/EXRFlags)">
      <summary>
        <para>Encodes this texture into the EXR format.</para>
      </summary>
      <param name="flags">Flags used to control compression and the output format.</param>
    </member>
    <member name="M:UnityEngine.Texture2D.EncodeToJPG">
      <summary>
        <para>Encodes this texture into JPG format.</para>
      </summary>
      <param name="quality">JPG quality to encode with, 1..100 (default 75).</param>
    </member>
    <member name="M:UnityEngine.Texture2D.EncodeToJPG(System.Int32)">
      <summary>
        <para>Encodes this texture into JPG format.</para>
      </summary>
      <param name="quality">JPG quality to encode with, 1..100 (default 75).</param>
    </member>
    <member name="M:UnityEngine.Texture2D.EncodeToPNG">
      <summary>
        <para>Encodes this texture into PNG format.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Texture2D.EXRFlags">
      <summary>
        <para>Flags used to control the encoding to an EXR file.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Texture2D.EXRFlags.CompressPIZ">
      <summary>
        <para>This texture will use Wavelet compression. This is best used for grainy images.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Texture2D.EXRFlags.CompressRLE">
      <summary>
        <para>The texture will use RLE (Run Length Encoding) EXR compression format (similar to Targa RLE compression).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Texture2D.EXRFlags.CompressZIP">
      <summary>
        <para>The texture will use the EXR ZIP compression format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Texture2D.EXRFlags.None">
      <summary>
        <para>No flag. This will result in an uncompressed 16-bit float EXR file.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Texture2D.EXRFlags.OutputAsFloat">
      <summary>
        <para>The texture will be exported as a 32-bit float EXR file (default is 16-bit).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Texture2D.GenerateAtlas">
      <summary>
        <para>Packs a set of rectangles into a square atlas, with optional padding between rectangles.</para>
      </summary>
      <param name="sizes">An array of rectangle dimensions.</param>
      <param name="padding">Amount of padding to insert between adjacent rectangles in the atlas.</param>
      <param name="atlasSize">The size of the atlas.</param>
      <returns>
        <para>If the function succeeds, this will contain the packed rectangles.  Otherwise, the return value is null.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixel(System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel color at coordinates (x, y).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixelBilinear(System.Single,System.Single)">
      <summary>
        <para>Returns filtered pixel color at normalized coordinates (u, v).</para>
      </summary>
      <param name="u"></param>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixels(System.Int32)">
      <summary>
        <para>Get the pixel colors from the texture.</para>
      </summary>
      <param name="miplevel">The mipmap level to fetch the pixels from. Defaults to zero.</param>
      <returns>
        <para>The array of all pixels in the mipmap level of the texture.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixels(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Get a block of pixel colors.</para>
      </summary>
      <param name="x">The x position of the pixel array to fetch.</param>
      <param name="y">The y position of the pixel array to fetch.</param>
      <param name="blockWidth">The width length of the pixel array to fetch.</param>
      <param name="blockHeight">The height length of the pixel array to fetch.</param>
      <param name="miplevel">The mipmap level to fetch the pixels. Defaults to zero, and is
        optional.</param>
      <returns>
        <para>The array of pixels in the texture that have been selected.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2D.GetPixels32(System.Int32)">
      <summary>
        <para>Get a block of pixel colors in Color32 format.</para>
      </summary>
      <param name="miplevel"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.GetRawTextureData">
      <summary>
        <para>Get raw data from a texture.</para>
      </summary>
      <returns>
        <para>Raw texture data as a byte array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2D.LoadImage(System.Byte[],System.Boolean)">
      <summary>
        <para>Loads PNG/JPG image byte array into a texture.</para>
      </summary>
      <param name="data">The byte array containing the image data to load.</param>
      <param name="markNonReadable">Set to false by default, pass true to optionally mark the texture as non-readable.</param>
      <returns>
        <para>Returns true if the data can be loaded, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2D.LoadRawTextureData(System.Byte[])">
      <summary>
        <para>Fills texture pixels with raw preformatted data.</para>
      </summary>
      <param name="data">Byte array to initialize texture pixels with.</param>
      <param name="size">Size of data in bytes.</param>
    </member>
    <member name="M:UnityEngine.Texture2D.LoadRawTextureData(System.IntPtr,System.Int32)">
      <summary>
        <para>Fills texture pixels with raw preformatted data.</para>
      </summary>
      <param name="data">Byte array to initialize texture pixels with.</param>
      <param name="size">Size of data in bytes.</param>
    </member>
    <member name="M:UnityEngine.Texture2D.PackTextures(UnityEngine.Texture2D[],System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Packs multiple Textures into a texture atlas.</para>
      </summary>
      <param name="textures">Array of textures to pack into the atlas.</param>
      <param name="padding">Padding in pixels between the packed textures.</param>
      <param name="maximumAtlasSize">Maximum size of the resulting texture.</param>
      <param name="makeNoLongerReadable">Should the texture be marked as no longer readable?</param>
      <returns>
        <para>An array of rectangles containing the UV coordinates in the atlas for each input texture, or null if packing fails.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2D.ReadPixels(UnityEngine.Rect,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Read pixels from screen into the saved texture data.</para>
      </summary>
      <param name="source">Rectangular region of the view to read from. Pixels are read from current render target.</param>
      <param name="destX">Horizontal pixel position in the texture to place the pixels that are read.</param>
      <param name="destY">Vertical pixel position in the texture to place the pixels that are read.</param>
      <param name="recalculateMipMaps">Should the texture's mipmaps be recalculated after reading?</param>
    </member>
    <member name="M:UnityEngine.Texture2D.Resize(System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean)">
      <summary>
        <para>Resizes the texture.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
      <param name="format"></param>
      <param name="hasMipMap"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.Resize(System.Int32,System.Int32)">
      <summary>
        <para>Resizes the texture.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixel(System.Int32,System.Int32,UnityEngine.Color)">
      <summary>
        <para>Sets pixel color at coordinates (x,y).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="color"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels(UnityEngine.Color[],System.Int32)">
      <summary>
        <para>Set a block of pixel colors.</para>
      </summary>
      <param name="colors">The array of pixel colours to assign (a 2D image flattened to a 1D array).</param>
      <param name="miplevel">The mip level of the texture to write to.</param>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels(System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Color[],System.Int32)">
      <summary>
        <para>Set a block of pixel colors.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="blockWidth"></param>
      <param name="blockHeight"></param>
      <param name="colors"></param>
      <param name="miplevel"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels32(UnityEngine.Color32[],System.Int32)">
      <summary>
        <para>Set a block of pixel colors.</para>
      </summary>
      <param name="colors"></param>
      <param name="miplevel"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.SetPixels32(System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Color32[],System.Int32)">
      <summary>
        <para>Set a block of pixel colors.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="blockWidth"></param>
      <param name="blockHeight"></param>
      <param name="colors"></param>
      <param name="miplevel"></param>
    </member>
    <member name="M:UnityEngine.Texture2D.UpdateExternalTexture(System.IntPtr)">
      <summary>
        <para>Updates Unity texture to use different native texture object.</para>
      </summary>
      <param name="nativeTex">Native 2D texture object.</param>
    </member>
    <member name="T:UnityEngine.Texture2DArray">
      <summary>
        <para>Class for handling 2D texture arrays.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture2DArray.depth">
      <summary>
        <para>Number of elements in a texture array (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture2DArray.format">
      <summary>
        <para>Texture format (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Texture2DArray.Apply(System.Boolean,System.Boolean)">
      <summary>
        <para>Actually apply all previous SetPixels changes.</para>
      </summary>
      <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
      <param name="makeNoLongerReadable">When set to true, system memory copy of a texture is released.</param>
    </member>
    <member name="M:UnityEngine.Texture2DArray.#ctor(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean)">
      <summary>
        <para>Create a new texture array.</para>
      </summary>
      <param name="width">Width of texture array in pixels.</param>
      <param name="height">Height of texture array in pixels.</param>
      <param name="depth">Number of elements in the texture array.</param>
      <param name="format">Format of the texture.</param>
      <param name="mipmap">Should mipmaps be created?</param>
      <param name="linear">Does the texture contain non-color data (i.e. don't do any color space conversions when sampling)? Default is false.</param>
    </member>
    <member name="M:UnityEngine.Texture2DArray.#ctor(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean,System.Boolean)">
      <summary>
        <para>Create a new texture array.</para>
      </summary>
      <param name="width">Width of texture array in pixels.</param>
      <param name="height">Height of texture array in pixels.</param>
      <param name="depth">Number of elements in the texture array.</param>
      <param name="format">Format of the texture.</param>
      <param name="mipmap">Should mipmaps be created?</param>
      <param name="linear">Does the texture contain non-color data (i.e. don't do any color space conversions when sampling)? Default is false.</param>
    </member>
    <member name="M:UnityEngine.Texture2DArray.GetPixels(System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel colors of a single array slice.</para>
      </summary>
      <param name="arrayElement">Array slice to read pixels from.</param>
      <param name="miplevel">Mipmap level to read pixels from.</param>
      <returns>
        <para>Array of pixel colors.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2DArray.GetPixels32(System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel colors of a single array slice.</para>
      </summary>
      <param name="arrayElement">Array slice to read pixels from.</param>
      <param name="miplevel">Mipmap level to read pixels from.</param>
      <returns>
        <para>Array of pixel colors in low precision (8 bits/channel) format.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Texture2DArray.SetPixels(UnityEngine.Color[],System.Int32,System.Int32)">
      <summary>
        <para>Set pixel colors for the whole mip level.</para>
      </summary>
      <param name="colors">An array of pixel colors.</param>
      <param name="arrayElement">The texture array element index.</param>
      <param name="miplevel">The mip level.</param>
    </member>
    <member name="M:UnityEngine.Texture2DArray.SetPixels32(UnityEngine.Color32[],System.Int32,System.Int32)">
      <summary>
        <para>Set pixel colors for the whole mip level.</para>
      </summary>
      <param name="colors">An array of pixel colors.</param>
      <param name="arrayElement">The texture array element index.</param>
      <param name="miplevel">The mip level.</param>
    </member>
    <member name="T:UnityEngine.Texture3D">
      <summary>
        <para>Class for handling 3D Textures, Use this to create.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture3D.depth">
      <summary>
        <para>The depth of the texture (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Texture3D.format">
      <summary>
        <para>The format of the pixel data in the texture (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Texture3D.Apply(System.Boolean,System.Boolean)">
      <summary>
        <para>Actually apply all previous SetPixels changes.</para>
      </summary>
      <param name="updateMipmaps">When set to true, mipmap levels are recalculated.</param>
      <param name="makeNoLongerReadable">When set to true, system memory copy of a texture is released.</param>
    </member>
    <member name="M:UnityEngine.Texture3D.#ctor(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,System.Boolean)">
      <summary>
        <para>Create a new empty 3D Texture.</para>
      </summary>
      <param name="width">Width of texture in pixels.</param>
      <param name="height">Height of texture in pixels.</param>
      <param name="depth">Depth of texture in pixels.</param>
      <param name="format">Texture data format.</param>
      <param name="mipmap">Should the texture have mipmaps?</param>
    </member>
    <member name="M:UnityEngine.Texture3D.GetPixels(System.Int32)">
      <summary>
        <para>Returns an array of pixel colors representing one mip level of the 3D texture.</para>
      </summary>
      <param name="miplevel"></param>
    </member>
    <member name="M:UnityEngine.Texture3D.GetPixels32(System.Int32)">
      <summary>
        <para>Returns an array of pixel colors representing one mip level of the 3D texture.</para>
      </summary>
      <param name="miplevel"></param>
    </member>
    <member name="M:UnityEngine.Texture3D.SetPixels(UnityEngine.Color[],System.Int32)">
      <summary>
        <para>Sets pixel colors of a 3D texture.</para>
      </summary>
      <param name="colors">The colors to set the pixels to.</param>
      <param name="miplevel">The mipmap level to be affected by the new colors.</param>
    </member>
    <member name="M:UnityEngine.Texture3D.SetPixels32(UnityEngine.Color32[],System.Int32)">
      <summary>
        <para>Sets pixel colors of a 3D texture.</para>
      </summary>
      <param name="colors">The colors to set the pixels to.</param>
      <param name="miplevel">The mipmap level to be affected by the new colors.</param>
    </member>
    <member name="T:UnityEngine.TextureCompressionQuality">
      <summary>
        <para>Compression Quality.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureCompressionQuality.Best">
      <summary>
        <para>Best compression.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureCompressionQuality.Fast">
      <summary>
        <para>Fast compression.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureCompressionQuality.Normal">
      <summary>
        <para>Normal compression (default).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextureFormat">
      <summary>
        <para>Format used when creating textures from scripts.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.Alpha8">
      <summary>
        <para>Alpha-only texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ARGB32">
      <summary>
        <para>Color with alpha texture format, 8-bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ARGB4444">
      <summary>
        <para>A 16 bits/pixel texture format. Texture stores color with an alpha channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGB_10x10">
      <summary>
        <para>ASTC (10x10 pixel block in 128 bits) compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGB_12x12">
      <summary>
        <para>ASTC (12x12 pixel block in 128 bits) compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGB_4x4">
      <summary>
        <para>ASTC (4x4 pixel block in 128 bits) compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGB_5x5">
      <summary>
        <para>ASTC (5x5 pixel block in 128 bits) compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGB_6x6">
      <summary>
        <para>ASTC (6x6 pixel block in 128 bits) compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGB_8x8">
      <summary>
        <para>ASTC (8x8 pixel block in 128 bits) compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGBA_10x10">
      <summary>
        <para>ASTC (10x10 pixel block in 128 bits) compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGBA_12x12">
      <summary>
        <para>ASTC (12x12 pixel block in 128 bits) compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGBA_4x4">
      <summary>
        <para>ASTC (4x4 pixel block in 128 bits) compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGBA_5x5">
      <summary>
        <para>ASTC (5x5 pixel block in 128 bits) compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGBA_6x6">
      <summary>
        <para>ASTC (6x6 pixel block in 128 bits) compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ASTC_RGBA_8x8">
      <summary>
        <para>ASTC (8x8 pixel block in 128 bits) compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ATC_RGB4">
      <summary>
        <para>ATC (ATITC) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ATC_RGBA8">
      <summary>
        <para>ATC (ATITC) 8 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.BC4">
      <summary>
        <para>Compressed one channel (R) texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.BC5">
      <summary>
        <para>Compressed two-channel (RG) texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.BC6H">
      <summary>
        <para>HDR compressed color texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.BC7">
      <summary>
        <para>High quality compressed color texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.BGRA32">
      <summary>
        <para>Color with alpha texture format, 8-bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.DXT1">
      <summary>
        <para>Compressed color texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.DXT1Crunched">
      <summary>
        <para>Compressed color texture format with Crunch compression for small storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.DXT5">
      <summary>
        <para>Compressed color with alpha channel texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.DXT5Crunched">
      <summary>
        <para>Compressed color with alpha channel texture format with Crunch compression for small storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.EAC_R">
      <summary>
        <para>ETC2  EAC (GL ES 3.0) 4 bitspixel compressed unsigned single-channel texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.EAC_R_SIGNED">
      <summary>
        <para>ETC2  EAC (GL ES 3.0) 4 bitspixel compressed signed single-channel texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.EAC_RG">
      <summary>
        <para>ETC2  EAC (GL ES 3.0) 8 bitspixel compressed unsigned dual-channel (RG) texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.EAC_RG_SIGNED">
      <summary>
        <para>ETC2  EAC (GL ES 3.0) 8 bitspixel compressed signed dual-channel (RG) texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ETC_RGB4">
      <summary>
        <para>ETC (GLES2.0) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ETC_RGB4_3DS">
      <summary>
        <para>ETC 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ETC_RGBA8_3DS">
      <summary>
        <para>ETC 4 bitspixel RGB + 4 bitspixel Alpha compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ETC2_RGB">
      <summary>
        <para>ETC2 (GL ES 3.0) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ETC2_RGBA1">
      <summary>
        <para>ETC2 (GL ES 3.0) 4 bits/pixel RGB+1-bit alpha texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.ETC2_RGBA8">
      <summary>
        <para>ETC2 (GL ES 3.0) 8 bits/pixel compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.PVRTC_RGB2">
      <summary>
        <para>PowerVR (iOS) 2 bits/pixel compressed color texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.PVRTC_RGB4">
      <summary>
        <para>PowerVR (iOS) 4 bits/pixel compressed color texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.PVRTC_RGBA2">
      <summary>
        <para>PowerVR (iOS) 2 bits/pixel compressed with alpha channel texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.PVRTC_RGBA4">
      <summary>
        <para>PowerVR (iOS) 4 bits/pixel compressed with alpha channel texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.R16">
      <summary>
        <para>A 16 bit color texture format that only has a red channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.R8">
      <summary>
        <para>Scalar (R) render texture format, 8 bit fixed point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RFloat">
      <summary>
        <para>Scalar (R) texture format, 32 bit floating point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RG16">
      <summary>
        <para>Two color (RG) texture format, 8-bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGB24">
      <summary>
        <para>Color texture format, 8-bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGB565">
      <summary>
        <para>A 16 bit color texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGB9e5Float">
      <summary>
        <para>RGB HDR format, with 9 bit mantissa per channel and a 5 bit shared exponent.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGBA32">
      <summary>
        <para>Color with alpha texture format, 8-bits per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGBA4444">
      <summary>
        <para>Color and alpha  texture format, 4 bit per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGBAFloat">
      <summary>
        <para>RGB color and alpha texture format,  32-bit floats per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGBAHalf">
      <summary>
        <para>RGB color and alpha texture format, 16 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGFloat">
      <summary>
        <para>Two color (RG)  texture format, 32 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RGHalf">
      <summary>
        <para>Two color (RG)  texture format, 16 bit floating point per channel.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.RHalf">
      <summary>
        <para>Scalar (R)  texture format, 16 bit floating point.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureFormat.YUY2">
      <summary>
        <para>A format that uses the YUV color space and is often used for video encoding or playback.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextureWrapMode">
      <summary>
        <para>Wrap mode for textures.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureWrapMode.Clamp">
      <summary>
        <para>Clamps the texture to the last pixel at the border.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextureWrapMode.Repeat">
      <summary>
        <para>Tiles the texture, creating a repeating pattern.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ThreadPriority">
      <summary>
        <para>Priority of a thread.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ThreadPriority.BelowNormal">
      <summary>
        <para>Below normal thread priority.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ThreadPriority.High">
      <summary>
        <para>Highest thread priority.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ThreadPriority.Low">
      <summary>
        <para>Lowest thread priority.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ThreadPriority.Normal">
      <summary>
        <para>Normal thread priority.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Time">
      <summary>
        <para>The interface to get time information from Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.captureFramerate">
      <summary>
        <para>Slows game playback time to allow screenshots to be saved between frames.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.deltaTime">
      <summary>
        <para>The time in seconds it took to complete the last frame (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.fixedDeltaTime">
      <summary>
        <para>The interval in seconds at which physics and other fixed frame rate updates (like MonoBehaviour's MonoBehaviour.FixedUpdate) are performed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.fixedTime">
      <summary>
        <para>The time the latest MonoBehaviour.FixedUpdate has started (Read Only). This is the time in seconds since the start of the game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.fixedUnscaledDeltaTime">
      <summary>
        <para>The timeScale-independent interval in seconds from the last fixed frame to the current one (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.fixedUnscaledTime">
      <summary>
        <para>The timeScale-independent time the latest MonoBehaviour.FixedUpdate has started (Read Only). This is the time in seconds since the start of the game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.frameCount">
      <summary>
        <para>The total number of frames that have passed (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.inFixedTimeStep">
      <summary>
        <para>Returns true if called inside a fixed time step callback (like MonoBehaviour's MonoBehaviour.FixedUpdate), otherwise returns false.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.maximumDeltaTime">
      <summary>
        <para>The maximum time a frame can take. Physics and other fixed frame rate updates (like MonoBehaviour's MonoBehaviour.FixedUpdate).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.maximumParticleDeltaTime">
      <summary>
        <para>The maximum time a frame can spend on particle updates. If the frame takes longer than this, then updates are split into multiple smaller updates.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.realtimeSinceStartup">
      <summary>
        <para>The real time in seconds since the game started (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.smoothDeltaTime">
      <summary>
        <para>A smoothed out Time.deltaTime (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.time">
      <summary>
        <para>The time at the beginning of this frame (Read Only). This is the time in seconds since the start of the game.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.timeScale">
      <summary>
        <para>The scale at which the time is passing. This can be used for slow motion effects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.timeSinceLevelLoad">
      <summary>
        <para>The time this frame has started (Read Only). This is the time in seconds since the last level has been loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.unscaledDeltaTime">
      <summary>
        <para>The timeScale-independent interval in seconds from the last frame to the current one (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Time.unscaledTime">
      <summary>
        <para>The timeScale-independent time for this frame (Read Only). This is the time in seconds since the start of the game.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tizen.Window">
      <summary>
        <para>Interface into Tizen specific functionality.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tizen.Window.evasGL">
      <summary>
        <para>Get pointer to the Tizen EvasGL object..</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tizen.Window.windowHandle">
      <summary>
        <para>Get pointer to the native window handle.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TizenActivityIndicatorStyle">
      <summary>
        <para>Enumerator list of different activity indicators your game can show when loading.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TizenActivityIndicatorStyle.DontShow">
      <summary>
        <para>Sets your game not to show any indicator while loading.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TizenActivityIndicatorStyle.InversedLarge">
      <summary>
        <para>The loading indicator size is large and rotates counterclockwise (progress_large and inverted).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TizenActivityIndicatorStyle.InversedSmall">
      <summary>
        <para>The loading indicator size is small and rotates counterclockwise (process_small and inverted).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TizenActivityIndicatorStyle.Large">
      <summary>
        <para>The loading indicator size is large and rotates clockwise (progress_large).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TizenActivityIndicatorStyle.Small">
      <summary>
        <para>The loading indicator size is small and rotates clockwise (process_small).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TooltipAttribute">
      <summary>
        <para>Specify a tooltip for a field in the Inspector window.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TooltipAttribute.tooltip">
      <summary>
        <para>The tooltip text.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TooltipAttribute.#ctor(System.String)">
      <summary>
        <para>Specify a tooltip for a field.</para>
      </summary>
      <param name="tooltip">The tooltip text.</param>
    </member>
    <member name="T:UnityEngine.Touch">
      <summary>
        <para>Structure describing the status of a finger touching the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.altitudeAngle">
      <summary>
        <para>Value of 0 radians indicates that the stylus is parallel to the surface, pi/2 indicates that it is perpendicular.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.azimuthAngle">
      <summary>
        <para>Value of 0 radians indicates that the stylus is pointed along the x-axis of the device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.deltaPosition">
      <summary>
        <para>The position delta since last change.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.deltaTime">
      <summary>
        <para>Amount of time that has passed since the last recorded change in Touch values.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.fingerId">
      <summary>
        <para>The unique index for the touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.maximumPossiblePressure">
      <summary>
        <para>The maximum possible pressure value for a platform.  If Input.touchPressureSupported returns false, the value of this property will always be 1.0f.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.phase">
      <summary>
        <para>Describes the phase of the touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.position">
      <summary>
        <para>The position of the touch in pixel coordinates.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.pressure">
      <summary>
        <para>The current amount of pressure being applied to a touch.  1.0f is considered to be the pressure of an average touch.  If Input.touchPressureSupported returns false, the value of this property will always be 1.0f.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.radius">
      <summary>
        <para>An estimated value of the radius of a touch.  Add radiusVariance to get the maximum touch size, subtract it to get the minimum touch size.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.radiusVariance">
      <summary>
        <para>The amount that the radius varies by for a touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.rawPosition">
      <summary>
        <para>The raw position used for the touch.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.tapCount">
      <summary>
        <para>Number of taps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Touch.type">
      <summary>
        <para>A value that indicates whether a touch was of Direct, Indirect (or remote), or Stylus type.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TouchPhase">
      <summary>
        <para>Describes phase of a finger touch.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchPhase.Began">
      <summary>
        <para>A finger touched the screen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchPhase.Canceled">
      <summary>
        <para>The system cancelled tracking for the touch.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchPhase.Ended">
      <summary>
        <para>A finger was lifted from the screen. This is the final phase of a touch.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchPhase.Moved">
      <summary>
        <para>A finger moved on the screen.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchPhase.Stationary">
      <summary>
        <para>A finger is touching the screen but hasn't moved.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TouchScreenKeyboard">
      <summary>
        <para>Interface into the native iPhone, Android, Windows Phone and Windows Store Apps on-screen keyboards - it is not available on other platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.active">
      <summary>
        <para>Is the keyboard visible or sliding into the position on the screen?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.area">
      <summary>
        <para>Returns portion of the screen which is covered by the keyboard.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.canGetSelection">
      <summary>
        <para>Specifies whether the TouchScreenKeyboard supports the selection property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.done">
      <summary>
        <para>Specifies if input process was finished. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.hideInput">
      <summary>
        <para>Will text input field above the keyboard be hidden when the keyboard is on screen?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.isSupported">
      <summary>
        <para>Is touch screen keyboard supported.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.selection">
      <summary>
        <para>Returns the character range of the selected text within the string currently being edited. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.targetDisplay">
      <summary>
        <para>Specified on which display the software keyboard will appear.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.text">
      <summary>
        <para>Returns the text displayed by the input field of the keyboard.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.visible">
      <summary>
        <para>Returns true whenever any keyboard is completely visible on the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TouchScreenKeyboard.wasCanceled">
      <summary>
        <para>Specifies if input process was canceled. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String,UnityEngine.TouchScreenKeyboardType)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String,UnityEngine.TouchScreenKeyboardType,System.Boolean)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String,UnityEngine.TouchScreenKeyboardType,System.Boolean,System.Boolean)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String,UnityEngine.TouchScreenKeyboardType,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String,UnityEngine.TouchScreenKeyboardType,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="M:UnityEngine.TouchScreenKeyboard.Open(System.String,UnityEngine.TouchScreenKeyboardType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
      <summary>
        <para>Opens the native keyboard provided by OS on the screen.</para>
      </summary>
      <param name="text">Text to edit.</param>
      <param name="keyboardType">Type of keyboard (eg, any text, numbers only, etc).</param>
      <param name="autocorrection">Is autocorrection applied?</param>
      <param name="multiline">Can more than one line of text be entered?</param>
      <param name="secure">Is the text masked (for passwords, etc)?</param>
      <param name="alert">Is the keyboard opened in alert mode?</param>
      <param name="textPlaceholder">Text to be used if no other text is present.</param>
    </member>
    <member name="T:UnityEngine.TouchScreenKeyboardType">
      <summary>
        <para>Describes the type of keyboard.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.ASCIICapable">
      <summary>
        <para>Keyboard displays standard ASCII characters.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.Default">
      <summary>
        <para>Default keyboard for the current input method.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.EmailAddress">
      <summary>
        <para>Keyboard optimized for specifying email addresses.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.NamePhonePad">
      <summary>
        <para>Keypad designed for entering a person's name or phone number.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.NintendoNetworkAccount">
      <summary>
        <para>Keyboard designed for Nintendo Network Accounts (available on Wii U only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.NumberPad">
      <summary>
        <para>Numeric keypad designed for PIN entry.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.NumbersAndPunctuation">
      <summary>
        <para>Keyboard with numbers and punctuation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.PhonePad">
      <summary>
        <para>Keypad designed for entering telephone numbers.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchScreenKeyboardType.URL">
      <summary>
        <para>Keyboard optimized for URL entry.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TouchType">
      <summary>
        <para>Describes whether a touch is direct, indirect (or remote), or from a stylus.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchType.Direct">
      <summary>
        <para>A direct touch on a device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchType.Indirect">
      <summary>
        <para>An Indirect, or remote, touch on a device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TouchType.Stylus">
      <summary>
        <para>A touch from a stylus on a device.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TrailRenderer">
      <summary>
        <para>The trail renderer is used to make trails behind objects in the scene as they move about.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.alignment">
      <summary>
        <para>Select whether the trail will face the camera, or the orientation of the Transform Component.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.autodestruct">
      <summary>
        <para>Does the GameObject of this trail renderer auto destructs?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.colorGradient">
      <summary>
        <para>Set the color gradient describing the color of the trail at various points along its length.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.endColor">
      <summary>
        <para>Set the color at the end of the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.endWidth">
      <summary>
        <para>The width of the trail at the end of the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.minVertexDistance">
      <summary>
        <para>Set the minimum distance the trail can travel before a new vertex is added to it.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.numCapVertices">
      <summary>
        <para>Set this to a value greater than 0, to get rounded corners on each end of the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.numCornerVertices">
      <summary>
        <para>Set this to a value greater than 0, to get rounded corners between each segment of the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.numPositions">
      <summary>
        <para>Get the number of line segments in the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.positionCount">
      <summary>
        <para>Get the number of line segments in the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.startColor">
      <summary>
        <para>Set the color at the start of the trail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.startWidth">
      <summary>
        <para>The width of the trail at the spawning point.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.textureMode">
      <summary>
        <para>Choose whether the U coordinate of the trail texture is tiled or stretched.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.time">
      <summary>
        <para>How long does the trail take to fade out.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.widthCurve">
      <summary>
        <para>Set the curve describing the width of the trail at various points along its length.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TrailRenderer.widthMultiplier">
      <summary>
        <para>Set an overall multiplier that is applied to the TrailRenderer.widthCurve to get the final width of the trail.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TrailRenderer.Clear">
      <summary>
        <para>Removes all points from the TrailRenderer.
Useful for restarting a trail from a new position.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.TrailRenderer.GetPosition(System.Int32)">
      <summary>
        <para>Get the position of a vertex in the trail.</para>
      </summary>
      <param name="index">The index of the position to retrieve.</param>
      <returns>
        <para>The position at the specified index in the array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.TrailRenderer.GetPositions(UnityEngine.Vector3[])">
      <summary>
        <para>Get the positions of all vertices in the trail.</para>
      </summary>
      <param name="positions">The array of positions to retrieve.</param>
      <returns>
        <para>How many positions were actually stored in the output array.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Transform">
      <summary>
        <para>Position, rotation and scale of an object.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.childCount">
      <summary>
        <para>The number of children the Transform has.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.eulerAngles">
      <summary>
        <para>The rotation as Euler angles in degrees.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.forward">
      <summary>
        <para>The blue axis of the transform in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.hasChanged">
      <summary>
        <para>Has the transform changed since the last time the flag was set to 'false'?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.hierarchyCapacity">
      <summary>
        <para>The transform capacity of the transform's hierarchy data structure.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.hierarchyCount">
      <summary>
        <para>The number of transforms in the transform's hierarchy data structure.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.localEulerAngles">
      <summary>
        <para>The rotation as Euler angles in degrees relative to the parent transform's rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.localPosition">
      <summary>
        <para>Position of the transform relative to the parent transform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.localRotation">
      <summary>
        <para>The rotation of the transform relative to the parent transform's rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.localScale">
      <summary>
        <para>The scale of the transform relative to the parent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.localToWorldMatrix">
      <summary>
        <para>Matrix that transforms a point from local space into world space (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.lossyScale">
      <summary>
        <para>The global scale of the object (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.parent">
      <summary>
        <para>The parent of the transform.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.position">
      <summary>
        <para>The position of the transform in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.right">
      <summary>
        <para>The red axis of the transform in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.root">
      <summary>
        <para>Returns the topmost transform in the hierarchy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.rotation">
      <summary>
        <para>The rotation of the transform in world space stored as a Quaternion.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.up">
      <summary>
        <para>The green axis of the transform in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Transform.worldToLocalMatrix">
      <summary>
        <para>Matrix that transforms a point from world space into local space (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Transform.DetachChildren">
      <summary>
        <para>Unparents all children.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Transform.Find(System.String)">
      <summary>
        <para>Finds a child by name and returns it.</para>
      </summary>
      <param name="name">Name of child to be found.</param>
    </member>
    <member name="M:UnityEngine.Transform.GetChild(System.Int32)">
      <summary>
        <para>Returns a transform child by index.</para>
      </summary>
      <param name="index">Index of the child transform to return. Must be smaller than Transform.childCount.</param>
      <returns>
        <para>Transform child by index.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Transform.GetSiblingIndex">
      <summary>
        <para>Gets the sibling index.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformDirection(UnityEngine.Vector3)">
      <summary>
        <para>Transforms a direction from world space to local space. The opposite of Transform.TransformDirection.</para>
      </summary>
      <param name="direction"></param>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformDirection(System.Single,System.Single,System.Single)">
      <summary>
        <para>Transforms the direction x, y, z from world space to local space. The opposite of Transform.TransformDirection.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from world space to local space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformPoint(System.Single,System.Single,System.Single)">
      <summary>
        <para>Transforms the position x, y, z from world space to local space. The opposite of Transform.TransformPoint.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformVector(UnityEngine.Vector3)">
      <summary>
        <para>Transforms a vector from world space to local space. The opposite of Transform.TransformVector.</para>
      </summary>
      <param name="vector"></param>
    </member>
    <member name="M:UnityEngine.Transform.InverseTransformVector(System.Single,System.Single,System.Single)">
      <summary>
        <para>Transforms the vector x, y, z from world space to local space. The opposite of Transform.TransformVector.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Transform.IsChildOf(UnityEngine.Transform)">
      <summary>
        <para>Is this transform a child of parent?</para>
      </summary>
      <param name="parent"></param>
    </member>
    <member name="M:UnityEngine.Transform.LookAt(UnityEngine.Transform)">
      <summary>
        <para>Rotates the transform so the forward vector points at target's current position.</para>
      </summary>
      <param name="target">Object to point towards.</param>
      <param name="worldUp">Vector specifying the upward direction.</param>
    </member>
    <member name="M:UnityEngine.Transform.LookAt(UnityEngine.Transform,UnityEngine.Vector3)">
      <summary>
        <para>Rotates the transform so the forward vector points at target's current position.</para>
      </summary>
      <param name="target">Object to point towards.</param>
      <param name="worldUp">Vector specifying the upward direction.</param>
    </member>
    <member name="M:UnityEngine.Transform.LookAt(UnityEngine.Vector3)">
      <summary>
        <para>Rotates the transform so the forward vector points at worldPosition.</para>
      </summary>
      <param name="worldPosition">Point to look at.</param>
      <param name="worldUp">Vector specifying the upward direction.</param>
    </member>
    <member name="M:UnityEngine.Transform.LookAt(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Rotates the transform so the forward vector points at worldPosition.</para>
      </summary>
      <param name="worldPosition">Point to look at.</param>
      <param name="worldUp">Vector specifying the upward direction.</param>
    </member>
    <member name="M:UnityEngine.Transform.Rotate(UnityEngine.Vector3,UnityEngine.Space)">
      <summary>
        <para>Applies a rotation of eulerAngles.z degrees around the z axis, eulerAngles.x degrees around the x axis, and eulerAngles.y degrees around the y axis (in that order).</para>
      </summary>
      <param name="eulerAngles">Rotation to apply.</param>
      <param name="relativeTo">Rotation is local to object or World.</param>
    </member>
    <member name="M:UnityEngine.Transform.Rotate(System.Single,System.Single,System.Single,UnityEngine.Space)">
      <summary>
        <para>Applies a rotation of zAngle degrees around the z axis, xAngle degrees around the x axis, and yAngle degrees around the y axis (in that order).</para>
      </summary>
      <param name="xAngle">Degrees to rotate around the X axis.</param>
      <param name="yAngle">Degrees to rotate around the Y axis.</param>
      <param name="zAngle">Degrees to rotate around the Z axis.</param>
      <param name="relativeTo">Rotation is local to object or World.</param>
    </member>
    <member name="M:UnityEngine.Transform.Rotate(UnityEngine.Vector3,System.Single,UnityEngine.Space)">
      <summary>
        <para>Rotates the object around axis by angle degrees.</para>
      </summary>
      <param name="axis">Axis to apply rotation to.</param>
      <param name="angle">Degrees to rotation to apply.</param>
      <param name="relativeTo">Rotation is local to object or World.</param>
    </member>
    <member name="M:UnityEngine.Transform.RotateAround(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Rotates the transform about axis passing through point in world coordinates by angle degrees.</para>
      </summary>
      <param name="point"></param>
      <param name="axis"></param>
      <param name="angle"></param>
    </member>
    <member name="M:UnityEngine.Transform.RotateAround(UnityEngine.Vector3,System.Single)">
      <summary>
        <para></para>
      </summary>
      <param name="axis"></param>
      <param name="angle"></param>
    </member>
    <member name="M:UnityEngine.Transform.SetAsFirstSibling">
      <summary>
        <para>Move the transform to the start of the local transform list.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Transform.SetAsLastSibling">
      <summary>
        <para>Move the transform to the end of the local transform list.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Transform.SetParent(UnityEngine.Transform)">
      <summary>
        <para>Set the parent of the transform.</para>
      </summary>
      <param name="parent">The parent Transform to use.</param>
      <param name="worldPositionStays">If true, the parent-relative position, scale and
        rotation are modified such that the object keeps the same world space position,
        rotation and scale as before.</param>
    </member>
    <member name="M:UnityEngine.Transform.SetParent(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Set the parent of the transform.</para>
      </summary>
      <param name="parent">The parent Transform to use.</param>
      <param name="worldPositionStays">If true, the parent-relative position, scale and
        rotation are modified such that the object keeps the same world space position,
        rotation and scale as before.</param>
    </member>
    <member name="M:UnityEngine.Transform.SetPositionAndRotation(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Sets the world space position and rotation of the Transform component.</para>
      </summary>
      <param name="position"></param>
      <param name="rotation"></param>
    </member>
    <member name="M:UnityEngine.Transform.SetSiblingIndex(System.Int32)">
      <summary>
        <para>Sets the sibling index.</para>
      </summary>
      <param name="index">Index to set.</param>
    </member>
    <member name="M:UnityEngine.Transform.TransformDirection(UnityEngine.Vector3)">
      <summary>
        <para>Transforms direction from local space to world space.</para>
      </summary>
      <param name="direction"></param>
    </member>
    <member name="M:UnityEngine.Transform.TransformDirection(System.Single,System.Single,System.Single)">
      <summary>
        <para>Transforms direction x, y, z from local space to world space.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Transform.TransformPoint(UnityEngine.Vector3)">
      <summary>
        <para>Transforms position from local space to world space.</para>
      </summary>
      <param name="position"></param>
    </member>
    <member name="M:UnityEngine.Transform.TransformPoint(System.Single,System.Single,System.Single)">
      <summary>
        <para>Transforms the position x, y, z from local space to world space.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Transform.TransformVector(UnityEngine.Vector3)">
      <summary>
        <para>Transforms vector from local space to world space.</para>
      </summary>
      <param name="vector"></param>
    </member>
    <member name="M:UnityEngine.Transform.TransformVector(System.Single,System.Single,System.Single)">
      <summary>
        <para>Transforms vector x, y, z from local space to world space.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Transform.Translate(UnityEngine.Vector3)">
      <summary>
        <para>Moves the transform in the direction and distance of translation.</para>
      </summary>
      <param name="translation"></param>
      <param name="relativeTo"></param>
    </member>
    <member name="M:UnityEngine.Transform.Translate(UnityEngine.Vector3,UnityEngine.Space)">
      <summary>
        <para>Moves the transform in the direction and distance of translation.</para>
      </summary>
      <param name="translation"></param>
      <param name="relativeTo"></param>
    </member>
    <member name="M:UnityEngine.Transform.Translate(System.Single,System.Single,System.Single)">
      <summary>
        <para>Moves the transform by x along the x axis, y along the y axis, and z along the z axis.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="relativeTo"></param>
    </member>
    <member name="M:UnityEngine.Transform.Translate(System.Single,System.Single,System.Single,UnityEngine.Space)">
      <summary>
        <para>Moves the transform by x along the x axis, y along the y axis, and z along the z axis.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="relativeTo"></param>
    </member>
    <member name="M:UnityEngine.Transform.Translate(UnityEngine.Vector3,UnityEngine.Transform)">
      <summary>
        <para>Moves the transform in the direction and distance of translation.</para>
      </summary>
      <param name="translation"></param>
      <param name="relativeTo"></param>
    </member>
    <member name="M:UnityEngine.Transform.Translate(System.Single,System.Single,System.Single,UnityEngine.Transform)">
      <summary>
        <para>Moves the transform by x along the x axis, y along the y axis, and z along the z axis.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="relativeTo"></param>
    </member>
    <member name="T:UnityEngine.TransparencySortMode">
      <summary>
        <para>Transparent object sorting mode of a Camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TransparencySortMode.CustomAxis">
      <summary>
        <para>Sort objects based on distance along a custom axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TransparencySortMode.Default">
      <summary>
        <para>Default transparency sorting mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TransparencySortMode.Orthographic">
      <summary>
        <para>Orthographic transparency sorting mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TransparencySortMode.Perspective">
      <summary>
        <para>Perspective transparency sorting mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Tree">
      <summary>
        <para>Tree Component for the tree creator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tree.data">
      <summary>
        <para>Data asociated to the Tree.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Tree.hasSpeedTreeWind">
      <summary>
        <para>Tells if there is wind data exported from SpeedTree are saved on this component.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TreeInstance">
      <summary>
        <para>Contains information about a tree placed in the Terrain game object.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.color">
      <summary>
        <para>Color of this instance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.heightScale">
      <summary>
        <para>Height scale of this instance (compared to the prototype's size).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.lightmapColor">
      <summary>
        <para>Lightmap color calculated for this instance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.position">
      <summary>
        <para>Position of the tree.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.prototypeIndex">
      <summary>
        <para>Index of this instance in the TerrainData.treePrototypes array.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.rotation">
      <summary>
        <para>Read-only.

Rotation of the tree on X-Z plane (in radians).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TreeInstance.widthScale">
      <summary>
        <para>Width scale of this instance (compared to the prototype's size).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TreePrototype">
      <summary>
        <para>Simple class that contains a pointer to a tree prototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TreePrototype.bendFactor">
      <summary>
        <para>Bend factor of the tree prototype.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TreePrototype.prefab">
      <summary>
        <para>Retrieves the actual GameObect used by the tree.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UICharInfo">
      <summary>
        <para>Class that specifies some information about a renderable character.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UICharInfo.charWidth">
      <summary>
        <para>Character width.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UICharInfo.cursorPos">
      <summary>
        <para>Position of the character cursor in local (text generated) space.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UILineInfo">
      <summary>
        <para>Information about a generated line of text.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UILineInfo.height">
      <summary>
        <para>Height of the line.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UILineInfo.leading">
      <summary>
        <para>Space in pixels between this line and the next line.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UILineInfo.startCharIdx">
      <summary>
        <para>Index of the first character in the line.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UILineInfo.topY">
      <summary>
        <para>The upper Y position of the line in pixels. This is used for text annotation such as the caret and selection box in the InputField.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UIVertex">
      <summary>
        <para>Vertex class used by a Canvas for managing vertices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.color">
      <summary>
        <para>Vertex color.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.normal">
      <summary>
        <para>Normal.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.position">
      <summary>
        <para>Vertex position.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.simpleVert">
      <summary>
        <para>Simple UIVertex with sensible settings for use in the UI system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.tangent">
      <summary>
        <para>Tangent.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.uv0">
      <summary>
        <para>The first texture coordinate set of the mesh. Used by UI elements by default.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.uv1">
      <summary>
        <para>The second texture coordinate set of the mesh, if present.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.uv2">
      <summary>
        <para>The Third texture coordinate set of the mesh, if present.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UIVertex.uv3">
      <summary>
        <para>The forth texture coordinate set of the mesh, if present.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.UnityAPICompatibilityVersionAttribute">
      <summary>
        <para>Declares an assembly to be compatible (API wise) with a specific Unity API. Used by internal tools to avoid processing the assembly in order to decide whether assemblies may be using old Unity API.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.UnityAPICompatibilityVersionAttribute.version">
      <summary>
        <para>Version of Unity API.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.UnityAPICompatibilityVersionAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of UnityAPICompatibilityVersionAttribute.</para>
      </summary>
      <param name="version">Unity version that this assembly with compatible with.</param>
    </member>
    <member name="T:UnityEngine.UserAuthorization">
      <summary>
        <para>Constants to pass to Application.RequestUserAuthorization.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UserAuthorization.Microphone">
      <summary>
        <para>Request permission to use any audio input sources attached to the computer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.UserAuthorization.WebCam">
      <summary>
        <para>Request permission to use any video input sources attached to the computer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Vector2">
      <summary>
        <para>Representation of 2D vectors and points.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.down">
      <summary>
        <para>Shorthand for writing Vector2(0, -1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.left">
      <summary>
        <para>Shorthand for writing Vector2(-1, 0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.magnitude">
      <summary>
        <para>Returns the length of this vector (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.normalized">
      <summary>
        <para>Returns this vector with a magnitude of 1 (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.one">
      <summary>
        <para>Shorthand for writing Vector2(1, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.right">
      <summary>
        <para>Shorthand for writing Vector2(1, 0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.sqrMagnitude">
      <summary>
        <para>Returns the squared length of this vector (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.up">
      <summary>
        <para>Shorthand for writing Vector2(0, 1).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector2.x">
      <summary>
        <para>X component of the vector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector2.y">
      <summary>
        <para>Y component of the vector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector2.zero">
      <summary>
        <para>Shorthand for writing Vector2(0, 0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Vector2.Angle(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Returns the angle in degrees between from and to.</para>
      </summary>
      <param name="from"></param>
      <param name="to"></param>
    </member>
    <member name="M:UnityEngine.Vector2.ClampMagnitude(UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Returns a copy of vector with its magnitude clamped to maxLength.</para>
      </summary>
      <param name="vector"></param>
      <param name="maxLength"></param>
    </member>
    <member name="M:UnityEngine.Vector2.#ctor(System.Single,System.Single)">
      <summary>
        <para>Constructs a new vector with given x, y components.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Distance(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Returns the distance between a and b.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Dot(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Dot Product of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Equals(System.Object)">
      <summary>
        <para>Returns true if the given vector is exactly equal to this vector.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="?:UnityEngine.Vector2.implop_Vector2(Vector3)(UnityEngine.Vector3)">
      <summary>
        <para>Converts a Vector3 to a Vector2.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="?:UnityEngine.Vector2.implop_Vector3(Vector2)(UnityEngine.Vector2)">
      <summary>
        <para>Converts a Vector2 to a Vector3.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Lerp(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Linearly interpolates between vectors a and b by t.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector2.LerpUnclamped(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Linearly interpolates between vectors a and b by t.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Max(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Returns a vector that is made from the largest components of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Min(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Returns a vector that is made from the smallest components of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector2.MoveTowards(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Moves a point current towards target.</para>
      </summary>
      <param name="current"></param>
      <param name="target"></param>
      <param name="maxDistanceDelta"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Normalize">
      <summary>
        <para>Makes this vector have a magnitude of 1.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Vector2.op_Divide(UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Divides a vector by a number.</para>
      </summary>
      <param name="a"></param>
      <param name="d"></param>
    </member>
    <member name="?:UnityEngine.Vector2.op_Equal(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Returns true if two vectors are approximately equal.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Vector2.op_Minus(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Subtracts one vector from another.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Vector2.op_Minus(UnityEngine.Vector2)">
      <summary>
        <para>Negates a vector.</para>
      </summary>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Vector2.op_Multiply(UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Multiplies a vector by a number.</para>
      </summary>
      <param name="a"></param>
      <param name="d"></param>
    </member>
    <member name="?:UnityEngine.Vector2.op_Multiply(System.Single,UnityEngine.Vector2)">
      <summary>
        <para>Multiplies a vector by a number.</para>
      </summary>
      <param name="d"></param>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Vector2.op_Plus(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Adds two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Reflect(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Reflects a vector off the vector defined by a normal.</para>
      </summary>
      <param name="inDirection"></param>
      <param name="inNormal"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Scale(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Multiplies two vectors component-wise.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Scale(UnityEngine.Vector2)">
      <summary>
        <para>Multiplies every component of this vector by the same component of scale.</para>
      </summary>
      <param name="scale"></param>
    </member>
    <member name="M:UnityEngine.Vector2.Set(System.Single,System.Single)">
      <summary>
        <para>Set x and y components of an existing Vector2.</para>
      </summary>
      <param name="newX"></param>
      <param name="newY"></param>
    </member>
    <member name="M:UnityEngine.Vector2.SmoothDamp">
      <summary>
        <para>Gradually changes a vector towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Vector2.SmoothDamp">
      <summary>
        <para>Gradually changes a vector towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Vector2.SmoothDamp(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2&amp;,System.Single,System.Single,System.Single)">
      <summary>
        <para>Gradually changes a vector towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="P:UnityEngine.Vector2.this">
      <summary>
        <para>Access the x or y component using [0] or [1] respectively.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Vector2.ToString">
      <summary>
        <para>Returns a nicely formatted string for this vector.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Vector2.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for this vector.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.Vector3">
      <summary>
        <para>Representation of 3D vectors and points.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.back">
      <summary>
        <para>Shorthand for writing Vector3(0, 0, -1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.down">
      <summary>
        <para>Shorthand for writing Vector3(0, -1, 0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.forward">
      <summary>
        <para>Shorthand for writing Vector3(0, 0, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.left">
      <summary>
        <para>Shorthand for writing Vector3(-1, 0, 0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.magnitude">
      <summary>
        <para>Returns the length of this vector (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.normalized">
      <summary>
        <para>Returns this vector with a magnitude of 1 (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.one">
      <summary>
        <para>Shorthand for writing Vector3(1, 1, 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.right">
      <summary>
        <para>Shorthand for writing Vector3(1, 0, 0).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.sqrMagnitude">
      <summary>
        <para>Returns the squared length of this vector (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.up">
      <summary>
        <para>Shorthand for writing Vector3(0, 1, 0).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector3.x">
      <summary>
        <para>X component of the vector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector3.y">
      <summary>
        <para>Y component of the vector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector3.z">
      <summary>
        <para>Z component of the vector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector3.zero">
      <summary>
        <para>Shorthand for writing Vector3(0, 0, 0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Vector3.Angle(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns the angle in degrees between from and to.</para>
      </summary>
      <param name="from">The angle extends round from this vector.</param>
      <param name="to">The angle extends round to this vector.</param>
    </member>
    <member name="M:UnityEngine.Vector3.ClampMagnitude(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Returns a copy of vector with its magnitude clamped to maxLength.</para>
      </summary>
      <param name="vector"></param>
      <param name="maxLength"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Cross(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Cross Product of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a new vector with given x, y, z components.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Vector3.#ctor(System.Single,System.Single)">
      <summary>
        <para>Creates a new vector with given x, y components and sets z to zero.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Distance(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns the distance between a and b.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Dot(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Dot Product of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Equals(System.Object)">
      <summary>
        <para>Returns true if the given vector is exactly equal to this vector.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Lerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Linearly interpolates between two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector3.LerpUnclamped(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Linearly interpolates between two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Max(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns a vector that is made from the largest components of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Min(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns a vector that is made from the smallest components of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector3.MoveTowards(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Moves a point current in a straight line towards a target point.</para>
      </summary>
      <param name="current"></param>
      <param name="target"></param>
      <param name="maxDistanceDelta"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Normalize(UnityEngine.Vector3)">
      <summary>
        <para></para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Normalize">
      <summary>
        <para>Makes this vector have a magnitude of 1.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Vector3.op_Divide(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Divides a vector by a number.</para>
      </summary>
      <param name="a"></param>
      <param name="d"></param>
    </member>
    <member name="?:UnityEngine.Vector3.op_Equal(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns true if two vectors are approximately equal.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Vector3.op_Minus(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Subtracts one vector from another.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Vector3.op_Minus(UnityEngine.Vector3)">
      <summary>
        <para>Negates a vector.</para>
      </summary>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Vector3.op_Multiply(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Multiplies a vector by a number.</para>
      </summary>
      <param name="a"></param>
      <param name="d"></param>
    </member>
    <member name="?:UnityEngine.Vector3.op_Multiply(System.Single,UnityEngine.Vector3)">
      <summary>
        <para>Multiplies a vector by a number.</para>
      </summary>
      <param name="d"></param>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Vector3.op_Plus(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Adds two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector3.OrthoNormalize(UnityEngine.Vector3&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Makes vectors normalized and orthogonal to each other.</para>
      </summary>
      <param name="normal"></param>
      <param name="tangent"></param>
    </member>
    <member name="M:UnityEngine.Vector3.OrthoNormalize(UnityEngine.Vector3&amp;,UnityEngine.Vector3&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Makes vectors normalized and orthogonal to each other.</para>
      </summary>
      <param name="normal"></param>
      <param name="tangent"></param>
      <param name="binormal"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Project(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Projects a vector onto another vector.</para>
      </summary>
      <param name="vector"></param>
      <param name="onNormal"></param>
    </member>
    <member name="M:UnityEngine.Vector3.ProjectOnPlane(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Projects a vector onto a plane defined by a normal orthogonal to the plane.</para>
      </summary>
      <param name="vector"></param>
      <param name="planeNormal"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Reflect(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Reflects a vector off the plane defined by a normal.</para>
      </summary>
      <param name="inDirection"></param>
      <param name="inNormal"></param>
    </member>
    <member name="M:UnityEngine.Vector3.RotateTowards(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Rotates a vector current towards target.</para>
      </summary>
      <param name="current"></param>
      <param name="target"></param>
      <param name="maxRadiansDelta"></param>
      <param name="maxMagnitudeDelta"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Scale(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Multiplies two vectors component-wise.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Scale(UnityEngine.Vector3)">
      <summary>
        <para>Multiplies every component of this vector by the same component of scale.</para>
      </summary>
      <param name="scale"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Set(System.Single,System.Single,System.Single)">
      <summary>
        <para>Set x, y and z components of an existing Vector3.</para>
      </summary>
      <param name="new_x"></param>
      <param name="new_y"></param>
      <param name="new_z"></param>
    </member>
    <member name="M:UnityEngine.Vector3.Slerp(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Spherically interpolates between two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector3.SlerpUnclamped(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Spherically interpolates between two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3&amp;,System.Single)">
      <summary>
        <para>Gradually changes a vector towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3&amp;,System.Single,System.Single)">
      <summary>
        <para>Gradually changes a vector towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="M:UnityEngine.Vector3.SmoothDamp(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3&amp;,System.Single,System.Single,System.Single)">
      <summary>
        <para>Gradually changes a vector towards a desired goal over time.</para>
      </summary>
      <param name="current">The current position.</param>
      <param name="target">The position we are trying to reach.</param>
      <param name="currentVelocity">The current velocity, this value is modified by the function every time you call it.</param>
      <param name="smoothTime">Approximately the time it will take to reach the target. A smaller value will reach the target faster.</param>
      <param name="maxSpeed">Optionally allows you to clamp the maximum speed.</param>
      <param name="deltaTime">The time since the last call to this function. By default Time.deltaTime.</param>
    </member>
    <member name="P:UnityEngine.Vector3.this">
      <summary>
        <para>Access the x, y, z components using [0], [1], [2] respectively.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Vector3.ToString">
      <summary>
        <para>Returns a nicely formatted string for this vector.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Vector3.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for this vector.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.Vector4">
      <summary>
        <para>Representation of four-dimensional vectors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector4.magnitude">
      <summary>
        <para>Returns the length of this vector (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector4.normalized">
      <summary>
        <para>Returns this vector with a magnitude of 1 (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector4.one">
      <summary>
        <para>Shorthand for writing Vector4(1,1,1,1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector4.sqrMagnitude">
      <summary>
        <para>Returns the squared length of this vector (Read Only).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector4.w">
      <summary>
        <para>W component of the vector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector4.x">
      <summary>
        <para>X component of the vector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector4.y">
      <summary>
        <para>Y component of the vector.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Vector4.z">
      <summary>
        <para>Z component of the vector.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Vector4.zero">
      <summary>
        <para>Shorthand for writing Vector4(0,0,0,0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a new vector with given x, y, z, w components.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
      <param name="w"></param>
    </member>
    <member name="M:UnityEngine.Vector4.#ctor(System.Single,System.Single,System.Single)">
      <summary>
        <para>Creates a new vector with given x, y, z components and sets w to zero.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="z"></param>
    </member>
    <member name="M:UnityEngine.Vector4.#ctor(System.Single,System.Single)">
      <summary>
        <para>Creates a new vector with given x, y components and sets z and w to zero.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Distance(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Returns the distance between a and b.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Dot(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Dot Product of two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Equals(System.Object)">
      <summary>
        <para>Returns true if the given vector is exactly equal to this vector.</para>
      </summary>
      <param name="other"></param>
    </member>
    <member name="?:UnityEngine.Vector4.implop_Vector2(Vector4)(UnityEngine.Vector4)">
      <summary>
        <para>Converts a Vector4 to a Vector2.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="?:UnityEngine.Vector4.implop_Vector3(Vector4)(UnityEngine.Vector4)">
      <summary>
        <para>Converts a Vector4 to a Vector3.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="?:UnityEngine.Vector4.implop_Vector4(Vector2)(UnityEngine.Vector2)">
      <summary>
        <para>Converts a Vector2 to a Vector4.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="?:UnityEngine.Vector4.implop_Vector4(Vector3)(UnityEngine.Vector3)">
      <summary>
        <para>Converts a Vector3 to a Vector4.</para>
      </summary>
      <param name="v"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Lerp(UnityEngine.Vector4,UnityEngine.Vector4,System.Single)">
      <summary>
        <para>Linearly interpolates between two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector4.LerpUnclamped(UnityEngine.Vector4,UnityEngine.Vector4,System.Single)">
      <summary>
        <para>Linearly interpolates between two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
      <param name="t"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Max(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Returns a vector that is made from the largest components of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Min(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Returns a vector that is made from the smallest components of two vectors.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="M:UnityEngine.Vector4.MoveTowards(UnityEngine.Vector4,UnityEngine.Vector4,System.Single)">
      <summary>
        <para>Moves a point current towards target.</para>
      </summary>
      <param name="current"></param>
      <param name="target"></param>
      <param name="maxDistanceDelta"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Normalize(UnityEngine.Vector4)">
      <summary>
        <para></para>
      </summary>
      <param name="a"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Normalize">
      <summary>
        <para>Makes this vector have a magnitude of 1.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Vector4.op_Divide(UnityEngine.Vector4,System.Single)">
      <summary>
        <para>Divides a vector by a number.</para>
      </summary>
      <param name="a"></param>
      <param name="d"></param>
    </member>
    <member name="?:UnityEngine.Vector4.op_Equal(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Returns true if two vectors are approximately equal.</para>
      </summary>
      <param name="lhs"></param>
      <param name="rhs"></param>
    </member>
    <member name="?:UnityEngine.Vector4.op_Minus(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Subtracts one vector from another.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="?:UnityEngine.Vector4.op_Minus(UnityEngine.Vector4)">
      <summary>
        <para>Negates a vector.</para>
      </summary>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Vector4.op_Multiply(UnityEngine.Vector4,System.Single)">
      <summary>
        <para>Multiplies a vector by a number.</para>
      </summary>
      <param name="a"></param>
      <param name="d"></param>
    </member>
    <member name="?:UnityEngine.Vector4.op_Multiply(System.Single,UnityEngine.Vector4)">
      <summary>
        <para>Multiplies a vector by a number.</para>
      </summary>
      <param name="d"></param>
      <param name="a"></param>
    </member>
    <member name="?:UnityEngine.Vector4.op_Plus(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Adds two vectors.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Project(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Projects a vector onto another vector.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Scale(UnityEngine.Vector4,UnityEngine.Vector4)">
      <summary>
        <para>Multiplies two vectors component-wise.</para>
      </summary>
      <param name="a"></param>
      <param name="b"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Scale(UnityEngine.Vector4)">
      <summary>
        <para>Multiplies every component of this vector by the same component of scale.</para>
      </summary>
      <param name="scale"></param>
    </member>
    <member name="M:UnityEngine.Vector4.Set(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Set x, y, z and w components of an existing Vector4.</para>
      </summary>
      <param name="new_x"></param>
      <param name="new_y"></param>
      <param name="new_z"></param>
      <param name="new_w"></param>
    </member>
    <member name="P:UnityEngine.Vector4.this">
      <summary>
        <para>Access the x, y, z, w components using [0], [1], [2], [3] respectively.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Vector4.ToString">
      <summary>
        <para>Returns a nicely formatted string for this vector.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="M:UnityEngine.Vector4.ToString(System.String)">
      <summary>
        <para>Returns a nicely formatted string for this vector.</para>
      </summary>
      <param name="format"></param>
    </member>
    <member name="T:UnityEngine.VerticalWrapMode">
      <summary>
        <para>Wrapping modes for text that reaches the vertical boundary.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VerticalWrapMode.Overflow">
      <summary>
        <para>Text well continue to generate when reaching vertical boundary.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VerticalWrapMode.Truncate">
      <summary>
        <para>Text will be clipped when reaching the vertical boundary.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoAspectRatio">
      <summary>
        <para>Methods used to fit a video in the target area.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitHorizontally">
      <summary>
        <para>Resize proportionally so that width fits the target area, cropping or adding black bars above and below if needed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitInside">
      <summary>
        <para>Resize proportionally so that content fits the target area, adding black bars if needed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitOutside">
      <summary>
        <para>Resize proportionally so that content fits the target area, cropping if needed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.FitVertically">
      <summary>
        <para>Resize proportionally so that height fits the target area, cropping or adding black bars on each side if needed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.NoScaling">
      <summary>
        <para>Preserve the pixel size without adjusting for target area.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAspectRatio.Stretch">
      <summary>
        <para>Resize non-proportionally to fit the target area.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoAudioOutputMode">
      <summary>
        <para>Places where the audio embedded in a video can be sent.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAudioOutputMode.AudioSource">
      <summary>
        <para>Send the embedded audio into a specified AudioSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAudioOutputMode.Direct">
      <summary>
        <para>Send the embedded audio direct to the platform's audio hardware.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoAudioOutputMode.None">
      <summary>
        <para>Disable the embedded audio.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoClip">
      <summary>
        <para>A container for video data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.audioTrackCount">
      <summary>
        <para>Number of audio tracks in the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.frameCount">
      <summary>
        <para>The length of the VideoClip in frames. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.frameRate">
      <summary>
        <para>The frame rate of the clip in frames/second. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.height">
      <summary>
        <para>The height of the images in the video clip in pixels. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.length">
      <summary>
        <para>The length of the video clip in seconds. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.originalPath">
      <summary>
        <para>The video clip path in the project's assets. (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoClip.width">
      <summary>
        <para>The width of the images in the video clip in pixels. (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoClip.GetAudioChannelCount(System.UInt16)">
      <summary>
        <para>The number of channels in the audio track.  E.g. 2 for a stereo track.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio queried audio track.</param>
      <returns>
        <para>The number of channels.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoClip.GetAudioLanguage(System.UInt16)">
      <summary>
        <para>Get the audio track language.  Can be unknown.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio queried audio track.</param>
      <returns>
        <para>The abbreviated name of the language.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoClip.GetAudioSampleRate(System.UInt16)">
      <summary>
        <para>Get the audio track sampling rate in Hertz.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio queried audio track.</param>
      <returns>
        <para>The sampling rate in Hertz.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Video.VideoPlayer">
      <summary>
        <para>Plays video content onto a target.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.aspectRatio">
      <summary>
        <para>Defines how the video content will be stretched to fill the target area.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.audioOutputMode">
      <summary>
        <para>Destination for the audio embedded in the video.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.audioTrackCount">
      <summary>
        <para>Number of audio tracks found in the data source currently configured.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetDirectAudioVolume">
      <summary>
        <para>Whether direct-output volume controls are supported for the current platform and video format. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetPlaybackSpeed">
      <summary>
        <para>Whether the playback speed can be changed. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetSkipOnDrop">
      <summary>
        <para>Determines whether the VideoPlayer skips frames to catch up with current time. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetTime">
      <summary>
        <para>Whether current time can be changed using the time or timeFrames property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canSetTimeSource">
      <summary>
        <para>Whether the time source followed by the VideoPlayer can be changed. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.canStep">
      <summary>
        <para>Returns true if the VideoPlayer can step forward through the video content. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.clip">
      <summary>
        <para>The clip being played by the VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.controlledAudioTrackCount">
      <summary>
        <para>Number of audio tracks that this VideoPlayer will take control of. The other ones will be silenced. A maximum of 64 tracks are allowed.
The actual number of audio tracks cannot be known in advance when playing URLs, which is why this value is independent of the Video.VideoPlayer.audioTrackCount property.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.controlledAudioTrackMaxCount">
      <summary>
        <para>Maximum number of audio tracks that can be controlled.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.errorReceived(UnityEngine.Video.VideoPlayer/ErrorEventHandler)">
      <summary>
        <para>Errors such as HTTP connection problems are reported through this callback.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.frame">
      <summary>
        <para>The frame index currently being displayed by the VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.frameCount">
      <summary>
        <para>Number of frames in the current video content.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.frameDropped(UnityEngine.Video.VideoPlayer/EventHandler)">
      <summary>
        <para>[NOT YET IMPLEMENTED] Invoked when the video decoder does not produce a frame as per the time source during playback.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.frameRate">
      <summary>
        <para>The frame rate of the clip or URL in frames/second. (Read Only).</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.frameReady(UnityEngine.Video.VideoPlayer/FrameReadyEventHandler)">
      <summary>
        <para>Invoked when a new frame is ready.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.isLooping">
      <summary>
        <para>Determines whether the VideoPlayer restarts from the beginning when it reaches the end of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.isPlaying">
      <summary>
        <para>Whether content is being played. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.isPrepared">
      <summary>
        <para>Whether the VideoPlayer has successfully prepared the content to be played. (Read Only)</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.loopPointReached(UnityEngine.Video.VideoPlayer/EventHandler)">
      <summary>
        <para>Invoked when the VideoPlayer reaches the end of the content to play.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.playbackSpeed">
      <summary>
        <para>Factor by which the basic playback rate will be multiplied.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.playOnAwake">
      <summary>
        <para>Whether the content will start playing back as soon as the component awakes.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.prepareCompleted(UnityEngine.Video.VideoPlayer/EventHandler)">
      <summary>
        <para>Invoked when the VideoPlayer preparation is complete.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.renderMode">
      <summary>
        <para>Where the video content will be drawn.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.seekCompleted(UnityEngine.Video.VideoPlayer/EventHandler)">
      <summary>
        <para>Invoke after a seek operation completes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.sendFrameReadyEvents">
      <summary>
        <para>Enables the frameReady events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.skipOnDrop">
      <summary>
        <para>Whether the VideoPlayer is allowed to skip frames to catch up with current time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.source">
      <summary>
        <para>The source that the VideoPlayer uses for playback.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Video.VideoPlayer.started(UnityEngine.Video.VideoPlayer/EventHandler)">
      <summary>
        <para>Invoked immediately after Play is called.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetCamera">
      <summary>
        <para>Camera component to draw to when Video.VideoPlayer.renderMode is set to either Video.VideoTarget.CameraBackPlane or Video.VideoTarget.CameraFrontPlane.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetCameraAlpha">
      <summary>
        <para>Overall transparency level of the target camera plane video.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetMaterialProperty">
      <summary>
        <para>Material texture property which is targeted when Video.VideoPlayer.renderMode is set to Video.VideoTarget.MaterialOverride.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetMaterialRenderer">
      <summary>
        <para>Renderer which is targeted when Video.VideoPlayer.renderMode is set to Video.VideoTarget.MaterialOverride</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.targetTexture">
      <summary>
        <para>RenderTexture to draw to when Video.VideoPlayer.renderMode is set to Video.VideoTarget.RenderTexture. For optimal performance, the dimensions of the RenderTexture should match those of the video media exactly.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.texture">
      <summary>
        <para>Internal texture in which video content is placed.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.time">
      <summary>
        <para>The VideoPlayer current time in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.timeSource">
      <summary>
        <para>[NOT YET IMPLEMENTED] The source used used by the VideoPlayer to derive its current time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.url">
      <summary>
        <para>The file or HTTP URL that the VideoPlayer will read content from.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Video.VideoPlayer.waitForFirstFrame">
      <summary>
        <para>Determines whether the VideoPlayer will wait for the first frame to be loaded into the texture before starting playback when Video.VideoPlayer.playOnAwake is on.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.EnableAudioTrack(System.UInt16,System.Boolean)">
      <summary>
        <para>Enable/disable audio track decoding. Only effective when the VideoPlayer is not currently playing.</para>
      </summary>
      <param name="trackIndex">Index of the audio track to enable/disable.</param>
      <param name="enabled">True for enabling the track. False for disabling the track.</param>
    </member>
    <member name="T:UnityEngine.Video.VideoPlayer.ErrorEventHandler">
      <summary>
        <para>Delegate type for VideoPlayer events that contain an error message.</para>
      </summary>
      <param name="source">The VideoPlayer that is emitting the event.</param>
      <param name="message">Message describing the error just encountered.</param>
    </member>
    <member name="T:UnityEngine.Video.VideoPlayer.EventHandler">
      <summary>
        <para>Delegate type for all parameter-less events emitted by VideoPlayers.</para>
      </summary>
      <param name="source">The VideoPlayer that is emitting the event.</param>
    </member>
    <member name="T:UnityEngine.Video.VideoPlayer.FrameReadyEventHandler">
      <summary>
        <para>Delegate type for VideoPlayer events that carry a frame number.</para>
      </summary>
      <param name="source">The VideoPlayer that is emitting the event.</param>
      <param name="frameNum">The frame the VideoPlayer is now at.</param>
      <param name="frameIdx"></param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetAudioChannelCount(System.UInt16)">
      <summary>
        <para>The number of audio channels in the specified audio track.</para>
      </summary>
      <param name="trackIndex">Index for the audio track being queried.</param>
      <returns>
        <para>Number of audio channels.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetAudioLanguageCode(System.UInt16)">
      <summary>
        <para>Returns the language code, if any, for the specified track.</para>
      </summary>
      <param name="trackIndex">Index of the audio track to query.</param>
      <returns>
        <para>Language code.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetDirectAudioMute(System.UInt16)">
      <summary>
        <para>Get the direct-output audio mute status for the specified track.</para>
      </summary>
      <param name="trackIndex"></param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetDirectAudioVolume(System.UInt16)">
      <summary>
        <para>Return the direct-output volume for specified track.</para>
      </summary>
      <param name="trackIndex">Track index for which the volume is queried.</param>
      <returns>
        <para>Volume, between 0 and 1.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.GetTargetAudioSource(System.UInt16)">
      <summary>
        <para>Gets the AudioSource that will receive audio samples for the specified track if Video.VideoPlayer.audioOutputMode is set to Video.VideoAudioOutputMode.AudioSource.</para>
      </summary>
      <param name="trackIndex">Index of the audio track for which the AudioSource is wanted.</param>
      <returns>
        <para>The source associated with the audio track.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.IsAudioTrackEnabled(System.UInt16)">
      <summary>
        <para>Returns whether decoding for the specified audio track is enabled. See Video.VideoPlayer.EnableAudioTrack for distinction with mute.</para>
      </summary>
      <param name="trackIndex">Index of the audio track being queried.</param>
      <returns>
        <para>True if decoding for the specified audio track is enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Pause">
      <summary>
        <para>Pauses the playback and leaves the current time intact.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Play">
      <summary>
        <para>Starts playback.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Prepare">
      <summary>
        <para>Initiates playback engine prepration.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.SetDirectAudioMute(System.UInt16,System.Boolean)">
      <summary>
        <para>Set the direct-output audio mute status for the specified track.</para>
      </summary>
      <param name="trackIndex">Track index for which the mute is set.</param>
      <param name="mute">Mute on/off.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.SetDirectAudioVolume(System.UInt16,System.Single)">
      <summary>
        <para>Set the direct-output audio volume for the specified track.</para>
      </summary>
      <param name="trackIndex">Track index for which the volume is set.</param>
      <param name="volume">New volume, between 0 and 1.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.SetTargetAudioSource(System.UInt16,UnityEngine.AudioSource)">
      <summary>
        <para>Sets the AudioSource that will receive audio samples for the specified track if this audio target is selected with Video.VideoPlayer.audioOutputMode.</para>
      </summary>
      <param name="trackIndex">Index of the audio track to associate with the specified AudioSource.</param>
      <param name="source">AudioSource to associate with the audio track.</param>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.StepForward">
      <summary>
        <para>Advances the current time by one frame immediately.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Video.VideoPlayer.Stop">
      <summary>
        <para>Pauses the playback and sets the current time to 0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoRenderMode">
      <summary>
        <para>Type of destination for the images read by a VideoPlayer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.APIOnly">
      <summary>
        <para>Don't draw the video content anywhere, but still make it available via the VideoPlayer's texture property in the API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.CameraFarPlane">
      <summary>
        <para>Draw video content behind a camera's scene.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.CameraNearPlane">
      <summary>
        <para>Draw video content in front of a camera's scene.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.MaterialOverride">
      <summary>
        <para>Draw the video content into a user-specified property of the current GameObject's material.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoRenderMode.RenderTexture">
      <summary>
        <para>Draw video content into a RenderTexture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoSource">
      <summary>
        <para>Source of the video content for a VideoPlayer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoSource.Url">
      <summary>
        <para>Use the current URL as the video content source.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoSource.VideoClip">
      <summary>
        <para>Use the current clip as the video content source.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Video.VideoTimeSource">
      <summary>
        <para>Time source followed by the Video.VideoPlayer when reading content.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeSource.AudioDSPTimeSource">
      <summary>
        <para>The audio hardware clock.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Video.VideoTimeSource.GameTimeSource">
      <summary>
        <para>The unscaled game time as defined by Time.realtimeSinceStartup.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.InputTracking">
      <summary>
        <para>A collection of methods and properties for interacting with the VR tracking system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.InputTracking.disablePositionalTracking">
      <summary>
        <para>Disables positional tracking in VR. If set to true the camera only tracks headset rotation state.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.InputTracking.GetLocalPosition(UnityEngine.VR.VRNode)">
      <summary>
        <para>Gets the position of a specific node.</para>
      </summary>
      <param name="node">Specifies which node's position should be returned.</param>
      <returns>
        <para>The position of the node in its local tracking space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.InputTracking.GetLocalRotation(UnityEngine.VR.VRNode)">
      <summary>
        <para>Gets the rotation of a specific node.</para>
      </summary>
      <param name="node">Specifies which node's rotation should be returned.</param>
      <returns>
        <para>The rotation of the node in its local tracking space.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.InputTracking.Recenter">
      <summary>
        <para>Center tracking to the current position and orientation of the HMD.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.TrackingSpaceType">
      <summary>
        <para>Represents the size of physical space available for VR.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.TrackingSpaceType.RoomScale">
      <summary>
        <para>Represents a space large enough for free movement.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.TrackingSpaceType.Stationary">
      <summary>
        <para>Represents a small space where movement may be constrained or positional tracking is unavailable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.VRDevice">
      <summary>
        <para>Contains all functionality related to a VR device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRDevice.family">
      <summary>
        <para>The name of the family of the loaded VR device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRDevice.isPresent">
      <summary>
        <para>Successfully detected a VR device in working order.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRDevice.model">
      <summary>
        <para>Specific model of loaded VR device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRDevice.refreshRate">
      <summary>
        <para>Refresh rate of the display in Hertz.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.VRDevice.GetNativePtr">
      <summary>
        <para>This method returns an IntPtr representing the native pointer to the VR device if one is available, otherwise the value will be IntPtr.Zero.</para>
      </summary>
      <returns>
        <para>The native pointer to the VR device.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.VRDevice.GetTrackingSpaceType">
      <summary>
        <para>Returns the device's current TrackingSpaceType. This value determines how the camera is positioned relative to its starting position. For more, see the section "Understanding the camera" in.</para>
      </summary>
      <returns>
        <para>The device's current TrackingSpaceType.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.VRDevice.SetTrackingSpaceType(UnityEngine.VR.TrackingSpaceType)">
      <summary>
        <para>Sets the device's current TrackingSpaceType. Returns true on success. Returns false if the given TrackingSpaceType is not supported or the device fails to switch.</para>
      </summary>
      <param name="TrackingSpaceType">The TrackingSpaceType the device should switch to.</param>
      <param name="trackingSpaceType"></param>
      <returns>
        <para>True on success. False if the given TrackingSpaceType is not supported or the device fails to switch.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.VRDeviceType">
      <summary>
        <para>Supported VR devices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.Morpheus">
      <summary>
        <para>Sony's Project Morpheus VR device for Playstation 4. (Obsolete please use VRDeviceType.PlayStationVR instead).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.None">
      <summary>
        <para>No VR Device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.Oculus">
      <summary>
        <para>Oculus family of VR devices.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.PlayStationVR">
      <summary>
        <para>Sony's PlayStation VR device for Playstation 4 (formerly called Project Morpheus VR).Sony's PlayStation VR device for Playstation 4 (formerly called Project Morpheus VR).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.Split">
      <summary>
        <para>Split screen stereo 3D (the left and right cameras are rendered side by side).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.Stereo">
      <summary>
        <para>Stereo 3D via D3D11 or OpenGL.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRDeviceType.Unknown">
      <summary>
        <para>This value is returned when running on a device that does not have its own value in this VRDeviceType enum.  To find out the device name, you can use VRSettings.loadedDeviceName.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.VRNode">
      <summary>
        <para>Enumeration of nodes which can be updated by VR input.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRNode.CenterEye">
      <summary>
        <para>Node representing a point between the left and right eyes.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRNode.Head">
      <summary>
        <para>Node representing the user's head.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRNode.LeftEye">
      <summary>
        <para>Node representing the left eye.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRNode.LeftHand">
      <summary>
        <para>Node representing the left hand.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRNode.RightEye">
      <summary>
        <para>Node representing the right eye.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.VRNode.RightHand">
      <summary>
        <para>Node representing the right hand.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.VRSettings">
      <summary>
        <para>Global VR related settings.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.enabled">
      <summary>
        <para>Globally enables or disables VR for the application.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.eyeTextureHeight">
      <summary>
        <para>The current height of an eye texture for the loaded device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.eyeTextureWidth">
      <summary>
        <para>The current width of an eye texture for the loaded device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.isDeviceActive">
      <summary>
        <para>Read-only value that can be used to determine if the VR device is active.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.loadedDevice">
      <summary>
        <para>Type of VR device that is currently in use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.loadedDeviceName">
      <summary>
        <para>Type of VR device that is currently loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.renderScale">
      <summary>
        <para>Controls the texel:pixel ratio before lens correction, trading performance for sharpness.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.renderViewportScale">
      <summary>
        <para>Controls the texel:pixel ratio before lens correction, trading performance for sharpness.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.showDeviceView">
      <summary>
        <para>Mirror what is shown on the device to the main display, if possible.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRSettings.supportedDevices">
      <summary>
        <para>Returns a list of supported VR devices that were included at build time.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.VRSettings.LoadDeviceByName(System.String)">
      <summary>
        <para>Loads the requested device at the beginning of the next frame.</para>
      </summary>
      <param name="deviceName">Name of the device from VRSettings.supportedDevices.</param>
      <param name="prioritizedDeviceNameList">Prioritized list of device names from VRSettings.supportedDevices.</param>
    </member>
    <member name="M:UnityEngine.VR.VRSettings.LoadDeviceByName(System.String[])">
      <summary>
        <para>Loads the requested device at the beginning of the next frame.</para>
      </summary>
      <param name="deviceName">Name of the device from VRSettings.supportedDevices.</param>
      <param name="prioritizedDeviceNameList">Prioritized list of device names from VRSettings.supportedDevices.</param>
    </member>
    <member name="T:UnityEngine.VR.VRStats">
      <summary>
        <para>Timing and other statistics from the VR subsystem.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.VRStats.gpuTimeLastFrame">
      <summary>
        <para>Total GPU time utilized last frame as measured by the VR subsystem.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.VRStats.TryGetDroppedFrameCount(System.Int32&amp;)">
      <summary>
        <para>Retrieves the number of dropped frames reported by the VR SDK.</para>
      </summary>
      <param name="droppedFrameCount">Outputs the number of frames dropped since the last update.</param>
      <returns>
        <para>True if the dropped frame count is available, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.VRStats.TryGetFramePresentCount(System.Int32&amp;)">
      <summary>
        <para>Retrieves the number of times the current frame has been drawn to the device as reported by the VR SDK.</para>
      </summary>
      <param name="framePresentCount">Outputs the number of times the current frame has been presented.</param>
      <returns>
        <para>True if the frame present count is available, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.VRStats.TryGetGPUTimeLastFrame(System.Single&amp;)">
      <summary>
        <para>Retrieves the time spent by the GPU last frame, in seconds, as reported by the VR SDK.</para>
      </summary>
      <param name="gpuTimeLastFrame">Outputs the time spent by the GPU last frame.</param>
      <returns>
        <para>True if the GPU time spent last frame is available, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.WSA.HolographicSettings">
      <summary>
        <para>The Holographic Settings contain functions which effect the performance and presentation of Holograms on Windows Holographic platforms.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.HolographicSettings.ActivateLatentFramePresentation(System.Boolean)">
      <summary>
        <para>Option to allow developers to achieve higher framerate at the cost of high latency.  By default this option is off.</para>
      </summary>
      <param name="activated">True to enable or false to disable Low Latent Frame Presentation.</param>
    </member>
    <member name="P:UnityEngine.VR.WSA.HolographicSettings.IsLatentFramePresentation">
      <summary>
        <para>Returns true if Holographic rendering is currently running with Latent Frame Presentation.  Default value is false.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.HolographicSettings.SetFocusPointForFrame(UnityEngine.Vector3)">
      <summary>
        <para>Sets a point in 3d space that is the focal point of the scene for the user for this frame. This helps improve the visual fidelity of content around this point. This must be set every frame.</para>
      </summary>
      <param name="position">The position of the focal point in the scene, relative to the camera.</param>
      <param name="normal">Surface normal of the plane being viewed at the focal point.</param>
      <param name="velocity">A vector that describes how the focus point is moving in the scene at this point in time. This allows the HoloLens to compensate for both your head movement and the movement of the object in the scene.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.HolographicSettings.SetFocusPointForFrame(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Sets a point in 3d space that is the focal point of the scene for the user for this frame. This helps improve the visual fidelity of content around this point. This must be set every frame.</para>
      </summary>
      <param name="position">The position of the focal point in the scene, relative to the camera.</param>
      <param name="normal">Surface normal of the plane being viewed at the focal point.</param>
      <param name="velocity">A vector that describes how the focus point is moving in the scene at this point in time. This allows the HoloLens to compensate for both your head movement and the movement of the object in the scene.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.HolographicSettings.SetFocusPointForFrame(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Sets a point in 3d space that is the focal point of the scene for the user for this frame. This helps improve the visual fidelity of content around this point. This must be set every frame.</para>
      </summary>
      <param name="position">The position of the focal point in the scene, relative to the camera.</param>
      <param name="normal">Surface normal of the plane being viewed at the focal point.</param>
      <param name="velocity">A vector that describes how the focus point is moving in the scene at this point in time. This allows the HoloLens to compensate for both your head movement and the movement of the object in the scene.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer">
      <summary>
        <para>Manager class with API for recognizing user gestures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.CancelGestures">
      <summary>
        <para>Cancels any pending gesture events.  Additionally this will call StopCapturingGestures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.#ctor">
      <summary>
        <para>Create a GestureRecognizer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.Dispose">
      <summary>
        <para>Disposes the resources used by gesture recognizer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.GestureErrorDelegate">
      <summary>
        <para>Callback indicating an error or warning occurred.</para>
      </summary>
      <param name="error">A readable error string (when possible).</param>
      <param name="hresult">The HRESULT code from the platform.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.GestureErrorEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/GestureErrorDelegate)">
      <summary>
        <para>Fired when a warning or error is emitted by the GestureRecognizer.</para>
      </summary>
      <param name="value">Delegate to be triggered to report warnings and errors.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.GetRecognizableGestures">
      <summary>
        <para>Retrieve a mask of the currently enabled gestures.</para>
      </summary>
      <returns>
        <para>A mask indicating which Gestures are currently recognizable.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.HoldCanceledEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/HoldCanceledEventDelegate)">
      <summary>
        <para>Fired when the user does a cancel event either using their hands or in speech.</para>
      </summary>
      <param name="value">Delegate to be triggered when a cancel event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.HoldCanceledEventDelegate">
      <summary>
        <para>Callback indicating a cancel event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.HoldCompletedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/HoldCompletedEventDelegate)">
      <summary>
        <para>Fired when users complete a hold gesture.</para>
      </summary>
      <param name="value">Delegate to be triggered when the user completes a hold gesture.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.HoldCompletedEventDelegate">
      <summary>
        <para>Callback indicating a hold completed event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.HoldStartedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/HoldStartedEventDelegate)">
      <summary>
        <para>Fired when users start a hold gesture.</para>
      </summary>
      <param name="value">The delegate to be triggered when a user starts a hold gesture.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.HoldStartedEventDelegate">
      <summary>
        <para>Callback indicating a hold started event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.IsCapturingGestures">
      <summary>
        <para>Used to query if the GestureRecognizer is currently receiving Gesture events.</para>
      </summary>
      <returns>
        <para>True if the GestureRecognizer is receiving events or false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationCanceledEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/ManipulationCanceledEventDelegate)">
      <summary>
        <para>Fires when a Manipulation gesture is canceled.</para>
      </summary>
      <param name="value">Delegate to be triggered when a cancel event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationCanceledEventDelegate">
      <summary>
        <para>Callback indicating a cancel event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="cumulativeDelta">Total distance moved since the beginning of the manipulation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationCompletedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/ManipulationCompletedEventDelegate)">
      <summary>
        <para>Fires when a Manipulation gesture is completed.</para>
      </summary>
      <param name="value">Delegate to be triggered when a completed event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationCompletedEventDelegate">
      <summary>
        <para>Callback indicating a completed event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="cumulativeDelta">Total distance moved since the beginning of the manipulation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationStartedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/ManipulationStartedEventDelegate)">
      <summary>
        <para>Fires when an interaction becomes a Manipulation gesture.</para>
      </summary>
      <param name="value">Delegate to be triggered when a started event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationStartedEventDelegate">
      <summary>
        <para>Callback indicating a started event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="cumulativeDelta">Total distance moved since the beginning of the manipulation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationUpdatedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/ManipulationUpdatedEventDelegate)">
      <summary>
        <para>Fires when a Manipulation gesture is updated due to hand movement.</para>
      </summary>
      <param name="value">Delegate to be triggered when a updated event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.ManipulationUpdatedEventDelegate">
      <summary>
        <para>Callback indicating a updated event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="cumulativeDelta">Total distance moved since the beginning of the manipulation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationCanceledEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/NavigationCanceledEventDelegate)">
      <summary>
        <para>Fires when a Navigation gesture is canceled.</para>
      </summary>
      <param name="value">Delegate to be triggered when a cancel event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationCanceledEventDelegate">
      <summary>
        <para>Callback indicating a cancel event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="normalizedOffset">The last known normalized offset of the input within the unit cube for the navigation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationCompletedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/NavigationCompletedEventDelegate)">
      <summary>
        <para>Fires when a Navigation gesture is completed.</para>
      </summary>
      <param name="value">Delegate to be triggered when a complete event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationCompletedEventDelegate">
      <summary>
        <para>Callback indicating a completed event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="normalizedOffset">The last known normalized offset, since the navigation gesture began, of the input within the unit cube for the navigation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationStartedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/NavigationStartedEventDelegate)">
      <summary>
        <para>Fires when an interaction becomes a Navigation gesture.</para>
      </summary>
      <param name="value">Delegate to be triggered when a started event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationStartedEventDelegate">
      <summary>
        <para>Callback indicating a started event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="normalizedOffset">The normalized offset, since the navigation gesture began, of the input within the unit cube for the navigation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationUpdatedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/NavigationUpdatedEventDelegate)">
      <summary>
        <para>Fires when a Navigation gesture is updated due to hand or controller movement.</para>
      </summary>
      <param name="value">Delegate to be triggered when a update event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.NavigationUpdatedEventDelegate">
      <summary>
        <para>Callback indicating a update event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="normalizedOffset">The last known normalized offset, since the navigation gesture began, of the input within the unit cube for the navigation gesture.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.RecognitionEndedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/RecognitionEndedEventDelegate)">
      <summary>
        <para>Fires when recognition of gestures is done, either due to completion of a gesture or cancellation.</para>
      </summary>
      <param name="value">Delegate to be triggered when an end event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.RecognitionEndedEventDelegate">
      <summary>
        <para>Callback indicating the gesture event has completed.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time a gesture began.</param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.RecognitionStartedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/RecognitionStartedEventDelegate)">
      <summary>
        <para>Fires when recognition of gestures begins.</para>
      </summary>
      <param name="value">Delegate to be triggered when a start event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.RecognitionStartedEventDelegate">
      <summary>
        <para>Callback indicating the gesture event has started.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="headRay">Ray (with normalized direction) from user at the time a gesture began.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.SetRecognizableGestures(UnityEngine.VR.WSA.Input.GestureSettings)">
      <summary>
        <para>Set the recognizable gestures to the ones specified in newMaskValues and return the old settings.</para>
      </summary>
      <param name="newMaskValue">A mask indicating which gestures are now recognizable.</param>
      <returns>
        <para>The previous value.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.StartCapturingGestures">
      <summary>
        <para>Call to begin receiving gesture events on this recognizer.  No events will be received until this method is called.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.GestureRecognizer.StopCapturingGestures">
      <summary>
        <para>Call to stop receiving gesture events on this recognizer.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.GestureRecognizer.TappedEvent(UnityEngine.VR.WSA.Input.GestureRecognizer/TappedEventDelegate)">
      <summary>
        <para>Occurs when a Tap gesture is recognized.</para>
      </summary>
      <param name="value">Delegate to be triggered when a tap event is triggered.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureRecognizer.TappedEventDelegate">
      <summary>
        <para>Callback indicating a tap event.</para>
      </summary>
      <param name="source">Indicates which input medium triggered this event.</param>
      <param name="tapCount">The count of taps (1 for single tap, 2 for double tap).</param>
      <param name="headRay">Ray (with normalized direction) from user at the time this event interaction began.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.GestureSettings">
      <summary>
        <para>This enumeration represents the set of gestures that may be recognized by GestureRecognizer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.DoubleTap">
      <summary>
        <para>Enable support for the double-tap gesture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.Hold">
      <summary>
        <para>Enable support for the hold gesture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.ManipulationTranslate">
      <summary>
        <para>Enable support for the manipulation gesture which tracks changes to the hand's position.  This gesture is relative to the start position of the gesture and measures an absolute movement through the world.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.NavigationRailsX">
      <summary>
        <para>Enable support for the navigation gesture, in the horizontal axis using rails (guides).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.NavigationRailsY">
      <summary>
        <para>Enable support for the navigation gesture, in the vertical axis using rails (guides).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.NavigationRailsZ">
      <summary>
        <para>Enable support for the navigation gesture, in the depth axis using rails (guides).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.NavigationX">
      <summary>
        <para>Enable support for the navigation gesture, in the horizontal axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.NavigationY">
      <summary>
        <para>Enable support for the navigation gesture, in the vertical axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.NavigationZ">
      <summary>
        <para>Enable support for the navigation gesture, in the depth axis.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.None">
      <summary>
        <para>Disable support for gestures.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.GestureSettings.Tap">
      <summary>
        <para>Enable support for the tap gesture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionManager">
      <summary>
        <para>Provides access to user input from hands, controllers, and system voice commands.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionManager.numSourceStates">
      <summary>
        <para>(Read Only) The number of InteractionSourceState snapshots available for reading with InteractionManager.GetCurrentReading.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.InteractionManager.GetCurrentReading">
      <summary>
        <para>Get the current SourceState.</para>
      </summary>
      <returns>
        <para>An array of InteractionSourceState snapshots.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.InteractionManager.GetCurrentReading(UnityEngine.VR.WSA.Input.InteractionSourceState[])">
      <summary>
        <para>Allows retrieving the current source states without allocating an array. The number of retrieved source states will be returned, up to a maximum of the size of the array.</para>
      </summary>
      <param name="sourceStates">An array for storing InteractionSourceState snapshots.</param>
      <returns>
        <para>The number of snapshots stored in the array, up to the size of the array.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.InteractionManager.SourceDetected(UnityEngine.VR.WSA.Input.InteractionManager/SourceEventHandler)">
      <summary>
        <para>Occurs when a new hand, controller, or source of voice commands has been detected.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionManager.SourceEventHandler">
      <summary>
        <para>Callback to handle InteractionManager events.</para>
      </summary>
      <param name="state"></param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.InteractionManager.SourceLost(UnityEngine.VR.WSA.Input.InteractionManager/SourceEventHandler)">
      <summary>
        <para>Occurs when a hand, controller, or source of voice commands is no longer available.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.InteractionManager.SourcePressed(UnityEngine.VR.WSA.Input.InteractionManager/SourceEventHandler)">
      <summary>
        <para>Occurs when a hand or controller has entered the pressed state.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.InteractionManager.SourceReleased(UnityEngine.VR.WSA.Input.InteractionManager/SourceEventHandler)">
      <summary>
        <para>Occurs when a hand or controller has exited the pressed state.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.VR.WSA.Input.InteractionManager.SourceUpdated(UnityEngine.VR.WSA.Input.InteractionManager/SourceEventHandler)">
      <summary>
        <para>Occurs when a hand or controller has experienced a change to its SourceState.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionSource">
      <summary>
        <para>Represents one detected instance of a hand, controller, or user's voice that can cause interactions and gestures.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSource.id">
      <summary>
        <para>The identifier for the hand, controller, or user's voice.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSource.kind">
      <summary>
        <para>The kind of the interaction source.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionSourceKind">
      <summary>
        <para>Specifies the kind of an interaction source.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.InteractionSourceKind.Controller">
      <summary>
        <para>The interaction source is a controller.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.InteractionSourceKind.Hand">
      <summary>
        <para>The interaction source is one of the user's hands.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.InteractionSourceKind.Other">
      <summary>
        <para>The interaction source is of a kind not known in this version of the API.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Input.InteractionSourceKind.Voice">
      <summary>
        <para>The interaction source is the user's speech.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionSourceLocation">
      <summary>
        <para>Represents the position and velocity of a hand or controller.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.InteractionSourceLocation.TryGetPosition(UnityEngine.Vector3&amp;)">
      <summary>
        <para>Get the position of the interaction.</para>
      </summary>
      <param name="position">Supplied Vector3 to be populated with interaction position.</param>
      <returns>
        <para>True if the position is successfully returned.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Input.InteractionSourceLocation.TryGetVelocity(UnityEngine.Vector3&amp;)">
      <summary>
        <para>Get the velocity of the interaction.</para>
      </summary>
      <param name="velocity">Supplied Vector3 to be populated with interaction velocity.</param>
      <returns>
        <para>True if the velocity is successfully returned.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionSourceProperties">
      <summary>
        <para>Represents the set of properties available to explore the current state of a hand or controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceProperties.location">
      <summary>
        <para>The position and velocity of the hand, expressed in the specified coordinate system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceProperties.sourceLossMitigationDirection">
      <summary>
        <para>The direction you should suggest that the user move their hand if it is nearing the edge of the detection area.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceProperties.sourceLossRisk">
      <summary>
        <para>Gets the risk that detection of the hand will be lost as a value from 0.0 to 1.0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Input.InteractionSourceState">
      <summary>
        <para>Represents a snapshot of the state of a spatial interaction source (hand, voice or controller) at a given time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceState.headRay">
      <summary>
        <para>The Ray at the time represented by this InteractionSourceState.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceState.pressed">
      <summary>
        <para>True if the source is in the pressed state.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceState.properties">
      <summary>
        <para>Additional properties to explore the state of the interaction source.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Input.InteractionSourceState.source">
      <summary>
        <para>The interaction source that this state describes.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Persistence.WorldAnchorStore">
      <summary>
        <para>The storage object for persisted WorldAnchors.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.anchorCount">
      <summary>
        <para>(Read Only) Gets the number of persisted world anchors in this WorldAnchorStore.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.Clear">
      <summary>
        <para>Clears all persisted WorldAnchors.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.Delete(System.String)">
      <summary>
        <para>Deletes a persisted WorldAnchor from the store.</para>
      </summary>
      <param name="id">The identifier of the WorldAnchor to delete.</param>
      <returns>
        <para>Whether or not the WorldAnchor was found and deleted.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.GetAllIds">
      <summary>
        <para>Gets all of the identifiers of the currently persisted WorldAnchors.</para>
      </summary>
      <returns>
        <para>An array of string identifiers.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.GetAllIds(System.String[])">
      <summary>
        <para>Gets all of the identifiers of the currently persisted WorldAnchors.</para>
      </summary>
      <param name="ids">A target array to receive the identifiers of the currently persisted world anchors.</param>
      <returns>
        <para>The number of identifiers stored in the target array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.GetAsync(UnityEngine.VR.WSA.Persistence.WorldAnchorStore/GetAsyncDelegate)">
      <summary>
        <para>Gets the WorldAnchorStore instance.</para>
      </summary>
      <param name="onCompleted">The handler to be called when the WorldAnchorStore is loaded.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.GetAsyncDelegate">
      <summary>
        <para>The handler for when getting the WorldAnchorStore from GetAsync.</para>
      </summary>
      <param name="store">The instance of the WorldAnchorStore once loaded.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.Load(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Loads a WorldAnchor from disk for given identifier and attaches it to the GameObject. If the GameObject has a WorldAnchor, that WorldAnchor will be updated. If the anchor is not found, null will be returned and the GameObject and any existing WorldAnchor attached to it will not be modified.</para>
      </summary>
      <param name="id">The identifier of the WorldAnchor to load.</param>
      <param name="go">The object to attach the WorldAnchor to if found.</param>
      <returns>
        <para>The WorldAnchor loaded by the identifier or null if not found.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Persistence.WorldAnchorStore.Save(System.String,UnityEngine.VR.WSA.WorldAnchor)">
      <summary>
        <para>Saves the provided WorldAnchor with the provided identifier. If the identifier is already in use, the method will return false.</para>
      </summary>
      <param name="id">The identifier to save the anchor with. This needs to be unique for your app.</param>
      <param name="anchor">The anchor to save.</param>
      <returns>
        <para>Whether or not the save was successful. Will return false if the id conflicts with another already saved anchor's id.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.WSA.PositionalLocatorState">
      <summary>
        <para>Indicates the lifecycle state of the device's spatial location system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.PositionalLocatorState.Activating">
      <summary>
        <para>The device is reporting its orientation and is preparing to locate its position in the user's surroundings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.PositionalLocatorState.Active">
      <summary>
        <para>The device is reporting its orientation and position in the user's surroundings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.PositionalLocatorState.Inhibited">
      <summary>
        <para>The device is reporting its orientation but cannot locate its position in the user's surroundings due to external factors like poor lighting conditions.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.PositionalLocatorState.OrientationOnly">
      <summary>
        <para>The device is reporting its orientation and has not been asked to report its position in the user's surroundings.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.PositionalLocatorState.Unavailable">
      <summary>
        <para>The device's spatial location system is not available.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Sharing.SerializationCompletionReason">
      <summary>
        <para>This enum represents the result of a WorldAnchorTransferBatch operation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Sharing.SerializationCompletionReason.AccessDenied">
      <summary>
        <para>The operation has failed because access was denied.  This occurs typically because the transfer batch was not readable when deserializing or writable when serializing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Sharing.SerializationCompletionReason.NotSupported">
      <summary>
        <para>The operation has failed because it was not supported.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Sharing.SerializationCompletionReason.Succeeded">
      <summary>
        <para>The operation has completed successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.Sharing.SerializationCompletionReason.UnknownError">
      <summary>
        <para>The operation has failed in an unexpected way.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch">
      <summary>
        <para>A batch of WorldAnchors which can be exported and imported between apps.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.anchorCount">
      <summary>
        <para>(Read Only) Gets the number of world anchors in this WorldAnchorTransferBatch.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.AddWorldAnchor(System.String,UnityEngine.VR.WSA.WorldAnchor)">
      <summary>
        <para>Adds a WorldAnchor to the batch with the specified identifier.</para>
      </summary>
      <param name="id">The identifier associated with this anchor in the batch. This must be unique per batch.</param>
      <param name="anchor">The anchor to add to the batch.</param>
      <returns>
        <para>Whether or not the anchor was added successfully.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.DeserializationCompleteDelegate">
      <summary>
        <para>The handler for when deserialization has completed.</para>
      </summary>
      <param name="completionReason">The reason the deserialization completed (success or failure reason).</param>
      <param name="deserializedTransferBatch">The resulting transfer batch which is empty on error.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.Dispose">
      <summary>
        <para>Cleans up the WorldAnchorTransferBatch and releases memory.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.ExportAsync(UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch,UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch/SerializationDataAvailableDelegate,UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch/SerializationCompleteDelegate)">
      <summary>
        <para>Exports the input WorldAnchorTransferBatch into a byte array which can be passed to WorldAnchorTransferBatch.ImportAsync to restore the original WorldAnchorTransferBatch.</para>
      </summary>
      <param name="transferBatch">The WorldAnchorTransferBatch to export into a byte buffer.</param>
      <param name="onDataAvailable">The callback when some data is available.</param>
      <param name="onCompleted">The callback after the last bit of data was provided via onDataAvailable with a completion reason (success or failure reason).</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.GetAllIds">
      <summary>
        <para>Gets all of the identifiers currently mapped in this WorldAnchorTransferBatch.</para>
      </summary>
      <returns>
        <para>The identifiers of all of the WorldAnchors in this WorldAnchorTransferBatch.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.GetAllIds(System.String[])">
      <summary>
        <para>Gets all of the identifiers currently mapped in this WorldAnchorTransferBatch. If the target array is not large enough to contain all the identifiers, then only those identifiers that fit within the array will be stored and the return value will equal the size of the array. You can detect this condition by checking for a return value less than WorldAnchorTransferBatch.anchorCount.</para>
      </summary>
      <param name="ids">A target array to receive the identifiers of the currently mapped world anchors.</param>
      <returns>
        <para>The number of identifiers stored in the target array.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.ImportAsync(System.Byte[],UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch/DeserializationCompleteDelegate)">
      <summary>
        <para>Imports the provided bytes into a WorldAnchorTransferBatch.</para>
      </summary>
      <param name="serializedData">The complete data to import.</param>
      <param name="onComplete">The handler when the data import is complete.</param>
      <param name="offset">The offset in the array from which to start reading.</param>
      <param name="length">The length of the data in the array.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.ImportAsync(System.Byte[],System.Int32,System.Int32,UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch/DeserializationCompleteDelegate)">
      <summary>
        <para>Imports the provided bytes into a WorldAnchorTransferBatch.</para>
      </summary>
      <param name="serializedData">The complete data to import.</param>
      <param name="onComplete">The handler when the data import is complete.</param>
      <param name="offset">The offset in the array from which to start reading.</param>
      <param name="length">The length of the data in the array.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.LockObject(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Locks the provided GameObject to the world by loading and applying the WorldAnchor from the TransferBatch for the provided id.</para>
      </summary>
      <param name="id">The identifier for the WorldAnchor to load and apply to the GameObject.</param>
      <param name="go">The GameObject to apply the WorldAnchor to. If the GameObject already has a WorldAnchor, it will be updated.</param>
      <returns>
        <para>The loaded WorldAnchor or null if the id does not map to a WorldAnchor.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.SerializationCompleteDelegate">
      <summary>
        <para>The handler for when serialization is completed.</para>
      </summary>
      <param name="completionReason">Why the serialization completed (success or failure reason).</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.Sharing.WorldAnchorTransferBatch.SerializationDataAvailableDelegate">
      <summary>
        <para>The handler for when some data is available from serialization.</para>
      </summary>
      <param name="data">A set of bytes from the exported transfer batch.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.SurfaceChange">
      <summary>
        <para>Enumeration of the different types of SurfaceChange events.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceChange.Added">
      <summary>
        <para>Surface was Added.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceChange.Removed">
      <summary>
        <para>Surface was removed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceChange.Updated">
      <summary>
        <para>Surface was updated.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.SurfaceData">
      <summary>
        <para>SurfaceData is a container struct used for requesting baked spatial mapping data and receiving that data once baked.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceData.bakeCollider">
      <summary>
        <para>Set this field to true when requesting data to bake collider data.  This field will be set to true when receiving baked data if it was requested.  Setting this field to true requires that a valid outputCollider is also specified.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceData.id">
      <summary>
        <para>This is the ID for the surface to be baked or the surface that was baked and being returned to the user.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceData.outputAnchor">
      <summary>
        <para>This WorldAnchor is used to lock the surface into place relative to real world objects.  It will be filled in when calling RequestMeshAsync to generate data for a surface and returned with the SurfaceDataReadyDelegate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceData.outputCollider">
      <summary>
        <para>This MeshCollider will receive the baked physics mesh prepared by the system when requesting baked surface data through RequestMeshAsync.  The MeshCollider is returned in the SurfaceDataReadyDelegate for those users requiring advanced workflows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceData.outputMesh">
      <summary>
        <para>This MeshFilter will receive the baked mesh prepared by the system when requesting baked surface data.  The MeshFilter is returned in the SurfaceDataReadyDelegate for those users requiring advanced workflows.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceData.trianglesPerCubicMeter">
      <summary>
        <para>This value controls the basic resolution of baked mesh data and is returned with the SurfaceDataReadyDelegate.  The device will deliver up to this number of triangles per cubic meter.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceData.#ctor(UnityEngine.VR.WSA.SurfaceId,UnityEngine.MeshFilter,UnityEngine.VR.WSA.WorldAnchor,UnityEngine.MeshCollider,System.Single,System.Boolean)">
      <summary>
        <para>Constructor for conveniently filling out a SurfaceData struct.</para>
      </summary>
      <param name="_id">ID for the surface in question.</param>
      <param name="_outputMesh">MeshFilter to write Mesh data to.</param>
      <param name="_outputAnchor">WorldAnchor receiving the anchor point for the surface.</param>
      <param name="_outputCollider">MeshCollider to write baked physics data to (optional).</param>
      <param name="_trianglesPerCubicMeter">Requested resolution for the computed Mesh.  Actual resolution may be less than this value.</param>
      <param name="_bakeCollider">Set to true if collider baking is/has been requested.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.SurfaceId">
      <summary>
        <para>SurfaceId is a structure wrapping the unique ID used to denote Surfaces.  SurfaceIds are provided through the onSurfaceChanged callback in Update and returned after a RequestMeshAsync call has completed.  SurfaceIds are guaranteed to be unique though Surfaces are sometimes replaced with a new Surface in the same location with a different ID.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.SurfaceId.handle">
      <summary>
        <para>The actual integer ID referring to a single surface.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.SurfaceObserver">
      <summary>
        <para>SurfaceObserver is the main API portal for spatial mapping functionality in Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.#ctor">
      <summary>
        <para>Basic constructor for SurfaceObserver.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.Dispose">
      <summary>
        <para>Call Dispose when the SurfaceObserver is no longer needed.  This will ensure that the object is cleaned up appropriately but will not affect any Meshes, components, or objects returned by RequestMeshAsync.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.RequestMeshAsync(UnityEngine.VR.WSA.SurfaceData,UnityEngine.VR.WSA.SurfaceObserver/SurfaceDataReadyDelegate)">
      <summary>
        <para>Call RequestMeshAsync to start the process of baking mesh data for the specified surface.  This data may take several frames to create.  Baked data will be delivered through the specified SurfaceDataReadyDelegate.  This method will throw ArgumentNullExcpetion and ArgumentException if parameters specified in the dataRequest are invalid.</para>
      </summary>
      <param name="dataRequest">Bundle of request data used to bake the specified surface.</param>
      <param name="onDataReady">Callback called when the baking of this surface is complete.</param>
      <returns>
        <para>Returns false if the request has failed, typically due to specifying a bad surface ID.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.SetVolumeAsAxisAlignedBox(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>This method sets the observation volume as an axis aligned box at the requested location.  Successive calls can be used to reshape the observation volume and/or to move it in the scene as needed.  Extents are the distance from the center of the box to its edges along each axis.</para>
      </summary>
      <param name="origin">The origin of the requested observation volume.</param>
      <param name="extents">The extents in meters of the requested observation volume.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.SetVolumeAsFrustum(UnityEngine.Plane[])">
      <summary>
        <para>This method sets the observation volume as a frustum at the requested location.  Successive calls can be used to reshape the observation volume and/or to move it in the scene as needed.</para>
      </summary>
      <param name="planes">Planes defining the frustum as returned from GeometryUtility.CalculateFrustumPlanes.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.SetVolumeAsOrientedBox(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>This method sets the observation volume as an oriented box at the requested location.  Successive calls can be used to reshape the observation volume and/or to move it in the scene as needed.  Extents are the distance from the center of the box to its edges along each axis.</para>
      </summary>
      <param name="origin">The origin of the requested observation volume.</param>
      <param name="extents">The extents in meters of the requested observation volume.</param>
      <param name="orientation">The orientation of the requested observation volume.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.SetVolumeAsSphere(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>This method sets the observation volume as a sphere at the requested location.  Successive calls can be used to reshape the observation volume and/or to move it in the scene as needed.</para>
      </summary>
      <param name="origin">The origin of the requested observation volume.</param>
      <param name="radiusMeters">The radius in meters of the requested observation volume.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.SurfaceObserver.SurfaceChangedDelegate">
      <summary>
        <para>The SurfaceChanged delegate handles SurfaceChanged events as generated by calling Update on a SurfaceObserver.  Applications can use the bounds, changeType, and updateTime to selectively generate mesh data for the set of known surfaces.</para>
      </summary>
      <param name="surfaceId">The ID of the surface that has changed.</param>
      <param name="changeType">The type of change this event represents (Added, Updated, Removed).</param>
      <param name="bounds">The bounds of the surface as reported by the device.</param>
      <param name="updateTime">The update time of the surface as reported by the device.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.SurfaceObserver.SurfaceDataReadyDelegate">
      <summary>
        <para>The SurfaceDataReadyDelegate handles events generated when the engine has completed generating a mesh.  Mesh generation is requested through GetMeshAsync and may take many frames to complete.</para>
      </summary>
      <param name="bakedData">Struct containing output data.</param>
      <param name="outputWritten">Set to true if output has been written and false otherwise.</param>
      <param name="elapsedBakeTimeSeconds">Elapsed seconds between mesh bake request and propagation of this event.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.SurfaceObserver.Update(UnityEngine.VR.WSA.SurfaceObserver/SurfaceChangedDelegate)">
      <summary>
        <para>Update generates SurfaceChanged events which are propagated through the specified callback.  If no callback is specified, the system will throw an ArgumentNullException.  Generated callbacks are synchronous with this call.  Scenes containing multiple SurfaceObservers should consider using different callbacks so that events can be properly routed.</para>
      </summary>
      <param name="onSurfaceChanged">Callback called when SurfaceChanged events are detected.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.CameraParameters">
      <summary>
        <para>When calling PhotoCapture.StartPhotoModeAsync, you must pass in a CameraParameters object that contains the various settings that the web camera will use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.CameraParameters.cameraResolutionHeight">
      <summary>
        <para>A valid height resolution for use with the web camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.CameraParameters.cameraResolutionWidth">
      <summary>
        <para>A valid width resolution for use with the web camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.CameraParameters.frameRate">
      <summary>
        <para>The framerate at which to capture video.  This is only for use with VideoCapture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.CameraParameters.hologramOpacity">
      <summary>
        <para>The opacity of captured holograms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.CameraParameters.pixelFormat">
      <summary>
        <para>The pixel format used to capture and record your image data.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.CapturePixelFormat">
      <summary>
        <para>The encoded image or video pixel format to use for PhotoCapture and VideoCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.CapturePixelFormat.BGRA32">
      <summary>
        <para>8 bits per channel (blue, green, red, and alpha).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.CapturePixelFormat.JPEG">
      <summary>
        <para>Encode photo in JPEG format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.CapturePixelFormat.NV12">
      <summary>
        <para>8-bit Y plane followed by an interleaved U/V plane with 2x2 subsampling.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.CapturePixelFormat.PNG">
      <summary>
        <para>Portable Network Graphics Format.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture">
      <summary>
        <para>Captures a photo from the web camera and stores it in memory or on disk.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.CaptureResultType">
      <summary>
        <para>Contains the result of the capture request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.PhotoCapture.CaptureResultType.Success">
      <summary>
        <para>Specifies that the desired operation was successful.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.PhotoCapture.CaptureResultType.UnknownError">
      <summary>
        <para>Specifies that an unknown error occurred.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.CreateAsync(System.Boolean,UnityEngine.VR.WSA.WebCam.PhotoCapture/OnCaptureResourceCreatedCallback)">
      <summary>
        <para>Asynchronously creates an instance of a PhotoCapture object that can be used to capture photos.</para>
      </summary>
      <param name="showHolograms">Will allow you to capture holograms in your photo.</param>
      <param name="onCreatedCallback">This callback will be invoked when the PhotoCapture instance is created and ready to be used.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.Dispose">
      <summary>
        <para>Dispose must be called to shutdown the PhotoCapture instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.GetUnsafePointerToVideoDeviceController">
      <summary>
        <para>Provides a COM pointer to the native IVideoDeviceController.</para>
      </summary>
      <returns>
        <para>A native COM pointer to the IVideoDeviceController.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.OnCapturedToDiskCallback">
      <summary>
        <para>Called when a photo has been saved to the file system.</para>
      </summary>
      <param name="result">Indicates whether or not the photo was successfully saved to the file system.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.OnCapturedToMemoryCallback">
      <summary>
        <para>Called when a photo has been captured to memory.</para>
      </summary>
      <param name="result">Indicates whether or not the photo was successfully captured to memory.</param>
      <param name="photoCaptureFrame">Contains the target texture.  If available, the spatial information will be accessible through this structure as well.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.OnCaptureResourceCreatedCallback">
      <summary>
        <para>Called when a PhotoCapture resource has been created.</para>
      </summary>
      <param name="captureObject">The PhotoCapture instance.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.OnPhotoModeStartedCallback">
      <summary>
        <para>Called when photo mode has been started.</para>
      </summary>
      <param name="result">Indicates whether or not photo mode was successfully activated.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.OnPhotoModeStoppedCallback">
      <summary>
        <para>Called when photo mode has been stopped.</para>
      </summary>
      <param name="result">Indicates whether or not photo mode was successfully deactivated.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCapture.PhotoCaptureResult">
      <summary>
        <para>A data container that contains the result information of a photo capture operation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.PhotoCapture.PhotoCaptureResult.hResult">
      <summary>
        <para>The specific HResult value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.PhotoCapture.PhotoCaptureResult.resultType">
      <summary>
        <para>A generic result that indicates whether or not the PhotoCapture operation succeeded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.PhotoCapture.PhotoCaptureResult.success">
      <summary>
        <para>Indicates whether or not the operation was successful.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.StartPhotoModeAsync">
      <summary>
        <para>Asynchronously starts photo mode.</para>
      </summary>
      <param name="setupParams">The various settings that should be applied to the web camera.</param>
      <param name="onPhotoModeStartedCallback">This callback will be invoked once photo mode has been activated.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.StopPhotoModeAsync(UnityEngine.VR.WSA.WebCam.PhotoCapture/OnPhotoModeStoppedCallback)">
      <summary>
        <para>Asynchronously stops photo mode.</para>
      </summary>
      <param name="onPhotoModeStoppedCallback">This callback will be invoked once photo mode has been deactivated.</param>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.PhotoCapture.SupportedResolutions">
      <summary>
        <para>A list of all the supported device resolutions for taking pictures.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.TakePhotoAsync(System.String,UnityEngine.VR.WSA.WebCam.PhotoCaptureFileOutputFormat,UnityEngine.VR.WSA.WebCam.PhotoCapture/OnCapturedToDiskCallback)">
      <summary>
        <para>Asynchronously captures a photo from the web camera and saves it to disk.</para>
      </summary>
      <param name="filename">The location where the photo should be saved.  The filename must end with a png or jpg file extension.</param>
      <param name="fileOutputFormat">The encoding format that should be used.</param>
      <param name="onCapturedPhotoToDiskCallback">Invoked once the photo has been saved to disk.</param>
      <param name="onCapturedPhotoToMemoryCallback">Invoked once the photo has been copied to the target texture.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCapture.TakePhotoAsync(UnityEngine.VR.WSA.WebCam.PhotoCapture/OnCapturedToMemoryCallback)">
      <summary>
        <para>Asynchronously captures a photo from the web camera and saves it to disk.</para>
      </summary>
      <param name="filename">The location where the photo should be saved.  The filename must end with a png or jpg file extension.</param>
      <param name="fileOutputFormat">The encoding format that should be used.</param>
      <param name="onCapturedPhotoToDiskCallback">Invoked once the photo has been saved to disk.</param>
      <param name="onCapturedPhotoToMemoryCallback">Invoked once the photo has been copied to the target texture.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCaptureFileOutputFormat">
      <summary>
        <para>Image Encoding Format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.PhotoCaptureFileOutputFormat.JPG">
      <summary>
        <para>JPEG Encoding.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.PhotoCaptureFileOutputFormat.PNG">
      <summary>
        <para>PNG Encoding.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame">
      <summary>
        <para>Contains information captured from the web camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.dataLength">
      <summary>
        <para>The length of the raw IMFMediaBuffer which contains the image captured.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.hasLocationData">
      <summary>
        <para>Specifies whether or not spatial data was captured.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.pixelFormat">
      <summary>
        <para>The raw image data pixel format.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.CopyRawImageDataIntoBuffer(System.Collections.Generic.List`1&lt;System.Byte&gt;)">
      <summary>
        <para>Will copy the raw IMFMediaBuffer image data into a byte list.</para>
      </summary>
      <param name="byteBuffer">The destination byte list to which the raw captured image data will be copied to.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.Dispose">
      <summary>
        <para>Disposes the PhotoCaptureFrame and any resources it uses.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.GetUnsafePointerToBuffer">
      <summary>
        <para>Provides a COM pointer to the native IMFMediaBuffer that contains the image data.</para>
      </summary>
      <returns>
        <para>A native COM pointer to the IMFMediaBuffer which contains the image data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.TryGetCameraToWorldMatrix(UnityEngine.Matrix4x4&amp;)">
      <summary>
        <para>This method will return the camera to world matrix at the time the photo was captured if location data if available.</para>
      </summary>
      <param name="cameraToWorldMatrix">A matrix to be populated by the Camera to world Matrix.</param>
      <returns>
        <para>True if a valid matrix is returned or false otherwise.  This will be false if the frame has no location data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.TryGetProjectionMatrix(System.Single,System.Single,UnityEngine.Matrix4x4&amp;)">
      <summary>
        <para>This method will return the projection matrix at the time the photo was captured if location data if available.</para>
      </summary>
      <param name="nearClipPlane">The near clip plane distance.</param>
      <param name="farClipPlane">The far clip plane distance.</param>
      <param name="projectionMatrix">A matrix to be populated by the Projection Matrix.</param>
      <returns>
        <para>True if a valid matrix is returned or false otherwise.  This will be false if the frame has no location data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.TryGetProjectionMatrix(UnityEngine.Matrix4x4&amp;)">
      <summary>
        <para>This method will return the projection matrix at the time the photo was captured if location data if available.</para>
      </summary>
      <param name="nearClipPlane">The near clip plane distance.</param>
      <param name="farClipPlane">The far clip plane distance.</param>
      <param name="projectionMatrix">A matrix to be populated by the Projection Matrix.</param>
      <returns>
        <para>True if a valid matrix is returned or false otherwise.  This will be false if the frame has no location data.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.PhotoCaptureFrame.UploadImageDataToTexture(UnityEngine.Texture2D)">
      <summary>
        <para>This method will copy the captured image data into a user supplied texture for use in Unity.</para>
      </summary>
      <param name="targetTexture">The target texture that the captured image data will be copied to.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture">
      <summary>
        <para>Records a video from the web camera directly to disk.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.AudioState">
      <summary>
        <para>Specifies what audio sources should be recorded while recording the video.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.AudioState.ApplicationAndMicAudio">
      <summary>
        <para>Include both the application audio as well as the mic audio in the video recording.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.AudioState.ApplicationAudio">
      <summary>
        <para>Only include the application audio in the video recording.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.AudioState.MicAudio">
      <summary>
        <para>Only include the mic audio in the video recording.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.AudioState.None">
      <summary>
        <para>Do not include any audio in the video recording.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.CaptureResultType">
      <summary>
        <para>Contains the result of the capture request.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.CaptureResultType.Success">
      <summary>
        <para>Specifies that the desired operation was successful.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.CaptureResultType.UnknownError">
      <summary>
        <para>Specifies that an unknown error occurred.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.CreateAsync(System.Boolean,UnityEngine.VR.WSA.WebCam.VideoCapture/OnVideoCaptureResourceCreatedCallback)">
      <summary>
        <para>Asynchronously creates an instance of a VideoCapture object that can be used to record videos from the web camera to disk.</para>
      </summary>
      <param name="showHolograms">Will allow you to capture holograms in your video.</param>
      <param name="onCreatedCallback">This callback will be invoked when the VideoCapture instance is created and ready to be used.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.Dispose">
      <summary>
        <para>Dispose must be called to shutdown the PhotoCapture instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.GetSupportedFrameRatesForResolution(UnityEngine.Resolution)">
      <summary>
        <para>Returns the supported frame rates at which a video can be recorded given a resolution.</para>
      </summary>
      <param name="resolution">A recording resolution.</param>
      <returns>
        <para>The frame rates at which the video can be recorded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.GetUnsafePointerToVideoDeviceController">
      <summary>
        <para>Provides a COM pointer to the native IVideoDeviceController.</para>
      </summary>
      <returns>
        <para>A native COM pointer to the IVideoDeviceController.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.VideoCapture.IsRecording">
      <summary>
        <para>Indicates whether or not the VideoCapture instance is currently recording video.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.OnStartedRecordingVideoCallback">
      <summary>
        <para>Called when the web camera begins recording the video.</para>
      </summary>
      <param name="result">Indicates whether or not video recording started successfully.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.OnStoppedRecordingVideoCallback">
      <summary>
        <para>Called when the video recording has been saved to the file system.</para>
      </summary>
      <param name="result">Indicates whether or not video recording was saved successfully to the file system.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.OnVideoCaptureResourceCreatedCallback">
      <summary>
        <para>Called when a VideoCapture resource has been created.</para>
      </summary>
      <param name="captureObject">The VideoCapture instance.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.OnVideoModeStartedCallback">
      <summary>
        <para>Called when video mode has been started.</para>
      </summary>
      <param name="result">Indicates whether or not video mode was successfully activated.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.OnVideoModeStoppedCallback">
      <summary>
        <para>Called when video mode has been stopped.</para>
      </summary>
      <param name="result">Indicates whether or not video mode was successfully deactivated.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.StartRecordingAsync(System.String,UnityEngine.VR.WSA.WebCam.VideoCapture/OnStartedRecordingVideoCallback)">
      <summary>
        <para>Asynchronously records a video from the web camera to the file system.</para>
      </summary>
      <param name="filename">The name of the video to be recorded to.</param>
      <param name="onStartedRecordingVideoCallback">Invoked as soon as the video recording begins.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.StartVideoModeAsync(UnityEngine.VR.WSA.WebCam.CameraParameters,UnityEngine.VR.WSA.WebCam.VideoCapture/AudioState,UnityEngine.VR.WSA.WebCam.VideoCapture/OnVideoModeStartedCallback)">
      <summary>
        <para>Asynchronously starts video mode.</para>
      </summary>
      <param name="setupParams">The various settings that should be applied to the web camera.</param>
      <param name="audioState">Indicates how audio should be recorded.</param>
      <param name="onVideoModeStartedCallback">This callback will be invoked once video mode has been activated.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.StopRecordingAsync(UnityEngine.VR.WSA.WebCam.VideoCapture/OnStoppedRecordingVideoCallback)">
      <summary>
        <para>Asynchronously stops recording a video from the web camera to the file system.</para>
      </summary>
      <param name="onStoppedRecordingVideoCallback">Invoked as soon as video recording has finished.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WebCam.VideoCapture.StopVideoModeAsync(UnityEngine.VR.WSA.WebCam.VideoCapture/OnVideoModeStoppedCallback)">
      <summary>
        <para>Asynchronously stops video mode.</para>
      </summary>
      <param name="onVideoModeStoppedCallback">This callback will be invoked once video mode has been deactivated.</param>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.VideoCapture.SupportedResolutions">
      <summary>
        <para>A list of all the supported device resolutions for recording videos.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.VideoCapture.VideoCaptureResult">
      <summary>
        <para>A data container that contains the result information of a video recording operation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.VideoCaptureResult.hResult">
      <summary>
        <para>The specific HResult value.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.VideoCapture.VideoCaptureResult.resultType">
      <summary>
        <para>A generic result that indicates whether or not the VideoCapture operation succeeded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.VideoCapture.VideoCaptureResult.success">
      <summary>
        <para>Indicates whether or not the operation was successful.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.WebCam">
      <summary>
        <para>Contains general information about the current state of the web camera.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WebCam.WebCam.Mode">
      <summary>
        <para>Specifies what mode the Web Camera is currently in.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WebCam.WebCamMode">
      <summary>
        <para>Describes the active mode of the Web Camera resource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.WebCamMode.None">
      <summary>
        <para>Resource is not in use.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.WebCamMode.PhotoMode">
      <summary>
        <para>Resource is in Photo Mode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.VR.WSA.WebCam.WebCamMode.VideoMode">
      <summary>
        <para>Resource is in Video Mode.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.VR.WSA.WorldAnchor">
      <summary>
        <para>The WorldAnchor component allows a GameObject's position to be locked in physical space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WorldAnchor.isLocated">
      <summary>
        <para>Returns true if this WorldAnchor is located (read only).  A return of false typically indicates a loss of tracking.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WorldAnchor.GetNativeSpatialAnchorPtr">
      <summary>
        <para>Retrieve a native pointer to the &lt;a href="https:msdn.microsoft.comen-uslibrarywindowsappswindows.perception.spatial.spatialanchor.aspx"&gt;Windows.Perception.Spatial.SpatialAnchor&lt;a&gt; COM object.
This function calls &lt;a href=" https:msdn.microsoft.comen-uslibrarywindowsdesktopms691379.aspx"&gt;IUnknown::AddRef&lt;a&gt; on the pointer before returning it. The pointer must be released by calling &lt;a href=" https:msdn.microsoft.comen-uslibrarywindowsdesktopms682317.aspx"&gt;IUnknown::Release&lt;a&gt;.</para>
      </summary>
      <returns>
        <para>The native pointer to the &lt;a href=" https:msdn.microsoft.comen-uslibrarywindowsappswindows.perception.spatial.spatialanchor.aspx"&gt;Windows.Perception.Spatial.SpatialAnchor&lt;a&gt; COM object.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.VR.WSA.WorldAnchor.OnTrackingChanged(UnityEngine.VR.WSA.WorldAnchor/OnTrackingChangedDelegate)">
      <summary>
        <para>OnTrackingChanged notifies listeners when this object's tracking state changes.</para>
      </summary>
      <param name="value">Event that fires when this object's tracking state changes.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WorldAnchor.OnTrackingChangedDelegate">
      <summary>
        <para>Event that is fired when this object's tracking state changes.</para>
      </summary>
      <param name="located">Set to true if the object is locatable.</param>
      <param name="self">The WorldAnchor reporting the tracking state change.</param>
    </member>
    <member name="M:UnityEngine.VR.WSA.WorldAnchor.SetNativeSpatialAnchorPtr(System.IntPtr)">
      <summary>
        <para>Assigns the &lt;a href="https:msdn.microsoft.comen-uslibrarywindowsappswindows.perception.spatial.spatialanchor.aspx"&gt;Windows.Perception.Spatial.SpatialAnchor&lt;a&gt; COM pointer maintained by this WorldAnchor.</para>
      </summary>
      <param name="spatialAnchorPtr">A live &lt;a href="https:msdn.microsoft.comen-uslibrarywindowsappswindows.perception.spatial.spatialanchor.aspx"&gt;Windows.Perception.Spatial.SpatialAnchor&lt;a&gt; COM pointer.</param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WorldManager">
      <summary>
        <para>This class represents the state of the real world tracking system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.VR.WSA.WorldManager.state">
      <summary>
        <para>The current state of the world tracking systems.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.VR.WSA.WorldManager.GetNativeISpatialCoordinateSystemPtr">
      <summary>
        <para>Return the native pointer to Windows::Perception::Spatial::ISpatialCoordinateSystem which was retrieved from an Windows::Perception::Spatial::ISpatialStationaryFrameOfReference object underlying the Unity World Origin.</para>
      </summary>
      <returns>
        <para>Pointer to Windows::Perception::Spatial::ISpatialCoordinateSystem.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.VR.WSA.WorldManager.OnPositionalLocatorStateChanged(UnityEngine.VR.WSA.WorldManager/OnPositionalLocatorStateChangedDelegate)">
      <summary>
        <para>Event fired when the world tracking systems state has changed.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="T:UnityEngine.VR.WSA.WorldManager.OnPositionalLocatorStateChangedDelegate">
      <summary>
        <para>Callback on when the world tracking systems state has changed.</para>
      </summary>
      <param name="oldState">The previous state of the world tracking systems.</param>
      <param name="newState">The new state of the world tracking systems.</param>
    </member>
    <member name="T:UnityEngine.WaitForEndOfFrame">
      <summary>
        <para>Waits until the end of the frame after all cameras and GUI is rendered, just before displaying the frame on screen.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WaitForFixedUpdate">
      <summary>
        <para>Waits until next fixed frame rate update function. See Also: MonoBehaviour.FixedUpdate.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WaitForSeconds">
      <summary>
        <para>Suspends the coroutine execution for the given amount of seconds using scaled time.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WaitForSeconds.#ctor(System.Single)">
      <summary>
        <para>Creates a yield instruction to wait for a given number of seconds using scaled time.</para>
      </summary>
      <param name="seconds"></param>
    </member>
    <member name="T:UnityEngine.WaitForSecondsRealtime">
      <summary>
        <para>Suspends the coroutine execution for the given amount of seconds using unscaled time.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WaitForSecondsRealtime.#ctor(System.Single)">
      <summary>
        <para>Creates a yield instruction to wait for a given number of seconds using unscaled time.</para>
      </summary>
      <param name="time"></param>
    </member>
    <member name="T:UnityEngine.WaitUntil">
      <summary>
        <para>Suspends the coroutine execution until the supplied delegate evaluates to true.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WaitUntil.#ctor(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Initializes a yield instruction with a given delegate to be evaluated.</para>
      </summary>
      <param name="predicate">Supplied delegate will be evaluated each frame after MonoBehaviour.Update and before MonoBehaviour.LateUpdate until delegate returns true.</param>
    </member>
    <member name="T:UnityEngine.WaitWhile">
      <summary>
        <para>Suspends the coroutine execution until the supplied delegate evaluates to false.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WaitWhile.#ctor(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Initializes a yield instruction with a given delegate to be evaluated.</para>
      </summary>
      <param name="predicate">The supplied delegate will be evaluated each frame after MonoBehaviour.Update and before MonoBehaviour.LateUpdate until delegate returns false.</param>
    </member>
    <member name="T:UnityEngine.WebCamDevice">
      <summary>
        <para>A structure describing the webcam device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.isFrontFacing">
      <summary>
        <para>True if camera faces the same direction a screen does, false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.name">
      <summary>
        <para>A human-readable name of the device. Varies across different systems.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WebCamTexture">
      <summary>
        <para>WebCam Textures are textures onto which the live video input is rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.deviceName">
      <summary>
        <para>Set this to specify the name of the device to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.devices">
      <summary>
        <para>Return a list of available devices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.didUpdateThisFrame">
      <summary>
        <para>Did the video buffer update this frame?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.isPlaying">
      <summary>
        <para>Returns if the camera is currently playing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.isReadable">
      <summary>
        <para>Returns if the WebCamTexture is non-readable. (iOS only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedFPS">
      <summary>
        <para>Set the requested frame rate of the camera device (in frames per second).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedHeight">
      <summary>
        <para>Set the requested height of the camera device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedWidth">
      <summary>
        <para>Set the requested width of the camera device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.videoRotationAngle">
      <summary>
        <para>Returns an clockwise angle (in degrees), which can be used to rotate a polygon so camera contents are shown in correct orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.videoVerticallyMirrored">
      <summary>
        <para>Returns if the texture image is vertically flipped.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.String)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixel(System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel color at coordinates (x, y).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels">
      <summary>
        <para>Get a block of pixel colors.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Get a block of pixel colors.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="blockWidth"></param>
      <param name="blockHeight"></param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels32()">
      <summary>
        <para>Returns the pixels data in raw format.</para>
      </summary>
      <param name="colors">Optional array to receive pixel data.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels32(UnityEngine.Color32[])">
      <summary>
        <para>Returns the pixels data in raw format.</para>
      </summary>
      <param name="colors">Optional array to receive pixel data.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.MarkNonReadable">
      <summary>
        <para>Marks WebCamTexture as unreadable (no GetPixel* functions will be available (iOS only)).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Pause">
      <summary>
        <para>Pauses the camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Play">
      <summary>
        <para>Starts the camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Stop">
      <summary>
        <para>Stops the camera.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WheelCollider">
      <summary>
        <para>A special collider for vehicle wheels.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.brakeTorque">
      <summary>
        <para>Brake torque expressed in Newton metres.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.center">
      <summary>
        <para>The center of the wheel, measured in the object's local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.forceAppPointDistance">
      <summary>
        <para>Application point of the suspension and tire forces measured from the base of the resting wheel.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.forwardFriction">
      <summary>
        <para>Properties of tire friction in the direction the wheel is pointing in.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.isGrounded">
      <summary>
        <para>Indicates whether the wheel currently collides with something (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.mass">
      <summary>
        <para>The mass of the wheel, expressed in kilograms. Must be larger than zero. Typical values would be in range (20,80).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.motorTorque">
      <summary>
        <para>Motor torque on the wheel axle expressed in Newton metres. Positive or negative depending on direction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.radius">
      <summary>
        <para>The radius of the wheel, measured in local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.rpm">
      <summary>
        <para>Current wheel axle rotation speed, in rotations per minute (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.sidewaysFriction">
      <summary>
        <para>Properties of tire friction in the sideways direction.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.sprungMass">
      <summary>
        <para>The mass supported by this WheelCollider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.steerAngle">
      <summary>
        <para>Steering angle in degrees, always around the local y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.suspensionDistance">
      <summary>
        <para>Maximum extension distance of wheel suspension, measured in local space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.suspensionSpring">
      <summary>
        <para>The parameters of wheel's suspension. The suspension attempts to reach a target position by applying a linear force and a damping force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelCollider.wheelDampingRate">
      <summary>
        <para>The damping rate of the wheel. Must be larger than zero.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WheelCollider.ConfigureVehicleSubsteps(System.Single,System.Int32,System.Int32)">
      <summary>
        <para>Configure vehicle sub-stepping parameters.</para>
      </summary>
      <param name="speedThreshold">The speed threshold of the sub-stepping algorithm.</param>
      <param name="stepsBelowThreshold">Amount of simulation sub-steps when vehicle's speed is below speedThreshold.</param>
      <param name="stepsAboveThreshold">Amount of simulation sub-steps when vehicle's speed is above speedThreshold.</param>
    </member>
    <member name="M:UnityEngine.WheelCollider.GetGroundHit(UnityEngine.WheelHit&amp;)">
      <summary>
        <para>Gets ground collision data for the wheel.</para>
      </summary>
      <param name="hit"></param>
    </member>
    <member name="M:UnityEngine.WheelCollider.GetWorldPose(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Gets the world space pose of the wheel accounting for ground contact, suspension limits, steer angle, and rotation angle (angles in degrees).</para>
      </summary>
      <param name="pos">Position of the wheel in world space.</param>
      <param name="quat">Rotation of the wheel in world space.</param>
    </member>
    <member name="T:UnityEngine.WheelFrictionCurve">
      <summary>
        <para>WheelFrictionCurve is used by the WheelCollider to describe friction properties of the wheel tire.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.asymptoteSlip">
      <summary>
        <para>Asymptote point slip (default 2).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.asymptoteValue">
      <summary>
        <para>Force at the asymptote slip (default 10000).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.extremumSlip">
      <summary>
        <para>Extremum point slip (default 1).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.extremumValue">
      <summary>
        <para>Force at the extremum slip (default 20000).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelFrictionCurve.stiffness">
      <summary>
        <para>Multiplier for the extremumValue and asymptoteValue values (default 1).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WheelHit">
      <summary>
        <para>Contact information for the wheel, reported by WheelCollider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.collider">
      <summary>
        <para>The other Collider the wheel is hitting.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.force">
      <summary>
        <para>The magnitude of the force being applied for the contact.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.forwardDir">
      <summary>
        <para>The direction the wheel is pointing in.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.forwardSlip">
      <summary>
        <para>Tire slip in the rolling direction. Acceleration slip is negative, braking slip is positive.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.normal">
      <summary>
        <para>The normal at the point of contact.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.point">
      <summary>
        <para>The point of contact between the wheel and the ground.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.sidewaysDir">
      <summary>
        <para>The sideways direction of the wheel.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelHit.sidewaysSlip">
      <summary>
        <para>Tire slip in the sideways direction.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WheelJoint2D">
      <summary>
        <para>The wheel joint allows the simulation of wheels by providing a constraining suspension motion with an optional motor.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointAngle">
      <summary>
        <para>The current joint angle (in degrees) defined as the relative angle between the two Rigidbody2D that the joint connects to.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointLinearSpeed">
      <summary>
        <para>The current joint linear speed in meters/sec.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointSpeed">
      <summary>
        <para>The current joint rotational speed in degrees/sec.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointTranslation">
      <summary>
        <para>The current joint translation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.motor">
      <summary>
        <para>Parameters for a motor force that is applied automatically to the Rigibody2D along the line.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.suspension">
      <summary>
        <para>Set the joint suspension configuration.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.useMotor">
      <summary>
        <para>Should a motor force be applied automatically to the Rigidbody2D?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WheelJoint2D.GetMotorTorque(System.Single)">
      <summary>
        <para>Gets the motor torque of the joint given the specified timestep.</para>
      </summary>
      <param name="timeStep">The time to calculate the motor torque for.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.ConfidenceLevel">
      <summary>
        <para>Used by KeywordRecognizer, GrammarRecognizer, DictationRecognizer. Phrases under the specified minimum level will be ignored.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.ConfidenceLevel.High">
      <summary>
        <para>High confidence level.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.ConfidenceLevel.Low">
      <summary>
        <para>Low confidence level.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.ConfidenceLevel.Medium">
      <summary>
        <para>Medium confidence level.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.ConfidenceLevel.Rejected">
      <summary>
        <para>Everything is rejected.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationCompletionCause">
      <summary>
        <para>Represents the reason why dictation session has completed.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.AudioQualityFailure">
      <summary>
        <para>Dictation session completion was caused by bad audio quality.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.Canceled">
      <summary>
        <para>Dictation session was either cancelled, or the application was paused while dictation session was in progress.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.Complete">
      <summary>
        <para>Dictation session has completed successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.MicrophoneUnavailable">
      <summary>
        <para>Dictation session has finished because a microphone was not available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.NetworkFailure">
      <summary>
        <para>Dictation session has finished because network connection was not available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.TimeoutExceeded">
      <summary>
        <para>Dictation session has reached its timeout.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationCompletionCause.UnknownError">
      <summary>
        <para>Dictation session has completed due to an unknown error.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationRecognizer">
      <summary>
        <para>DictationRecognizer listens to speech input and attempts to determine what phrase was uttered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Windows.Speech.DictationRecognizer.AutoSilenceTimeoutSeconds">
      <summary>
        <para>The time length in seconds before dictation recognizer session ends due to lack of audio input.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.#ctor">
      <summary>
        <para>Create a DictationRecognizer with the specified minimum confidence and dictation topic constraint. Phrases under the specified minimum level will be ignored.</para>
      </summary>
      <param name="minimumConfidence">The confidence level at which the recognizer will begin accepting phrases.</param>
      <param name="topic">The dictation topic that this dictation recognizer should optimize its recognition for.</param>
      <param name="confidenceLevel"></param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.#ctor(UnityEngine.Windows.Speech.ConfidenceLevel)">
      <summary>
        <para>Create a DictationRecognizer with the specified minimum confidence and dictation topic constraint. Phrases under the specified minimum level will be ignored.</para>
      </summary>
      <param name="minimumConfidence">The confidence level at which the recognizer will begin accepting phrases.</param>
      <param name="topic">The dictation topic that this dictation recognizer should optimize its recognition for.</param>
      <param name="confidenceLevel"></param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.#ctor(UnityEngine.Windows.Speech.DictationTopicConstraint)">
      <summary>
        <para>Create a DictationRecognizer with the specified minimum confidence and dictation topic constraint. Phrases under the specified minimum level will be ignored.</para>
      </summary>
      <param name="minimumConfidence">The confidence level at which the recognizer will begin accepting phrases.</param>
      <param name="topic">The dictation topic that this dictation recognizer should optimize its recognition for.</param>
      <param name="confidenceLevel"></param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.#ctor(UnityEngine.Windows.Speech.ConfidenceLevel,UnityEngine.Windows.Speech.DictationTopicConstraint)">
      <summary>
        <para>Create a DictationRecognizer with the specified minimum confidence and dictation topic constraint. Phrases under the specified minimum level will be ignored.</para>
      </summary>
      <param name="minimumConfidence">The confidence level at which the recognizer will begin accepting phrases.</param>
      <param name="topic">The dictation topic that this dictation recognizer should optimize its recognition for.</param>
      <param name="confidenceLevel"></param>
    </member>
    <member name="?:UnityEngine.Windows.Speech.DictationRecognizer.DictationComplete(UnityEngine.Windows.Speech.DictationRecognizer/DictationCompletedDelegate)">
      <summary>
        <para>Event that is triggered when the recognizer session completes.</para>
      </summary>
      <param name="value">Delegate that is to be invoked on DictationComplete event.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationRecognizer.DictationCompletedDelegate">
      <summary>
        <para>Delegate for DictationComplete event.</para>
      </summary>
      <param name="cause">The cause of dictation session completion.</param>
    </member>
    <member name="?:UnityEngine.Windows.Speech.DictationRecognizer.DictationError(UnityEngine.Windows.Speech.DictationRecognizer/DictationErrorHandler)">
      <summary>
        <para>Event that is triggered when the recognizer session encouters an error.</para>
      </summary>
      <param name="value">Delegate that is to be invoked on DictationError event.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationRecognizer.DictationErrorHandler">
      <summary>
        <para>Delegate for DictationError event.</para>
      </summary>
      <param name="error">The error mesage.</param>
      <param name="hresult">HRESULT code that corresponds to the error.</param>
    </member>
    <member name="?:UnityEngine.Windows.Speech.DictationRecognizer.DictationHypothesis(UnityEngine.Windows.Speech.DictationRecognizer/DictationHypothesisDelegate)">
      <summary>
        <para>Event that is triggered when the recognizer changes its hypothesis for the current fragment.</para>
      </summary>
      <param name="value">Delegate to be triggered in the event of a hypothesis changed event.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationRecognizer.DictationHypothesisDelegate">
      <summary>
        <para>Callback indicating a hypothesis change event. You should register with DictationHypothesis event.</para>
      </summary>
      <param name="text">The text that the recognizer believes may have been recognized.</param>
    </member>
    <member name="?:UnityEngine.Windows.Speech.DictationRecognizer.DictationResult(UnityEngine.Windows.Speech.DictationRecognizer/DictationResultDelegate)">
      <summary>
        <para>Event indicating a phrase has been recognized with the specified confidence level.</para>
      </summary>
      <param name="value">The delegate to be triggered when this event is triggered.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationRecognizer.DictationResultDelegate">
      <summary>
        <para>Callback indicating a phrase has been recognized with the specified confidence level. You should register with DictationResult event.</para>
      </summary>
      <param name="text">The recognized text.</param>
      <param name="confidence">The confidence level at which the text was recognized.</param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.Dispose">
      <summary>
        <para>Disposes the resources this dictation recognizer uses.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Windows.Speech.DictationRecognizer.InitialSilenceTimeoutSeconds">
      <summary>
        <para>The time length in seconds before dictation recognizer session ends due to lack of audio input in case there was no audio heard in the current session.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.Start">
      <summary>
        <para>Starts the dictation recognization session. Dictation recognizer can only be started if PhraseRecognitionSystem is not running.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Windows.Speech.DictationRecognizer.Status">
      <summary>
        <para>Indicates the status of dictation recognizer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.DictationRecognizer.Stop">
      <summary>
        <para>Stops the dictation recognization session.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.DictationTopicConstraint">
      <summary>
        <para>DictationTopicConstraint enum specifies the scenario for which a specific dictation recognizer should optimize.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationTopicConstraint.Dictation">
      <summary>
        <para>Dictation recognizer will optimize for dictation scenario.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationTopicConstraint.Form">
      <summary>
        <para>Dictation recognizer will optimize for form-filling scenario.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.DictationTopicConstraint.WebSearch">
      <summary>
        <para>Dictation recognizer will optimize for web search scenario.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.GrammarRecognizer">
      <summary>
        <para>The GrammarRecognizer is a complement to the KeywordRecognizer. In many cases developers will find the KeywordRecognizer fills all their development needs. However, in some cases, more complex grammars will be better expressed in the form of an xml file on disk.
The GrammarRecognizer uses Extensible Markup Language (XML) elements and attributes, as specified in the World Wide Web Consortium (W3C) Speech Recognition Grammar Specification (SRGS) Version 1.0. These XML elements and attributes represent the rule structures that define the words or phrases (commands) recognized by speech recognition engines.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.GrammarRecognizer.#ctor(System.String)">
      <summary>
        <para>Creates a grammar recognizer using specified file path and minimum confidence.</para>
      </summary>
      <param name="grammarFilePath">Path of the grammar file.</param>
      <param name="minimumConfidence">The confidence level at which the recognizer will begin accepting phrases.</param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.GrammarRecognizer.#ctor(System.String,UnityEngine.Windows.Speech.ConfidenceLevel)">
      <summary>
        <para>Creates a grammar recognizer using specified file path and minimum confidence.</para>
      </summary>
      <param name="grammarFilePath">Path of the grammar file.</param>
      <param name="minimumConfidence">The confidence level at which the recognizer will begin accepting phrases.</param>
    </member>
    <member name="P:UnityEngine.Windows.Speech.GrammarRecognizer.GrammarFilePath">
      <summary>
        <para>Returns the grammar file path which was supplied when the grammar recognizer was created.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.KeywordRecognizer">
      <summary>
        <para>KeywordRecognizer listens to speech input and attempts to match uttered phrases to a list of registered keywords.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.KeywordRecognizer.#ctor(System.String[])">
      <summary>
        <para>Create a KeywordRecognizer which listens to specified keywords with the specified minimum confidence.  Phrases under the specified minimum level will be ignored.</para>
      </summary>
      <param name="keywords">The keywords that the recognizer will listen to.</param>
      <param name="minimumConfidence">The minimum confidence level of speech recognition that the recognizer will accept.</param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.KeywordRecognizer.#ctor(System.String[],UnityEngine.Windows.Speech.ConfidenceLevel)">
      <summary>
        <para>Create a KeywordRecognizer which listens to specified keywords with the specified minimum confidence.  Phrases under the specified minimum level will be ignored.</para>
      </summary>
      <param name="keywords">The keywords that the recognizer will listen to.</param>
      <param name="minimumConfidence">The minimum confidence level of speech recognition that the recognizer will accept.</param>
    </member>
    <member name="P:UnityEngine.Windows.Speech.KeywordRecognizer.Keywords">
      <summary>
        <para>Returns the list of keywords which was supplied when the keyword recognizer was created.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.PhraseRecognitionSystem">
      <summary>
        <para>Phrase recognition system is responsible for managing phrase recognizers and dispatching recognition events to them.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Windows.Speech.PhraseRecognitionSystem.isSupported">
      <summary>
        <para>Returns whether speech recognition is supported on the machine that the application is running on.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.PhraseRecognitionSystem.ErrorDelegate">
      <summary>
        <para>Delegate for OnError event.</para>
      </summary>
      <param name="errorCode">Error code for the error that occurred.</param>
    </member>
    <member name="?:UnityEngine.Windows.Speech.PhraseRecognitionSystem.OnError(UnityEngine.Windows.Speech.PhraseRecognitionSystem/ErrorDelegate)">
      <summary>
        <para>Event that gets invoked when phrase recognition system encounters an error.</para>
      </summary>
      <param name="value">Delegate that will be invoked when the event occurs.</param>
    </member>
    <member name="?:UnityEngine.Windows.Speech.PhraseRecognitionSystem.OnStatusChanged(UnityEngine.Windows.Speech.PhraseRecognitionSystem/StatusDelegate)">
      <summary>
        <para>Event which occurs when the status of the phrase recognition system changes.</para>
      </summary>
      <param name="value">Delegate that will be invoked when the event occurs.</param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.PhraseRecognitionSystem.Restart">
      <summary>
        <para>Attempts to restart the phrase recognition system.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.PhraseRecognitionSystem.Shutdown">
      <summary>
        <para>Shuts phrase recognition system down.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Windows.Speech.PhraseRecognitionSystem.Status">
      <summary>
        <para>Returns the current status of the phrase recognition system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.PhraseRecognitionSystem.StatusDelegate">
      <summary>
        <para>Delegate for OnStatusChanged event.</para>
      </summary>
      <param name="status">The new status of the phrase recognition system.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.PhraseRecognizedEventArgs">
      <summary>
        <para>Provides information about a phrase recognized event.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.PhraseRecognizedEventArgs.confidence">
      <summary>
        <para>A measure of correct recognition certainty.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.PhraseRecognizedEventArgs.phraseDuration">
      <summary>
        <para>The time it took for the phrase to be uttered.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.PhraseRecognizedEventArgs.phraseStartTime">
      <summary>
        <para>The moment in time when uttering of the phrase began.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.PhraseRecognizedEventArgs.semanticMeanings">
      <summary>
        <para>A semantic meaning of recognized phrase.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.PhraseRecognizedEventArgs.text">
      <summary>
        <para>The text that was recognized.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.PhraseRecognizer">
      <summary>
        <para>A common base class for both keyword recognizer and grammar recognizer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.PhraseRecognizer.Dispose">
      <summary>
        <para>Disposes the resources used by phrase recognizer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Windows.Speech.PhraseRecognizer.IsRunning">
      <summary>
        <para>Tells whether the phrase recognizer is listening for phrases.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Windows.Speech.PhraseRecognizer.OnPhraseRecognized(UnityEngine.Windows.Speech.PhraseRecognizer/PhraseRecognizedDelegate)">
      <summary>
        <para>Event that gets fired when the phrase recognizer recognizes a phrase.</para>
      </summary>
      <param name="value">Delegate that will be invoked when the event occurs.</param>
    </member>
    <member name="T:UnityEngine.Windows.Speech.PhraseRecognizer.PhraseRecognizedDelegate">
      <summary>
        <para>Delegate for OnPhraseRecognized event.</para>
      </summary>
      <param name="args">Information about a phrase recognized event.</param>
    </member>
    <member name="M:UnityEngine.Windows.Speech.PhraseRecognizer.Start">
      <summary>
        <para>Makes the phrase recognizer start listening to phrases.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Windows.Speech.PhraseRecognizer.Stop">
      <summary>
        <para>Stops the phrase recognizer from listening to phrases.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.SemanticMeaning">
      <summary>
        <para>Semantic meaning is a collection of semantic properties of a recognized phrase. These semantic properties can be specified in SRGS grammar files.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SemanticMeaning.key">
      <summary>
        <para>A key of semaning meaning.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SemanticMeaning.values">
      <summary>
        <para>Values of semantic property that the correspond to the semantic meaning key.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.SpeechError">
      <summary>
        <para>Represents an error in a speech recognition system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.AudioQualityFailure">
      <summary>
        <para>Speech recognition engine failed because the audio quality was too low.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.GrammarCompilationFailure">
      <summary>
        <para>Speech recognition engine failed to compiled specified grammar.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.MicrophoneUnavailable">
      <summary>
        <para>Speech error occurred because a microphone was not available.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.NetworkFailure">
      <summary>
        <para>Speech error occurred due to a network failure.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.NoError">
      <summary>
        <para>No error occurred.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.TimeoutExceeded">
      <summary>
        <para>A speech recognition system has timed out.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.TopicLanguageNotSupported">
      <summary>
        <para>Supplied grammar file language is not supported.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechError.UnknownError">
      <summary>
        <para>A speech recognition system has encountered an unknown error.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Windows.Speech.SpeechSystemStatus">
      <summary>
        <para>Represents the current status of the speech recognition system or a dictation recognizer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechSystemStatus.Failed">
      <summary>
        <para>Speech recognition system has encountered an error and is in an indeterminate state.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechSystemStatus.Running">
      <summary>
        <para>Speech recognition system is running.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Windows.Speech.SpeechSystemStatus.Stopped">
      <summary>
        <para>Speech recognition system is stopped.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WindZone">
      <summary>
        <para>Wind Zones add realism to the trees you create by making them wave their branches and leaves as if blown by the wind.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WindZone.mode">
      <summary>
        <para>Defines the type of wind zone to be used (Spherical or Directional).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WindZone.radius">
      <summary>
        <para>Radius of the Spherical Wind Zone (only active if the WindZoneMode is set to Spherical).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WindZone.windMain">
      <summary>
        <para>The primary wind force.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WindZone.windPulseFrequency">
      <summary>
        <para>Defines the frequency of the wind changes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WindZone.windPulseMagnitude">
      <summary>
        <para>Defines ow much the wind changes over time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WindZone.windTurbulence">
      <summary>
        <para>The turbulence wind force.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WindZone.#ctor">
      <summary>
        <para>The constructor.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WindZoneMode">
      <summary>
        <para>Modes a Wind Zone can have, either Spherical or Directional.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WindZoneMode.Directional">
      <summary>
        <para>Wind zone affects the entire scene in one direction.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WindZoneMode.Spherical">
      <summary>
        <para>Wind zone only has an effect inside the radius, and has a falloff from the center towards the edge.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WrapMode">
      <summary>
        <para>Determines how time is treated outside of the keyframed range of an AnimationClip or AnimationCurve.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WrapMode.ClampForever">
      <summary>
        <para>Plays back the animation. When it reaches the end, it will keep playing the last frame and never stop playing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WrapMode.Default">
      <summary>
        <para>Reads the default repeat mode set higher up.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WrapMode.Loop">
      <summary>
        <para>When time reaches the end of the animation clip, time will continue at the beginning.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WrapMode.Once">
      <summary>
        <para>When time reaches the end of the animation clip, the clip will automatically stop playing and time will be reset to beginning of the clip.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WrapMode.PingPong">
      <summary>
        <para>When time reaches the end of the animation clip, time will ping pong back between beginning and end.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.AppCallbackItem">
      <summary>
        <para>Delegate that can be invoked on specific thread.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.Application">
      <summary>
        <para>Provides essential methods related to Window Store application.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Application.advertisingIdentifier">
      <summary>
        <para>Advertising ID.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Application.arguments">
      <summary>
        <para>Arguments passed to application.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.WSA.Application.windowActivated(UnityEngine.WSA.WindowActivated)">
      <summary>
        <para>Fired when application window is activated.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="?:UnityEngine.WSA.Application.windowSizeChanged(UnityEngine.WSA.WindowSizeChanged)">
      <summary>
        <para>Fired when window size changes.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="M:UnityEngine.WSA.Application.InvokeOnAppThread(UnityEngine.WSA.AppCallbackItem,System.Boolean)">
      <summary>
        <para>Executes callback item on application thread.</para>
      </summary>
      <param name="item">Item to execute.</param>
      <param name="waitUntilDone">Wait until item is executed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Application.InvokeOnUIThread(UnityEngine.WSA.AppCallbackItem,System.Boolean)">
      <summary>
        <para>Executes callback item on UI thread.</para>
      </summary>
      <param name="item">Item to execute.</param>
      <param name="waitUntilDone">Wait until item is executed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Application.RunningOnAppThread">
      <summary>
        <para>Returns true if you're running on application thread.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Application.RunningOnUIThread">
      <summary>
        <para>Returns true if you're running on UI thread.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Application.TryInvokeOnAppThread(UnityEngine.WSA.AppCallbackItem,System.Boolean)">
      <summary>
        <para>[OBSOLETE] Tries to execute callback item on application thread.</para>
      </summary>
      <param name="item">Item to execute.</param>
      <param name="waitUntilDone">Wait until item is executed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Application.TryInvokeOnUIThread(UnityEngine.WSA.AppCallbackItem,System.Boolean)">
      <summary>
        <para>[OBSOLETE] Tries to execute callback item on UI thread.</para>
      </summary>
      <param name="item">Item to execute.</param>
      <param name="waitUntilDone">Wait until item is executed.</param>
    </member>
    <member name="T:UnityEngine.WSA.Cursor">
      <summary>
        <para>Cursor API for Windows Store Apps.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Cursor.SetCustomCursor(System.UInt32)">
      <summary>
        <para>Set a custom cursor.</para>
      </summary>
      <param name="id">The cursor resource id.</param>
    </member>
    <member name="T:UnityEngine.WSA.Folder">
      <summary>
        <para>List of accessible folders on Windows Store Apps.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.Launcher">
      <summary>
        <para>Class which is capable of launching user's default app for file type or a protocol. See also PlayerSettings where you can specify file or URI associations.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Launcher.LaunchFile(UnityEngine.WSA.Folder,System.String,System.Boolean)">
      <summary>
        <para>Launches the default app associated with specified file.</para>
      </summary>
      <param name="folder">Folder type where the file is located.</param>
      <param name="relativeFilePath">Relative file path inside the specified folder.</param>
      <param name="showWarning">Shows user a warning that application will be switched.</param>
    </member>
    <member name="M:UnityEngine.WSA.Launcher.LaunchFileWithPicker(System.String)">
      <summary>
        <para>Opens a dialog for picking the file.</para>
      </summary>
      <param name="fileExtension">File extension.</param>
    </member>
    <member name="M:UnityEngine.WSA.Launcher.LaunchUri(System.String,System.Boolean)">
      <summary>
        <para>Starts the default app associated with the URI scheme name for the specified URI, using the specified options.</para>
      </summary>
      <param name="uri">The URI.</param>
      <param name="showWarning">Displays a warning that the URI is potentially unsafe.</param>
    </member>
    <member name="T:UnityEngine.WSA.SecondaryTileData">
      <summary>
        <para>Defines the default look of secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.arguments">
      <summary>
        <para>Arguments to be passed for application when secondary tile is activated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.SecondaryTileData.backgroundColor">
      <summary>
        <para>Defines background color for secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.backgroundColorSet">
      <summary>
        <para>Defines, whether backgroundColor should be used.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.displayName">
      <summary>
        <para>Display name for secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.foregroundText">
      <summary>
        <para>Defines the style for foreground text on a secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.lockScreenBadgeLogo">
      <summary>
        <para>Uri to logo, shown for secondary tile on lock screen.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.lockScreenDisplayBadgeAndTileText">
      <summary>
        <para>Whether to show secondary tile on lock screen.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.phoneticName">
      <summary>
        <para>Phonetic name for secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.roamingEnabled">
      <summary>
        <para>Defines whether secondary tile is copied to another device when application is installed by the same users account.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.showNameOnSquare150x150Logo">
      <summary>
        <para>Defines whether the displayName should be shown on a medium secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.showNameOnSquare310x310Logo">
      <summary>
        <para>Defines whether the displayName should be shown on a large secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.showNameOnWide310x150Logo">
      <summary>
        <para>Defines whether the displayName should be shown on a wide secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.square150x150Logo">
      <summary>
        <para>Uri to the logo for medium size tile.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.square30x30Logo">
      <summary>
        <para>Uri to the logo shown on tile
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.square310x310Logo">
      <summary>
        <para>Uri to the logo for large size tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.square70x70Logo">
      <summary>
        <para>Uri to the logo for small size tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.tileId">
      <summary>
        <para>Unique identifier within application for a secondary tile.
</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.SecondaryTileData.wide310x150Logo">
      <summary>
        <para>Uri to the logo for wide tile.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.SecondaryTileData.#ctor(System.String,System.String)">
      <summary>
        <para>Constructor for SecondaryTileData, sets default values for all members.</para>
      </summary>
      <param name="id">Unique identifier for secondary tile.</param>
      <param name="displayName">A display name for a tile.</param>
    </member>
    <member name="T:UnityEngine.WSA.Tile">
      <summary>
        <para>Represents tile on Windows start screen
</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Tile.exists">
      <summary>
        <para>Whether secondary tile is pinned to start screen.
</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Tile.hasUserConsent">
      <summary>
        <para>Whether secondary tile was approved (pinned to start screen) or rejected by user.
</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Tile.id">
      <summary>
        <para>A unique string, identifying secondary tile</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Tile.main">
      <summary>
        <para>Returns applications main tile
</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Tile.CreateOrUpdateSecondary(UnityEngine.WSA.SecondaryTileData)">
      <summary>
        <para>Creates new or updates existing secondary tile.</para>
      </summary>
      <param name="data">The data used to create or update secondary tile.</param>
      <param name="pos">The coordinates for a request to create new tile.</param>
      <param name="area">The area on the screen above which the request to create new tile will be displayed.</param>
      <returns>
        <para>New Tile object, that can be used for further work with the tile.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Tile.CreateOrUpdateSecondary(UnityEngine.WSA.SecondaryTileData,UnityEngine.Vector2)">
      <summary>
        <para>Creates new or updates existing secondary tile.</para>
      </summary>
      <param name="data">The data used to create or update secondary tile.</param>
      <param name="pos">The coordinates for a request to create new tile.</param>
      <param name="area">The area on the screen above which the request to create new tile will be displayed.</param>
      <returns>
        <para>New Tile object, that can be used for further work with the tile.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Tile.CreateOrUpdateSecondary(UnityEngine.WSA.SecondaryTileData,UnityEngine.Rect)">
      <summary>
        <para>Creates new or updates existing secondary tile.</para>
      </summary>
      <param name="data">The data used to create or update secondary tile.</param>
      <param name="pos">The coordinates for a request to create new tile.</param>
      <param name="area">The area on the screen above which the request to create new tile will be displayed.</param>
      <returns>
        <para>New Tile object, that can be used for further work with the tile.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Delete">
      <summary>
        <para>Show a request to unpin secondary tile from start screen.</para>
      </summary>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Delete(UnityEngine.Vector2)">
      <summary>
        <para>Show a request to unpin secondary tile from start screen.</para>
      </summary>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Delete(UnityEngine.Rect)">
      <summary>
        <para>Show a request to unpin secondary tile from start screen.</para>
      </summary>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.DeleteSecondary(System.String)">
      <summary>
        <para>Show a request to unpin secondary tile from start screen.</para>
      </summary>
      <param name="tileId">An identifier for secondary tile.</param>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.DeleteSecondary(System.String,UnityEngine.Vector2)">
      <summary>
        <para>Show a request to unpin secondary tile from start screen.</para>
      </summary>
      <param name="tileId">An identifier for secondary tile.</param>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.DeleteSecondary(System.String,UnityEngine.Rect)">
      <summary>
        <para>Show a request to unpin secondary tile from start screen.</para>
      </summary>
      <param name="tileId">An identifier for secondary tile.</param>
      <param name="pos">The coordinates for a request to unpin tile.</param>
      <param name="area">The area on the screen above which the request to unpin tile will be displayed.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Exists(System.String)">
      <summary>
        <para>Whether secondary tile is pinned to start screen.</para>
      </summary>
      <param name="tileId">An identifier for secondary tile.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.GetSecondaries">
      <summary>
        <para>Gets all secondary tiles.</para>
      </summary>
      <returns>
        <para>An array of Tile objects.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Tile.GetSecondary(System.String)">
      <summary>
        <para>Returns the secondary tile, identified by tile id.</para>
      </summary>
      <param name="tileId">A tile identifier.</param>
      <returns>
        <para>A Tile object or null if secondary tile does not exist (not pinned to start screen and user request is complete).</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Tile.GetTemplate(UnityEngine.WSA.TileTemplate)">
      <summary>
        <para>Get template XML for tile notification.</para>
      </summary>
      <param name="templ">A template identifier.</param>
      <returns>
        <para>String, which is an empty XML document to be filled and used for tile notification.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Tile.PeriodicBadgeUpdate(System.String,System.Single)">
      <summary>
        <para>Starts periodic update of a  badge on a tile.
</para>
      </summary>
      <param name="uri">A remote location from where to retrieve tile update</param>
      <param name="interval">A time interval in minutes, will be rounded to a value, supported by the system</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.PeriodicUpdate(System.String,System.Single)">
      <summary>
        <para>Starts periodic update of a tile.
</para>
      </summary>
      <param name="uri">a remote location fromwhere to retrieve tile update</param>
      <param name="interval">a time interval in minutes, will be rounded to a value, supported by the system</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.RemoveBadge">
      <summary>
        <para>Remove badge from tile.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Tile.StopPeriodicBadgeUpdate">
      <summary>
        <para>Stops previously started periodic update of a tile.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Tile.StopPeriodicUpdate">
      <summary>
        <para>Stops previously started periodic update of a tile.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Update(System.String)">
      <summary>
        <para>Send a notification for tile (update tiles look).</para>
      </summary>
      <param name="xml">A string containing XML document for new tile look.</param>
      <param name="medium">An uri to 150x150 image, shown on medium tile.</param>
      <param name="wide">An uri to a 310x150 image to be shown on a wide tile (if such issupported).</param>
      <param name="large">An uri to a 310x310 image to be shown on a large tile (if such is supported).</param>
      <param name="text">A text to shown on a tile.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.Update(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Send a notification for tile (update tiles look).</para>
      </summary>
      <param name="xml">A string containing XML document for new tile look.</param>
      <param name="medium">An uri to 150x150 image, shown on medium tile.</param>
      <param name="wide">An uri to a 310x150 image to be shown on a wide tile (if such issupported).</param>
      <param name="large">An uri to a 310x310 image to be shown on a large tile (if such is supported).</param>
      <param name="text">A text to shown on a tile.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.UpdateBadgeImage(System.String)">
      <summary>
        <para>Sets or updates badge on a tile to an image.</para>
      </summary>
      <param name="image">Image identifier.</param>
    </member>
    <member name="M:UnityEngine.WSA.Tile.UpdateBadgeNumber(System.Single)">
      <summary>
        <para>Set or update a badge on a tile to a number.</para>
      </summary>
      <param name="number">Number to be shown on a badge.</param>
    </member>
    <member name="T:UnityEngine.WSA.TileForegroundText">
      <summary>
        <para>Style for foreground text on a secondary tile.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.TileTemplate">
      <summary>
        <para>Templates for various tile styles.
</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.Toast">
      <summary>
        <para>Represents a toast notification in Windows Store Apps.
</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Toast.activated">
      <summary>
        <para>true if toast was activated by user.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Toast.arguments">
      <summary>
        <para>Arguments to be passed for application when toast notification is activated.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Toast.dismissed">
      <summary>
        <para>true if toast notification was dismissed (for any reason).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WSA.Toast.dismissedByUser">
      <summary>
        <para>true if toast notification was explicitly dismissed by user.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Create(System.String)">
      <summary>
        <para>Create toast notification.</para>
      </summary>
      <param name="xml">XML document with tile data.</param>
      <param name="image">Uri to image to show on a toast, can be empty, in that case text-only notification will be shown.</param>
      <param name="text">A text to display on a toast notification.</param>
      <returns>
        <para>A toast object for further work with created notification or null, if creation of toast failed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Create(System.String,System.String)">
      <summary>
        <para>Create toast notification.</para>
      </summary>
      <param name="xml">XML document with tile data.</param>
      <param name="image">Uri to image to show on a toast, can be empty, in that case text-only notification will be shown.</param>
      <param name="text">A text to display on a toast notification.</param>
      <returns>
        <para>A toast object for further work with created notification or null, if creation of toast failed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Toast.GetTemplate(UnityEngine.WSA.ToastTemplate)">
      <summary>
        <para>Get template XML for toast notification.
</para>
      </summary>
      <param name="templ">A template identifier.</param>
      <returns>
        <para>string, which is an empty XML document to be filled and used for toast notification.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Hide">
      <summary>
        <para>Hide displayed toast notification.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WSA.Toast.Show">
      <summary>
        <para>Show toast notification.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.ToastTemplate">
      <summary>
        <para>Templates for various toast styles.
</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.WindowActivated">
      <summary>
        <para>This event occurs when window completes activation or deactivation, it also fires up when you snap and unsnap the application.</para>
      </summary>
      <param name="state"></param>
    </member>
    <member name="T:UnityEngine.WSA.WindowActivationState">
      <summary>
        <para>Specifies the set of reasons that a windowActivated event was raised.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.WindowActivationState.CodeActivated">
      <summary>
        <para>The window was activated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.WindowActivationState.Deactivated">
      <summary>
        <para>The window was deactivated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WSA.WindowActivationState.PointerActivated">
      <summary>
        <para>The window was activated by pointer interaction.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WSA.WindowSizeChanged">
      <summary>
        <para>This event occurs when window rendering size changes.</para>
      </summary>
      <param name="width"></param>
      <param name="height"></param>
    </member>
    <member name="T:UnityEngine.WWW">
      <summary>
        <para>Simple access to web pages.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.assetBundle">
      <summary>
        <para>Streams an AssetBundle that can contain any kind of asset from the project folder.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.audioClip">
      <summary>
        <para>Returns a AudioClip generated from the downloaded data (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.bytes">
      <summary>
        <para>Returns the contents of the fetched web page as a byte array (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.bytesDownloaded">
      <summary>
        <para>The number of bytes downloaded by this WWW query (read only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.error">
      <summary>
        <para>Returns an error message if there was an error during the download (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.isDone">
      <summary>
        <para>Is the download already finished? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.movie">
      <summary>
        <para>Returns a MovieTexture generated from the downloaded data (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.oggVorbis">
      <summary>
        <para>Load an Ogg Vorbis file into the audio clip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.progress">
      <summary>
        <para>How far has the download progressed (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.responseHeaders">
      <summary>
        <para>Dictionary of headers returned by the request.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.text">
      <summary>
        <para>Returns the contents of the fetched web page as a string (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.texture">
      <summary>
        <para>Returns a Texture2D generated from the downloaded data (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.textureNonReadable">
      <summary>
        <para>Returns a non-readable Texture2D generated from the downloaded data (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.threadPriority">
      <summary>
        <para>Priority of AssetBundle decompression thread.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.uploadProgress">
      <summary>
        <para>How far has the upload progressed (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWW.url">
      <summary>
        <para>The URL of this WWW request (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WWW.#ctor(System.String)">
      <summary>
        <para>Creates a WWW request with the given URL.</para>
      </summary>
      <param name="url">The url to download. Must be '%' escaped.</param>
      <returns>
        <para>A new WWW object. When it has been downloaded, the results can be fetched from the returned object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.#ctor(System.String,UnityEngine.WWWForm)">
      <summary>
        <para>Creates a WWW request with the given URL.</para>
      </summary>
      <param name="url">The url to download. Must be '%' escaped.</param>
      <param name="form">A WWWForm instance containing the form data to post.</param>
      <returns>
        <para>A new WWW object. When it has been downloaded, the results can be fetched from the returned object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.#ctor(System.String,System.Byte[])">
      <summary>
        <para>Creates a WWW request with the given URL.</para>
      </summary>
      <param name="url">The url to download. Must be '%' escaped.</param>
      <param name="postData">A byte array of data to be posted to the url.</param>
      <returns>
        <para>A new WWW object. When it has been downloaded, the results can be fetched from the returned object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.#ctor(System.String,System.Byte[],System.Collections.Hashtable)">
      <summary>
        <para>Creates a WWW request with the given URL.</para>
      </summary>
      <param name="url">The url to download. Must be '%' escaped.</param>
      <param name="postData">A byte array of data to be posted to the url.</param>
      <param name="headers">A hash table of custom headers to send with the request.</param>
      <returns>
        <para>A new WWW object. When it has been downloaded, the results can be fetched from the returned object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.#ctor(System.String,System.Byte[],System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)">
      <summary>
        <para>Creates a WWW request with the given URL.</para>
      </summary>
      <param name="url">The url to download. Must be '%' escaped.</param>
      <param name="postData">A byte array of data to be posted to the url.</param>
      <param name="headers">A dictionary that contains the header keys and values to pass to the server.</param>
      <returns>
        <para>A new WWW object. When it has been downloaded, the results can be fetched from the returned object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.Dispose">
      <summary>
        <para>Disposes of an existing WWW object.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WWW.EscapeURL(System.String)">
      <summary>
        <para>Escapes characters in a string to ensure they are URL-friendly.</para>
      </summary>
      <param name="s">A string with characters to be escaped.</param>
      <param name="e">The text encoding to use.</param>
    </member>
    <member name="M:UnityEngine.WWW.EscapeURL(System.String,System.Text.Encoding)">
      <summary>
        <para>Escapes characters in a string to ensure they are URL-friendly.</para>
      </summary>
      <param name="s">A string with characters to be escaped.</param>
      <param name="e">The text encoding to use.</param>
    </member>
    <member name="M:UnityEngine.WWW.LoadFromCacheOrDownload(System.String,System.Int32)">
      <summary>
        <para>Loads an AssetBundle with the specified version number from the cache. If the AssetBundle is not currently cached, it will automatically be downloaded and stored in the cache for future retrieval from local storage.</para>
      </summary>
      <param name="url">The URL to download the AssetBundle from, if it is not present in the cache. Must be '%' escaped.</param>
      <param name="version">Version of the AssetBundle. The file will only be loaded from the disk cache if it has previously been downloaded with the same version parameter. By incrementing the version number requested by your application, you can force Caching to download a new copy of the AssetBundle from url.</param>
      <param name="crc">An optional CRC-32 Checksum of the uncompressed contents. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match. You can use this to avoid data corruption from bad downloads or users tampering with the cached files on disk. If the CRC does not match, Unity will try to redownload the data, and if the CRC on the server does not match it will fail with an error. Look at the error string returned to see the correct CRC value to use for an AssetBundle.</param>
      <returns>
        <para>A WWW instance, which can be used to access the data once the load/download operation is completed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.LoadFromCacheOrDownload(System.String,System.Int32,System.UInt32)">
      <summary>
        <para>Loads an AssetBundle with the specified version number from the cache. If the AssetBundle is not currently cached, it will automatically be downloaded and stored in the cache for future retrieval from local storage.</para>
      </summary>
      <param name="url">The URL to download the AssetBundle from, if it is not present in the cache. Must be '%' escaped.</param>
      <param name="version">Version of the AssetBundle. The file will only be loaded from the disk cache if it has previously been downloaded with the same version parameter. By incrementing the version number requested by your application, you can force Caching to download a new copy of the AssetBundle from url.</param>
      <param name="crc">An optional CRC-32 Checksum of the uncompressed contents. If this is non-zero, then the content will be compared against the checksum before loading it, and give an error if it does not match. You can use this to avoid data corruption from bad downloads or users tampering with the cached files on disk. If the CRC does not match, Unity will try to redownload the data, and if the CRC on the server does not match it will fail with an error. Look at the error string returned to see the correct CRC value to use for an AssetBundle.</param>
      <returns>
        <para>A WWW instance, which can be used to access the data once the load/download operation is completed.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWW.LoadImageIntoTexture(UnityEngine.Texture2D)">
      <summary>
        <para>Replaces the contents of an existing Texture2D with an image from the downloaded data.</para>
      </summary>
      <param name="tex">An existing texture object to be overwritten with the image data.</param>
    </member>
    <member name="M:UnityEngine.WWW.LoadUnityWeb">
      <summary>
        <para>Loads the new web player data file.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WWW.UnEscapeURL(System.String)">
      <summary>
        <para>Converts URL-friendly escape sequences back to normal text.</para>
      </summary>
      <param name="s">A string containing escaped characters.</param>
      <param name="e">The text encoding to use.</param>
    </member>
    <member name="M:UnityEngine.WWW.UnEscapeURL(System.String,System.Text.Encoding)">
      <summary>
        <para>Converts URL-friendly escape sequences back to normal text.</para>
      </summary>
      <param name="s">A string containing escaped characters.</param>
      <param name="e">The text encoding to use.</param>
    </member>
    <member name="T:UnityEngine.WWWAudioExtensions">
      <summary>
        <para>Provides methods to access AudioClip or MovieTexture objects from WWW streams.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClip(UnityEngine.WWW)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.
The threeD parameter defaults to true.</param>
      <param name="stream">Sets whether the clip should be completely downloaded before it's ready to play (false), or whether the stream can be played even if only part of the clip is downloaded (true).
Setting this to true will disable seeking (with .time and/or .timeSamples) on the clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClip(UnityEngine.WWW,System.Boolean)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.
The threeD parameter defaults to true.</param>
      <param name="stream">Sets whether the clip should be completely downloaded before it's ready to play (false), or whether the stream can be played even if only part of the clip is downloaded (true).
Setting this to true will disable seeking (with .time and/or .timeSamples) on the clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClip(UnityEngine.WWW,System.Boolean,System.Boolean)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.
The threeD parameter defaults to true.</param>
      <param name="stream">Sets whether the clip should be completely downloaded before it's ready to play (false), or whether the stream can be played even if only part of the clip is downloaded (true).
Setting this to true will disable seeking (with .time and/or .timeSamples) on the clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClip(UnityEngine.WWW,System.Boolean,System.Boolean,UnityEngine.AudioType)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.
The threeD parameter defaults to true.</param>
      <param name="stream">Sets whether the clip should be completely downloaded before it's ready to play (false), or whether the stream can be played even if only part of the clip is downloaded (true).
Setting this to true will disable seeking (with .time and/or .timeSamples) on the clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClipCompressed(UnityEngine.WWW)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data that is compressed in memory (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClipCompressed(UnityEngine.WWW,System.Boolean)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data that is compressed in memory (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetAudioClipCompressed(UnityEngine.WWW,System.Boolean,UnityEngine.AudioType)">
      <summary>
        <para>Returns an AudioClip generated from the downloaded data that is compressed in memory (Read Only).</para>
      </summary>
      <param name="threeD">Use this to specify whether the clip should be a 2D or 3D clip.</param>
      <param name="audioType">The AudioType of the content you are downloading. If this is not set Unity will try to determine the type from URL.</param>
      <param name="www"></param>
      <returns>
        <para>The returned AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.WWWAudioExtensions.GetMovieTexture(UnityEngine.WWW)">
      <summary>
        <para>Returns a MovieTexture generated from the downloaded data (Read Only).</para>
      </summary>
      <param name="www"></param>
    </member>
    <member name="T:UnityEngine.WWWForm">
      <summary>
        <para>Helper class to generate form data to post to web servers using the WWW class.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWWForm.data">
      <summary>
        <para>(Read Only) The raw data to pass as the POST request body when sending the form.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WWWForm.headers">
      <summary>
        <para>(Read Only) Returns the correct request headers for posting the form using the WWW class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WWWForm.AddBinaryData(System.String,System.Byte[])">
      <summary>
        <para>Add binary data to the form.</para>
      </summary>
      <param name="fieldName"></param>
      <param name="contents"></param>
      <param name="fileName"></param>
      <param name="mimeType"></param>
    </member>
    <member name="M:UnityEngine.WWWForm.AddBinaryData(System.String,System.Byte[],System.String)">
      <summary>
        <para>Add binary data to the form.</para>
      </summary>
      <param name="fieldName"></param>
      <param name="contents"></param>
      <param name="fileName"></param>
      <param name="mimeType"></param>
    </member>
    <member name="M:UnityEngine.WWWForm.AddBinaryData(System.String,System.Byte[],System.String,System.String)">
      <summary>
        <para>Add binary data to the form.</para>
      </summary>
      <param name="fieldName"></param>
      <param name="contents"></param>
      <param name="fileName"></param>
      <param name="mimeType"></param>
    </member>
    <member name="M:UnityEngine.WWWForm.AddField(System.String,System.String)">
      <summary>
        <para>Add a simple field to the form.</para>
      </summary>
      <param name="fieldName"></param>
      <param name="value"></param>
      <param name="e"></param>
    </member>
    <member name="M:UnityEngine.WWWForm.AddField(System.String,System.String,System.Text.Encoding)">
      <summary>
        <para>Add a simple field to the form.</para>
      </summary>
      <param name="fieldName"></param>
      <param name="value"></param>
      <param name="e"></param>
    </member>
    <member name="M:UnityEngine.WWWForm.AddField(System.String,System.Int32)">
      <summary>
        <para>Adds a simple field to the form.</para>
      </summary>
      <param name="fieldName"></param>
      <param name="i"></param>
    </member>
    <member name="M:UnityEngine.WWWForm.#ctor">
      <summary>
        <para>Creates an empty WWWForm object.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.YieldInstruction">
      <summary>
        <para>Base class for all yield instructions.</para>
      </summary>
    </member>
  </members>
</doc>
